{"version":3,"sources":["../static/js/main.2079f396.js","../webpack/bootstrap 3eadcff969973d20bda4","../node_modules/react/index.js","../node_modules/webpack/buildin/global.js","../node_modules/react-spring/dist/react-spring.js","../node_modules/object-assign/index.js","../node_modules/promise/lib/core.js","../node_modules/whatwg-fetch/fetch.js","../node_modules/fbjs/lib/invariant.js","../node_modules/fbjs/lib/emptyObject.js","../node_modules/fbjs/lib/emptyFunction.js","../node_modules/normalize-css-color/index.js","../node_modules/prop-types/index.js","../node_modules/process/browser.js","../node_modules/@firebase/app/dist/index.cjs.js","../node_modules/@firebase/util/dist/index.cjs.js","../node_modules/tslib/tslib.es6.js","../node_modules/react-scripts/config/polyfills.js","../node_modules/promise/lib/rejection-tracking.js","../node_modules/asap/browser-raw.js","../node_modules/promise/lib/es6-extensions.js","index.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react-dom/index.js","../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/fbjs/lib/ExecutionEnvironment.js","../node_modules/fbjs/lib/getActiveElement.js","../node_modules/fbjs/lib/shallowEqual.js","../node_modules/fbjs/lib/containsNode.js","../node_modules/fbjs/lib/isTextNode.js","../node_modules/fbjs/lib/isNode.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","components/SectionLabels.js","components/AboutMe.js","assets/img/ThomasKim.jpg","config/firebase.js","../node_modules/firebase/app/dist/index.cjs.js","../node_modules/@firebase/polyfill/dist/index.esm.js","../node_modules/timers-browserify/main.js","../node_modules/setimmediate/setImmediate.js","../node_modules/@firebase/database/dist/index.cjs.js","../node_modules/@firebase/logger/dist/index.esm.js","components/Portfolio.js","components/Skills.js","../node_modules/react-spring/dist/react-spring.es.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","g","this","Function","eval","e","window","global","_interopDefault","t","default","_extends","assign","arguments","length","apply","_inheritsLoose","create","constructor","__proto__","_objectWithoutProperties","r","a","keys","indexOf","getOwnPropertySymbols","propertyIsEnumerable","_assertThisInitialized","ReferenceError","interpolate","colorToRgba","normalizeColor","createInterpolationFromStringOutputRange","outputRange","map","match","stringShapeRegex","forEach","push","Interpolation","test","replace","String","Math","round","findRange","findAnimatedStyles","update","add","__getChildren","tensionFromOrigamiValue","frictionFromOrigamiValue","fromOrigamiTensionAndFriction","tension","friction","createAnimatedComponent","componentWillUnmount","_propsAnimated","__detach","setNativeProps","ApplyAnimatedValues","current","refs","node","forceUpdate","componentWillMount","attachProps","props","AnimatedProps","__getAnimatedValue","componentWillReceiveProps","render","__getValue","style","React","createElement","transformStyles","ref","Component","prefixKey","charAt","toUpperCase","substring","mapStyle","dangerousStyleValue","isUnitlessNumber","trim","setValueForStyles","setProperty","setValueForAttributes","getAttribute","setAttribute","ApplyAnimatedValues$1","nodeType","value","PropTypes","Animated","__attach","__addChild","__removeChild","AnimatedTracking","_value","_parent","_animationClass","_animationConfig","_callback","_hey","animate","toValue","AnimatedWithChildren","_children","_tracked","splice","console","warn","linear","inputRange","easing","extrapolateLeft","extrapolate","extrapolateRight","AnimatedInterpolation","_parents","Array","isArray","_interpolation","Animation","start","stop","__debouncedOnEnd","__onEnd","_uniqueId","AnimatedValue","_animation","_animatedStyles","Set","_listeners","stopAnimation","_flush","size","_updateValue","setValue","clear","stopTracking","addListener","removeListener","removeAllListeners","_tracking","track","AnimatedArray","_values","AnimatedTemplate","_strings","__transformValue","RequestAnimationFrame","requestAnimationFrame","inject","CancelAnimationFrame","cancelAnimationFrame","SpringConfig","withDefault","SpringAnimation","_overshootClamping","overshootClamping","_restDisplacementThreshold","restDisplacementThreshold","_restSpeedThreshold","restSpeedThreshold","_initialVelocity","velocity","_lastVelocity","_toValue","__isInteraction","isInteraction","_tension","_friction","__active","_startPosition","_lastPosition","_onUpdate","_lastTime","Date","now","getInternalState","lastPosition","lastVelocity","lastTime","onUpdate","floor","u","f","h","_","abs","v","finished","_animationFrame","bind","FlattenStyle","AnimatedStyle","_style","_props","maybeVectorAnim","parallel","stopTogether","spring","exports$1","Value","template","values","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","prefixes","elements","reduce","exports$2","animated","interpolate$1","config","gentle","wobbly","stiff","slow","Spring","_initialiseProps","defaultAnimation","animations","from","to","attach","immediate","reset","onFrame","entries","interpolators","y","A","animation","interpolation","x","onRest","propsAnimated","callback","componentDidMount","children","native","PureComponent","defaultProps","Transition","items","enter","leave","state","transitionKeys","transitions","key","item","filter","has","destroy","slice","concat","find","setState","findIndex","_class","_temp","Trail","Parallax","_initialiseProps$1","ready","layers","space","offset","busy","scrollTo","horizontal","scrollStop","container","animatedScroll","getChildContext","parallax","addEventListener","updateRaf","removeEventListener","componentDidUpdate","innerStyle","pages","className","scrolling","onScroll","onWheel","onTouchStart","position","width","height","overflow","overflowY","overflowX","WebkitOverflowScrolling","WebkitTransform","MsTransform","transform","childContextTypes","Layer","speed","parseFloat","animatedTranslate","animatedSpace","factor","context","setPosition","setHeight","div","backgroundSize","backgroundRepeat","willChange","contextTypes","moveItems","scrollerRaf","target","content","setTimeout","toObject","val","undefined","TypeError","propIsEnumerable","test1","getOwnPropertyNames","test2","fromCharCode","join","test3","split","letter","err","source","symbols","noop","getThen","obj","then","ex","LAST_ERROR","IS_ERROR","tryCallOne","fn","tryCallTwo","b","Promise","_75","_83","_18","_38","doResolve","safeThen","self","onFulfilled","onRejected","resolve","reject","res","handle","Handler","deferred","_47","handleResolved","asap","cb","promise","ret","newValue","finale","_71","done","reason","_44","normalizeName","toLowerCase","normalizeValue","iteratorFor","iterator","next","shift","support","iterable","Symbol","Headers","headers","append","header","consumed","body","bodyUsed","fileReaderReady","reader","onload","result","onerror","error","readBlobAsArrayBuffer","blob","FileReader","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","buf","view","Uint8Array","chars","bufferClone","byteLength","set","buffer","Body","_initBody","_bodyInit","_bodyText","Blob","isPrototypeOf","_bodyBlob","formData","FormData","_bodyFormData","searchParams","URLSearchParams","toString","arrayBuffer","isDataView","_bodyArrayBuffer","ArrayBuffer","isArrayBufferView","Error","type","rejected","text","decode","json","JSON","parse","normalizeMethod","method","upcased","methods","Request","input","options","url","credentials","mode","referrer","form","bytes","decodeURIComponent","parseHeaders","rawHeaders","line","parts","Response","bodyInit","status","ok","statusText","fetch","viewClasses","DataView","isView","oldValue","thisArg","clone","response","redirectStatuses","redirect","RangeError","location","init","request","xhr","XMLHttpRequest","getAllResponseHeaders","responseURL","responseText","ontimeout","open","withCredentials","responseType","setRequestHeader","send","polyfill","invariant","condition","format","validateFormat","args","argIndex","framesToPop","emptyObject","makeEmptyFunction","arg","emptyFunction","thatReturns","thatReturnsFalse","thatReturnsTrue","thatReturnsNull","thatReturnsThis","thatReturnsArgument","color","matchers","hex6","exec","parseInt","names","rgb","parse255","rgba","parse1","hex3","hex8","hex4","hsl","hslToRgb","parse360","parsePercentage","hsla","hue2rgb","q","toArray","arrayLike","str","int","num","colorInt","NUMBER","PERCENTAGE","RegExp","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","burntsienna","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","queue","queueIndex","drainQueue","timeout","len","run","Item","array","process","nextTick","title","browser","env","argv","version","versions","on","once","off","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","createFirebaseNamespace","removeApp","callAppHooks","apps_","app","DEFAULT_ENTRY_NAME","contains","initializeApp","rawConfig","FirebaseAppImpl","namespace","getApps","registerService","createService","serviceProperties","appHook","allowMultipleInstances","factories","appHooks","serviceNamespace","appArg","util","deepExtend","_i","_getService","extendNamespace","eventName","serviceName","factoryName","useAsService","useService","apps","SDK_VERSION","INTERNAL","createSubscribe","ErrorFactory","patchProperty","code","appErrors","tokenListeners","firebase_","isDeleted_","services_","name_","_automaticDataCollectionEnabled","automaticDataCollectionEnabled","options_","deepCopy","getUid","getToken","addAuthTokenListener","removeAuthTokenListener","listener","checkDestroyed_","delete","_this","services","serviceKey","instanceKey","all","service","instanceIdentifier","instanceSpecifier","extendApp","log","errors","no-app","bad-app-name","duplicate-app","app-deleted","duplicate-service","sa-not-supported","invalid-app-argument","firebase","dateValue","getTime","prop","patchCapture","captureFake","captureStackTrace","jsonEval","stringify","data","executor","onNoObservers","proxy","ObserverProxy","subscribe","async","onError","catch","implementsAnyMethods","methods_1","errorPrefix","fnName","argumentNumber","optional","argName","validateNamespace","validateCallback","validateContextObject","tslib_1","CONSTANTS","NODE_CLIENT","NODE_ADMIN","assert","assertion","message","assertionError","stringToByteArray","out","charCodeAt","byteArrayToString","pos","c1","c2","c3","c4","base64","byteToCharMap_","charToByteMap_","byteToCharMapWebSafe_","charToByteMapWebSafe_","ENCODED_VALS_BASE","ENCODED_VALS","ENCODED_VALS_WEBSAFE","HAS_NATIVE_SUPPORT","atob","encodeByteArray","opt_webSafe","init_","byteToCharMap","output","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","encodeString","btoa","decodeString","decodeStringToByteArray","charToByteMap","haveByte4","byte4","base64Encode","utf8Bytes","base64Decode","Deferred","wrapCallback","getUA","navigator","isMobileCordova","isReactNative","isNodeSdk","ERROR_NAME","FirebaseError","stack","pattern","fullCode","token","claims","signature","isValidTimestamp","validSince","validUntil","issuedAtTime","isValidFormat","decoded","isAdmin","safeGet","extend","objTo","objFrom","isNonNullObject","isEmpty","getCount","rv","opt_obj","findKey","opt_this","findValue","getAnyKey","getValues","every","querystring","querystringParams","params","arrayVal","encodeURIComponent","querystringDecode","Hash","blockSize","Sha1","_super","chain_","buf_","W_","pad_","inbuf_","total_","__extends","compress_","opt_offset","W","k","opt_length","lengthMinusBlock","inbuf","digest","totalBits","j","observers","unsubscribes","observerCount","task","finalized","forEachObserver","observer","close","complete","nextOrObserver","unsub","unsubscribeOne","finalError","sendOne","validateArgCount","minCount","maxCount","argCount","argError","stringToByteArray$1","high","stringLength","__webpack_exports__","__","extendStatics","__rest","__decorate","decorators","desc","getOwnPropertyDescriptor","Reflect","decorate","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__awaiter","_arguments","P","generator","fulfilled","step","__generator","verb","op","label","ops","pop","trys","sent","throw","return","__exportStar","__values","__read","ar","__spread","__await","__asyncGenerator","resume","settle","fulfill","asyncIterator","__asyncDelegator","__asyncValues","__makeTemplateObject","cooked","raw","__importStar","mod","__importDefault","__assign","setPrototypeOf","enable","disable","enabled","onUnhandled","id","allRejections","matchWhitelist","rejections","whitelist","DEFAULT_WHITELIST","displayId","logged","logError","onHandled","_56","list","some","cls","rawAsap","requestFlush","flushing","flush","index","currentIndex","capacity","scan","newLength","makeRequestCallFromTimer","handleTimer","timeoutHandle","clearInterval","intervalHandle","setInterval","scope","BrowserMutationObserver","MutationObserver","WebKitMutationObserver","toggle","document","createTextNode","observe","characterData","valuePromise","TRUE","FALSE","NULL","UNDEFINED","ZERO","EMPTYSTRING","arr","remaining","race","_classCallCheck","instance","Constructor","_possibleConstructorReturn","_inherits","subClass","superClass","writable","__WEBPACK_IMPORTED_MODULE_0_react__","__WEBPACK_IMPORTED_MODULE_0_react___default","__WEBPACK_IMPORTED_MODULE_1_react_dom__","__WEBPACK_IMPORTED_MODULE_1_react_dom___default","__WEBPACK_IMPORTED_MODULE_2_react_spring_dist_react_spring__","__WEBPACK_IMPORTED_MODULE_3__index_css__","__WEBPACK_IMPORTED_MODULE_4__components_SectionLabels__","__WEBPACK_IMPORTED_MODULE_5__components_AboutMe__","__WEBPACK_IMPORTED_MODULE_6__components_Portfolio__","__WEBPACK_IMPORTED_MODULE_7__components_Skills__","_createClass","defineProperties","descriptor","protoProps","staticProps","App","_React$Component","getPrototypeOf","_this2","display","justifyContent","alignItems","backgroundColor","href","rel","padding","margin","onClick","_ref","background","getElementById","D","F","updater","E","G","H","M","K","L","$$typeof","_owner","J","N","escape","=",":","Q","keyPrefix","func","count","R","S","T","C","U","V","O","for","w","z","B","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","isReactComponent","I","isPureReactComponent","__self","__source","X","Children","only","createRef","createContext","_calculateChangedBits","_defaultValue","_currentValue","_currentValue2","_changedBits","_changedBits2","Provider","Consumer","_context","forwardRef","Fragment","StrictMode","unstable_AsyncMode","unstable_Profiler","cloneElement","createFactory","isValidElement","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","Y","Z","checkDCE","__REACT_DEVTOOLS_GLOBAL_HOOK__","aa","ia","_hasCaughtError","_caughtError","ka","_hasRethrowError","_rethrowError","na","la","ma","oa","extractEvents","eventTypes","pa","phasedRegistrationNames","qa","registrationName","ra","sa","dependencies","ta","ua","za","currentTarget","ya","invokeGuardedCallbackAndCatchFirstError","Aa","Ba","Da","_dispatchListeners","_dispatchInstances","isPropagationStopped","isPersistent","release","Ea","Fa","Ha","stateNode","wa","disabled","Ia","Ca","rethrowCaughtError","Ja","Na","parentNode","tag","Oa","Pa","Ma","Ra","Sa","dispatchConfig","Ta","_targetInst","Ua","Va","Xa","Ya","Za","alternate","ab","eb","bb","db","lb","kb","canUseDOM","documentElement","mb","_fallbackText","_startText","nb","_root","nativeEvent","Interface","isDefaultPrevented","defaultPrevented","returnValue","rb","eventPool","sb","destructor","qb","getPooled","Db","vb","keyCode","Eb","detail","Gb","which","Cb","Ab","Hb","Fb","wb","ctrlKey","altKey","metaKey","char","zb","Nb","xa","Jb","restoreControlledState","Ob","Lb","Mb","Pb","Qb","Sb","Tb","Ub","Wb","Vb","Yb","nodeName","Xb","Zb","srcElement","correspondingUseElement","$b","ac","bc","getValue","_valueTracker","cc","dc","checked","tc","sc","uc","displayName","pc","mc","ic","hc","kc","pendingProps","lc","jc","rc","qc","vc","_debugOwner","_debugSource","fileName","lineNumber","Ac","zc","xc","wc","Bc","acceptsBooleans","Cc","isNaN","attributeName","attributeNamespace","mustUseProperty","propertyName","Ec","Fc","removeAttribute","setAttributeNS","Gc","defaultChecked","defaultValue","_wrapperState","initialChecked","Hc","Ic","initialValue","controlled","Jc","Kc","Lc","Mc","ownerDocument","activeElement","Oc","Nc","change","Rc","Sc","Tc","Vc","Pc","detachEvent","Wc","Qc","Xc","attachEvent","Yc","Zc","$c","dd","getModifierState","cd","ed","jd","effectTag","kd","ld","child","sibling","md","nd","rd","charCode","Cd","bubbled","captured","isInteractive","Ad","Bd","Gd","targetInst","ancestors","containerInfo","topLevelType","Id","Hd","Ed","Kd","Ld","Md","Fd","Rd","Qd","Pd","Od","Sd","firstChild","Td","textContent","nextSibling","Ud","contentEditable","ae","$d","Xd","da","selectionStart","end","selectionEnd","getSelection","anchorNode","anchorOffset","focusNode","focusOffset","Zd","ea","Wd","select","Yd","xe","ba","ye","ze","selected","defaultSelected","Ae","wasMultiple","multiple","Be","dangerouslySetInnerHTML","Ce","De","Ee","Ge","He","Ke","lastChild","nodeValue","Ne","Le","Pe","Oe","Qe","is","Se","blur","focus","jb","Te","Fe","html","innerHTML","removeChild","createElementNS","Ue","Ve","Re","__html","Je","onclick","We","Xe","Ye","Ze","cf","autoFocus","df","hf","jf","mf","lf","kf","pf","qf","of","nf","rf","ha","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","sf","tf","uf","vf","wf","__reactInternalMemoizedMergedChildContext","xf","yf","memoizedState","updateQueue","memoizedProps","lastEffect","firstEffect","nextEffect","expirationTime","zf","Af","Bf","Cf","Df","pendingChildren","implementation","Ef","earliestPendingTime","latestPendingTime","earliestSuspendedTime","latestSuspendedTime","latestPingedTime","pendingCommitExpirationTime","finishedWork","pendingContext","hydrate","remainingExpirationTime","firstBatch","nextScheduledRoot","Hf","If","isDisabled","supportsFiber","Ff","onCommitFiberRoot","Gf","onCommitFiberUnmount","Jf","Kf","Mf","baseState","firstUpdate","lastUpdate","firstCapturedUpdate","lastCapturedUpdate","firstCapturedEffect","lastCapturedEffect","Nf","Of","payload","Pf","Qf","Rf","Sf","Tf","Lf","Uf","Vf","Wf","Xf","ag","$f","Zf","Yf","bg","gg","cg","ig","fg","eg","dg","namespaceURI","tagName","jg","kg","lg","qg","shouldComponentUpdate","rg","UNSAFE_componentWillReceiveProps","pg","sg","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","ug","_stringRef","vg","wg","Map","gc","tg","nc","Jd","Cg","Dg","Eg","Bg","Ag","zg","Fg","Gg","Hg","Ig","yg","xg","Jg","Kg","ec","Lg","Mg","Qg","Rg","_reactInternalFiber","UNSAFE_componentWillUpdate","componentWillUpdate","element","hidden","unstable_observedBits","Sg","Wg","Tg","Ug","appendChild","Vg","Xg","suppressReactErrorLogging","Yg","Zg","$g","ah","bh","ch","insertBefore","dh","eh","fh","gh","componentDidCatch","hh","componentStack","ih","jh","vh","qh","rh","sh","uh","wh","xh","yh","ph","lh","zh","mh","Ah","Bh","th","getDerivedStateFromCatch","og","Ch","mg","nh","ng","oh","Dh","Eh","Fh","Gh","ef","kh","Hh","Ih","Th","Kh","Lh","gf","ff","Uh","Jh","Qh","Vh","Wh","Xh","Yh","Ph","Mh","Zh","$h","Rh","_onComplete","Nh","Oh","ai","_expirationTime","_defer","af","rangeCount","Wa","bf","focusedElem","selectionRange","ja","mi","__reactInternalSnapshotBeforeUpdate","fa","min","createRange","setStart","removeAllRanges","addRange","setEnd","left","scrollLeft","top","scrollTop","hg","oc","ca","wi","xi","Ng","Og","yi","yc","Pg","zi","timeRemaining","Sh","bi","ci","di","ei","fi","gi","hi","ii","ji","ki","findFiberByHostInstance","findHostInstanceByFiber","ni","oi","_callbacks","_next","_hasChildren","_didComplete","pi","_didCommit","_onCommit","qi","_internalRoot","ri","si","hasAttribute","ti","_reactRootContainer","legacy_renderSubtreeIntoContainer","ui","invokeGuardedCallback","hasCaughtError","clearCaughtError","va","plugins","eventNameDispatchConfigs","registrationNameModules","registrationNameDependencies","possibleRegistrationNames","injectEventPluginOrder","injectEventPluginsByName","Ga","Ka","injection","getListener","runEventsInBatch","runExtractedEventsInBatch","La","random","Qa","precacheFiberNode","getClosestInstanceFromNode","getInstanceFromNode","getNodeFromInstance","getFiberCurrentPropsFromNode","updateFiberProps","$a","accumulateTwoPhaseDispatches","accumulateTwoPhaseDispatchesSkipTarget","accumulateEnterLeaveDispatches","accumulateDirectDispatches","animationend","animationiteration","animationstart","transitionend","transition","fb","gb","hb","ib","ob","pb","eventPhase","bubbles","cancelable","timeStamp","isTrusted","preventDefault","stopPropagation","cancelBubble","persist","tb","ub","xb","documentMode","yb","Bb","beforeInput","compositionEnd","compositionStart","compositionUpdate","Ib","Kb","injectFiberControlledHostComponent","Rb","enqueueStateRestore","needsStateRestore","restoreStateIfNeeded","date","datetime","datetime-local","email","month","number","password","range","search","tel","time","week","fc","Dc","tabIndex","Uc","ad","_isInputEventSupported","bd","Alt","Control","Meta","Shift","fd","screenX","screenY","clientX","clientY","pageX","pageY","shiftKey","button","buttons","relatedTarget","fromElement","toElement","gd","pointerId","pressure","tiltX","tiltY","pointerType","isPrimary","hd","mouseEnter","mouseLeave","pointerEnter","pointerLeave","defaultView","parentWindow","od","animationName","elapsedTime","pseudoElement","pd","clipboardData","qd","sd","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","td","8","9","12","13","16","17","18","19","20","27","32","33","34","35","36","37","38","39","40","45","46","112","113","114","115","116","117","118","119","120","121","122","123","144","145","224","ud","repeat","locale","vd","dataTransfer","wd","touches","targetTouches","changedTouches","xd","yd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","zd","Dd","isInteractiveTopLevelEventType","Nd","_enabled","setEnabled","isEnabled","trapBubbledEvent","trapCapturedEvent","dispatchEvent","Vd","be","onSelect","SimpleEventPlugin","EnterLeaveEventPlugin","ChangeEventPlugin","SelectEventPlugin","BeforeInputEventPlugin","ce","de","ee","fe","ge","performance","he","ie","je","ke","le","me","ne","oe","pe","qe","re","se","didTimeout","ue","scheduledCallback","postMessage","te","timeoutTime","ve","prev","we","Infinity","mathml","svg","Ie","MSApp","execUnsafeLocalFunction","Me","menuitem","area","base","br","col","embed","hr","img","keygen","link","meta","param","wbr","$e","setInitialProperties","diffProperties","updateProperties","diffHydratedProperties","diffHydratedText","warnForUnmatchedText","warnForDeletedHydratableElement","warnForDeletedHydratableText","warnForInsertedHydratedElement","warnForInsertedHydratedText","querySelectorAll","li","updateContainerAtExpirationTime","createContainer","updateContainer","flushRoot","requestWork","computeUniqueAsyncExpiration","batchedUpdates","unbatchedUpdates","deferredUpdates","syncUpdates","interactiveUpdates","flushInteractiveUpdates","flushControlled","flushSync","getPublicRootInstance","findHostInstance","findHostInstanceWithNoPortals","injectIntoDevTools","commit","unmount","createBatch","vi","createPortal","findDOMNode","unstable_renderSubtreeIntoContainer","unmountComponentAtNode","unstable_createPortal","unstable_batchedUpdates","unstable_deferredUpdates","unstable_interactiveUpdates","unstable_flushControlled","EventPluginHub","EventPluginRegistry","EventPropagators","ReactControlledComponent","ReactDOMComponentTree","ReactDOMEventListener","unstable_createRoot","bundleType","rendererPackageName","Ai","Bi","ExecutionEnvironment","canUseWorkers","Worker","canUseEventListeners","canUseViewport","screen","isInWorker","getActiveElement","doc","shallowEqual","objA","objB","keysA","keysB","containsNode","outerNode","innerNode","isTextNode","compareDocumentPosition","isNode","Node","ReactPropTypesSecret","shim","propName","componentName","propFullName","secret","getShim","isRequired","ReactPropTypes","bool","string","symbol","any","arrayOf","instanceOf","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","SectionLabels","__WEBPACK_IMPORTED_MODULE_1_react_spring_dist_react_spring__","__WEBPACK_IMPORTED_MODULE_2__index_css__","flexDirection","textShadow","fontSize","AboutMe","__WEBPACK_IMPORTED_MODULE_3__assets_img_ThomasKim_jpg__","__WEBPACK_IMPORTED_MODULE_3__assets_img_ThomasKim_jpg___default","__WEBPACK_IMPORTED_MODULE_4__config_firebase_js__","blurb","database","snapshot","alignContent","marginTop","src","borderRadius","border","marginBottom","boxShadow","alt","__WEBPACK_IMPORTED_MODULE_0_firebase_app__","__WEBPACK_IMPORTED_MODULE_0_firebase_app___default","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","setImmediate","_state","_handled","_deferreds","_immediateFn","_unhandledRejectionFn","createCommonjsModule","__WEBPACK_IMPORTED_MODULE_0_whatwg_fetch__","setTimeoutFunc","prom","globalNS","_global","__g","_core","core","__e","_isObject","it","_anObject","_fails","_descriptors","_domCreate","_ie8DomDefine","_toPrimitive","valueOf","dP","Attributes","_objectDp","_propertyDesc","bitmap","_hide","_has","px","_uid","_redefine","SRC","$toString","TPL","inspectSource","safe","isFunction","_aFunction","_ctx","that","$export","own","exp","IS_FORCED","IS_GLOBAL","IS_STATIC","IS_PROTO","IS_BIND","expProto","_export","_cof","_iobject","_defined","_toObject","ceil","_toInteger","_toLength","_isArray","store","_shared","_wks","USE_SYMBOL","SPECIES","_arraySpeciesConstructor","original","_arraySpeciesCreate","_arrayMethods","TYPE","$create","IS_MAP","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","NO_HOLES","$this","callbackfn","UNSCOPABLES","ArrayProto","_addToUnscopables","$find","forced","$find$1","forced$1","_toIobject","max","min$1","_toAbsoluteIndex","shared","_sharedKey","arrayIndexOf","IS_INCLUDES","el","fromIndex","IE_PROTO","_objectKeysInternal","_enumBugKeys","_objectKeys","f$1","_objectGops","f$2","_objectPie","$assign","_objectAssign","aLen","getSymbols","isEnum","MATCH","_isRegexp","isRegExp","_stringContext","searchString","NAME","MATCH$1","$startsWith","KEY","startsWith","_stringRepeat","_meta","META","setDesc","isExtensible","FREEZE","preventExtensions","setMeta","fastKey","getWeak","onFreeze","NEED","def","TAG","_setToStringTag","stat","f$3","_wksExt","_wksDefine","$Symbol","_enumKeys","_objectDps","Properties","document$1","_html","IE_PROTO$1","Empty","createDict","iframeDocument","iframe","contentWindow","write","lt","_objectCreate","hiddenKeys","f$4","_objectGopn","gOPN","toString$1","windowNames","getWindowNames","f$5","_objectGopnExt","gOPD","f$6","_objectGopd","gOPD$1","dP$1","gOPN$1","$JSON","_stringify","HIDDEN","TO_PRIMITIVE","SymbolRegistry","AllSymbols","OPSymbols","ObjectProto","USE_NATIVE","QObject","setter","findChild","setSymbolDesc","protoDesc","wrap","sym","_k","isSymbol","$defineProperty","$defineProperties","$propertyIsEnumerable","$getOwnPropertyDescriptor","$getOwnPropertyNames","$getOwnPropertySymbols","IS_OP","$set","es6Symbols","wellKnownSymbols","keyFor","useSetter","useSimple","replacer","$replacer","TAG$1","ARG","tryGet","_classof","callee","_iterators","IteratorPrototype","_iterCreate","IE_PROTO$2","ObjectProto$1","_objectGpo","ITERATOR","BUGGY","returnThis","_iterDefine","Base","DEFAULT","IS_SET","FORCED","getMethod","kind","proto","DEF_VALUES","VALUES_BUG","$native","$default","$entries","$anyNative","$at","TO_STRING","iterated","_t","point","_iterStep","es6_array_iterator","Arguments","ITERATOR$1","TO_STRING_TAG","ArrayValues","DOMIterables","CSSRuleList","CSSStyleDeclaration","CSSValueList","ClientRectList","DOMRectList","DOMStringList","DOMTokenList","DataTransferItemList","FileList","HTMLAllCollection","HTMLCollection","HTMLFormElement","HTMLSelectElement","MediaList","MimeTypeArray","NamedNodeMap","NodeList","PaintRequestList","Plugin","PluginArray","SVGLengthList","SVGNumberList","SVGPathSegList","SVGPointList","SVGStringList","SVGTransformList","SourceBufferList","StyleSheetList","TextTrackCueList","TextTrackList","TouchList","collections","explicit","Collection","Timeout","clearFn","_id","_clearFn","unref","enroll","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","clearImmediate","tasksByHandle","nextHandle","registerImmediate","runIfPresent","currentlyRunningATask","attachTo","importScripts","postMessageIsAsynchronous","oldOnMessage","onmessage","messagePrefix","onGlobalMessage","event","MessageChannel","channel","port1","port2","script","onreadystatechange","__WEBPACK_IMPORTED_MODULE_0__firebase_database__","decodePath","pathString","pathStringDecoded","pieces","piece","decodeQuery","queryString","results","_a","segment","kv","NAME_ONLY_COMPARATOR","right","nameCompare","NAME_COMPARATOR","nodeFromJSON$1","priority","ChildrenNode","EMPTY_NODE","LeafNode","USE_HINZE","node_1","jsonObj_1","childData","childNode","isLeafNode","updateImmediateChild","updatePriority","children_1","childrenHavePriority_1","hinzeJsonObj_1","getPriority","NamedNode","childSet","buildChildSet","namedNode","sortedChildSet","PRIORITY_INDEX","getCompare","IndexMap",".priority","Default","registerDatabase","unused","RepoManager","getInstance","databaseFromApp","Reference","Query","Database","enableLogging","ServerValue","TEST_ACCESS","__EMPTY_NODE","MAX_NODE","__childrenNodeConstructor","nodeFromJSON","MAX_NODE$1","_defaultIndexMap","logger","DOMStorageWrapper","domStorage_","prefix_","removeItem","prefixedName_","setItem","storedVal","getItem","remove","MemoryStorage","cache_","isInMemoryStorage","createStoragefor","domStorageName","domStorage","PersistentStorage","SessionStorage","logClient","Logger","LUIDGenerator","sha1","sha1Bytes","buildLogMessage_","var_args","logger$1","firstLog_","logger_","persistent","logLevel","LogLevel","VERBOSE","logWrapper","prefix","fatal","warnIfPageIsSecure","protocol","isInvalidJSONNumber","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","executeWhenDOMReady","readyState","called_1","wrappedFn_1","MIN_NAME","MAX_NAME","aAsInt","tryParseInt","bAsInt","stringCompare","requireKey","ObjectToUniqueKey","sort","splitStringBySize","segsize","dataSegs","each","doubleToIEEE754String","ln","bits","pow","LN2","reverse","hexByteString","hexByte","substr","isChromeExtensionContentScript","isWindowsStoreApp","Windows","UI","errorForServerCode","query","path","INTEGER_REGEXP_","intVal","exceptionGuard","beingCrawled","setTimeoutNonBlocking","Path","pathOrString","pieceNum","pieces_","copyTo","pieceNum_","getFront","getLength","popFront","getBack","toUrlEncodedString","begin","parent","childPathObj","childPieces","relativePath","outerPath","innerPath","outer","inner","comparePaths","leftKeys","rightKeys","cmp","equals","other","ValidationPath","errorPrefix_","parts_","byteLength_","checkValid_","last","MAX_PATH_LENGTH_BYTES","MAX_PATH_DEPTH","toErrorString","LONG_POLLING","RepoInfo","host","secure","webSocketOnly","persistenceKey","domain","internalHost","needsQueryParam","isCustomHost","isCacheableHost","isDemoHost","updateHost","newHost","connectionURL","connURL","pairs","toURLString","parseRepoInfo","dataURL","parsedUrl","parseURL","subdomain","scheme","repoInfo","port","colonInd","slashInd","questionMarkInd","queryParams","INVALID_KEY_REGEX_","INVALID_PATH_REGEX_","isValidKey","isValidPathString","isValidRootPathString","isValidPriority","validateFirebaseDataArg","validateFirebaseData","path_","hasDotValue_1","hasActualChild_1","validateFirebaseMergePaths","mergePaths","curPath","prevPath","validateFirebaseMergeDataArg","validatePriority","validateEventType","eventType","validateKey","validatePathString","validateRootPathString","validateWritablePath","validateUrl","validateBoolean","OnDisconnect","repo_","cancel","onComplete","onDisconnectCancel","onDisconnectSet","setWithPriority","onDisconnectSetWithPriority","objectToMerge","newObjectToMerge","onDisconnectUpdate","TransactionResult","committed","toJSON","nextPushId","PUSH_CHARS","lastPushTime","lastRandChars","duplicateTime","timeStampChars","Wrap","Index","compare","indexedValueChanged","oldNode","newNode","oldWrapped","newWrapped","minPost","MIN","KeyIndex","isDefinedOn","maxPost","makePost","indexValue","KEY_INDEX","priorityHashText","validatePriorityNode","priorityNode","value_","priorityNode_","lazyHash_","newPriorityNode","getImmediateChild","childName","getChild","hasChild","getPredecessorChildName","newChildNode","updateChild","front","numChildren","forEachChild","action","exportFormat",".value","hash","toHash","compareTo","compareToLeafNode_","otherLeaf","otherLeafType","thisLeafType","otherIndex","VALUE_TYPE_ORDER","thisIndex","withIndex","isIndexed","PriorityIndex","aPriority","bPriority","indexCmp","SortedMapIterator","startKey","comparator","isReverse_","resultGenerator_","nodeStack_","getNext","hasNext","peek","LLRBNode","RED","SortedMap","copy","inorderTraversal","reverseTraversal","min_","minKey","maxKey","insert","fixUp_","removeMin_","isRed_","moveRedLeft_","smallest","rotateRight_","moveRedRight_","rotateLeft_","colorFlip_","nl","nr","checkMaxDepth_","blackDepth","check_","BLACK","LLRBEmptyNode","comparator_","root_","getPredecessorKey","rightParent","getIterator","resultGenerator","getIteratorFrom","getReverseIteratorFrom","getReverseIterator","LOG_2","Base12Num","current_","mask","bits_","nextBitIsOne","childList","keyFn","mapSortFn","buildBalancedTree","low","middle","base12","root","buildPennant","chunkSize","childTree","attachPennant","pennant","isOne","fallbackObject","indexes_","indexSet_","indexKey","sortedMap","hasIndex","indexDefinition","addIndex","existingChildren","sawIndexedValue","iter","newIndex","indexName","newIndexSet","newIndexes","addToIndexes","indexedChildren","existingSnap","newChildren","removeFromIndexes","children_","indexMap_","newIndexMap","newPriority","newImmediateChild","numKeys","allIntegerKeys","toHash_1","childHash","idx","resolveIndex_","predecessor","getFirstChildName","getFirstChild","getLastChildName","getLastChild","wrappedNode","startPost","endPost","MAX_NODE$2","otherChildrenNode","thisIter","otherIter","thisCurrent","otherCurrent","MaxNode","MAX","__referenceConstructor","OperationType","ValueIndex","valueNode","VALUE_INDEX","PathIndex","indexPath_","extractChild","snap","aChild","bChild","DataSnapshot","node_","ref_","index_","exportVal","exists","childPathString","childPath","childRef","hasChildren","getKey","getRef","DataEvent","eventRegistration","prevName","getPath","getParent","getEventType","getEventRunner","CancelEvent","ValueEventRegistration","callback_","cancelCallback_","context_","respondsTo","createEvent","getQueryParams","getIndex","snapshotNode","eventData","ctx","cancelCB_1","cb_1","createCancelEvent","matches","hasAnyCallback","ChildEventRegistration","callbacks_","eventToCheck","cancelCB_2","cb_2","otherCount","otherKey","thisKey","repo","queryParams_","orderByCalled_","validateQueryEndpoints_","startNode","endNode","hasStart","getIndexStartValue","hasEnd","getIndexEndValue","tooManyArgsError","wrongArgTypeError","getIndexStartName","getIndexEndName","validateLimit_","hasLimit","hasAnchoredLimit","validateNoPreviousOrderByCall_","cancelCallbackOrContext","getCancelAndContextArgs_","onValueEvent","callbacks","onChildEvent","cancelCallback","addEventCallbackForQuery","removeEventCallbackForQuery","userCallback","cancelOrContext","firstCall","onceCallback","limitToFirst","limit","limitToLast","orderByChild","parsedPath","newParams","orderBy","orderByKey","orderByPriority","orderByValue","startAt","endAt","equalTo","queryObject","getQueryObject","queryIdentifier","isEqual","sameRepo","samePath","sameQueryIdentifier","CountedSet","SparseSnapshotTree","childKey","remember","forget","self_1","tree","forEachTree","prefixPath","generateWithValues","resolveDeferredValue","serverValues","resolveDeferredValueTree","resolvedTree","resolveDeferredValueSnapshot","rawPri","leafNode","childrenNode","emptyChildrenSingleton","__referenceConstructor$1","OperationSource","fromUser","fromServer","queryId","tagged","User","Server","forServerTaggedQuery","AckUserWrite","affectedTree","revert","ACK_USER_WRITE","operationForChild","subtree","EmptyChildren","ImmutableTree","fromObject","childSnap","findRootMostMatchingPathAndValue","predicate","childExistingPathAndValue","findRootMostValueAndPath","toSet","newChild","setTree","newTree","fold","fold_","pathSoFar","accum","findOnPath","findOnPath_","pathToFollow","nextChild","foreachOnPath","foreachOnPath_","currentRelativePath","foreach","foreach_","foreachChild","ListenComplete","LISTEN_COMPLETE","Overwrite","OVERWRITE","Merge","MERGE","CacheNode","fullyInitialized_","filtered_","isFullyInitialized","isFiltered","isCompleteForPath","isCompleteForChild","getNode","ViewCache","eventCache_","serverCache_","updateEventSnap","eventSnap","filtered","updateServerSnap","serverSnap","getEventCache","getCompleteEventSnap","getServerCache","getCompleteServerSnap","Change","oldSnap","valueChange","VALUE","childAddedChange","CHILD_ADDED","childRemovedChange","CHILD_REMOVED","childChangedChange","newSnapshot","oldSnapshot","CHILD_CHANGED","childMovedChange","CHILD_MOVED","IndexedFilter","affectedPath","optChangeAccumulator","oldChild","trackChildChange","updateFullNode","newSnap","filtersNodes","getIndexedFilter","ChildChangeAccumulator","changeMap_","oldChange","oldType","getChanges","NoCompleteChildSource_","getCompleteChild","getChildAfterChild","NO_COMPLETE_CHILD_SOURCE","WriteTreeCompleteChildSource","writes_","viewCache_","optCompleteServerCache_","serverNode","calcCompleteChild","completeServerData","nodes","calcIndexedSlice","ProcessorResult","viewCache","changes","ViewProcessor","filter_","assertIndexed","applyOperation","oldViewCache","operation","writesCache","completeCache","newViewCache","filterServerNode","accumulator","overwrite","applyUserOverwrite_","applyServerOverwrite_","merge","applyUserMerge_","applyServerMerge_","ackUserWrite","revertUserWrite_","ackUserWrite_","listenComplete_","maybeAddValueEvent_","isLeafOrEmpty","oldCompleteSnap","generateEventCacheAfterServerEvent_","changePath","oldEventSnap","shadowingWrite","newEventCache","serverCache","completeChildren","completeEventChildren","calcCompleteEventChildren","completeNode","calcCompleteEventCache","oldEventNode","updatedPriority","calcEventCacheAfterServerOverwrite","childChangePath","newEventChild","eventChildUpdate","changedSnap","newServerCache","oldServerSnap","serverFilter","newServerNode","newEventSnap","cacheHasChild_","changedChildren","curViewCache","writePath","applyMerge_","viewMergeTree","serverChild","childMergeTree","isUnknownDeepMerge","ackPath","changedChildren_1","changedChildren_2","mergePath","serverCachePath","oldServerNode","completeServerCache","oldEventCache","serverChildren","EventGenerator","query_","generateEventsForChanges","eventCache","eventRegistrations","events","moves","generateEventsForType_","registrations","filteredChanges","compareChanges_","materializedChange","materializeSingleChange_","registration","aWrapped","bWrapped","View","initialViewCache","eventRegistrations_","indexFilter","getNodeFilter","processor_","initialServerCache","initialEventCache","eventGenerator_","getQuery","getCompleteServerCache","cache","loadsAllData","addEventRegistration","removeEventRegistration","cancelError","cancelEvents","path_1","maybeEvent","existing","generateEventsForChanges_","getInitialEvents","initialChanges","SyncPoint","views_","optCompleteServerCache","events_1","serverCacheComplete","eventCacheComplete","removed","hadCompleteView","hasCompleteView","viewQueryId","getQueryViews","viewForQuery","getCompleteView","viewExistsForQuery","CompoundWrite","writeTree_","addWrite","rootmost","rootMostPath","addWrites","updates","newWrite","removeWrite","hasCompleteWrite","getCompleteNode","getCompleteChildren","childCompoundWrite","shadowingNode","applySubtreeWrite_","writeTree","priorityWrite_1","WriteTree","visibleWrites_","allWrites_","lastWriteId_","childWrites","WriteTreeRef","addOverwrite","writeId","visible","addMerge","getWrite","record","writeToRemove","removedWriteWasVisible","removedWriteOverlapsWithOtherWrites","currentWrite","recordContainsPath_","resetTree_","getCompleteWriteData","treePath","writeIdsToExclude","includeHiddenWrites","mergeAtPath","layerTree_","layeredCache","subMerge","completeServerChildren","topLevelSet","merge_1","existingEventSnap","existingServerSnap","childMerge","toIterate","writeRecord","DefaultFilter_","writes","treeRoot","compoundWrite","deepNode","treePath_","existingServerCache","SyncTree","listenProvider_","syncPointTree_","pendingWriteTree_","tagToQueryMap_","queryToTagMap_","applyUserOverwrite","newData","applyOperationToSyncPoints_","applyUserMerge","changeTree","affectedTree_1","applyServerOverwrite","applyServerMerge","applyListenComplete","applyTaggedQueryOverwrite","queryKey","queryKeyForTag_","parseQueryKey_","queryPath","applyTaggedOperation_","applyTaggedQueryMerge","applyTaggedListenComplete","foundAncestorDefaultView","pathToSyncPoint","sp","syncPoint","childSyncPoint","viewAlreadyExists","makeQueryKey_","getNextQueryTag_","setupListener_","maybeSyncPoint","removedAndEvents","removingDefault","covered","parentSyncPoint","newViews","collectDistinctViewsForSubTree_","newQuery","createListenerForView_","startListening","queryForListening_","tagForQuery_","hashFn","stopListening","queryToRemove","tagToRemove","removeTags_","maybeChildSyncPoint","childMap","views_1","childViews","queries","removedQuery","removedQueryKey","removedQueryTag","isDefault","queriesToStop","queries_1","childQueries","queryToStop","error$$1","splitIndex","nextQueryTag_","applyOperationHelper_","syncPointTree","applyOperationDescendantsHelper_","childOperation","childServerCache","childWritesCache","SnapshotHolder","rootNode_","updateSnapshot","newSnapshotNode","AuthTokenProvider","app_","forceRefresh","addTokenChangeListener","removeTokenChangeListener","notifyForInvalidToken","errorMessage","StatsCollection","counters_","incrementCounter","amount","StatsManager","getCollection","hashString","collections_","getOrCreateReporter","creatorFunction","reporters_","StatsListener","collection_","last_","newStats","delta","FIRST_STATS_MIN_TIME","FIRST_STATS_MAX_TIME","StatsReporter","collection","server_","statsToReport_","statsListener_","reportStats_","includeStat","stats","reportedStats","haveStatsToReport","reportStats","EventQueue","eventLists_","recursionDepth_","queueEvents","eventDataList","currList","eventPath","EventList","raiseEventsAtPath","raiseQueuedEventsMatchingPredicate_","raiseEventsForChangedPath","changedPath","sentAll","eventList","raise","events_","eventFn","EventEmitter","allowedEvents_","listeners_","trigger","validateEventType_","getInitialEvent","et","VisibilityMonitor","visibilityChange","visible_","OnlineMonitor","online_","currentlyOnline","PacketReceiver","onMessage_","pendingResponses","currentResponseNum","closeAfterResponse","onClose","closeAfter","responseNum","handleResponse","requestNum","this_1","toProcess","FIREBASE_LONGPOLL_COMMAND_CB_NAME","FIREBASE_LONGPOLL_DATA_CB_NAME","BrowserPollConnection","connId","transportSessionId","lastSessionId","bytesSent","bytesReceived","everConnected_","log_","stats_","urlFn","onMessage","onDisconnect","curSegmentNum","onDisconnect_","myPacketOrderer","isClosed_","connectTimeoutTimer_","onClosed_","scriptTagHolder","FirebaseIFrameScriptHolder","command","arg1","arg2","incrementIncomingBytes_","sendNewPolls","pN","urlParams","uniqueCallbackIdentifier","connectURL","addTag","startLongPoll","addDisconnectPingFrame","forceAllow","forceAllow_","forceDisallow","forceDisallow_","isAvailable","markConnectionHealthy","shutdown_","myDisconnFrame","dataStr","base64data","MAX_URL_DATA_SIZE","enqueueSegment","pw","commandCB","onMessageCB","outstandingRequests","pendingSegs","currentSerial","myIFrame","createIFrame_","iframeContents","contentDocument","alive","myID","myPW","theURL","nodeRestRequest","newRequest_","curDataString","theSeg","seg","ts","addLongPollTag_","segnum","totalsegs","serial","doNewRequest","keepaliveTimeout","readyStateCB","loadCB","doNodeLongPoll","newScript_1","rstate","WebSocketImpl","MozWebSocket","WebSocket","WebSocketConnection","keepaliveTimer","frames","totalFrames","connectionURL_","device","User-Agent","platform","NODE_ENV","PUBLIC_URL","origin","mySock","onopen","onclose","handleIncomingFrame","isOldAndroid","userAgent","oldAndroidRegex","oldAndroidMatch","previouslyFailed","appendFrame_","fullMess","jsonMess","handleNewFrameCount_","frameCount","extractFrameCount_","mess","resetKeepAlive","remainingData","sendString_","responsesRequiredToBeHealthy","healthyTimeout","TransportManager","initTransports_","isWebSocketsAvailable","isSkipPollConnection","transports_","transports_1","ALL_TRANSPORTS","transport","initialTransport","upgradeTransport","Connection","repoInfo_","onReady_","onKill_","connectionCount","pendingDataMessages","state_","transportManager_","start_","conn","conn_","nextTransportId_","primaryResponsesRequired_","onMessageReceived","connReceiver_","onConnectionLost","disconnReceiver_","tx_","rx_","secondaryConn_","isHealthy_","healthyTimeout_ms","healthyTimeout_","everConnected","onConnectionLost_","onSecondaryConnectionLost_","onPrimaryMessageReceived_","onSecondaryMessageReceived_","sendRequest","dataMsg","msg","sendData_","tryCleanupConnection","onSecondaryControl_","controlData","cmd","upgradeIfSecondaryHealthy_","secondaryResponsesRequired_","parsedData","layer","proceedWithUpgrade_","onControl_","onDataMessage_","onPrimaryResponse_","onHandshake_","onConnectionShutdown_","onReset_","sendPingOnPrimaryIfNecessary_","handshake","timestamp","sessionId","onConnectionEstablished_","tryStartUpgrade_","startUpgrade_","closeConnections_","ServerActions","put","refreshAuthToken","onDisconnectPut","onDisconnectMerge","RECONNECT_MIN_DELAY","RECONNECT_MAX_DELAY_DEFAULT","PersistentConnection","onDataUpdate_","onConnectStatus_","onServerInfoUpdate_","authTokenProvider_","authOverride_","nextPersistentConnectionId_","interruptReasons_","listens_","outstandingPuts_","outstandingPutCount_","onDisconnectRequestQueue_","connected_","reconnectDelay_","maxReconnectDelay_","securityDebugCallback_","establishConnectionTimer_","requestCBHash_","requestNumber_","realtime_","authToken_","forceTokenRefresh_","invalidAuthTokenCount_","firstConnection_","lastConnectionAttemptTime_","lastConnectionEstablishedTime_","scheduleConnect_","onVisible_","onOnline_","onResponse","curReqNum","listen","currentHashFn","listenSpec","sendListen_","req","warnOnListenWarnings_","removeListen_","warnings","indexSpec","indexPath","tryAuth","reduceReconnectDelayIfAdminCredential_","credential","token_1","authMethod","requestData","cred","onAuthRevoked_","unlisten","sendUnlisten_","queryObj","sendOnDisconnect_","putInternal","sendPut_","queued","errorReason","reqNum","onDataPush_","onListenRevoked_","onSecurityDebugPacket_","handleTimestamp_","sendConnectStats_","restoreState_","establishConnection_","online","onRealtimeDisconnect_","cancelSentTransactions_","shouldReconnect_","timeSinceLastConnectSucceeded","timeSinceLastConnectAttempt","reconnectDelay","onDataMessage_1","onReady_1","onDisconnect_1","connId_1","nextConnectionId_","lastSessionId_1","canceled_1","connection_1","closeFn_1","sendRequestFn","accessToken","interrupt","serverTimeOffset","normalizedPathString","statusCode","explanation","clientName","ReadonlyRestClient","getListenId_","listenId","thisListen","queryStringParamaters","toRestQueryStringParameters","restRequest_","status_1","queryStringParameters","authTokenData","authToken","Repo","forceRestClient","dataUpdateCount","eventQueue_","nextWriteId_","interceptServerDataCallback_","persistentConnection_","authTokenProvider","authOverride","statsReporter_","transactions_init_","infoData_","infoSyncTree_","infoEvents","updateInfo_","serverSyncTree_","serverTime","offsetNode","generateServerValues","isMerge","taggedChildren","taggedSnap","rerunTransactions_","interceptServerData_","connectStatus","runOnDisconnectEvents_","getNextWriteId_","newVal","newNodeUnresolved","success","clearEvents","callOnCompleteCallback","abortTransactions_","childrenToMerge","empty","changedKey","changedValue","writeId_1","resolvedOnDisconnectTree","showDelta","longestName","previousValue","currentValue","statsIncrementCounter","metric","__database","RangedFilter","indexedFilter_","startPost_","getStartPost_","endPost_","getEndPost_","getStartPost","getEndPost","startName","endName","LimitedFilter","rangedFilter_","limit_","getLimit","reverse_","isViewFromLeft","fullLimitUpdateChild_","inRange","indexCompare_1","foundStartPost","changeAccumulator","indexCmp_1","newChildNamedNode","windowBoundary","oldChildSnap","compareNext","QueryParams","limitSet_","startSet_","startNameSet_","endSet_","endNameSet_","viewFrom_","indexStartValue_","indexStartName_","indexEndValue_","indexEndName_","WIRE_PROTOCOL_CONSTANTS_","VIEW_FROM_LEFT","copy_","newLimit","VIEW_FROM_RIGHT","WIRE_PROTOCOL_CONSTANTS","INDEX_START_VALUE","INDEX_START_NAME","INDEX_END_VALUE","INDEX_END_NAME","LIMIT","viewFrom","VIEW_FROM","INDEX","REST_CONSTANTS","REST_QUERY_CONSTANTS_","qs","ORDER_BY","START_AT","END_AT","LIMIT_TO_FIRST","LIMIT_TO_LAST","parentPath","getRoot","databaseProp","transaction","transactionUpdate","applyLocally","promiseComplete","startTransaction","setPriority","thennablePushRef","pushRef","TransactionStatus","TreeNode","childCount","Tree","parent_","subTree","pathObj","updateParents_","forEachDescendant","includeSelf","childrenFirst","forEachAncestor","forEachImmediateDescendantWithValue","updateChild_","childEmpty","childExists","MAX_TRANSACTION_RETRIES_","transactionQueueTree_","valueCallback","watchRef","unwatcher","retryCount","abortReason","currentWriteId","currentInputSnapshot","currentOutputSnapshotRaw","currentOutputSnapshotResolved","currentState","getLatestState_","RUN","queueNode","nodeQueue","priorityForNode","sendReadyTransactions_","excludeSets","pruneCompletedTransactionsBelowNode_","buildTransactionQueue_","sendTransactionQueue_","setsToIgnore","txn","latestState","snapToSend","latestHash","SENT","dataToSend","pathToSend","COMPLETED","SENT_NEEDS_ABORT","NEEDS_ABORT","rootMostTransactionNode","getAncestorTransactionNode_","rerunTransactionQueue_","txnsToRerun","abortTransaction","currentNode","newDataNode","hasExplicitPriority","oldWriteId","newNodeResolved","lastInput","transactionNode","transactionQueue","aggregateTransactionQueuesForNode_","abortTransactionsOnNode_","lastSent","_staticInstance","repos_","useRestClient_","appName","dbUrl","createRepo","deleteRepo","appRepos","DatabaseInternals","checkDeleted_","refFromURL","apiName","parsedURL","goOffline","goOnline","TIMESTAMP",".sv","forceLongPolling","forceWebSockets","setSecurityDebugCallback","interceptServerData","freeze","DataConnection","simpleListen","echo","onEcho","RealTimeConnection","hijackHash","newHash","oldPut","opt_onComplete","opt_hash","ConnectionTarget","listens","firebaseRef","setLogLevel","level","instances","inst","defaultLogLevel","INFO","defaultLogHandler","logType","toISOString","DEBUG","info","WARN","ERROR","_logLevel","_logHandler","debug","Portfolio","flexWrap","Skills","__WEBPACK_IMPORTED_MODULE_1_react_spring__","textDecoration","__WEBPACK_IMPORTED_MODULE_0_normalize_css_color___default","__WEBPACK_IMPORTED_MODULE_1_react___default","__WEBPACK_IMPORTED_MODULE_0_normalize_css_color__","__WEBPACK_IMPORTED_MODULE_1_react__","__WEBPACK_IMPORTED_MODULE_2_prop_types__","__WEBPACK_IMPORTED_MODULE_2_prop_types___default"],"mappings":"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","file":"static/js/main.2079f396.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 16);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nif (true) {\n  module.exports = __webpack_require__(22);\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\nvar g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\n} catch(e) {\n\t// This works if the window reference is available\n\tif(typeof window === \"object\")\n\t\tg = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {function _interopDefault(t){return t&&\"object\"==typeof t&&\"default\"in t?t.default:t}Object.defineProperty(exports,\"__esModule\",{value:!0});var normalizeColor=_interopDefault(__webpack_require__(10)),React=_interopDefault(__webpack_require__(0)),PropTypes=_interopDefault(__webpack_require__(11));function _extends(){return(_extends=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(t[i]=n[i])}return t}).apply(this,arguments)}function _inheritsLoose(t,e){t.prototype=Object.create(e.prototype),t.prototype.constructor=t,t.__proto__=e}function _objectWithoutProperties(t,e){if(null==t)return{};var n,i,r={},a=Object.keys(t);for(i=0;i<a.length;i++)n=a[i],e.indexOf(n)>=0||(r[n]=t[n]);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(i=0;i<o.length;i++)n=o[i],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}function _assertThisInitialized(t){if(void 0===t)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return t}var Animated=function(){function t(){}var e=t.prototype;return e.__attach=function(){},e.__detach=function(){},e.__getValue=function(){},e.__getAnimatedValue=function(){return this.__getValue()},e.__addChild=function(t){},e.__removeChild=function(t){},e.__getChildren=function(){return[]},t}(),AnimatedTracking=function(t){function e(e,n,i,r,a){var o;return(o=t.call(this)||this)._value=e,o._parent=n,o._animationClass=i,o._animationConfig=r,o._callback=a,o.__attach(),o._hey=1,o}_inheritsLoose(e,t);var n=e.prototype;return n.__getValue=function(){return this._parent.__getValue()},n.__attach=function(){this._parent.__addChild(this)},n.__detach=function(){this._parent.__removeChild(this)},n.update=function(){this._value.animate(new this._animationClass(_extends({},this._animationConfig,{toValue:this._animationConfig.toValue.__getValue()})),this._callback)},e}(Animated),AnimatedWithChildren=function(t){function e(){var e;return(e=t.call(this)||this)._children=[],e}_inheritsLoose(e,t);var n=e.prototype;return n.__addChild=function(t){t instanceof AnimatedTracking&&(this._tracked=!0),0===this._children.length&&this.__attach(),this._children.push(t)},n.__removeChild=function(t){var e=this._children.indexOf(t);-1!==e?(this._children.splice(e,1),0===this._children.length&&this.__detach()):console.warn(\"Trying to remove a child that doesn't exist\")},n.__getChildren=function(){return this._children},e}(Animated),linear=function(t){return t},Interpolation=function(){function t(){}return t.create=function(t){if(\"function\"==typeof t)return function(e){return t(e)};if(t.outputRange&&\"string\"==typeof t.outputRange[0])return createInterpolationFromStringOutputRange(t);var e=t.outputRange,n=t.inputRange,i=t.easing||linear,r=\"extend\";void 0!==t.extrapolateLeft?r=t.extrapolateLeft:void 0!==t.extrapolate&&(r=t.extrapolate);var a=\"extend\";return void 0!==t.extrapolateRight?a=t.extrapolateRight:void 0!==t.extrapolate&&(a=t.extrapolate),function(t){var o=findRange(t,n);return interpolate(t,n[o],n[o+1],e[o],e[o+1],i,r,a)}},t}();function interpolate(t,e,n,i,r,a,o,s){var l=t;if(l<e){if(\"identity\"===o)return l;\"clamp\"===o&&(l=e)}if(l>n){if(\"identity\"===s)return l;\"clamp\"===s&&(l=n)}return i===r?i:e===n?t<=e?i:r:(e===-1/0?l=-l:n===1/0?l-=e:l=(l-e)/(n-e),l=a(l),i===-1/0?l=-l:r===1/0?l+=i:l=l*(r-i)+i,l)}function colorToRgba(t){var e=normalizeColor(t);return null===e?t:\"rgba(\"+((4278190080&(e=e||0))>>>24)+\", \"+((16711680&e)>>>16)+\", \"+((65280&e)>>>8)+\", \"+(255&e)/255+\")\"}var stringShapeRegex=/[0-9\\.-]+/g;function createInterpolationFromStringOutputRange(t){var e=t.outputRange,n=(e=e.map(colorToRgba))[0].match(stringShapeRegex).map(function(){return[]});e.forEach(function(t){t.match(stringShapeRegex).forEach(function(t,e){n[e].push(+t)})});var i=e[0].match(stringShapeRegex).map(function(e,i){return Interpolation.create(_extends({},t,{outputRange:n[i]}))}),r=/^rgb/.test(e[0]);return function(t){var n=0;return e[0].replace(stringShapeRegex,function(){var e=i[n++](t);return String(r&&n<4?Math.round(e):e)})}}function findRange(t,e){for(var n=1;n<e.length-1&&!(e[n]>=t);++n);return n-1}var AnimatedInterpolation=function(t){function e(e,n){var i;return(i=t.call(this)||this)._parents=Array.isArray(e)?e:[e],i._interpolation=Interpolation.create(n),i}_inheritsLoose(e,t);var n=e.prototype;return n.__getValue=function(){return this._interpolation.apply(this,this._parents.map(function(t){return t.__getValue()}))},n.__attach=function(){for(var t=0;t<this._parents.length;++t)this._parents[t]instanceof Animated&&this._parents[t].__addChild(this)},n.__detach=function(){for(var t=0;t<this._parents.length;++t)this._parents[t]instanceof Animated&&this._parents[t].__removeChild(this)},n.interpolate=function(t){return new e(this,t)},e}(AnimatedWithChildren),Animation=function(){function t(){}var e=t.prototype;return e.start=function(t,e,n,i){},e.stop=function(){},e.__debouncedOnEnd=function(t){var e=this.__onEnd;this.__onEnd=null,e&&e(t)},t}(),_uniqueId=0;function findAnimatedStyles(t,e){\"function\"==typeof t.update?e.add(t):t.__getChildren().forEach(function(t){return findAnimatedStyles(t,e)})}var AnimatedValue=function(t){function e(e){var n;return(n=t.call(this)||this)._value=e,n._animation=null,n._animatedStyles=new Set,n._listeners={},n}_inheritsLoose(e,t);var n=e.prototype;return n.__detach=function(){this.stopAnimation()},n.__getValue=function(){return this._value},n._flush=function(){(0===this._animatedStyles.size||this._tracked)&&findAnimatedStyles(this,this._animatedStyles),this._animatedStyles.forEach(function(t){return t.update()})},n._updateValue=function(t){for(var e in this._value=t,this._flush(),this._listeners)this._listeners[e]({value:this.__getValue()})},n.setValue=function(t){this._animation&&(this._animation.stop(),this._animation=null),this._animatedStyles.clear(),this._updateValue(t)},n.stopAnimation=function(t){this.stopTracking(),this._animation&&this._animation.stop(),this._animation=null,t&&t(this.__getValue())},n.interpolate=function(t){return new AnimatedInterpolation(this,t)},n.animate=function(t,e){var n=this,i=this._animation;this._animation&&this._animation.stop(),this._animation=t,this._animatedStyles.clear(),t.start(this._value,function(t){return n._updateValue(t)},function(t){n._animation=null,e&&e(t)},i)},n.addListener=function(t){var e=String(_uniqueId++);return this._listeners[e]=t,e},n.removeListener=function(t){delete this._listeners[t]},n.removeAllListeners=function(){this._listeners={}},n.stopTracking=function(){this._tracking&&this._tracking.__detach(),this._tracking=null},n.track=function(t){this.stopTracking(),this._tracking=t},e}(AnimatedWithChildren),AnimatedArray=function(t){function e(e){var n;return(n=t.call(this)||this)._values=e.map(function(t){return new AnimatedValue(t)}),n}_inheritsLoose(e,t);var n=e.prototype;return n.setValue=function(t){var e=this;t.forEach(function(t,n){return e._values[n].setValue(t)})},n.__getValue=function(){return this._values.map(function(t){return t.__getValue()})},n.stopAnimation=function(t){this._values.forEach(function(t){return t.stopAnimation()}),t&&t(this.__getValue())},n.__attach=function(){for(var t=0;t<this._values.length;++t)this._values[t]instanceof Animated&&this._values[t].__addChild(this)},n.__detach=function(){for(var t=0;t<this._values.length;++t)this._values[t]instanceof Animated&&this._values[t].__removeChild(this)},e}(AnimatedWithChildren),AnimatedTemplate=function(t){function e(e,n){var i;return(i=t.call(this)||this)._strings=e,i._values=n,i}_inheritsLoose(e,t);var n=e.prototype;return n.__transformValue=function(t){return t instanceof Animated?t.__getValue():t},n.__getValue=function(){for(var t=this._strings[0],e=0;e<this._values.length;++e)t+=this.__transformValue(this._values[e])+this._strings[1+e];return t},n.__attach=function(){for(var t=0;t<this._values.length;++t)this._values[t]instanceof Animated&&this._values[t].__addChild(this)},n.__detach=function(){for(var t=0;t<this._values.length;++t)this._values[t]instanceof Animated&&this._values[t].__removeChild(this)},e}(AnimatedWithChildren),RequestAnimationFrame={current:function(t){return global.requestAnimationFrame(t)},inject:function(t){RequestAnimationFrame.current=t}},CancelAnimationFrame={current:function(t){return global.cancelAnimationFrame(t)},inject:function(t){CancelAnimationFrame.current=t}};function tensionFromOrigamiValue(t){return 3.62*(t-30)+194}function frictionFromOrigamiValue(t){return 3*(t-8)+25}function fromOrigamiTensionAndFriction(t,e){return{tension:tensionFromOrigamiValue(t),friction:frictionFromOrigamiValue(e)}}var SpringConfig={fromOrigamiTensionAndFriction:fromOrigamiTensionAndFriction},withDefault=function(t,e){return void 0===t||null===t?e:t},SpringAnimation=function(t){function e(e){var n;(n=t.call(this)||this)._overshootClamping=withDefault(e.overshootClamping,!1),n._restDisplacementThreshold=withDefault(e.restDisplacementThreshold,.001),n._restSpeedThreshold=withDefault(e.restSpeedThreshold,.001),n._initialVelocity=e.velocity,n._lastVelocity=withDefault(e.velocity,0),n._toValue=e.toValue,n.__isInteraction=void 0===e.isInteraction||e.isInteraction;var i=SpringConfig.fromOrigamiTensionAndFriction(withDefault(e.tension,40),withDefault(e.friction,7));return n._tension=i.tension,n._friction=i.friction,n}_inheritsLoose(e,t);var n=e.prototype;return n.start=function(t,n,i,r){if(this.__active=!0,this._startPosition=t,this._lastPosition=this._startPosition,this._onUpdate=n,this.__onEnd=i,this._lastTime=Date.now(),r instanceof e){var a=r.getInternalState();this._lastPosition=a.lastPosition,this._lastVelocity=a.lastVelocity,this._lastTime=a.lastTime}void 0!==this._initialVelocity&&null!==this._initialVelocity&&(this._lastVelocity=this._initialVelocity),this.onUpdate()},n.getInternalState=function(){return{lastPosition:this._lastPosition,lastVelocity:this._lastVelocity,lastTime:this._lastTime}},n.onUpdate=function(){var t=this._lastPosition,e=this._lastVelocity,n=this._lastPosition,i=this._lastVelocity,r=Date.now();r>this._lastTime+64&&(r=this._lastTime+64);for(var a=Math.floor((r-this._lastTime)/1),o=0;o<a;++o){var s=e,l=this._tension*(this._toValue-n)-this._friction*i,u=(n=t+.001*s/2,i=e+.001*l/2),c=this._tension*(this._toValue-n)-this._friction*i;n=t+.001*u/2;var p=i=e+.001*c/2,f=this._tension*(this._toValue-n)-this._friction*i;n=t+.001*p/2;var h=i=e+.001*f/2,d=this._tension*(this._toValue-n)-this._friction*i;n=t+.001*p/2,i=e+.001*f/2,t+=.001*((s+2*(u+p)+h)/6),e+=.001*((l+2*(c+f)+d)/6)}if(this._lastTime=r,this._lastPosition=t,this._lastVelocity=e,this._onUpdate(t),this.__active){var m=!1;this._overshootClamping&&0!==this._tension&&(m=this._startPosition<this._toValue?t>this._toValue:t<this._toValue);var _=Math.abs(e)<=this._restSpeedThreshold,v=!0;if(0!==this._tension&&(v=Math.abs(this._toValue-t)<=this._restDisplacementThreshold),m||_&&v)return 0!==this._tension&&this._onUpdate(this._toValue),void this.__debouncedOnEnd({finished:!0});this._animationFrame=RequestAnimationFrame.current(this.onUpdate.bind(this))}},n.stop=function(){this.__active=!1,CancelAnimationFrame.current(this._animationFrame),this.__debouncedOnEnd({finished:!1})},e}(Animation),FlattenStyle={current:function(t){return t},inject:function(t){FlattenStyle.current=t}},AnimatedStyle=function(t){function e(e){var n;return n=t.call(this)||this,e=FlattenStyle.current(e)||{},n._style=e,n}_inheritsLoose(e,t);var n=e.prototype;return n.__getValue=function(){var t={};for(var e in this._style){var n=this._style[e];t[e]=n instanceof Animated?n.__getValue():n}return t},n.__getAnimatedValue=function(){var t={};for(var e in this._style){var n=this._style[e];n instanceof Animated&&(t[e]=n.__getAnimatedValue())}return t},n.__attach=function(){for(var t in this._style){var e=this._style[t];e instanceof Animated&&e.__addChild(this)}},n.__detach=function(){for(var t in this._style){var e=this._style[t];e instanceof Animated&&e.__removeChild(this)}},e}(AnimatedWithChildren),AnimatedProps=function(t){function e(e,n){var i;return i=t.call(this)||this,e.style&&(e=_extends({},e,{style:new AnimatedStyle(e.style)})),i._props=e,i._callback=n,i.__attach(),i}_inheritsLoose(e,t);var n=e.prototype;return n.__getValue=function(){var t={};for(var e in this._props){var n=this._props[e];t[e]=n instanceof Animated?n.__getValue():n}return t},n.__getAnimatedValue=function(){var t={};for(var e in this._props){var n=this._props[e];n instanceof Animated&&(t[e]=n.__getAnimatedValue())}return t},n.__attach=function(){for(var t in this._props){var e=this._props[t];e instanceof Animated&&e.__addChild(this)}},n.__detach=function(){for(var t in this._props){var e=this._props[t];e instanceof Animated&&e.__removeChild(this)}},n.update=function(){this._callback()},e}(Animated),ApplyAnimatedValues={current:function(t,e){if(!t.setNativeProps)return!1;t.setNativeProps(e)},transformStyles:function(t){return t},inject:function(t,e){ApplyAnimatedValues.current=t,ApplyAnimatedValues.transformStyles=e}};function createAnimatedComponent(t){return function(e){function n(){return e.apply(this,arguments)||this}_inheritsLoose(n,e);var i=n.prototype;return i.componentWillUnmount=function(){this._propsAnimated&&this._propsAnimated.__detach()},i.setNativeProps=function(t){!1===ApplyAnimatedValues.current(this.refs.node,t,this)&&this.forceUpdate()},i.componentWillMount=function(){this.attachProps(this.props)},i.attachProps=function(t){var e=this,n=this._propsAnimated;this._propsAnimated=new AnimatedProps(t,function(){!1===ApplyAnimatedValues.current(e.refs.node,e._propsAnimated.__getAnimatedValue(),e)&&e.forceUpdate()}),n&&n.__detach()},i.componentWillReceiveProps=function(t){this.attachProps(t)},i.render=function(){var e=this._propsAnimated.__getValue(),n=e.style,i=_objectWithoutProperties(e,[\"style\"]);return React.createElement(t,_extends({},i,{style:ApplyAnimatedValues.transformStyles(n),ref:\"node\"}))},n}(React.Component)}var maybeVectorAnim=function(t,e,n){var i=e.tension,r=e.friction,a=e.toValue;return t instanceof AnimatedArray?parallel(t._values.map(function(t,e){return n(t,{tension:i,friction:r,toValue:a[e]})}),{stopTogether:!1}):null},spring=function t(e,n){return maybeVectorAnim(e,n,t)||{start:function(t){var i=e,r=n;i.stopTracking(),n.toValue instanceof Animated?i.track(new AnimatedTracking(i,n.toValue,SpringAnimation,r,t)):i.animate(new SpringAnimation(r),t)},stop:function(){e.stopAnimation()}}},parallel=function(t,e){var n=0,i={},r=!(e&&!1===e.stopTogether),a={start:function(e){if(n===t.length)return e&&e({finished:!0});t.forEach(function(o,s){var l=function(o){if(i[s]=!0,++n===t.length)return n=0,e&&e(o);!o.finished&&r&&a.stop()};o?o.start(l):l({finished:!0})})},stop:function(){t.forEach(function(t,e){!i[e]&&t.stop(),i[e]=!0})}};return a},exports$1={Value:AnimatedValue,Array:AnimatedArray,spring:spring,template:function(t){for(var e=arguments.length,n=new Array(e>1?e-1:0),i=1;i<e;i++)n[i-1]=arguments[i];return new AnimatedTemplate(t,n)},interpolate:function(t,e){return new AnimatedInterpolation(values,e)},createAnimatedComponent:createAnimatedComponent,inject:{ApplyAnimatedValues:ApplyAnimatedValues.inject,FlattenStyle:FlattenStyle.inject,RequestAnimationFrame:RequestAnimationFrame.inject,CancelAnimationFrame:CancelAnimationFrame.inject},ApplyAnimatedValues:ApplyAnimatedValues,AnimatedProps:AnimatedProps},isUnitlessNumber={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0};function prefixKey(t,e){return t+e.charAt(0).toUpperCase()+e.substring(1)}var prefixes=[\"Webkit\",\"ms\",\"Moz\",\"O\"];function mapStyle(t){return t}function dangerousStyleValue(t,e,n){return null==e||\"boolean\"==typeof e||\"\"===e?\"\":n||\"number\"!=typeof e||0===e||isUnitlessNumber.hasOwnProperty(t)&&isUnitlessNumber[t]?(\"\"+e).trim():e+\"px\"}function setValueForStyles(t,e){var n=t.style;for(var i in e)if(e.hasOwnProperty(i)){var r=0===i.indexOf(\"--\"),a=dangerousStyleValue(i,e[i],r);\"float\"===i&&(i=\"cssFloat\"),r?n.setProperty(i,a):n[i]=a}}function setValueForAttributes(t,e){var n;for(var i in e)\"style\"!==i&&(n=e[i],t.getAttribute(i)&&t.setAttribute(i,n))}function ApplyAnimatedValues$1(t,e){if(t.setNativeProps)t.setNativeProps(e);else{if(!t.nodeType||void 0===t.setAttribute)return!1;setValueForStyles(t,e.style),setValueForAttributes(t,e)}}Object.keys(isUnitlessNumber).forEach(function(t){prefixes.forEach(function(e){isUnitlessNumber[prefixKey(e,t)]=isUnitlessNumber[t]})}),exports$1.inject.ApplyAnimatedValues(ApplyAnimatedValues$1,mapStyle);var elements=[\"a\",\"abbr\",\"address\",\"area\",\"article\",\"aside\",\"audio\",\"b\",\"base\",\"bdi\",\"bdo\",\"big\",\"blockquote\",\"body\",\"br\",\"button\",\"canvas\",\"caption\",\"cite\",\"code\",\"col\",\"colgroup\",\"data\",\"datalist\",\"dd\",\"del\",\"details\",\"dfn\",\"dialog\",\"div\",\"dl\",\"dt\",\"em\",\"embed\",\"fieldset\",\"figcaption\",\"figure\",\"footer\",\"form\",\"h1\",\"h2\",\"h3\",\"h4\",\"h5\",\"h6\",\"head\",\"header\",\"hgroup\",\"hr\",\"html\",\"i\",\"iframe\",\"img\",\"input\",\"ins\",\"kbd\",\"keygen\",\"label\",\"legend\",\"li\",\"link\",\"main\",\"map\",\"mark\",\"marquee\",\"menu\",\"menuitem\",\"meta\",\"meter\",\"nav\",\"noscript\",\"object\",\"ol\",\"optgroup\",\"option\",\"output\",\"p\",\"param\",\"picture\",\"pre\",\"progress\",\"q\",\"rp\",\"rt\",\"ruby\",\"s\",\"samp\",\"script\",\"section\",\"select\",\"small\",\"source\",\"span\",\"strong\",\"style\",\"sub\",\"summary\",\"sup\",\"table\",\"tbody\",\"td\",\"textarea\",\"tfoot\",\"th\",\"thead\",\"time\",\"title\",\"tr\",\"track\",\"u\",\"ul\",\"var\",\"video\",\"wbr\",\"circle\",\"clipPath\",\"defs\",\"ellipse\",\"foreignObject\",\"g\",\"image\",\"line\",\"linearGradient\",\"mask\",\"path\",\"pattern\",\"polygon\",\"polyline\",\"radialGradient\",\"rect\",\"stop\",\"svg\",\"text\",\"tspan\"].reduce(function(t,e){var n;return _extends({},t,((n={})[e]=exports$1.createAnimatedComponent(e),n))},{}),exports$2=_extends({},exports$1,{elements:elements}),animated=exports$2.elements,template=exports$2.template,interpolate$1=exports$2.interpolate,config={default:{tension:170,friction:26},gentle:{tension:120,friction:14},wobbly:{tension:180,friction:12},stiff:{tension:210,friction:20},slow:{tension:280,friction:60}},Spring=function(t){function e(e){var n;return n=t.call(this)||this,_initialiseProps.call(_assertThisInitialized(n)),n.defaultAnimation=new exports$2.Value(0),n.animations={},n.update(e,!1),n}_inheritsLoose(e,t);var n=e.prototype;return n.update=function(t,e){var n=this,i=t.from,r=t.to,a=t.config,o=t.attach,s=t.immediate,l=t.reset;t.onFrame;void 0===e&&(e=!1);var u=Object.entries(_extends({},i,r)),c=this.defaultAnimation._value;this.interpolators={},this.defaultAnimation.setValue(0),this.animations=u.reduce(function(t,r,u){var p,f=r[0],h=r[1],d=!1===l&&n.animations[f]||(n.animations[f]={}),m=\"number\"==typeof h,_=!m&&Array.isArray(h),v=void 0!==i[f]?i[f]:h,g=m||_?h:1;if(m&&o){var y=o(n),A=y&&y.animations[f];A&&(g=A.animation)}if(m)d.animation=d.interpolation=d.animation||new exports$2.Value(v);else if(_)d.animation=d.interpolation=d.animation||new exports$2.Array(v);else{var x=d.interpolation&&d.interpolation._interpolation(c);d.animation=n.defaultAnimation,d.interpolation=n.defaultAnimation.interpolate({inputRange:[0,1],outputRange:[void 0!==x?x:v,h]})}return!s||!0!==s&&-1===s.indexOf(f)||d.animation.setValue(g),d.start=function(){return exports$2.spring(d.animation,_extends({toValue:g},a)).start(0===u&&n.onRest)},d.stop=function(){return d.animation.stopAnimation()},e&&d.start(),n.interpolators[f]=d.interpolation,_extends({},t,((p={})[f]=d,p))},{});var p=this.propsAnimated;this.propsAnimated=new exports$2.AnimatedProps(this.interpolators,this.callback),p&&p.__detach()},n.componentWillReceiveProps=function(t){this.update(t,!0)},n.componentDidMount=function(){Object.values(this.animations).forEach(function(t){return(0,t.start)()})},n.componentWillUnmount=function(){Object.values(this.animations).forEach(function(t){return(0,t.stop)()})},n.render=function(){var t=this.props,e=t.children,n=t.render,i=(t.from,t.to,t.config,t.native),r=_objectWithoutProperties(t,[\"children\",\"render\",\"from\",\"to\",\"config\",\"native\"]),a=i?this.interpolators:this.propsAnimated.__getValue();return n?n(_extends({},a,r,{children:e})):e(_extends({},a,r))},e}(React.PureComponent);Spring.defaultProps={from:{},to:{},config:config.default,native:!1,immediate:!1,reset:!1};var _initialiseProps=function(){var t=this;this.callback=function(){t.props.onFrame&&t.props.onFrame(t.propsAnimated.__getValue()),!t.props.native&&t.forceUpdate()},this.onRest=function(e){return e.finished&&t.props.onRest&&t.props.onRest()}},ref=function(t,e){return\"function\"==typeof t?t(e):t},Transition=function(t){function e(e){var n;n=t.call(this)||this;var i=e.children,r=e.render,a=e.keys,o=e.items,s=e.from,l=e.enter,u=(e.leave,e.update);return i=r||i,\"function\"==typeof a&&(a=o.map(a)),Array.isArray(i)||(i=[i],a=a?[a]:i),n.state={transitionKeys:a,transitions:i.map(function(t,e){var n=o?o[e]:a[e];return{children:t,key:a[e],item:n,to:ref(l,n),from:ref(s,n),update:ref(u,n)}})},n}_inheritsLoose(e,t);var n=e.prototype;return n.componentWillReceiveProps=function(t){var e=this,n=this.state,i=n.transitions,r=n.transitionKeys,a=t.children,o=t.render,s=t.keys,l=t.items,u=t.from,c=t.enter,p=t.leave,f=t.update;a=o||a,\"function\"==typeof s&&(s=l.map(s)),Array.isArray(a)||(a=[a],s=s?[s]:a);var h=new Set(s),d=new Set(r),m=s.filter(function(t){return!d.has(t)}),_=r.filter(function(t){return!h.has(t)}),v=s.filter(function(t){return d.has(t)});i=i.map(function(t){if(void 0===t.destroy){var e=s.indexOf(t.key),n=a[e];n&&(t.children=n),f&&-1!==v.indexOf(t.key)&&(t.to=ref(f,l?l[e]:s[e])||t.to)}return t}),m.length&&m.forEach(function(t){var e=s.indexOf(t),n=a[e],r=l?l[e]:s[e],o={children:n,key:s[e],item:r,to:ref(c,r),from:ref(u,r)};i=i.slice(0,e).concat([o],i.slice(e))}),_.length&&_.forEach(function(t){var n=i.find(function(e){return e.key===t});if(n){var r={destroy:!0,children:n.children,key:n.key,to:ref(p,n.item),from:ref(u,n.item),onRest:function(){return e.setState(function(t){return{transitions:t.transitions.filter(function(t){return t!==r})}})}};i=i.map(function(t){return t===n?r:t})}}),r=i.filter(function(t){return void 0===t.destroy}).map(function(t){return t.key});var g=s.map(function(t){return i.find(function(e){return e.key===t})});_.forEach(function(t){var e=i.findIndex(function(e){return e.key===t}),n=i.find(function(e){return e.key===t});n&&(g=g.slice(0,e).concat([n],g.slice(e)))}),this.setState({transitions:g,transitionKeys:r})},n.render=function(){var t=this,e=this.props,n=e.render,i=(e.from,e.enter,e.leave,e.native),r=e.config,a=(e.keys,e.items,e.onFrame),o=_extends({native:i,config:r},_objectWithoutProperties(e,[\"render\",\"from\",\"enter\",\"leave\",\"native\",\"config\",\"keys\",\"items\",\"onFrame\"]));return this.state.transitions.map(function(e){var i=e.key,r=e.item,s=e.children,l=_objectWithoutProperties(e,[\"key\",\"item\",\"children\"]);return React.createElement(Spring,_extends({key:i},l,o,{onFrame:a&&function(t){return a(r,t)},render:n&&s,children:n?t.props.children:s}))})},e}(React.PureComponent);Transition.defaultProps={from:{},enter:{},leave:{},native:!1,config:config.default};var _class,_temp,Trail=function(t){function e(){return t.apply(this,arguments)||this}return _inheritsLoose(e,t),e.prototype.render=function(){var t=this.props,e=t.children,n=t.render,i=t.from,r=t.to,a=t.native,o=t.config,s=t.keys,l=_objectWithoutProperties(t,[\"children\",\"render\",\"from\",\"to\",\"native\",\"config\",\"keys\"]),u=new Set,c=_extends({},l,{native:a,config:o,from:i,to:r});return(n||e).map(function(t,i){return React.createElement(Spring,_extends({key:s[i]},c,{attach:function(t){return function(t,e){return u.add(e),0===t?void 0:Array.from(u)[t-1]}(i,t)},render:n&&t,children:n?e:t}))})},e}(React.PureComponent);Trail.defaultProps={from:{},to:{},native:!1,config:config.default};var Parallax=function(t){function e(e){var n;return n=t.call(this,e)||this,_initialiseProps$1.call(_assertThisInitialized(n)),n.state={ready:!1},n.layers=[],n.space=0,n.current=0,n.offset=0,n.busy=!1,n}_inheritsLoose(e,t);var n=e.prototype;return n.scrollTo=function(t){var e=this.props,n=e.horizontal,i=e.config;this.scrollStop(),this.offset=t;var r=this.refs.container;this.animatedScroll=new exports$2.Value(r[n?\"scrollLeft\":\"scrollTop\"]),this.animatedScroll.addListener(function(t){var e=t.value;return r[n?\"scrollLeft\":\"scrollTop\"]=e}),exports$2.spring(this.animatedScroll,_extends({toValue:t*this.space},i)).start()},n.getChildContext=function(){return{parallax:this}},n.componentDidMount=function(){window.addEventListener(\"resize\",this.updateRaf,!1),this.update(),this.setState({ready:!0})},n.componentWillUnmount=function(){window.removeEventListener(\"resize\",this.updateRaf,!1)},n.componentDidUpdate=function(){this.update()},n.render=function(){var t,e=this.props,n=e.style,i=e.innerStyle,r=e.pages,a=e.className,o=e.scrolling,s=e.children,l=e.horizontal,u=o?\"scroll\":\"hidden\";return React.createElement(\"div\",{ref:\"container\",onScroll:this.onScroll,onWheel:o?this.scrollStop:null,onTouchStart:o?this.scrollStop:null,style:_extends({position:\"absolute\",width:\"100%\",height:\"100%\",overflow:u,overflowY:l?\"hidden\":u,overflowX:l?u:\"hidden\",WebkitOverflowScrolling:\"touch\",WebkitTransform:\"translate(0,0)\",MsTransform:\"translate(0,0)\",transform:\"translate3d(0,0,0)\"},n),className:a},this.state.ready&&React.createElement(\"div\",{ref:\"content\",style:_extends((t={position:\"absolute\"},t[l?\"height\":\"width\"]=\"100%\",t.WebkitTransform=\"translate(0,0)\",t.MsTransform=\"translate(0,0)\",t.transform=\"translate3d(0,0,0)\",t.overflow=\"hidden\",t[l?\"width\":\"height\"]=this.space*r,t),i)},s))},e}(React.PureComponent);Parallax.defaultProps={config:config.slow,scrolling:!0,horizontal:!1},Parallax.childContextTypes={parallax:PropTypes.object},Parallax.Layer=(_temp=_class=function(t){function e(e,n){var i;i=t.call(this,e,n)||this;var r=n.parallax,a=Math.floor(e.offset)*r.space,o=r.space*e.offset+a*e.speed,s=parseFloat(-r.current*e.speed+o);return i.animatedTranslate=new exports$2.Value(s),i.animatedSpace=new exports$2.Value(r.space*e.factor),i}_inheritsLoose(e,t);var n=e.prototype;return n.componentDidMount=function(){var t=this.context.parallax;t&&(t.layers=t.layers.concat(this),t.update())},n.componentWillUnmount=function(){var t=this,e=this.context.parallax;e&&(e.layers=e.layers.filter(function(e){return e!==t}),e.update())},n.setPosition=function(t,e,n){void 0===n&&(n=!1);var i=this.context.parallax.props.config,r=Math.floor(this.props.offset)*t,a=t*this.props.offset+r*this.props.speed,o=parseFloat(-e*this.props.speed+a);n?this.animatedTranslate.setValue(o):exports$2.spring(this.animatedTranslate,_extends({toValue:o},i)).start()},n.setHeight=function(t,e){void 0===e&&(e=!1);var n=this.context.parallax.props.config,i=parseFloat(t*this.props.factor);e?this.animatedSpace.setValue(i):exports$2.spring(this.animatedSpace,_extends({toValue:i},n)).start()},n.render=function(){var t,e=this.props,n=e.style,i=e.children,r=(e.offset,e.speed,e.factor,e.className),a=_objectWithoutProperties(e,[\"style\",\"children\",\"offset\",\"speed\",\"factor\",\"className\"]),o=this.context.parallax.props.horizontal,s=this.animatedTranslate.interpolate({inputRange:[0,1],outputRange:o?[\"translate3d(0px,0,0)\",\"translate3d(1px,0,0)\"]:[\"translate3d(0,0px,0)\",\"translate3d(0,1px,0)\"]});return React.createElement(animated.div,_extends({},a,{ref:\"layer\",className:r,style:_extends((t={position:\"absolute\",backgroundSize:\"auto\",backgroundRepeat:\"no-repeat\",willChange:\"transform\"},t[o?\"height\":\"width\"]=\"100%\",t[o?\"width\":\"height\"]=this.animatedSpace,t.WebkitTransform=s,t.MsTransform=s,t.transform=s,t),n)}),i)},e}(React.PureComponent),_class.contextTypes={parallax:PropTypes.object},_class.defaultProps={factor:1,offset:0,speed:0},_temp);var _initialiseProps$1=function(){var t=this;this.moveItems=function(){t.layers.forEach(function(e){return e.setPosition(t.space,t.current)}),t.busy=!1},this.scrollerRaf=function(){return requestAnimationFrame(t.moveItems)},this.onScroll=function(e){var n=t.props.horizontal;t.busy||(t.busy=!0,t.scrollerRaf(),t.current=e.target[n?\"scrollLeft\":\"scrollTop\"])},this.update=function(){var e=t.props,n=e.scrolling,i=e.horizontal;t.refs.container&&(t.space=t.refs.container[i?\"clientWidth\":\"clientHeight\"],n?t.current=t.refs.container[i?\"scrollLeft\":\"scrollTop\"]:t.refs.container[i?\"scrollLeft\":\"scrollTop\"]=t.current=t.offset*t.space,t.refs.content&&(t.refs.content.style[i?\"width\":\"height\"]=t.space*t.props.pages+\"px\"),t.layers.forEach(function(e){e.setHeight(t.space,!0),e.setPosition(t.space,t.current,!0)}))},this.updateRaf=function(){requestAnimationFrame(t.update),setTimeout(t.update,150)},this.scrollStop=function(e){return t.animatedScroll&&t.animatedScroll.stopAnimation()}};exports.Spring=Spring,exports.Transition=Transition,exports.Trail=Trail,exports.Parallax=Parallax,exports.config=config,exports.template=template,exports.animated=animated,exports.interpolate=interpolate$1;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar asap = __webpack_require__(19);\n\nfunction noop() {}\n\n// States:\n//\n// 0 - pending\n// 1 - fulfilled with _value\n// 2 - rejected with _value\n// 3 - adopted the state of another promise, _value\n//\n// once the state is no longer pending (0) it is immutable\n\n// All `_` prefixed properties will be reduced to `_{random number}`\n// at build time to obfuscate them and discourage their use.\n// We don't use symbols or Object.defineProperty to fully hide them\n// because the performance isn't good enough.\n\n\n// to avoid using try/catch inside critical functions, we\n// extract them to here.\nvar LAST_ERROR = null;\nvar IS_ERROR = {};\nfunction getThen(obj) {\n  try {\n    return obj.then;\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nfunction tryCallOne(fn, a) {\n  try {\n    return fn(a);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\nfunction tryCallTwo(fn, a, b) {\n  try {\n    fn(a, b);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nmodule.exports = Promise;\n\nfunction Promise(fn) {\n  if (typeof this !== 'object') {\n    throw new TypeError('Promises must be constructed via new');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('Promise constructor\\'s argument is not a function');\n  }\n  this._75 = 0;\n  this._83 = 0;\n  this._18 = null;\n  this._38 = null;\n  if (fn === noop) return;\n  doResolve(fn, this);\n}\nPromise._47 = null;\nPromise._71 = null;\nPromise._44 = noop;\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  if (this.constructor !== Promise) {\n    return safeThen(this, onFulfilled, onRejected);\n  }\n  var res = new Promise(noop);\n  handle(this, new Handler(onFulfilled, onRejected, res));\n  return res;\n};\n\nfunction safeThen(self, onFulfilled, onRejected) {\n  return new self.constructor(function (resolve, reject) {\n    var res = new Promise(noop);\n    res.then(resolve, reject);\n    handle(self, new Handler(onFulfilled, onRejected, res));\n  });\n}\nfunction handle(self, deferred) {\n  while (self._83 === 3) {\n    self = self._18;\n  }\n  if (Promise._47) {\n    Promise._47(self);\n  }\n  if (self._83 === 0) {\n    if (self._75 === 0) {\n      self._75 = 1;\n      self._38 = deferred;\n      return;\n    }\n    if (self._75 === 1) {\n      self._75 = 2;\n      self._38 = [self._38, deferred];\n      return;\n    }\n    self._38.push(deferred);\n    return;\n  }\n  handleResolved(self, deferred);\n}\n\nfunction handleResolved(self, deferred) {\n  asap(function() {\n    var cb = self._83 === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      if (self._83 === 1) {\n        resolve(deferred.promise, self._18);\n      } else {\n        reject(deferred.promise, self._18);\n      }\n      return;\n    }\n    var ret = tryCallOne(cb, self._18);\n    if (ret === IS_ERROR) {\n      reject(deferred.promise, LAST_ERROR);\n    } else {\n      resolve(deferred.promise, ret);\n    }\n  });\n}\nfunction resolve(self, newValue) {\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n  if (newValue === self) {\n    return reject(\n      self,\n      new TypeError('A promise cannot be resolved with itself.')\n    );\n  }\n  if (\n    newValue &&\n    (typeof newValue === 'object' || typeof newValue === 'function')\n  ) {\n    var then = getThen(newValue);\n    if (then === IS_ERROR) {\n      return reject(self, LAST_ERROR);\n    }\n    if (\n      then === self.then &&\n      newValue instanceof Promise\n    ) {\n      self._83 = 3;\n      self._18 = newValue;\n      finale(self);\n      return;\n    } else if (typeof then === 'function') {\n      doResolve(then.bind(newValue), self);\n      return;\n    }\n  }\n  self._83 = 1;\n  self._18 = newValue;\n  finale(self);\n}\n\nfunction reject(self, newValue) {\n  self._83 = 2;\n  self._18 = newValue;\n  if (Promise._71) {\n    Promise._71(self, newValue);\n  }\n  finale(self);\n}\nfunction finale(self) {\n  if (self._75 === 1) {\n    handle(self, self._38);\n    self._38 = null;\n  }\n  if (self._75 === 2) {\n    for (var i = 0; i < self._38.length; i++) {\n      handle(self, self._38[i]);\n    }\n    self._38 = null;\n  }\n}\n\nfunction Handler(onFulfilled, onRejected, promise){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, promise) {\n  var done = false;\n  var res = tryCallTwo(fn, function (value) {\n    if (done) return;\n    done = true;\n    resolve(promise, value);\n  }, function (reason) {\n    if (done) return;\n    done = true;\n    reject(promise, reason);\n  });\n  if (!done && res === IS_ERROR) {\n    done = true;\n    reject(promise, LAST_ERROR);\n  }\n}\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\n(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ')\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = options.status === undefined ? 200 : options.status\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function validateFormat(format) {};\n\nif (false) {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n\n\nvar emptyObject = {};\n\nif (false) {\n  Object.freeze(emptyObject);\n}\n\nmodule.exports = emptyObject;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports) {\n\n/*\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\nfunction normalizeColor(color) {\n  var match;\n\n  if (typeof color === 'number') {\n    if (color >>> 0 === color && color >= 0 && color <= 0xffffffff) {\n      return color;\n    }\n    return null;\n  }\n\n  // Ordered based on occurrences on Facebook codebase\n  if ((match = matchers.hex6.exec(color))) {\n    return parseInt(match[1] + 'ff', 16) >>> 0;\n  }\n\n  if (names.hasOwnProperty(color)) {\n    return names[color];\n  }\n\n  if ((match = matchers.rgb.exec(color))) {\n    return (\n        parse255(match[1]) << 24 | // r\n        parse255(match[2]) << 16 | // g\n        parse255(match[3]) << 8 | // b\n        0x000000ff // a\n      ) >>> 0;\n  }\n\n  if ((match = matchers.rgba.exec(color))) {\n    return (\n        parse255(match[1]) << 24 | // r\n        parse255(match[2]) << 16 | // g\n        parse255(match[3]) << 8 | // b\n        parse1(match[4]) // a\n      ) >>> 0;\n  }\n\n  if ((match = matchers.hex3.exec(color))) {\n    return parseInt(\n        match[1] + match[1] + // r\n        match[2] + match[2] + // g\n        match[3] + match[3] + // b\n        'ff', // a\n        16\n      ) >>> 0;\n  }\n\n  // https://drafts.csswg.org/css-color-4/#hex-notation\n  if ((match = matchers.hex8.exec(color))) {\n    return parseInt(match[1], 16) >>> 0;\n  }\n\n  if ((match = matchers.hex4.exec(color))) {\n    return parseInt(\n        match[1] + match[1] + // r\n        match[2] + match[2] + // g\n        match[3] + match[3] + // b\n        match[4] + match[4], // a\n        16\n      ) >>> 0;\n  }\n\n  if ((match = matchers.hsl.exec(color))) {\n    return (\n        hslToRgb(\n          parse360(match[1]), // h\n          parsePercentage(match[2]), // s\n          parsePercentage(match[3]) // l\n        ) |\n        0x000000ff // a\n      ) >>> 0;\n  }\n\n  if ((match = matchers.hsla.exec(color))) {\n    return (\n        hslToRgb(\n          parse360(match[1]), // h\n          parsePercentage(match[2]), // s\n          parsePercentage(match[3]) // l\n        ) |\n        parse1(match[4]) // a\n      ) >>> 0;\n  }\n\n  return null;\n}\n\nfunction hue2rgb(p, q, t) {\n  if (t < 0) {\n    t += 1;\n  }\n  if (t > 1) {\n    t -= 1;\n  }\n  if (t < 1 / 6) {\n    return p + (q - p) * 6 * t;\n  }\n  if (t < 1 / 2) {\n    return q;\n  }\n  if (t < 2 / 3) {\n    return p + (q - p) * (2 / 3 - t) * 6;\n  }\n  return p;\n}\n\nfunction hslToRgb(h, s, l) {\n  var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n  var p = 2 * l - q;\n  var r = hue2rgb(p, q, h + 1 / 3);\n  var g = hue2rgb(p, q, h);\n  var b = hue2rgb(p, q, h - 1 / 3);\n\n  return (\n    Math.round(r * 255) << 24 |\n    Math.round(g * 255) << 16 |\n    Math.round(b * 255) << 8\n  );\n}\n\n// var INTEGER = '[-+]?\\\\d+';\nvar NUMBER = '[-+]?\\\\d*\\\\.?\\\\d+';\nvar PERCENTAGE = NUMBER + '%';\n\nfunction toArray(arrayLike) {\n  return Array.prototype.slice.call(arrayLike, 0);\n}\n\nfunction call() {\n  return '\\\\(\\\\s*(' + toArray(arguments).join(')\\\\s*,\\\\s*(') + ')\\\\s*\\\\)';\n}\n\nvar matchers = {\n  rgb: new RegExp('rgb' + call(NUMBER, NUMBER, NUMBER)),\n  rgba: new RegExp('rgba' + call(NUMBER, NUMBER, NUMBER, NUMBER)),\n  hsl: new RegExp('hsl' + call(NUMBER, PERCENTAGE, PERCENTAGE)),\n  hsla: new RegExp('hsla' + call(NUMBER, PERCENTAGE, PERCENTAGE, NUMBER)),\n  hex3: /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n  hex4: /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n  hex6: /^#([0-9a-fA-F]{6})$/,\n  hex8: /^#([0-9a-fA-F]{8})$/,\n};\n\nfunction parse255(str) {\n  var int = parseInt(str, 10);\n  if (int < 0) {\n    return 0;\n  }\n  if (int > 255) {\n    return 255;\n  }\n  return int;\n}\n\nfunction parse360(str) {\n  var int = parseFloat(str);\n  return (((int % 360) + 360) % 360) / 360;\n}\n\nfunction parse1(str) {\n  var num = parseFloat(str);\n  if (num < 0) {\n    return 0;\n  }\n  if (num > 1) {\n    return 255;\n  }\n  return Math.round(num * 255);\n}\n\nfunction parsePercentage(str) {\n  // parseFloat conveniently ignores the final %\n  var int = parseFloat(str, 10);\n  if (int < 0) {\n    return 0;\n  }\n  if (int > 100) {\n    return 1;\n  }\n  return int / 100;\n}\n\nvar names = {\n  transparent: 0x00000000,\n\n  // http://www.w3.org/TR/css3-color/#svg-color\n  aliceblue: 0xf0f8ffff,\n  antiquewhite: 0xfaebd7ff,\n  aqua: 0x00ffffff,\n  aquamarine: 0x7fffd4ff,\n  azure: 0xf0ffffff,\n  beige: 0xf5f5dcff,\n  bisque: 0xffe4c4ff,\n  black: 0x000000ff,\n  blanchedalmond: 0xffebcdff,\n  blue: 0x0000ffff,\n  blueviolet: 0x8a2be2ff,\n  brown: 0xa52a2aff,\n  burlywood: 0xdeb887ff,\n  burntsienna: 0xea7e5dff,\n  cadetblue: 0x5f9ea0ff,\n  chartreuse: 0x7fff00ff,\n  chocolate: 0xd2691eff,\n  coral: 0xff7f50ff,\n  cornflowerblue: 0x6495edff,\n  cornsilk: 0xfff8dcff,\n  crimson: 0xdc143cff,\n  cyan: 0x00ffffff,\n  darkblue: 0x00008bff,\n  darkcyan: 0x008b8bff,\n  darkgoldenrod: 0xb8860bff,\n  darkgray: 0xa9a9a9ff,\n  darkgreen: 0x006400ff,\n  darkgrey: 0xa9a9a9ff,\n  darkkhaki: 0xbdb76bff,\n  darkmagenta: 0x8b008bff,\n  darkolivegreen: 0x556b2fff,\n  darkorange: 0xff8c00ff,\n  darkorchid: 0x9932ccff,\n  darkred: 0x8b0000ff,\n  darksalmon: 0xe9967aff,\n  darkseagreen: 0x8fbc8fff,\n  darkslateblue: 0x483d8bff,\n  darkslategray: 0x2f4f4fff,\n  darkslategrey: 0x2f4f4fff,\n  darkturquoise: 0x00ced1ff,\n  darkviolet: 0x9400d3ff,\n  deeppink: 0xff1493ff,\n  deepskyblue: 0x00bfffff,\n  dimgray: 0x696969ff,\n  dimgrey: 0x696969ff,\n  dodgerblue: 0x1e90ffff,\n  firebrick: 0xb22222ff,\n  floralwhite: 0xfffaf0ff,\n  forestgreen: 0x228b22ff,\n  fuchsia: 0xff00ffff,\n  gainsboro: 0xdcdcdcff,\n  ghostwhite: 0xf8f8ffff,\n  gold: 0xffd700ff,\n  goldenrod: 0xdaa520ff,\n  gray: 0x808080ff,\n  green: 0x008000ff,\n  greenyellow: 0xadff2fff,\n  grey: 0x808080ff,\n  honeydew: 0xf0fff0ff,\n  hotpink: 0xff69b4ff,\n  indianred: 0xcd5c5cff,\n  indigo: 0x4b0082ff,\n  ivory: 0xfffff0ff,\n  khaki: 0xf0e68cff,\n  lavender: 0xe6e6faff,\n  lavenderblush: 0xfff0f5ff,\n  lawngreen: 0x7cfc00ff,\n  lemonchiffon: 0xfffacdff,\n  lightblue: 0xadd8e6ff,\n  lightcoral: 0xf08080ff,\n  lightcyan: 0xe0ffffff,\n  lightgoldenrodyellow: 0xfafad2ff,\n  lightgray: 0xd3d3d3ff,\n  lightgreen: 0x90ee90ff,\n  lightgrey: 0xd3d3d3ff,\n  lightpink: 0xffb6c1ff,\n  lightsalmon: 0xffa07aff,\n  lightseagreen: 0x20b2aaff,\n  lightskyblue: 0x87cefaff,\n  lightslategray: 0x778899ff,\n  lightslategrey: 0x778899ff,\n  lightsteelblue: 0xb0c4deff,\n  lightyellow: 0xffffe0ff,\n  lime: 0x00ff00ff,\n  limegreen: 0x32cd32ff,\n  linen: 0xfaf0e6ff,\n  magenta: 0xff00ffff,\n  maroon: 0x800000ff,\n  mediumaquamarine: 0x66cdaaff,\n  mediumblue: 0x0000cdff,\n  mediumorchid: 0xba55d3ff,\n  mediumpurple: 0x9370dbff,\n  mediumseagreen: 0x3cb371ff,\n  mediumslateblue: 0x7b68eeff,\n  mediumspringgreen: 0x00fa9aff,\n  mediumturquoise: 0x48d1ccff,\n  mediumvioletred: 0xc71585ff,\n  midnightblue: 0x191970ff,\n  mintcream: 0xf5fffaff,\n  mistyrose: 0xffe4e1ff,\n  moccasin: 0xffe4b5ff,\n  navajowhite: 0xffdeadff,\n  navy: 0x000080ff,\n  oldlace: 0xfdf5e6ff,\n  olive: 0x808000ff,\n  olivedrab: 0x6b8e23ff,\n  orange: 0xffa500ff,\n  orangered: 0xff4500ff,\n  orchid: 0xda70d6ff,\n  palegoldenrod: 0xeee8aaff,\n  palegreen: 0x98fb98ff,\n  paleturquoise: 0xafeeeeff,\n  palevioletred: 0xdb7093ff,\n  papayawhip: 0xffefd5ff,\n  peachpuff: 0xffdab9ff,\n  peru: 0xcd853fff,\n  pink: 0xffc0cbff,\n  plum: 0xdda0ddff,\n  powderblue: 0xb0e0e6ff,\n  purple: 0x800080ff,\n  rebeccapurple: 0x663399ff,\n  red: 0xff0000ff,\n  rosybrown: 0xbc8f8fff,\n  royalblue: 0x4169e1ff,\n  saddlebrown: 0x8b4513ff,\n  salmon: 0xfa8072ff,\n  sandybrown: 0xf4a460ff,\n  seagreen: 0x2e8b57ff,\n  seashell: 0xfff5eeff,\n  sienna: 0xa0522dff,\n  silver: 0xc0c0c0ff,\n  skyblue: 0x87ceebff,\n  slateblue: 0x6a5acdff,\n  slategray: 0x708090ff,\n  slategrey: 0x708090ff,\n  snow: 0xfffafaff,\n  springgreen: 0x00ff7fff,\n  steelblue: 0x4682b4ff,\n  tan: 0xd2b48cff,\n  teal: 0x008080ff,\n  thistle: 0xd8bfd8ff,\n  tomato: 0xff6347ff,\n  turquoise: 0x40e0d0ff,\n  violet: 0xee82eeff,\n  wheat: 0xf5deb3ff,\n  white: 0xffffffff,\n  whitesmoke: 0xf5f5f5ff,\n  yellow: 0xffff00ff,\n  yellowgreen: 0x9acd32ff,\n};\n\nfunction rgba(colorInt) {\n  var r = Math.round(((colorInt & 0xff000000) >>> 24));\n  var g = Math.round(((colorInt & 0x00ff0000) >>> 16));\n  var b = Math.round(((colorInt & 0x0000ff00) >>> 8));\n  var a = ((colorInt & 0x000000ff) >>> 0) / 255;\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a,\n  };\n};\n\nnormalizeColor.rgba = rgba;\n\nmodule.exports = normalizeColor;\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (false) {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = __webpack_require__(31)();\n}\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports) {\n\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar util = __webpack_require__(14);\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar contains = function (obj, key) {\r\n    return Object.prototype.hasOwnProperty.call(obj, key);\r\n};\r\nvar DEFAULT_ENTRY_NAME = '[DEFAULT]';\r\n// An array to capture listeners before the true auth functions\r\n// exist\r\nvar tokenListeners = [];\r\n/**\r\n * Global context object for a collection of services using\r\n * a shared authentication state.\r\n */\r\nvar FirebaseAppImpl = /** @class */ (function () {\r\n    function FirebaseAppImpl(options, config, firebase_) {\r\n        this.firebase_ = firebase_;\r\n        this.isDeleted_ = false;\r\n        this.services_ = {};\r\n        this.name_ = config.name;\r\n        this._automaticDataCollectionEnabled =\r\n            config.automaticDataCollectionEnabled || false;\r\n        this.options_ = util.deepCopy(options);\r\n        this.INTERNAL = {\r\n            getUid: function () { return null; },\r\n            getToken: function () { return Promise.resolve(null); },\r\n            addAuthTokenListener: function (callback) {\r\n                tokenListeners.push(callback);\r\n                // Make sure callback is called, asynchronously, in the absence of the auth module\r\n                setTimeout(function () { return callback(null); }, 0);\r\n            },\r\n            removeAuthTokenListener: function (callback) {\r\n                tokenListeners = tokenListeners.filter(function (listener) { return listener !== callback; });\r\n            }\r\n        };\r\n    }\r\n    Object.defineProperty(FirebaseAppImpl.prototype, \"automaticDataCollectionEnabled\", {\r\n        get: function () {\r\n            this.checkDestroyed_();\r\n            return this._automaticDataCollectionEnabled;\r\n        },\r\n        set: function (val) {\r\n            this.checkDestroyed_();\r\n            this._automaticDataCollectionEnabled = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseAppImpl.prototype, \"name\", {\r\n        get: function () {\r\n            this.checkDestroyed_();\r\n            return this.name_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseAppImpl.prototype, \"options\", {\r\n        get: function () {\r\n            this.checkDestroyed_();\r\n            return this.options_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FirebaseAppImpl.prototype.delete = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            _this.checkDestroyed_();\r\n            resolve();\r\n        })\r\n            .then(function () {\r\n            _this.firebase_.INTERNAL.removeApp(_this.name_);\r\n            var services = [];\r\n            Object.keys(_this.services_).forEach(function (serviceKey) {\r\n                Object.keys(_this.services_[serviceKey]).forEach(function (instanceKey) {\r\n                    services.push(_this.services_[serviceKey][instanceKey]);\r\n                });\r\n            });\r\n            return Promise.all(services.map(function (service) {\r\n                return service.INTERNAL.delete();\r\n            }));\r\n        })\r\n            .then(function () {\r\n            _this.isDeleted_ = true;\r\n            _this.services_ = {};\r\n        });\r\n    };\r\n    /**\r\n     * Return a service instance associated with this app (creating it\r\n     * on demand), identified by the passed instanceIdentifier.\r\n     *\r\n     * NOTE: Currently storage is the only one that is leveraging this\r\n     * functionality. They invoke it by calling:\r\n     *\r\n     * ```javascript\r\n     * firebase.app().storage('STORAGE BUCKET ID')\r\n     * ```\r\n     *\r\n     * The service name is passed to this already\r\n     * @internal\r\n     */\r\n    FirebaseAppImpl.prototype._getService = function (name, instanceIdentifier) {\r\n        if (instanceIdentifier === void 0) { instanceIdentifier = DEFAULT_ENTRY_NAME; }\r\n        this.checkDestroyed_();\r\n        if (!this.services_[name]) {\r\n            this.services_[name] = {};\r\n        }\r\n        if (!this.services_[name][instanceIdentifier]) {\r\n            /**\r\n             * If a custom instance has been defined (i.e. not '[DEFAULT]')\r\n             * then we will pass that instance on, otherwise we pass `null`\r\n             */\r\n            var instanceSpecifier = instanceIdentifier !== DEFAULT_ENTRY_NAME\r\n                ? instanceIdentifier\r\n                : undefined;\r\n            var service = this.firebase_.INTERNAL.factories[name](this, this.extendApp.bind(this), instanceSpecifier);\r\n            this.services_[name][instanceIdentifier] = service;\r\n        }\r\n        return this.services_[name][instanceIdentifier];\r\n    };\r\n    /**\r\n     * Callback function used to extend an App instance at the time\r\n     * of service instance creation.\r\n     */\r\n    FirebaseAppImpl.prototype.extendApp = function (props) {\r\n        var _this = this;\r\n        // Copy the object onto the FirebaseAppImpl prototype\r\n        util.deepExtend(this, props);\r\n        /**\r\n         * If the app has overwritten the addAuthTokenListener stub, forward\r\n         * the active token listeners on to the true fxn.\r\n         *\r\n         * TODO: This function is required due to our current module\r\n         * structure. Once we are able to rely strictly upon a single module\r\n         * implementation, this code should be refactored and Auth should\r\n         * provide these stubs and the upgrade logic\r\n         */\r\n        if (props.INTERNAL && props.INTERNAL.addAuthTokenListener) {\r\n            tokenListeners.forEach(function (listener) {\r\n                _this.INTERNAL.addAuthTokenListener(listener);\r\n            });\r\n            tokenListeners = [];\r\n        }\r\n    };\r\n    /**\r\n     * This function will throw an Error if the App has already been deleted -\r\n     * use before performing API actions on the App.\r\n     */\r\n    FirebaseAppImpl.prototype.checkDestroyed_ = function () {\r\n        if (this.isDeleted_) {\r\n            error('app-deleted', { name: this.name_ });\r\n        }\r\n    };\r\n    return FirebaseAppImpl;\r\n}());\r\n// Prevent dead-code elimination of these methods w/o invalid property\r\n// copying.\r\n(FirebaseAppImpl.prototype.name && FirebaseAppImpl.prototype.options) ||\r\n    FirebaseAppImpl.prototype.delete ||\r\n    console.log('dc');\r\n/**\r\n * Return a firebase namespace object.\r\n *\r\n * In production, this will be called exactly once and the result\r\n * assigned to the 'firebase' global.  It may be called multiple times\r\n * in unit tests.\r\n */\r\nfunction createFirebaseNamespace() {\r\n    var apps_ = {};\r\n    var factories = {};\r\n    var appHooks = {};\r\n    // A namespace is a plain JavaScript Object.\r\n    var namespace = {\r\n        // Hack to prevent Babel from modifying the object returned\r\n        // as the firebase namespace.\r\n        __esModule: true,\r\n        initializeApp: initializeApp,\r\n        app: app,\r\n        apps: null,\r\n        Promise: Promise,\r\n        SDK_VERSION: '5.0.4',\r\n        INTERNAL: {\r\n            registerService: registerService,\r\n            createFirebaseNamespace: createFirebaseNamespace,\r\n            extendNamespace: extendNamespace,\r\n            createSubscribe: util.createSubscribe,\r\n            ErrorFactory: util.ErrorFactory,\r\n            removeApp: removeApp,\r\n            factories: factories,\r\n            useAsService: useAsService,\r\n            Promise: Promise,\r\n            deepExtend: util.deepExtend\r\n        }\r\n    };\r\n    // Inject a circular default export to allow Babel users who were previously\r\n    // using:\r\n    //\r\n    //   import firebase from 'firebase';\r\n    //   which becomes: var firebase = require('firebase').default;\r\n    //\r\n    // instead of\r\n    //\r\n    //   import * as firebase from 'firebase';\r\n    //   which becomes: var firebase = require('firebase');\r\n    util.patchProperty(namespace, 'default', namespace);\r\n    // firebase.apps is a read-only getter.\r\n    Object.defineProperty(namespace, 'apps', {\r\n        get: getApps\r\n    });\r\n    /**\r\n     * Called by App.delete() - but before any services associated with the App\r\n     * are deleted.\r\n     */\r\n    function removeApp(name) {\r\n        var app = apps_[name];\r\n        callAppHooks(app, 'delete');\r\n        delete apps_[name];\r\n    }\r\n    /**\r\n     * Get the App object for a given name (or DEFAULT).\r\n     */\r\n    function app(name) {\r\n        name = name || DEFAULT_ENTRY_NAME;\r\n        if (!contains(apps_, name)) {\r\n            error('no-app', { name: name });\r\n        }\r\n        return apps_[name];\r\n    }\r\n    util.patchProperty(app, 'App', FirebaseAppImpl);\r\n    function initializeApp(options, rawConfig) {\r\n        if (rawConfig === void 0) { rawConfig = {}; }\r\n        if (typeof rawConfig !== 'object' || rawConfig === null) {\r\n            var name_1 = rawConfig;\r\n            rawConfig = { name: name_1 };\r\n        }\r\n        var config = rawConfig;\r\n        if (config.name === undefined) {\r\n            config.name = DEFAULT_ENTRY_NAME;\r\n        }\r\n        var name = config.name;\r\n        if (typeof name !== 'string' || !name) {\r\n            error('bad-app-name', { name: name + '' });\r\n        }\r\n        if (contains(apps_, name)) {\r\n            error('duplicate-app', { name: name });\r\n        }\r\n        var app = new FirebaseAppImpl(options, config, namespace);\r\n        apps_[name] = app;\r\n        callAppHooks(app, 'create');\r\n        return app;\r\n    }\r\n    /*\r\n     * Return an array of all the non-deleted FirebaseApps.\r\n     */\r\n    function getApps() {\r\n        // Make a copy so caller cannot mutate the apps list.\r\n        return Object.keys(apps_).map(function (name) { return apps_[name]; });\r\n    }\r\n    /*\r\n     * Register a Firebase Service.\r\n     *\r\n     * firebase.INTERNAL.registerService()\r\n     *\r\n     * TODO: Implement serviceProperties.\r\n     */\r\n    function registerService(name, createService, serviceProperties, appHook, allowMultipleInstances) {\r\n        // Cannot re-register a service that already exists\r\n        if (factories[name]) {\r\n            error('duplicate-service', { name: name });\r\n        }\r\n        // Capture the service factory for later service instantiation\r\n        factories[name] = createService;\r\n        // Capture the appHook, if passed\r\n        if (appHook) {\r\n            appHooks[name] = appHook;\r\n            // Run the **new** app hook on all existing apps\r\n            getApps().forEach(function (app) {\r\n                appHook('create', app);\r\n            });\r\n        }\r\n        // The Service namespace is an accessor function ...\r\n        var serviceNamespace = function (appArg) {\r\n            if (appArg === void 0) { appArg = app(); }\r\n            if (typeof appArg[name] !== 'function') {\r\n                // Invalid argument.\r\n                // This happens in the following case: firebase.storage('gs:/')\r\n                error('invalid-app-argument', { name: name });\r\n            }\r\n            // Forward service instance lookup to the FirebaseApp.\r\n            return appArg[name]();\r\n        };\r\n        // ... and a container for service-level properties.\r\n        if (serviceProperties !== undefined) {\r\n            util.deepExtend(serviceNamespace, serviceProperties);\r\n        }\r\n        // Monkey-patch the serviceNamespace onto the firebase namespace\r\n        namespace[name] = serviceNamespace;\r\n        // Patch the FirebaseAppImpl prototype\r\n        FirebaseAppImpl.prototype[name] = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            var serviceFxn = this._getService.bind(this, name);\r\n            return serviceFxn.apply(this, allowMultipleInstances ? args : []);\r\n        };\r\n        return serviceNamespace;\r\n    }\r\n    /**\r\n     * Patch the top-level firebase namespace with additional properties.\r\n     *\r\n     * firebase.INTERNAL.extendNamespace()\r\n     */\r\n    function extendNamespace(props) {\r\n        util.deepExtend(namespace, props);\r\n    }\r\n    function callAppHooks(app, eventName) {\r\n        Object.keys(factories).forEach(function (serviceName) {\r\n            // Ignore virtual services\r\n            var factoryName = useAsService(app, serviceName);\r\n            if (factoryName === null) {\r\n                return;\r\n            }\r\n            if (appHooks[factoryName]) {\r\n                appHooks[factoryName](eventName, app);\r\n            }\r\n        });\r\n    }\r\n    // Map the requested service to a registered service name\r\n    // (used to map auth to serverAuth service when needed).\r\n    function useAsService(app, name) {\r\n        if (name === 'serverAuth') {\r\n            return null;\r\n        }\r\n        var useService = name;\r\n        var options = app.options;\r\n        return useService;\r\n    }\r\n    return namespace;\r\n}\r\nfunction error(code, args) {\r\n    throw appErrors.create(code, args);\r\n}\r\n// TypeScript does not support non-string indexes!\r\n// let errors: {[code: AppError: string} = {\r\nvar errors = {\r\n    'no-app': \"No Firebase App '{$name}' has been created - \" +\r\n        'call Firebase App.initializeApp()',\r\n    'bad-app-name': \"Illegal App name: '{$name}\",\r\n    'duplicate-app': \"Firebase App named '{$name}' already exists\",\r\n    'app-deleted': \"Firebase App named '{$name}' already deleted\",\r\n    'duplicate-service': \"Firebase service named '{$name}' already registered\",\r\n    'sa-not-supported': 'Initializing the Firebase SDK with a service ' +\r\n        'account is only allowed in a Node.js environment. On client ' +\r\n        'devices, you should instead initialize the SDK with an api key and ' +\r\n        'auth domain',\r\n    'invalid-app-argument': 'firebase.{$name}() takes either no argument or a ' +\r\n        'Firebase App instance.'\r\n};\r\nvar appErrors = new util.ErrorFactory('app', 'Firebase', errors);\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar firebase = createFirebaseNamespace();\n\nexports.firebase = firebase;\nexports.default = firebase;\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar tslib_1 = __webpack_require__(15);\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\r\n */\r\nvar CONSTANTS = {\r\n    /**\r\n     * @define {boolean} Whether this is the client Node.js SDK.\r\n     */\r\n    NODE_CLIENT: false,\r\n    /**\r\n     * @define {boolean} Whether this is the Admin Node.js SDK.\r\n     */\r\n    NODE_ADMIN: false,\r\n    /**\r\n     * Firebase SDK Version\r\n     */\r\n    SDK_VERSION: '${JSCORE_VERSION}'\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Throws an error if the provided assertion is falsy\r\n * @param {*} assertion The assertion to be tested for falsiness\r\n * @param {!string} message The message to display if the check fails\r\n */\r\nvar assert = function (assertion, message) {\r\n    if (!assertion) {\r\n        throw assertionError(message);\r\n    }\r\n};\r\n/**\r\n * Returns an Error object suitable for throwing.\r\n * @param {string} message\r\n * @return {!Error}\r\n */\r\nvar assertionError = function (message) {\r\n    return new Error('Firebase Database (' +\r\n        CONSTANTS.SDK_VERSION +\r\n        ') INTERNAL ASSERT FAILED: ' +\r\n        message);\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar stringToByteArray = function (str) {\r\n    // TODO(user): Use native implementations if/when available\r\n    var out = [], p = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n        var c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if ((c & 0xfc00) == 0xd800 &&\r\n            i + 1 < str.length &&\r\n            (str.charCodeAt(i + 1) & 0xfc00) == 0xdc00) {\r\n            // Surrogate Pair\r\n            c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Turns an array of numbers into the string given by the concatenation of the\r\n * characters to which the numbers correspond.\r\n * @param {Array<number>} bytes Array of numbers representing characters.\r\n * @return {string} Stringification of the array.\r\n */\r\nvar byteArrayToString = function (bytes) {\r\n    // TODO(user): Use native implementations if/when available\r\n    var out = [], pos = 0, c = 0;\r\n    while (pos < bytes.length) {\r\n        var c1 = bytes[pos++];\r\n        if (c1 < 128) {\r\n            out[c++] = String.fromCharCode(c1);\r\n        }\r\n        else if (c1 > 191 && c1 < 224) {\r\n            var c2 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\r\n        }\r\n        else if (c1 > 239 && c1 < 365) {\r\n            // Surrogate Pair\r\n            var c2 = bytes[pos++];\r\n            var c3 = bytes[pos++];\r\n            var c4 = bytes[pos++];\r\n            var u = (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\r\n                0x10000;\r\n            out[c++] = String.fromCharCode(0xd800 + (u >> 10));\r\n            out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\r\n        }\r\n        else {\r\n            var c2 = bytes[pos++];\r\n            var c3 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\r\n        }\r\n    }\r\n    return out.join('');\r\n};\r\n// Static lookup maps, lazily populated by init_()\r\nvar base64 = {\r\n    /**\r\n     * Maps bytes to characters.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    byteToCharMap_: null,\r\n    /**\r\n     * Maps characters to bytes.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    charToByteMap_: null,\r\n    /**\r\n     * Maps bytes to websafe characters.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    byteToCharMapWebSafe_: null,\r\n    /**\r\n     * Maps websafe characters to bytes.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    charToByteMapWebSafe_: null,\r\n    /**\r\n     * Our default alphabet, shared between\r\n     * ENCODED_VALS and ENCODED_VALS_WEBSAFE\r\n     * @type {string}\r\n     */\r\n    ENCODED_VALS_BASE: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\r\n    /**\r\n     * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\r\n     * @type {string}\r\n     */\r\n    get ENCODED_VALS() {\r\n        return this.ENCODED_VALS_BASE + '+/=';\r\n    },\r\n    /**\r\n     * Our websafe alphabet.\r\n     * @type {string}\r\n     */\r\n    get ENCODED_VALS_WEBSAFE() {\r\n        return this.ENCODED_VALS_BASE + '-_.';\r\n    },\r\n    /**\r\n     * Whether this browser supports the atob and btoa functions. This extension\r\n     * started at Mozilla but is now implemented by many browsers. We use the\r\n     * ASSUME_* variables to avoid pulling in the full useragent detection library\r\n     * but still allowing the standard per-browser compilations.\r\n     *\r\n     * @type {boolean}\r\n     */\r\n    HAS_NATIVE_SUPPORT: typeof atob === 'function',\r\n    /**\r\n     * Base64-encode an array of bytes.\r\n     *\r\n     * @param {Array<number>|Uint8Array} input An array of bytes (numbers with\r\n     *     value in [0, 255]) to encode.\r\n     * @param {boolean=} opt_webSafe Boolean indicating we should use the\r\n     *     alternative alphabet.\r\n     * @return {string} The base64 encoded string.\r\n     */\r\n    encodeByteArray: function (input, opt_webSafe) {\r\n        if (!Array.isArray(input)) {\r\n            throw Error('encodeByteArray takes an array as a parameter');\r\n        }\r\n        this.init_();\r\n        var byteToCharMap = opt_webSafe\r\n            ? this.byteToCharMapWebSafe_\r\n            : this.byteToCharMap_;\r\n        var output = [];\r\n        for (var i = 0; i < input.length; i += 3) {\r\n            var byte1 = input[i];\r\n            var haveByte2 = i + 1 < input.length;\r\n            var byte2 = haveByte2 ? input[i + 1] : 0;\r\n            var haveByte3 = i + 2 < input.length;\r\n            var byte3 = haveByte3 ? input[i + 2] : 0;\r\n            var outByte1 = byte1 >> 2;\r\n            var outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\r\n            var outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\r\n            var outByte4 = byte3 & 0x3f;\r\n            if (!haveByte3) {\r\n                outByte4 = 64;\r\n                if (!haveByte2) {\r\n                    outByte3 = 64;\r\n                }\r\n            }\r\n            output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);\r\n        }\r\n        return output.join('');\r\n    },\r\n    /**\r\n     * Base64-encode a string.\r\n     *\r\n     * @param {string} input A string to encode.\r\n     * @param {boolean=} opt_webSafe If true, we should use the\r\n     *     alternative alphabet.\r\n     * @return {string} The base64 encoded string.\r\n     */\r\n    encodeString: function (input, opt_webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !opt_webSafe) {\r\n            return btoa(input);\r\n        }\r\n        return this.encodeByteArray(stringToByteArray(input), opt_webSafe);\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * @param {string} input to decode.\r\n     * @param {boolean=} opt_webSafe True if we should use the\r\n     *     alternative alphabet.\r\n     * @return {string} string representing the decoded value.\r\n     */\r\n    decodeString: function (input, opt_webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !opt_webSafe) {\r\n            return atob(input);\r\n        }\r\n        return byteArrayToString(this.decodeStringToByteArray(input, opt_webSafe));\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * In base-64 decoding, groups of four characters are converted into three\r\n     * bytes.  If the encoder did not apply padding, the input length may not\r\n     * be a multiple of 4.\r\n     *\r\n     * In this case, the last group will have fewer than 4 characters, and\r\n     * padding will be inferred.  If the group has one or two characters, it decodes\r\n     * to one byte.  If the group has three characters, it decodes to two bytes.\r\n     *\r\n     * @param {string} input Input to decode.\r\n     * @param {boolean=} opt_webSafe True if we should use the web-safe alphabet.\r\n     * @return {!Array<number>} bytes representing the decoded value.\r\n     */\r\n    decodeStringToByteArray: function (input, opt_webSafe) {\r\n        this.init_();\r\n        var charToByteMap = opt_webSafe\r\n            ? this.charToByteMapWebSafe_\r\n            : this.charToByteMap_;\r\n        var output = [];\r\n        for (var i = 0; i < input.length;) {\r\n            var byte1 = charToByteMap[input.charAt(i++)];\r\n            var haveByte2 = i < input.length;\r\n            var byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\r\n            ++i;\r\n            var haveByte3 = i < input.length;\r\n            var byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            var haveByte4 = i < input.length;\r\n            var byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\r\n                throw Error();\r\n            }\r\n            var outByte1 = (byte1 << 2) | (byte2 >> 4);\r\n            output.push(outByte1);\r\n            if (byte3 != 64) {\r\n                var outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\r\n                output.push(outByte2);\r\n                if (byte4 != 64) {\r\n                    var outByte3 = ((byte3 << 6) & 0xc0) | byte4;\r\n                    output.push(outByte3);\r\n                }\r\n            }\r\n        }\r\n        return output;\r\n    },\r\n    /**\r\n     * Lazy static initialization function. Called before\r\n     * accessing any of the static map variables.\r\n     * @private\r\n     */\r\n    init_: function () {\r\n        if (!this.byteToCharMap_) {\r\n            this.byteToCharMap_ = {};\r\n            this.charToByteMap_ = {};\r\n            this.byteToCharMapWebSafe_ = {};\r\n            this.charToByteMapWebSafe_ = {};\r\n            // We want quick mappings back and forth, so we precompute two maps.\r\n            for (var i = 0; i < this.ENCODED_VALS.length; i++) {\r\n                this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\r\n                this.charToByteMap_[this.byteToCharMap_[i]] = i;\r\n                this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\r\n                this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\r\n                // Be forgiving when decoding and correctly decode both encodings.\r\n                if (i >= this.ENCODED_VALS_BASE.length) {\r\n                    this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\r\n                    this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n/**\r\n * URL-safe base64 encoding\r\n * @param {!string} str\r\n * @return {!string}\r\n */\r\nvar base64Encode = function (str) {\r\n    var utf8Bytes = stringToByteArray(str);\r\n    return base64.encodeByteArray(utf8Bytes, true);\r\n};\r\n/**\r\n * URL-safe base64 decoding\r\n *\r\n * NOTE: DO NOT use the global atob() function - it does NOT support the\r\n * base64Url variant encoding.\r\n *\r\n * @param {string} str To be decoded\r\n * @return {?string} Decoded result, if possible\r\n */\r\nvar base64Decode = function (str) {\r\n    try {\r\n        return base64.decodeString(str, true);\r\n    }\r\n    catch (e) {\r\n        console.error('base64Decode failed: ', e);\r\n    }\r\n    return null;\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Do a deep-copy of basic JavaScript Objects or Arrays.\r\n */\r\nfunction deepCopy(value) {\r\n    return deepExtend(undefined, value);\r\n}\r\n/**\r\n * Copy properties from source to target (recursively allows extension\r\n * of Objects and Arrays).  Scalar values in the target are over-written.\r\n * If target is undefined, an object of the appropriate type will be created\r\n * (and returned).\r\n *\r\n * We recursively copy all child properties of plain Objects in the source- so\r\n * that namespace- like dictionaries are merged.\r\n *\r\n * Note that the target can be a function, in which case the properties in\r\n * the source Object are copied onto it as static properties of the Function.\r\n */\r\nfunction deepExtend(target, source) {\r\n    if (!(source instanceof Object)) {\r\n        return source;\r\n    }\r\n    switch (source.constructor) {\r\n        case Date:\r\n            // Treat Dates like scalars; if the target date object had any child\r\n            // properties - they will be lost!\r\n            var dateValue = source;\r\n            return new Date(dateValue.getTime());\r\n        case Object:\r\n            if (target === undefined) {\r\n                target = {};\r\n            }\r\n            break;\r\n        case Array:\r\n            // Always copy the array source and overwrite the target.\r\n            target = [];\r\n            break;\r\n        default:\r\n            // Not a plain Object - treat it as a scalar.\r\n            return source;\r\n    }\r\n    for (var prop in source) {\r\n        if (!source.hasOwnProperty(prop)) {\r\n            continue;\r\n        }\r\n        target[prop] = deepExtend(target[prop], source[prop]);\r\n    }\r\n    return target;\r\n}\r\n// TODO: Really needed (for JSCompiler type checking)?\r\nfunction patchProperty(obj, prop, value) {\r\n    obj[prop] = value;\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Deferred = /** @class */ (function () {\r\n    function Deferred() {\r\n        var _this = this;\r\n        this.promise = new Promise(function (resolve, reject) {\r\n            _this.resolve = resolve;\r\n            _this.reject = reject;\r\n        });\r\n    }\r\n    /**\r\n     * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\r\n     * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\r\n     * and returns a node-style callback which will resolve or reject the Deferred's promise.\r\n     * @param {((?function(?(Error)): (?|undefined))| (?function(?(Error),?=): (?|undefined)))=} callback\r\n     * @return {!function(?(Error), ?=)}\r\n     */\r\n    Deferred.prototype.wrapCallback = function (callback) {\r\n        var _this = this;\r\n        return function (error, value) {\r\n            if (error) {\r\n                _this.reject(error);\r\n            }\r\n            else {\r\n                _this.resolve(value);\r\n            }\r\n            if (typeof callback === 'function') {\r\n                // Attaching noop handler just in case developer wasn't expecting\r\n                // promises\r\n                _this.promise.catch(function () { });\r\n                // Some of our callbacks don't expect a value and our own tests\r\n                // assert that the parameter length is 1\r\n                if (callback.length === 1) {\r\n                    callback(error);\r\n                }\r\n                else {\r\n                    callback(error, value);\r\n                }\r\n            }\r\n        };\r\n    };\r\n    return Deferred;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns navigator.userAgent string or '' if it's not defined.\r\n * @return {string} user agent string\r\n */\r\nvar getUA = function () {\r\n    if (typeof navigator !== 'undefined' &&\r\n        typeof navigator['userAgent'] === 'string') {\r\n        return navigator['userAgent'];\r\n    }\r\n    else {\r\n        return '';\r\n    }\r\n};\r\n/**\r\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\r\n *\r\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap in the Ripple emulator) nor\r\n * Cordova `onDeviceReady`, which would normally wait for a callback.\r\n *\r\n * @return {boolean} isMobileCordova\r\n */\r\nvar isMobileCordova = function () {\r\n    return (typeof window !== 'undefined' &&\r\n        !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\r\n        /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA()));\r\n};\r\n/**\r\n * Detect React Native.\r\n *\r\n * @return {boolean} True if ReactNative environment is detected.\r\n */\r\nvar isReactNative = function () {\r\n    return (typeof navigator === 'object' && navigator['product'] === 'ReactNative');\r\n};\r\n/**\r\n * Detect Node.js.\r\n *\r\n * @return {boolean} True if Node.js environment is detected.\r\n */\r\nvar isNodeSdk = function () {\r\n    return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\r\n};\n\nvar ERROR_NAME = 'FirebaseError';\r\nvar captureStackTrace = Error\r\n    .captureStackTrace;\r\n// Export for faking in tests\r\nfunction patchCapture(captureFake) {\r\n    var result = captureStackTrace;\r\n    captureStackTrace = captureFake;\r\n    return result;\r\n}\r\nvar FirebaseError = /** @class */ (function () {\r\n    function FirebaseError(code, message) {\r\n        this.code = code;\r\n        this.message = message;\r\n        // We want the stack value, if implemented by Error\r\n        if (captureStackTrace) {\r\n            // Patches this.stack, omitted calls above ErrorFactory#create\r\n            captureStackTrace(this, ErrorFactory.prototype.create);\r\n        }\r\n        else {\r\n            try {\r\n                // In case of IE11, stack will be set only after error is raised.\r\n                // https://docs.microsoft.com/en-us/scripting/javascript/reference/stack-property-error-javascript\r\n                throw Error.apply(this, arguments);\r\n            }\r\n            catch (err) {\r\n                this.name = ERROR_NAME;\r\n                // Make non-enumerable getter for the property.\r\n                Object.defineProperty(this, 'stack', {\r\n                    get: function () {\r\n                        return err.stack;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n    return FirebaseError;\r\n}());\r\n// Back-door inheritance\r\nFirebaseError.prototype = Object.create(Error.prototype);\r\nFirebaseError.prototype.constructor = FirebaseError;\r\nFirebaseError.prototype.name = ERROR_NAME;\r\nvar ErrorFactory = /** @class */ (function () {\r\n    function ErrorFactory(service, serviceName, errors) {\r\n        this.service = service;\r\n        this.serviceName = serviceName;\r\n        this.errors = errors;\r\n        // Matches {$name}, by default.\r\n        this.pattern = /\\{\\$([^}]+)}/g;\r\n        // empty\r\n    }\r\n    ErrorFactory.prototype.create = function (code, data) {\r\n        if (data === undefined) {\r\n            data = {};\r\n        }\r\n        var template = this.errors[code];\r\n        var fullCode = this.service + '/' + code;\r\n        var message;\r\n        if (template === undefined) {\r\n            message = 'Error';\r\n        }\r\n        else {\r\n            message = template.replace(this.pattern, function (match, key) {\r\n                var value = data[key];\r\n                return value !== undefined ? value.toString() : '<' + key + '?>';\r\n            });\r\n        }\r\n        // Service: Error message (service/code).\r\n        message = this.serviceName + ': ' + message + ' (' + fullCode + ').';\r\n        var err = new FirebaseError(fullCode, message);\r\n        // Populate the Error object with message parts for programmatic\r\n        // accesses (e.g., e.file).\r\n        for (var prop in data) {\r\n            if (!data.hasOwnProperty(prop) || prop.slice(-1) === '_') {\r\n                continue;\r\n            }\r\n            err[prop] = data[prop];\r\n        }\r\n        return err;\r\n    };\r\n    return ErrorFactory;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Evaluates a JSON string into a javascript object.\r\n *\r\n * @param {string} str A string containing JSON.\r\n * @return {*} The javascript object representing the specified JSON.\r\n */\r\nfunction jsonEval(str) {\r\n    return JSON.parse(str);\r\n}\r\n/**\r\n * Returns JSON representing a javascript object.\r\n * @param {*} data Javascript object to be stringified.\r\n * @return {string} The JSON contents of the object.\r\n */\r\nfunction stringify(data) {\r\n    return JSON.stringify(data);\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Decodes a Firebase auth. token into constituent parts.\r\n *\r\n * Notes:\r\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {{header: *, claims: *, data: *, signature: string}}\r\n */\r\nvar decode = function (token) {\r\n    var header = {}, claims = {}, data = {}, signature = '';\r\n    try {\r\n        var parts = token.split('.');\r\n        header = jsonEval(base64Decode(parts[0]) || '');\r\n        claims = jsonEval(base64Decode(parts[1]) || '');\r\n        signature = parts[2];\r\n        data = claims['d'] || {};\r\n        delete claims['d'];\r\n    }\r\n    catch (e) { }\r\n    return {\r\n        header: header,\r\n        claims: claims,\r\n        data: data,\r\n        signature: signature\r\n    };\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\r\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {boolean}\r\n */\r\nvar isValidTimestamp = function (token) {\r\n    var claims = decode(token).claims, now = Math.floor(new Date().getTime() / 1000), validSince, validUntil;\r\n    if (typeof claims === 'object') {\r\n        if (claims.hasOwnProperty('nbf')) {\r\n            validSince = claims['nbf'];\r\n        }\r\n        else if (claims.hasOwnProperty('iat')) {\r\n            validSince = claims['iat'];\r\n        }\r\n        if (claims.hasOwnProperty('exp')) {\r\n            validUntil = claims['exp'];\r\n        }\r\n        else {\r\n            // token will expire after 24h by default\r\n            validUntil = validSince + 86400;\r\n        }\r\n    }\r\n    return (now && validSince && validUntil && now >= validSince && now <= validUntil);\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\r\n *\r\n * Notes:\r\n * - May return null if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {?number}\r\n */\r\nvar issuedAtTime = function (token) {\r\n    var claims = decode(token).claims;\r\n    if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\r\n        return claims['iat'];\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time and non-empty\r\n * signature.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {boolean}\r\n */\r\nvar isValidFormat = function (token) {\r\n    var decoded = decode(token), claims = decoded.claims;\r\n    return (!!decoded.signature &&\r\n        !!claims &&\r\n        typeof claims === 'object' &&\r\n        claims.hasOwnProperty('iat'));\r\n};\r\n/**\r\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {boolean}\r\n */\r\nvar isAdmin = function (token) {\r\n    var claims = decode(token).claims;\r\n    return typeof claims === 'object' && claims['admin'] === true;\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// See http://www.devthought.com/2012/01/18/an-object-is-not-a-hash/\r\nvar contains = function (obj, key) {\r\n    return Object.prototype.hasOwnProperty.call(obj, key);\r\n};\r\nvar safeGet = function (obj, key) {\r\n    if (Object.prototype.hasOwnProperty.call(obj, key))\r\n        return obj[key];\r\n    // else return undefined.\r\n};\r\n/**\r\n * Enumerates the keys/values in an object, excluding keys defined on the prototype.\r\n *\r\n * @param {?Object.<K,V>} obj Object to enumerate.\r\n * @param {!function(K, V)} fn Function to call for each key and value.\r\n * @template K,V\r\n */\r\nvar forEach = function (obj, fn) {\r\n    for (var key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            fn(key, obj[key]);\r\n        }\r\n    }\r\n};\r\n/**\r\n * Copies all the (own) properties from one object to another.\r\n * @param {!Object} objTo\r\n * @param {!Object} objFrom\r\n * @return {!Object} objTo\r\n */\r\nvar extend = function (objTo, objFrom) {\r\n    forEach(objFrom, function (key, value) {\r\n        objTo[key] = value;\r\n    });\r\n    return objTo;\r\n};\r\n/**\r\n * Returns a clone of the specified object.\r\n * @param {!Object} obj\r\n * @return {!Object} cloned obj.\r\n */\r\nvar clone = function (obj) {\r\n    return extend({}, obj);\r\n};\r\n/**\r\n * Returns true if obj has typeof \"object\" and is not null.  Unlike goog.isObject(), does not return true\r\n * for functions.\r\n *\r\n * @param obj {*} A potential object.\r\n * @returns {boolean} True if it's an object.\r\n */\r\nvar isNonNullObject = function (obj) {\r\n    return typeof obj === 'object' && obj !== null;\r\n};\r\nvar isEmpty = function (obj) {\r\n    for (var key in obj) {\r\n        return false;\r\n    }\r\n    return true;\r\n};\r\nvar getCount = function (obj) {\r\n    var rv = 0;\r\n    for (var key in obj) {\r\n        rv++;\r\n    }\r\n    return rv;\r\n};\r\nvar map = function (obj, f, opt_obj) {\r\n    var res = {};\r\n    for (var key in obj) {\r\n        res[key] = f.call(opt_obj, obj[key], key, obj);\r\n    }\r\n    return res;\r\n};\r\nvar findKey = function (obj, fn, opt_this) {\r\n    for (var key in obj) {\r\n        if (fn.call(opt_this, obj[key], key, obj)) {\r\n            return key;\r\n        }\r\n    }\r\n    return undefined;\r\n};\r\nvar findValue = function (obj, fn, opt_this) {\r\n    var key = findKey(obj, fn, opt_this);\r\n    return key && obj[key];\r\n};\r\nvar getAnyKey = function (obj) {\r\n    for (var key in obj) {\r\n        return key;\r\n    }\r\n};\r\nvar getValues = function (obj) {\r\n    var res = [];\r\n    var i = 0;\r\n    for (var key in obj) {\r\n        res[i++] = obj[key];\r\n    }\r\n    return res;\r\n};\r\n/**\r\n * Tests whether every key/value pair in an object pass the test implemented\r\n * by the provided function\r\n *\r\n * @param {?Object.<K,V>} obj Object to test.\r\n * @param {!function(K, V)} fn Function to call for each key and value.\r\n * @template K,V\r\n */\r\nvar every = function (obj, fn) {\r\n    for (var key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            if (!fn(key, obj[key])) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a params\r\n * object (e.g. {arg: 'val', arg2: 'val2'})\r\n * Note: You must prepend it with ? when adding it to a URL.\r\n *\r\n * @param {!Object} querystringParams\r\n * @return {string}\r\n */\r\nvar querystring = function (querystringParams) {\r\n    var params = [];\r\n    forEach(querystringParams, function (key, value) {\r\n        if (Array.isArray(value)) {\r\n            value.forEach(function (arrayVal) {\r\n                params.push(encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal));\r\n            });\r\n        }\r\n        else {\r\n            params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\r\n        }\r\n    });\r\n    return params.length ? '&' + params.join('&') : '';\r\n};\r\n/**\r\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object (e.g. {arg: 'val', arg2: 'val2'})\r\n *\r\n * @param {string} querystring\r\n * @return {!Object}\r\n */\r\nvar querystringDecode = function (querystring) {\r\n    var obj = {};\r\n    var tokens = querystring.replace(/^\\?/, '').split('&');\r\n    tokens.forEach(function (token) {\r\n        if (token) {\r\n            var key = token.split('=');\r\n            obj[key[0]] = key[1];\r\n        }\r\n    });\r\n    return obj;\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Copyright 2011 The Closure Library Authors. All Rights Reserved.\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//      http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n/**\r\n * @fileoverview Abstract cryptographic hash interface.\r\n *\r\n * See Sha1 and Md5 for sample implementations.\r\n *\r\n */\r\n/**\r\n * Create a cryptographic hash instance.\r\n *\r\n * @constructor\r\n * @struct\r\n */\r\nvar Hash = /** @class */ (function () {\r\n    function Hash() {\r\n        /**\r\n         * The block size for the hasher.\r\n         * @type {number}\r\n         */\r\n        this.blockSize = -1;\r\n    }\r\n    return Hash;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview SHA-1 cryptographic hash.\r\n * Variable names follow the notation in FIPS PUB 180-3:\r\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\r\n *\r\n * Usage:\r\n *   var sha1 = new sha1();\r\n *   sha1.update(bytes);\r\n *   var hash = sha1.digest();\r\n *\r\n * Performance:\r\n *   Chrome 23:   ~400 Mbit/s\r\n *   Firefox 16:  ~250 Mbit/s\r\n *\r\n */\r\n/**\r\n * SHA-1 cryptographic hash constructor.\r\n *\r\n * The properties declared here are discussed in the above algorithm document.\r\n * @constructor\r\n * @extends {Hash}\r\n * @final\r\n * @struct\r\n */\r\nvar Sha1 = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Sha1, _super);\r\n    function Sha1() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * Holds the previous values of accumulated variables a-e in the compress_\r\n         * function.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\r\n        _this.chain_ = [];\r\n        /**\r\n         * A buffer holding the partially computed hash result.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\r\n        _this.buf_ = [];\r\n        /**\r\n         * An array of 80 bytes, each a part of the message to be hashed.  Referred to\r\n         * as the message schedule in the docs.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\r\n        _this.W_ = [];\r\n        /**\r\n         * Contains data needed to pad messages less than 64 bytes.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\r\n        _this.pad_ = [];\r\n        /**\r\n         * @private {number}\r\n         */\r\n        _this.inbuf_ = 0;\r\n        /**\r\n         * @private {number}\r\n         */\r\n        _this.total_ = 0;\r\n        _this.blockSize = 512 / 8;\r\n        _this.pad_[0] = 128;\r\n        for (var i = 1; i < _this.blockSize; ++i) {\r\n            _this.pad_[i] = 0;\r\n        }\r\n        _this.reset();\r\n        return _this;\r\n    }\r\n    Sha1.prototype.reset = function () {\r\n        this.chain_[0] = 0x67452301;\r\n        this.chain_[1] = 0xefcdab89;\r\n        this.chain_[2] = 0x98badcfe;\r\n        this.chain_[3] = 0x10325476;\r\n        this.chain_[4] = 0xc3d2e1f0;\r\n        this.inbuf_ = 0;\r\n        this.total_ = 0;\r\n    };\r\n    /**\r\n     * Internal compress helper function.\r\n     * @param {!Array<number>|!Uint8Array|string} buf Block to compress.\r\n     * @param {number=} opt_offset Offset of the block in the buffer.\r\n     * @private\r\n     */\r\n    Sha1.prototype.compress_ = function (buf, opt_offset) {\r\n        if (!opt_offset) {\r\n            opt_offset = 0;\r\n        }\r\n        var W = this.W_;\r\n        // get 16 big endian words\r\n        if (typeof buf === 'string') {\r\n            for (var i = 0; i < 16; i++) {\r\n                // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\r\n                // have a bug that turns the post-increment ++ operator into pre-increment\r\n                // during JIT compilation.  We have code that depends heavily on SHA-1 for\r\n                // correctness and which is affected by this bug, so I've removed all uses\r\n                // of post-increment ++ in which the result value is used.  We can revert\r\n                // this change once the Safari bug\r\n                // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\r\n                // most clients have been updated.\r\n                W[i] =\r\n                    (buf.charCodeAt(opt_offset) << 24) |\r\n                        (buf.charCodeAt(opt_offset + 1) << 16) |\r\n                        (buf.charCodeAt(opt_offset + 2) << 8) |\r\n                        buf.charCodeAt(opt_offset + 3);\r\n                opt_offset += 4;\r\n            }\r\n        }\r\n        else {\r\n            for (var i = 0; i < 16; i++) {\r\n                W[i] =\r\n                    (buf[opt_offset] << 24) |\r\n                        (buf[opt_offset + 1] << 16) |\r\n                        (buf[opt_offset + 2] << 8) |\r\n                        buf[opt_offset + 3];\r\n                opt_offset += 4;\r\n            }\r\n        }\r\n        // expand to 80 words\r\n        for (var i = 16; i < 80; i++) {\r\n            var t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\r\n            W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\r\n        }\r\n        var a = this.chain_[0];\r\n        var b = this.chain_[1];\r\n        var c = this.chain_[2];\r\n        var d = this.chain_[3];\r\n        var e = this.chain_[4];\r\n        var f, k;\r\n        // TODO(user): Try to unroll this loop to speed up the computation.\r\n        for (var i = 0; i < 80; i++) {\r\n            if (i < 40) {\r\n                if (i < 20) {\r\n                    f = d ^ (b & (c ^ d));\r\n                    k = 0x5a827999;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0x6ed9eba1;\r\n                }\r\n            }\r\n            else {\r\n                if (i < 60) {\r\n                    f = (b & c) | (d & (b | c));\r\n                    k = 0x8f1bbcdc;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0xca62c1d6;\r\n                }\r\n            }\r\n            var t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\r\n            e = d;\r\n            d = c;\r\n            c = ((b << 30) | (b >>> 2)) & 0xffffffff;\r\n            b = a;\r\n            a = t;\r\n        }\r\n        this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\r\n        this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\r\n        this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\r\n        this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\r\n        this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\r\n    };\r\n    Sha1.prototype.update = function (bytes, opt_length) {\r\n        // TODO(johnlenz): tighten the function signature and remove this check\r\n        if (bytes == null) {\r\n            return;\r\n        }\r\n        if (opt_length === undefined) {\r\n            opt_length = bytes.length;\r\n        }\r\n        var lengthMinusBlock = opt_length - this.blockSize;\r\n        var n = 0;\r\n        // Using local instead of member variables gives ~5% speedup on Firefox 16.\r\n        var buf = this.buf_;\r\n        var inbuf = this.inbuf_;\r\n        // The outer while loop should execute at most twice.\r\n        while (n < opt_length) {\r\n            // When we have no data in the block to top up, we can directly process the\r\n            // input buffer (assuming it contains sufficient data). This gives ~25%\r\n            // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\r\n            // the data is provided in large chunks (or in multiples of 64 bytes).\r\n            if (inbuf == 0) {\r\n                while (n <= lengthMinusBlock) {\r\n                    this.compress_(bytes, n);\r\n                    n += this.blockSize;\r\n                }\r\n            }\r\n            if (typeof bytes === 'string') {\r\n                while (n < opt_length) {\r\n                    buf[inbuf] = bytes.charCodeAt(n);\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf == this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                while (n < opt_length) {\r\n                    buf[inbuf] = bytes[n];\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf == this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.inbuf_ = inbuf;\r\n        this.total_ += opt_length;\r\n    };\r\n    /** @override */\r\n    Sha1.prototype.digest = function () {\r\n        var digest = [];\r\n        var totalBits = this.total_ * 8;\r\n        // Add pad 0x80 0x00*.\r\n        if (this.inbuf_ < 56) {\r\n            this.update(this.pad_, 56 - this.inbuf_);\r\n        }\r\n        else {\r\n            this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\r\n        }\r\n        // Add # bits.\r\n        for (var i = this.blockSize - 1; i >= 56; i--) {\r\n            this.buf_[i] = totalBits & 255;\r\n            totalBits /= 256; // Don't use bit-shifting here!\r\n        }\r\n        this.compress_(this.buf_);\r\n        var n = 0;\r\n        for (var i = 0; i < 5; i++) {\r\n            for (var j = 24; j >= 0; j -= 8) {\r\n                digest[n] = (this.chain_[i] >> j) & 255;\r\n                ++n;\r\n            }\r\n        }\r\n        return digest;\r\n    };\r\n    return Sha1;\r\n}(Hash));\n\n/**\r\n * Helper to make a Subscribe function (just like Promise helps make a\r\n * Thenable).\r\n *\r\n * @param executor Function which can make calls to a single Observer\r\n *     as a proxy.\r\n * @param onNoObservers Callback when count of Observers goes to zero.\r\n */\r\nfunction createSubscribe(executor, onNoObservers) {\r\n    var proxy = new ObserverProxy(executor, onNoObservers);\r\n    return proxy.subscribe.bind(proxy);\r\n}\r\n/**\r\n * Implement fan-out for any number of Observers attached via a subscribe\r\n * function.\r\n */\r\nvar ObserverProxy = /** @class */ (function () {\r\n    /**\r\n     * @param executor Function which can make calls to a single Observer\r\n     *     as a proxy.\r\n     * @param onNoObservers Callback when count of Observers goes to zero.\r\n     */\r\n    function ObserverProxy(executor, onNoObservers) {\r\n        var _this = this;\r\n        this.observers = [];\r\n        this.unsubscribes = [];\r\n        this.observerCount = 0;\r\n        // Micro-task scheduling by calling task.then().\r\n        this.task = Promise.resolve();\r\n        this.finalized = false;\r\n        this.onNoObservers = onNoObservers;\r\n        // Call the executor asynchronously so subscribers that are called\r\n        // synchronously after the creation of the subscribe function\r\n        // can still receive the very first value generated in the executor.\r\n        this.task\r\n            .then(function () {\r\n            executor(_this);\r\n        })\r\n            .catch(function (e) {\r\n            _this.error(e);\r\n        });\r\n    }\r\n    ObserverProxy.prototype.next = function (value) {\r\n        this.forEachObserver(function (observer) {\r\n            observer.next(value);\r\n        });\r\n    };\r\n    ObserverProxy.prototype.error = function (error) {\r\n        this.forEachObserver(function (observer) {\r\n            observer.error(error);\r\n        });\r\n        this.close(error);\r\n    };\r\n    ObserverProxy.prototype.complete = function () {\r\n        this.forEachObserver(function (observer) {\r\n            observer.complete();\r\n        });\r\n        this.close();\r\n    };\r\n    /**\r\n     * Subscribe function that can be used to add an Observer to the fan-out list.\r\n     *\r\n     * - We require that no event is sent to a subscriber sychronously to their\r\n     *   call to subscribe().\r\n     */\r\n    ObserverProxy.prototype.subscribe = function (nextOrObserver, error, complete) {\r\n        var _this = this;\r\n        var observer;\r\n        if (nextOrObserver === undefined &&\r\n            error === undefined &&\r\n            complete === undefined) {\r\n            throw new Error('Missing Observer.');\r\n        }\r\n        // Assemble an Observer object when passed as callback functions.\r\n        if (implementsAnyMethods(nextOrObserver, ['next', 'error', 'complete'])) {\r\n            observer = nextOrObserver;\r\n        }\r\n        else {\r\n            observer = {\r\n                next: nextOrObserver,\r\n                error: error,\r\n                complete: complete\r\n            };\r\n        }\r\n        if (observer.next === undefined) {\r\n            observer.next = noop;\r\n        }\r\n        if (observer.error === undefined) {\r\n            observer.error = noop;\r\n        }\r\n        if (observer.complete === undefined) {\r\n            observer.complete = noop;\r\n        }\r\n        var unsub = this.unsubscribeOne.bind(this, this.observers.length);\r\n        // Attempt to subscribe to a terminated Observable - we\r\n        // just respond to the Observer with the final error or complete\r\n        // event.\r\n        if (this.finalized) {\r\n            this.task.then(function () {\r\n                try {\r\n                    if (_this.finalError) {\r\n                        observer.error(_this.finalError);\r\n                    }\r\n                    else {\r\n                        observer.complete();\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // nothing\r\n                }\r\n                return;\r\n            });\r\n        }\r\n        this.observers.push(observer);\r\n        return unsub;\r\n    };\r\n    // Unsubscribe is synchronous - we guarantee that no events are sent to\r\n    // any unsubscribed Observer.\r\n    ObserverProxy.prototype.unsubscribeOne = function (i) {\r\n        if (this.observers === undefined || this.observers[i] === undefined) {\r\n            return;\r\n        }\r\n        delete this.observers[i];\r\n        this.observerCount -= 1;\r\n        if (this.observerCount === 0 && this.onNoObservers !== undefined) {\r\n            this.onNoObservers(this);\r\n        }\r\n    };\r\n    ObserverProxy.prototype.forEachObserver = function (fn) {\r\n        if (this.finalized) {\r\n            // Already closed by previous event....just eat the additional values.\r\n            return;\r\n        }\r\n        // Since sendOne calls asynchronously - there is no chance that\r\n        // this.observers will become undefined.\r\n        for (var i = 0; i < this.observers.length; i++) {\r\n            this.sendOne(i, fn);\r\n        }\r\n    };\r\n    // Call the Observer via one of it's callback function. We are careful to\r\n    // confirm that the observe has not been unsubscribed since this asynchronous\r\n    // function had been queued.\r\n    ObserverProxy.prototype.sendOne = function (i, fn) {\r\n        var _this = this;\r\n        // Execute the callback asynchronously\r\n        this.task.then(function () {\r\n            if (_this.observers !== undefined && _this.observers[i] !== undefined) {\r\n                try {\r\n                    fn(_this.observers[i]);\r\n                }\r\n                catch (e) {\r\n                    // Ignore exceptions raised in Observers or missing methods of an\r\n                    // Observer.\r\n                    // Log error to console. b/31404806\r\n                    if (typeof console !== 'undefined' && console.error) {\r\n                        console.error(e);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    };\r\n    ObserverProxy.prototype.close = function (err) {\r\n        var _this = this;\r\n        if (this.finalized) {\r\n            return;\r\n        }\r\n        this.finalized = true;\r\n        if (err !== undefined) {\r\n            this.finalError = err;\r\n        }\r\n        // Proxy is no longer needed - garbage collect references\r\n        this.task.then(function () {\r\n            _this.observers = undefined;\r\n            _this.onNoObservers = undefined;\r\n        });\r\n    };\r\n    return ObserverProxy;\r\n}());\r\n/** Turn synchronous function into one called asynchronously. */\r\nfunction async(fn, onError) {\r\n    return function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        Promise.resolve(true)\r\n            .then(function () {\r\n            fn.apply(void 0, args);\r\n        })\r\n            .catch(function (error) {\r\n            if (onError) {\r\n                onError(error);\r\n            }\r\n        });\r\n    };\r\n}\r\n/**\r\n * Return true if the object passed in implements any of the named methods.\r\n */\r\nfunction implementsAnyMethods(obj, methods) {\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return false;\r\n    }\r\n    for (var _i = 0, methods_1 = methods; _i < methods_1.length; _i++) {\r\n        var method = methods_1[_i];\r\n        if (method in obj && typeof obj[method] === 'function') {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction noop() {\r\n    // do nothing\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Check to make sure the appropriate number of arguments are provided for a public function.\r\n * Throws an error if it fails.\r\n *\r\n * @param {!string} fnName The function name\r\n * @param {!number} minCount The minimum number of arguments to allow for the function call\r\n * @param {!number} maxCount The maximum number of argument to allow for the function call\r\n * @param {!number} argCount The actual number of arguments provided.\r\n */\r\nvar validateArgCount = function (fnName, minCount, maxCount, argCount) {\r\n    var argError;\r\n    if (argCount < minCount) {\r\n        argError = 'at least ' + minCount;\r\n    }\r\n    else if (argCount > maxCount) {\r\n        argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;\r\n    }\r\n    if (argError) {\r\n        var error = fnName +\r\n            ' failed: Was called with ' +\r\n            argCount +\r\n            (argCount === 1 ? ' argument.' : ' arguments.') +\r\n            ' Expects ' +\r\n            argError +\r\n            '.';\r\n        throw new Error(error);\r\n    }\r\n};\r\n/**\r\n * Generates a string to prefix an error message about failed argument validation\r\n *\r\n * @param {!string} fnName The function name\r\n * @param {!number} argumentNumber The index of the argument\r\n * @param {boolean} optional Whether or not the argument is optional\r\n * @return {!string} The prefix to add to the error thrown for validation.\r\n */\r\nfunction errorPrefix(fnName, argumentNumber, optional) {\r\n    var argName = '';\r\n    switch (argumentNumber) {\r\n        case 1:\r\n            argName = optional ? 'first' : 'First';\r\n            break;\r\n        case 2:\r\n            argName = optional ? 'second' : 'Second';\r\n            break;\r\n        case 3:\r\n            argName = optional ? 'third' : 'Third';\r\n            break;\r\n        case 4:\r\n            argName = optional ? 'fourth' : 'Fourth';\r\n            break;\r\n        default:\r\n            throw new Error('errorPrefix called with argumentNumber > 4.  Need to update it?');\r\n    }\r\n    var error = fnName + ' failed: ';\r\n    error += argName + ' argument ';\r\n    return error;\r\n}\r\n/**\r\n * @param {!string} fnName\r\n * @param {!number} argumentNumber\r\n * @param {!string} namespace\r\n * @param {boolean} optional\r\n */\r\nfunction validateNamespace(fnName, argumentNumber, namespace, optional) {\r\n    if (optional && !namespace)\r\n        return;\r\n    if (typeof namespace !== 'string') {\r\n        //TODO: I should do more validation here. We only allow certain chars in namespaces.\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid firebase namespace.');\r\n    }\r\n}\r\nfunction validateCallback(fnName, argumentNumber, callback, optional) {\r\n    if (optional && !callback)\r\n        return;\r\n    if (typeof callback !== 'function')\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid function.');\r\n}\r\nfunction validateContextObject(fnName, argumentNumber, context, optional) {\r\n    if (optional && !context)\r\n        return;\r\n    if (typeof context !== 'object' || context === null)\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid context object.');\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\r\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\r\n// so it's been modified.\r\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\r\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\r\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\r\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\r\n// pair).\r\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\r\n/**\r\n * @param {string} str\r\n * @return {Array}\r\n */\r\nvar stringToByteArray$1 = function (str) {\r\n    var out = [], p = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n        var c = str.charCodeAt(i);\r\n        // Is this the lead surrogate in a surrogate pair?\r\n        if (c >= 0xd800 && c <= 0xdbff) {\r\n            var high = c - 0xd800; // the high 10 bits.\r\n            i++;\r\n            assert(i < str.length, 'Surrogate pair missing trail surrogate.');\r\n            var low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\r\n            c = 0x10000 + (high << 10) + low;\r\n        }\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if (c < 65536) {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Calculate length without actually converting; useful for doing cheaper validation.\r\n * @param {string} str\r\n * @return {number}\r\n */\r\nvar stringLength = function (str) {\r\n    var p = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n        var c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            p++;\r\n        }\r\n        else if (c < 2048) {\r\n            p += 2;\r\n        }\r\n        else if (c >= 0xd800 && c <= 0xdbff) {\r\n            // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\r\n            p += 4;\r\n            i++; // skip trail surrogate.\r\n        }\r\n        else {\r\n            p += 3;\r\n        }\r\n    }\r\n    return p;\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nexports.assert = assert;\nexports.assertionError = assertionError;\nexports.base64 = base64;\nexports.base64Decode = base64Decode;\nexports.base64Encode = base64Encode;\nexports.CONSTANTS = CONSTANTS;\nexports.deepCopy = deepCopy;\nexports.deepExtend = deepExtend;\nexports.patchProperty = patchProperty;\nexports.Deferred = Deferred;\nexports.getUA = getUA;\nexports.isMobileCordova = isMobileCordova;\nexports.isNodeSdk = isNodeSdk;\nexports.isReactNative = isReactNative;\nexports.ErrorFactory = ErrorFactory;\nexports.FirebaseError = FirebaseError;\nexports.patchCapture = patchCapture;\nexports.jsonEval = jsonEval;\nexports.stringify = stringify;\nexports.decode = decode;\nexports.isAdmin = isAdmin;\nexports.issuedAtTime = issuedAtTime;\nexports.isValidFormat = isValidFormat;\nexports.isValidTimestamp = isValidTimestamp;\nexports.clone = clone;\nexports.contains = contains;\nexports.every = every;\nexports.extend = extend;\nexports.findKey = findKey;\nexports.findValue = findValue;\nexports.forEach = forEach;\nexports.getAnyKey = getAnyKey;\nexports.getCount = getCount;\nexports.getValues = getValues;\nexports.isEmpty = isEmpty;\nexports.isNonNullObject = isNonNullObject;\nexports.map = map;\nexports.safeGet = safeGet;\nexports.querystring = querystring;\nexports.querystringDecode = querystringDecode;\nexports.Sha1 = Sha1;\nexports.async = async;\nexports.createSubscribe = createSubscribe;\nexports.errorPrefix = errorPrefix;\nexports.validateArgCount = validateArgCount;\nexports.validateCallback = validateCallback;\nexports.validateContextObject = validateContextObject;\nexports.validateNamespace = validateNamespace;\nexports.stringLength = stringLength;\nexports.stringToByteArray = stringToByteArray$1;\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (immutable) */ __webpack_exports__[\"__extends\"] = __extends;\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__assign\", function() { return __assign; });\n/* harmony export (immutable) */ __webpack_exports__[\"__rest\"] = __rest;\n/* harmony export (immutable) */ __webpack_exports__[\"__decorate\"] = __decorate;\n/* harmony export (immutable) */ __webpack_exports__[\"__param\"] = __param;\n/* harmony export (immutable) */ __webpack_exports__[\"__metadata\"] = __metadata;\n/* harmony export (immutable) */ __webpack_exports__[\"__awaiter\"] = __awaiter;\n/* harmony export (immutable) */ __webpack_exports__[\"__generator\"] = __generator;\n/* harmony export (immutable) */ __webpack_exports__[\"__exportStar\"] = __exportStar;\n/* harmony export (immutable) */ __webpack_exports__[\"__values\"] = __values;\n/* harmony export (immutable) */ __webpack_exports__[\"__read\"] = __read;\n/* harmony export (immutable) */ __webpack_exports__[\"__spread\"] = __spread;\n/* harmony export (immutable) */ __webpack_exports__[\"__await\"] = __await;\n/* harmony export (immutable) */ __webpack_exports__[\"__asyncGenerator\"] = __asyncGenerator;\n/* harmony export (immutable) */ __webpack_exports__[\"__asyncDelegator\"] = __asyncDelegator;\n/* harmony export (immutable) */ __webpack_exports__[\"__asyncValues\"] = __asyncValues;\n/* harmony export (immutable) */ __webpack_exports__[\"__makeTemplateObject\"] = __makeTemplateObject;\n/* harmony export (immutable) */ __webpack_exports__[\"__importStar\"] = __importStar;\n/* harmony export (immutable) */ __webpack_exports__[\"__importDefault\"] = __importDefault;\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nfunction __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nfunction __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nfunction __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(17);\nmodule.exports = __webpack_require__(21);\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// @remove-on-eject-begin\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// @remove-on-eject-end\n\n\nif (typeof Promise === 'undefined') {\n  // Rejection tracking prevents a common issue where React gets into an\n  // inconsistent state due to an error, but it gets swallowed by a Promise,\n  // and the user has no idea what causes React's erratic future behavior.\n  __webpack_require__(18).enable();\n  window.Promise = __webpack_require__(20);\n}\n\n// fetch() polyfill for making API calls.\n__webpack_require__(6);\n\n// Object.assign() is commonly used with React.\n// It will use the native implementation if it's present and isn't buggy.\nObject.assign = __webpack_require__(4);\n\n// In tests, polyfill requestAnimationFrame since jsdom doesn't provide it yet.\n// We don't polyfill it in the browser--this is user's responsibility.\nif (false) {\n  require('raf').polyfill(global);\n}\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar Promise = __webpack_require__(5);\n\nvar DEFAULT_WHITELIST = [\n  ReferenceError,\n  TypeError,\n  RangeError\n];\n\nvar enabled = false;\nexports.disable = disable;\nfunction disable() {\n  enabled = false;\n  Promise._47 = null;\n  Promise._71 = null;\n}\n\nexports.enable = enable;\nfunction enable(options) {\n  options = options || {};\n  if (enabled) disable();\n  enabled = true;\n  var id = 0;\n  var displayId = 0;\n  var rejections = {};\n  Promise._47 = function (promise) {\n    if (\n      promise._83 === 2 && // IS REJECTED\n      rejections[promise._56]\n    ) {\n      if (rejections[promise._56].logged) {\n        onHandled(promise._56);\n      } else {\n        clearTimeout(rejections[promise._56].timeout);\n      }\n      delete rejections[promise._56];\n    }\n  };\n  Promise._71 = function (promise, err) {\n    if (promise._75 === 0) { // not yet handled\n      promise._56 = id++;\n      rejections[promise._56] = {\n        displayId: null,\n        error: err,\n        timeout: setTimeout(\n          onUnhandled.bind(null, promise._56),\n          // For reference errors and type errors, this almost always\n          // means the programmer made a mistake, so log them after just\n          // 100ms\n          // otherwise, wait 2 seconds to see if they get handled\n          matchWhitelist(err, DEFAULT_WHITELIST)\n            ? 100\n            : 2000\n        ),\n        logged: false\n      };\n    }\n  };\n  function onUnhandled(id) {\n    if (\n      options.allRejections ||\n      matchWhitelist(\n        rejections[id].error,\n        options.whitelist || DEFAULT_WHITELIST\n      )\n    ) {\n      rejections[id].displayId = displayId++;\n      if (options.onUnhandled) {\n        rejections[id].logged = true;\n        options.onUnhandled(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      } else {\n        rejections[id].logged = true;\n        logError(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      }\n    }\n  }\n  function onHandled(id) {\n    if (rejections[id].logged) {\n      if (options.onHandled) {\n        options.onHandled(rejections[id].displayId, rejections[id].error);\n      } else if (!rejections[id].onUnhandled) {\n        console.warn(\n          'Promise Rejection Handled (id: ' + rejections[id].displayId + '):'\n        );\n        console.warn(\n          '  This means you can ignore any previous messages of the form \"Possible Unhandled Promise Rejection\" with id ' +\n          rejections[id].displayId + '.'\n        );\n      }\n    }\n  }\n}\n\nfunction logError(id, error) {\n  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');\n  var errStr = (error && (error.stack || error)) + '';\n  errStr.split('\\n').forEach(function (line) {\n    console.warn('  ' + line);\n  });\n}\n\nfunction matchWhitelist(error, list) {\n  return list.some(function (cls) {\n    return error instanceof cls;\n  });\n}\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser's own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nvar scope = typeof global !== \"undefined\" ? global : self;\nvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js’s\n// `process.on(\"uncaughtException\")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = __webpack_require__(5);\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nvar TRUE = valuePromise(true);\nvar FALSE = valuePromise(false);\nvar NULL = valuePromise(null);\nvar UNDEFINED = valuePromise(undefined);\nvar ZERO = valuePromise(0);\nvar EMPTYSTRING = valuePromise('');\n\nfunction valuePromise(value) {\n  var p = new Promise(Promise._44);\n  p._83 = 1;\n  p._18 = value;\n  return p;\n}\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value;\n\n  if (value === null) return NULL;\n  if (value === undefined) return UNDEFINED;\n  if (value === true) return TRUE;\n  if (value === false) return FALSE;\n  if (value === 0) return ZERO;\n  if (value === '') return EMPTYSTRING;\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then;\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value));\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex);\n      });\n    }\n  }\n  return valuePromise(value);\n};\n\nPromise.all = function (arr) {\n  var args = Array.prototype.slice.call(arr);\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n    function res(i, val) {\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\n        if (val instanceof Promise && val.then === Promise.prototype.then) {\n          while (val._83 === 3) {\n            val = val._18;\n          }\n          if (val._83 === 1) return res(i, val._18);\n          if (val._83 === 2) reject(val._18);\n          val.then(function (val) {\n            res(i, val);\n          }, reject);\n          return;\n        } else {\n          var then = val.then;\n          if (typeof then === 'function') {\n            var p = new Promise(then.bind(val));\n            p.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n      }\n      args[i] = val;\n      if (--remaining === 0) {\n        resolve(args);\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    values.forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    });\n  });\n};\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_dom__ = __webpack_require__(23);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_dom___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react_dom__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react_spring_dist_react_spring__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react_spring_dist_react_spring___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_react_spring_dist_react_spring__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__index_css__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__index_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__index_css__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_SectionLabels__ = __webpack_require__(33);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__components_AboutMe__ = __webpack_require__(34);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__components_Portfolio__ = __webpack_require__(44);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__components_Skills__ = __webpack_require__(45);\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var App=function(_React$Component){_inherits(App,_React$Component);function App(){_classCallCheck(this,App);return _possibleConstructorReturn(this,(App.__proto__||Object.getPrototypeOf(App)).apply(this,arguments));}_createClass(App,[{key:'render',value:function render(){var _this2=this;return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('header',{className:'header nav-bar fixed-top',style:{display:'flex',justifyContent:'space-between',alignItems:'center',backgroundColor:'rgba( 3,3,3,0.7)'}},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('a',{href:'https://github.com/tomkim825/',target:'_blank',rel:'noopener noreferrer',style:{padding:'5px',margin:'0 5px',color:'#517fa4'}},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i',{className:'fab icon fa-github'})),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('a',{href:'https://www.linkedin.com/in/thomas-c-kim/',target:'_blank',rel:'noopener noreferrer',style:{padding:'5px',margin:'0 5px',color:'#517fa4'}},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i',{className:'fab icon fa-linkedin'})),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('a',{href:'mailto:tomkim825@gmail.com',style:{padding:'5px',margin:'0 5px',color:'#517fa4'}},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i',{className:'fas icon  fa-envelope'})),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('span',{style:{fontWeight:600}},' Thomas Kim'))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('span',null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('span',{className:'navButton',onClick:function onClick(){return _this2.parallax.scrollTo(0);}},'About'),' ',__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('span',null,' | '),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('span',{className:'navButton',onClick:function onClick(){return _this2.parallax.scrollTo(1);}},' Portfolio '),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('span',null,' | '),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('span',{className:'navButton',onClick:function onClick(){return _this2.parallax.scrollTo(2);}},' Skills '))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_react_spring_dist_react_spring__[\"Parallax\"],{ref:function ref(_ref){return _this2.parallax=_ref;},pages:3},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_react_spring_dist_react_spring__[\"Parallax\"].Layer,{offset:0,speed:0,factor:3,style:{background:'linear-gradient(to top, #243949 0%, #517fa4 100%)'}}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_4__components_SectionLabels__[\"a\" /* SectionLabels */],null),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_5__components_AboutMe__[\"a\" /* AboutMe */],null),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_6__components_Portfolio__[\"a\" /* Portfolio */],null),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_7__components_Skills__[\"a\" /* Skills */],null)));}}]);return App;}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);__WEBPACK_IMPORTED_MODULE_1_react_dom___default.a.render(__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(App,null),document.getElementById('root'));\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/** @license React v16.4.1\n * react.production.min.js\n *\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar k=__webpack_require__(4),n=__webpack_require__(7),p=__webpack_require__(8),q=__webpack_require__(9),r=\"function\"===typeof Symbol&&Symbol.for,t=r?Symbol.for(\"react.element\"):60103,u=r?Symbol.for(\"react.portal\"):60106,v=r?Symbol.for(\"react.fragment\"):60107,w=r?Symbol.for(\"react.strict_mode\"):60108,x=r?Symbol.for(\"react.profiler\"):60114,y=r?Symbol.for(\"react.provider\"):60109,z=r?Symbol.for(\"react.context\"):60110,A=r?Symbol.for(\"react.async_mode\"):60111,B=\nr?Symbol.for(\"react.forward_ref\"):60112;r&&Symbol.for(\"react.timeout\");var C=\"function\"===typeof Symbol&&Symbol.iterator;function D(a){for(var b=arguments.length-1,e=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=0;c<b;c++)e+=\"&args[]=\"+encodeURIComponent(arguments[c+1]);n(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",e)}\nvar E={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}};function F(a,b,e){this.props=a;this.context=b;this.refs=p;this.updater=e||E}F.prototype.isReactComponent={};F.prototype.setState=function(a,b){\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a?D(\"85\"):void 0;this.updater.enqueueSetState(this,a,b,\"setState\")};F.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function G(){}\nG.prototype=F.prototype;function H(a,b,e){this.props=a;this.context=b;this.refs=p;this.updater=e||E}var I=H.prototype=new G;I.constructor=H;k(I,F.prototype);I.isPureReactComponent=!0;var J={current:null},K=Object.prototype.hasOwnProperty,L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,e){var c=void 0,d={},g=null,h=null;if(null!=b)for(c in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(g=\"\"+b.key),b)K.call(b,c)&&!L.hasOwnProperty(c)&&(d[c]=b[c]);var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){for(var l=Array(f),m=0;m<f;m++)l[m]=arguments[m+2];d.children=l}if(a&&a.defaultProps)for(c in f=a.defaultProps,f)void 0===d[c]&&(d[c]=f[c]);return{$$typeof:t,type:a,key:g,ref:h,props:d,_owner:J.current}}\nfunction N(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===t}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+(\"\"+a).replace(/[=:]/g,function(a){return b[a]})}var O=/\\/+/g,P=[];function Q(a,b,e,c){if(P.length){var d=P.pop();d.result=a;d.keyPrefix=b;d.func=e;d.context=c;d.count=0;return d}return{result:a,keyPrefix:b,func:e,context:c,count:0}}function R(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>P.length&&P.push(a)}\nfunction S(a,b,e,c){var d=typeof a;if(\"undefined\"===d||\"boolean\"===d)a=null;var g=!1;if(null===a)g=!0;else switch(d){case \"string\":case \"number\":g=!0;break;case \"object\":switch(a.$$typeof){case t:case u:g=!0}}if(g)return e(c,a,\"\"===b?\".\"+T(a,0):b),1;g=0;b=\"\"===b?\".\":b+\":\";if(Array.isArray(a))for(var h=0;h<a.length;h++){d=a[h];var f=b+T(d,h);g+=S(d,f,e,c)}else if(null===a||\"undefined\"===typeof a?f=null:(f=C&&a[C]||a[\"@@iterator\"],f=\"function\"===typeof f?f:null),\"function\"===typeof f)for(a=f.call(a),\nh=0;!(d=a.next()).done;)d=d.value,f=b+T(d,h++),g+=S(d,f,e,c);else\"object\"===d&&(e=\"\"+a,D(\"31\",\"[object Object]\"===e?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":e,\"\"));return g}function T(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function U(a,b){a.func.call(a.context,b,a.count++)}\nfunction V(a,b,e){var c=a.result,d=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?W(a,c,e,q.thatReturnsArgument):null!=a&&(N(a)&&(b=d+(!a.key||b&&b.key===a.key?\"\":(\"\"+a.key).replace(O,\"$&/\")+\"/\")+e,a={$$typeof:t,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}),c.push(a))}function W(a,b,e,c,d){var g=\"\";null!=e&&(g=(\"\"+e).replace(O,\"$&/\")+\"/\");b=Q(b,g,c,d);null==a||S(a,\"\",V,b);R(b)}\nvar X={Children:{map:function(a,b,e){if(null==a)return a;var c=[];W(a,c,null,b,e);return c},forEach:function(a,b,e){if(null==a)return a;b=Q(null,null,b,e);null==a||S(a,\"\",U,b);R(b)},count:function(a){return null==a?0:S(a,\"\",q.thatReturnsNull,null)},toArray:function(a){var b=[];W(a,b,null,q.thatReturnsArgument);return b},only:function(a){N(a)?void 0:D(\"143\");return a}},createRef:function(){return{current:null}},Component:F,PureComponent:H,createContext:function(a,b){void 0===b&&(b=null);a={$$typeof:z,\n_calculateChangedBits:b,_defaultValue:a,_currentValue:a,_currentValue2:a,_changedBits:0,_changedBits2:0,Provider:null,Consumer:null};a.Provider={$$typeof:y,_context:a};return a.Consumer=a},forwardRef:function(a){return{$$typeof:B,render:a}},Fragment:v,StrictMode:w,unstable_AsyncMode:A,unstable_Profiler:x,createElement:M,cloneElement:function(a,b,e){null===a||void 0===a?D(\"267\",a):void 0;var c=void 0,d=k({},a.props),g=a.key,h=a.ref,f=a._owner;if(null!=b){void 0!==b.ref&&(h=b.ref,f=J.current);void 0!==\nb.key&&(g=\"\"+b.key);var l=void 0;a.type&&a.type.defaultProps&&(l=a.type.defaultProps);for(c in b)K.call(b,c)&&!L.hasOwnProperty(c)&&(d[c]=void 0===b[c]&&void 0!==l?l[c]:b[c])}c=arguments.length-2;if(1===c)d.children=e;else if(1<c){l=Array(c);for(var m=0;m<c;m++)l[m]=arguments[m+2];d.children=l}return{$$typeof:t,type:a.type,key:g,ref:h,props:d,_owner:f}},createFactory:function(a){var b=M.bind(null,a);b.type=a;return b},isValidElement:N,version:\"16.4.1\",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:J,\nassign:k}},Y={default:X},Z=Y&&X||Y;module.exports=Z.default?Z.default:Z;\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (false) {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (true) {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = __webpack_require__(24);\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/** @license React v16.4.1\n * react-dom.production.min.js\n *\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\nvar aa=__webpack_require__(7),ba=__webpack_require__(0),m=__webpack_require__(25),p=__webpack_require__(4),v=__webpack_require__(9),da=__webpack_require__(26),ea=__webpack_require__(27),fa=__webpack_require__(28),ha=__webpack_require__(8);\nfunction A(a){for(var b=arguments.length-1,c=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,d=0;d<b;d++)c+=\"&args[]=\"+encodeURIComponent(arguments[d+1]);aa(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",c)}ba?void 0:A(\"227\");\nfunction ia(a,b,c,d,e,f,g,h,k){this._hasCaughtError=!1;this._caughtError=null;var n=Array.prototype.slice.call(arguments,3);try{b.apply(c,n)}catch(r){this._caughtError=r,this._hasCaughtError=!0}}\nvar B={_caughtError:null,_hasCaughtError:!1,_rethrowError:null,_hasRethrowError:!1,invokeGuardedCallback:function(a,b,c,d,e,f,g,h,k){ia.apply(B,arguments)},invokeGuardedCallbackAndCatchFirstError:function(a,b,c,d,e,f,g,h,k){B.invokeGuardedCallback.apply(this,arguments);if(B.hasCaughtError()){var n=B.clearCaughtError();B._hasRethrowError||(B._hasRethrowError=!0,B._rethrowError=n)}},rethrowCaughtError:function(){return ka.apply(B,arguments)},hasCaughtError:function(){return B._hasCaughtError},clearCaughtError:function(){if(B._hasCaughtError){var a=\nB._caughtError;B._caughtError=null;B._hasCaughtError=!1;return a}A(\"198\")}};function ka(){if(B._hasRethrowError){var a=B._rethrowError;B._rethrowError=null;B._hasRethrowError=!1;throw a;}}var la=null,ma={};\nfunction na(){if(la)for(var a in ma){var b=ma[a],c=la.indexOf(a);-1<c?void 0:A(\"96\",a);if(!oa[c]){b.extractEvents?void 0:A(\"97\",a);oa[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],g=b,h=d;pa.hasOwnProperty(h)?A(\"99\",h):void 0;pa[h]=f;var k=f.phasedRegistrationNames;if(k){for(e in k)k.hasOwnProperty(e)&&qa(k[e],g,h);e=!0}else f.registrationName?(qa(f.registrationName,g,h),e=!0):e=!1;e?void 0:A(\"98\",d,a)}}}}\nfunction qa(a,b,c){ra[a]?A(\"100\",a):void 0;ra[a]=b;sa[a]=b.eventTypes[c].dependencies}var oa=[],pa={},ra={},sa={};function ta(a){la?A(\"101\"):void 0;la=Array.prototype.slice.call(a);na()}function ua(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];ma.hasOwnProperty(c)&&ma[c]===d||(ma[c]?A(\"102\",c):void 0,ma[c]=d,b=!0)}b&&na()}\nvar va={plugins:oa,eventNameDispatchConfigs:pa,registrationNameModules:ra,registrationNameDependencies:sa,possibleRegistrationNames:null,injectEventPluginOrder:ta,injectEventPluginsByName:ua},wa=null,xa=null,ya=null;function za(a,b,c,d){b=a.type||\"unknown-event\";a.currentTarget=ya(d);B.invokeGuardedCallbackAndCatchFirstError(b,c,void 0,a);a.currentTarget=null}\nfunction Aa(a,b){null==b?A(\"30\"):void 0;if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}function Ba(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var Ca=null;\nfunction Da(a,b){if(a){var c=a._dispatchListeners,d=a._dispatchInstances;if(Array.isArray(c))for(var e=0;e<c.length&&!a.isPropagationStopped();e++)za(a,b,c[e],d[e]);else c&&za(a,b,c,d);a._dispatchListeners=null;a._dispatchInstances=null;a.isPersistent()||a.constructor.release(a)}}function Ea(a){return Da(a,!0)}function Fa(a){return Da(a,!1)}var Ga={injectEventPluginOrder:ta,injectEventPluginsByName:ua};\nfunction Ha(a,b){var c=a.stateNode;if(!c)return null;var d=wa(c);if(!d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;c&&\"function\"!==typeof c?A(\"231\",b,typeof c):void 0;\nreturn c}function Ia(a,b){null!==a&&(Ca=Aa(Ca,a));a=Ca;Ca=null;a&&(b?Ba(a,Ea):Ba(a,Fa),Ca?A(\"95\"):void 0,B.rethrowCaughtError())}function Ja(a,b,c,d){for(var e=null,f=0;f<oa.length;f++){var g=oa[f];g&&(g=g.extractEvents(a,b,c,d))&&(e=Aa(e,g))}Ia(e,!1)}var Ka={injection:Ga,getListener:Ha,runEventsInBatch:Ia,runExtractedEventsInBatch:Ja},La=Math.random().toString(36).slice(2),C=\"__reactInternalInstance$\"+La,Ma=\"__reactEventHandlers$\"+La;\nfunction Na(a){if(a[C])return a[C];for(;!a[C];)if(a.parentNode)a=a.parentNode;else return null;a=a[C];return 5===a.tag||6===a.tag?a:null}function Oa(a){if(5===a.tag||6===a.tag)return a.stateNode;A(\"33\")}function Pa(a){return a[Ma]||null}var Qa={precacheFiberNode:function(a,b){b[C]=a},getClosestInstanceFromNode:Na,getInstanceFromNode:function(a){a=a[C];return!a||5!==a.tag&&6!==a.tag?null:a},getNodeFromInstance:Oa,getFiberCurrentPropsFromNode:Pa,updateFiberProps:function(a,b){a[Ma]=b}};\nfunction F(a){do a=a.return;while(a&&5!==a.tag);return a?a:null}function Ra(a,b,c){for(var d=[];a;)d.push(a),a=F(a);for(a=d.length;0<a--;)b(d[a],\"captured\",c);for(a=0;a<d.length;a++)b(d[a],\"bubbled\",c)}function Sa(a,b,c){if(b=Ha(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=Aa(c._dispatchListeners,b),c._dispatchInstances=Aa(c._dispatchInstances,a)}function Ta(a){a&&a.dispatchConfig.phasedRegistrationNames&&Ra(a._targetInst,Sa,a)}\nfunction Ua(a){if(a&&a.dispatchConfig.phasedRegistrationNames){var b=a._targetInst;b=b?F(b):null;Ra(b,Sa,a)}}function Va(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=Ha(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=Aa(c._dispatchListeners,b),c._dispatchInstances=Aa(c._dispatchInstances,a))}function Xa(a){a&&a.dispatchConfig.registrationName&&Va(a._targetInst,null,a)}function Ya(a){Ba(a,Ta)}\nfunction Za(a,b,c,d){if(c&&d)a:{var e=c;for(var f=d,g=0,h=e;h;h=F(h))g++;h=0;for(var k=f;k;k=F(k))h++;for(;0<g-h;)e=F(e),g--;for(;0<h-g;)f=F(f),h--;for(;g--;){if(e===f||e===f.alternate)break a;e=F(e);f=F(f)}e=null}else e=null;f=e;for(e=[];c&&c!==f;){g=c.alternate;if(null!==g&&g===f)break;e.push(c);c=F(c)}for(c=[];d&&d!==f;){g=d.alternate;if(null!==g&&g===f)break;c.push(d);d=F(d)}for(d=0;d<e.length;d++)Va(e[d],\"bubbled\",a);for(a=c.length;0<a--;)Va(c[a],\"captured\",b)}\nvar $a={accumulateTwoPhaseDispatches:Ya,accumulateTwoPhaseDispatchesSkipTarget:function(a){Ba(a,Ua)},accumulateEnterLeaveDispatches:Za,accumulateDirectDispatches:function(a){Ba(a,Xa)}};function ab(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;c[\"ms\"+a]=\"MS\"+b;c[\"O\"+a]=\"o\"+b.toLowerCase();return c}\nvar bb={animationend:ab(\"Animation\",\"AnimationEnd\"),animationiteration:ab(\"Animation\",\"AnimationIteration\"),animationstart:ab(\"Animation\",\"AnimationStart\"),transitionend:ab(\"Transition\",\"TransitionEnd\")},cb={},db={};m.canUseDOM&&(db=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete bb.animationend.animation,delete bb.animationiteration.animation,delete bb.animationstart.animation),\"TransitionEvent\"in window||delete bb.transitionend.transition);\nfunction eb(a){if(cb[a])return cb[a];if(!bb[a])return a;var b=bb[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in db)return cb[a]=b[c];return a}var fb=eb(\"animationend\"),gb=eb(\"animationiteration\"),hb=eb(\"animationstart\"),ib=eb(\"transitionend\"),jb=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),kb=null;\nfunction lb(){!kb&&m.canUseDOM&&(kb=\"textContent\"in document.documentElement?\"textContent\":\"innerText\");return kb}var G={_root:null,_startText:null,_fallbackText:null};function mb(){if(G._fallbackText)return G._fallbackText;var a,b=G._startText,c=b.length,d,e=nb(),f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);G._fallbackText=e.slice(a,1<d?1-d:void 0);return G._fallbackText}function nb(){return\"value\"in G._root?G._root.value:G._root[lb()]}\nvar ob=\"dispatchConfig _targetInst nativeEvent isDefaultPrevented isPropagationStopped _dispatchListeners _dispatchInstances\".split(\" \"),pb={type:null,target:null,currentTarget:v.thatReturnsNull,eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};\nfunction H(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):\"target\"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?v.thatReturnsTrue:v.thatReturnsFalse;this.isPropagationStopped=v.thatReturnsFalse;return this}\np(H.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=v.thatReturnsTrue)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=v.thatReturnsTrue)},persist:function(){this.isPersistent=v.thatReturnsTrue},isPersistent:v.thatReturnsFalse,\ndestructor:function(){var a=this.constructor.Interface,b;for(b in a)this[b]=null;for(a=0;a<ob.length;a++)this[ob[a]]=null}});H.Interface=pb;H.extend=function(a){function b(){}function c(){return d.apply(this,arguments)}var d=this;b.prototype=d.prototype;var e=new b;p(e,c.prototype);c.prototype=e;c.prototype.constructor=c;c.Interface=p({},d.Interface,a);c.extend=d.extend;qb(c);return c};qb(H);\nfunction rb(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}function sb(a){a instanceof this?void 0:A(\"223\");a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}function qb(a){a.eventPool=[];a.getPooled=rb;a.release=sb}var tb=H.extend({data:null}),ub=H.extend({data:null}),vb=[9,13,27,32],wb=m.canUseDOM&&\"CompositionEvent\"in window,xb=null;m.canUseDOM&&\"documentMode\"in document&&(xb=document.documentMode);\nvar yb=m.canUseDOM&&\"TextEvent\"in window&&!xb,zb=m.canUseDOM&&(!wb||xb&&8<xb&&11>=xb),Ab=String.fromCharCode(32),Bb={beforeInput:{phasedRegistrationNames:{bubbled:\"onBeforeInput\",captured:\"onBeforeInputCapture\"},dependencies:[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]},compositionEnd:{phasedRegistrationNames:{bubbled:\"onCompositionEnd\",captured:\"onCompositionEndCapture\"},dependencies:\"blur compositionend keydown keypress keyup mousedown\".split(\" \")},compositionStart:{phasedRegistrationNames:{bubbled:\"onCompositionStart\",\ncaptured:\"onCompositionStartCapture\"},dependencies:\"blur compositionstart keydown keypress keyup mousedown\".split(\" \")},compositionUpdate:{phasedRegistrationNames:{bubbled:\"onCompositionUpdate\",captured:\"onCompositionUpdateCapture\"},dependencies:\"blur compositionupdate keydown keypress keyup mousedown\".split(\" \")}},Cb=!1;\nfunction Db(a,b){switch(a){case \"keyup\":return-1!==vb.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"blur\":return!0;default:return!1}}function Eb(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var Fb=!1;function Gb(a,b){switch(a){case \"compositionend\":return Eb(b);case \"keypress\":if(32!==b.which)return null;Cb=!0;return Ab;case \"textInput\":return a=b.data,a===Ab&&Cb?null:a;default:return null}}\nfunction Hb(a,b){if(Fb)return\"compositionend\"===a||!wb&&Db(a,b)?(a=mb(),G._root=null,G._startText=null,G._fallbackText=null,Fb=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return zb?null:b.data;default:return null}}\nvar Ib={eventTypes:Bb,extractEvents:function(a,b,c,d){var e=void 0;var f=void 0;if(wb)b:{switch(a){case \"compositionstart\":e=Bb.compositionStart;break b;case \"compositionend\":e=Bb.compositionEnd;break b;case \"compositionupdate\":e=Bb.compositionUpdate;break b}e=void 0}else Fb?Db(a,c)&&(e=Bb.compositionEnd):\"keydown\"===a&&229===c.keyCode&&(e=Bb.compositionStart);e?(zb&&(Fb||e!==Bb.compositionStart?e===Bb.compositionEnd&&Fb&&(f=mb()):(G._root=d,G._startText=nb(),Fb=!0)),e=tb.getPooled(e,b,c,d),f?e.data=\nf:(f=Eb(c),null!==f&&(e.data=f)),Ya(e),f=e):f=null;(a=yb?Gb(a,c):Hb(a,c))?(b=ub.getPooled(Bb.beforeInput,b,c,d),b.data=a,Ya(b)):b=null;return null===f?b:null===b?f:[f,b]}},Jb=null,Kb={injectFiberControlledHostComponent:function(a){Jb=a}},Lb=null,Mb=null;function Nb(a){if(a=xa(a)){Jb&&\"function\"===typeof Jb.restoreControlledState?void 0:A(\"194\");var b=wa(a.stateNode);Jb.restoreControlledState(a.stateNode,a.type,b)}}function Ob(a){Lb?Mb?Mb.push(a):Mb=[a]:Lb=a}\nfunction Pb(){return null!==Lb||null!==Mb}function Qb(){if(Lb){var a=Lb,b=Mb;Mb=Lb=null;Nb(a);if(b)for(a=0;a<b.length;a++)Nb(b[a])}}var Rb={injection:Kb,enqueueStateRestore:Ob,needsStateRestore:Pb,restoreStateIfNeeded:Qb};function Sb(a,b){return a(b)}function Tb(a,b,c){return a(b,c)}function Ub(){}var Vb=!1;function Wb(a,b){if(Vb)return a(b);Vb=!0;try{return Sb(a,b)}finally{Vb=!1,Pb()&&(Ub(),Qb())}}\nvar Xb={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Yb(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!Xb[a.type]:\"textarea\"===b?!0:!1}function Zb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}\nfunction $b(a,b){if(!m.canUseDOM||b&&!(\"addEventListener\"in document))return!1;a=\"on\"+a;b=a in document;b||(b=document.createElement(\"div\"),b.setAttribute(a,\"return;\"),b=\"function\"===typeof b[a]);return b}function ac(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction bc(a){var b=ac(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function cc(a){a._valueTracker||(a._valueTracker=bc(a))}function dc(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=ac(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}\nvar ec=ba.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,fc=\"function\"===typeof Symbol&&Symbol.for,gc=fc?Symbol.for(\"react.element\"):60103,hc=fc?Symbol.for(\"react.portal\"):60106,ic=fc?Symbol.for(\"react.fragment\"):60107,jc=fc?Symbol.for(\"react.strict_mode\"):60108,kc=fc?Symbol.for(\"react.profiler\"):60114,lc=fc?Symbol.for(\"react.provider\"):60109,mc=fc?Symbol.for(\"react.context\"):60110,pc=fc?Symbol.for(\"react.async_mode\"):60111,qc=fc?Symbol.for(\"react.forward_ref\"):60112,rc=fc?Symbol.for(\"react.timeout\"):\n60113,sc=\"function\"===typeof Symbol&&Symbol.iterator;function tc(a){if(null===a||\"undefined\"===typeof a)return null;a=sc&&a[sc]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nfunction uc(a){var b=a.type;if(\"function\"===typeof b)return b.displayName||b.name;if(\"string\"===typeof b)return b;switch(b){case pc:return\"AsyncMode\";case mc:return\"Context.Consumer\";case ic:return\"ReactFragment\";case hc:return\"ReactPortal\";case kc:return\"Profiler(\"+a.pendingProps.id+\")\";case lc:return\"Context.Provider\";case jc:return\"StrictMode\";case rc:return\"Timeout\"}if(\"object\"===typeof b&&null!==b)switch(b.$$typeof){case qc:return a=b.render.displayName||b.render.name||\"\",\"\"!==a?\"ForwardRef(\"+\na+\")\":\"ForwardRef\"}return null}function vc(a){var b=\"\";do{a:switch(a.tag){case 0:case 1:case 2:case 5:var c=a._debugOwner,d=a._debugSource;var e=uc(a);var f=null;c&&(f=uc(c));c=d;e=\"\\n    in \"+(e||\"Unknown\")+(c?\" (at \"+c.fileName.replace(/^.*[\\\\\\/]/,\"\")+\":\"+c.lineNumber+\")\":f?\" (created by \"+f+\")\":\"\");break a;default:e=\"\"}b+=e;a=a.return}while(a);return b}\nvar wc=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,xc={},zc={};function Ac(a){if(zc.hasOwnProperty(a))return!0;if(xc.hasOwnProperty(a))return!1;if(wc.test(a))return zc[a]=!0;xc[a]=!0;return!1}\nfunction Bc(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}function Cc(a,b,c,d){if(null===b||\"undefined\"===typeof b||Bc(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}\nfunction I(a,b,c,d,e){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b}var J={};\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){J[a]=new I(a,0,!1,a,null)});\n[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];J[b]=new I(b,1,!1,a[1],null)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){J[a]=new I(a,2,!1,a.toLowerCase(),null)});[\"autoReverse\",\"externalResourcesRequired\",\"preserveAlpha\"].forEach(function(a){J[a]=new I(a,2,!1,a,null)});\n\"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){J[a]=new I(a,3,!1,a.toLowerCase(),null)});[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){J[a]=new I(a,3,!0,a.toLowerCase(),null)});[\"capture\",\"download\"].forEach(function(a){J[a]=new I(a,4,!1,a.toLowerCase(),null)});\n[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){J[a]=new I(a,6,!1,a.toLowerCase(),null)});[\"rowSpan\",\"start\"].forEach(function(a){J[a]=new I(a,5,!1,a.toLowerCase(),null)});var Dc=/[\\-:]([a-z])/g;function Ec(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(Dc,\nEc);J[b]=new I(b,1,!1,a,null)});\"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(Dc,Ec);J[b]=new I(b,1,!1,a,\"http://www.w3.org/1999/xlink\")});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(Dc,Ec);J[b]=new I(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\")});J.tabIndex=new I(\"tabIndex\",1,!1,\"tabindex\",null);\nfunction Fc(a,b,c,d){var e=J.hasOwnProperty(b)?J[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1]?!1:!0;f||(Cc(b,c,e,d)&&(c=null),d||null===e?Ac(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}\nfunction Gc(a,b){var c=b.checked;return p({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Hc(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Ic(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function Jc(a,b){b=b.checked;null!=b&&Fc(a,\"checked\",b,!1)}\nfunction Kc(a,b){Jc(a,b);var c=Ic(b.value);if(null!=c)if(\"number\"===b.type){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);b.hasOwnProperty(\"value\")?Lc(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&Lc(a,b.type,Ic(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction Mc(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){b=\"\"+a._wrapperState.initialValue;var d=a.value;c||b===d||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!a.defaultChecked;a.defaultChecked=!a.defaultChecked;\"\"!==c&&(a.name=c)}function Lc(a,b,c){if(\"number\"!==b||a.ownerDocument.activeElement!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}\nfunction Ic(a){switch(typeof a){case \"boolean\":case \"number\":case \"object\":case \"string\":case \"undefined\":return a;default:return\"\"}}var Nc={change:{phasedRegistrationNames:{bubbled:\"onChange\",captured:\"onChangeCapture\"},dependencies:\"blur change click focus input keydown keyup selectionchange\".split(\" \")}};function Oc(a,b,c){a=H.getPooled(Nc.change,a,b,c);a.type=\"change\";Ob(c);Ya(a);return a}var Pc=null,Qc=null;function Rc(a){Ia(a,!1)}function Sc(a){var b=Oa(a);if(dc(b))return a}\nfunction Tc(a,b){if(\"change\"===a)return b}var Uc=!1;m.canUseDOM&&(Uc=$b(\"input\")&&(!document.documentMode||9<document.documentMode));function Vc(){Pc&&(Pc.detachEvent(\"onpropertychange\",Wc),Qc=Pc=null)}function Wc(a){\"value\"===a.propertyName&&Sc(Qc)&&(a=Oc(Qc,a,Zb(a)),Wb(Rc,a))}function Xc(a,b,c){\"focus\"===a?(Vc(),Pc=b,Qc=c,Pc.attachEvent(\"onpropertychange\",Wc)):\"blur\"===a&&Vc()}function Yc(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return Sc(Qc)}\nfunction Zc(a,b){if(\"click\"===a)return Sc(b)}function $c(a,b){if(\"input\"===a||\"change\"===a)return Sc(b)}\nvar ad={eventTypes:Nc,_isInputEventSupported:Uc,extractEvents:function(a,b,c,d){var e=b?Oa(b):window,f=void 0,g=void 0,h=e.nodeName&&e.nodeName.toLowerCase();\"select\"===h||\"input\"===h&&\"file\"===e.type?f=Tc:Yb(e)?Uc?f=$c:(f=Yc,g=Xc):(h=e.nodeName)&&\"input\"===h.toLowerCase()&&(\"checkbox\"===e.type||\"radio\"===e.type)&&(f=Zc);if(f&&(f=f(a,b)))return Oc(f,c,d);g&&g(a,e,b);\"blur\"===a&&(a=e._wrapperState)&&a.controlled&&\"number\"===e.type&&Lc(e,\"number\",e.value)}},bd=H.extend({view:null,detail:null}),cd={Alt:\"altKey\",\nControl:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function dd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=cd[a])?!!b[a]:!1}function ed(){return dd}\nvar fd=bd.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:ed,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)}}),gd=fd.extend({pointerId:null,width:null,height:null,pressure:null,tiltX:null,tiltY:null,pointerType:null,isPrimary:null}),hd={mouseEnter:{registrationName:\"onMouseEnter\",dependencies:[\"mouseout\",\"mouseover\"]},\nmouseLeave:{registrationName:\"onMouseLeave\",dependencies:[\"mouseout\",\"mouseover\"]},pointerEnter:{registrationName:\"onPointerEnter\",dependencies:[\"pointerout\",\"pointerover\"]},pointerLeave:{registrationName:\"onPointerLeave\",dependencies:[\"pointerout\",\"pointerover\"]}},id={eventTypes:hd,extractEvents:function(a,b,c,d){var e=\"mouseover\"===a||\"pointerover\"===a,f=\"mouseout\"===a||\"pointerout\"===a;if(e&&(c.relatedTarget||c.fromElement)||!f&&!e)return null;e=d.window===d?d:(e=d.ownerDocument)?e.defaultView||\ne.parentWindow:window;f?(f=b,b=(b=c.relatedTarget||c.toElement)?Na(b):null):f=null;if(f===b)return null;var g=void 0,h=void 0,k=void 0,n=void 0;if(\"mouseout\"===a||\"mouseover\"===a)g=fd,h=hd.mouseLeave,k=hd.mouseEnter,n=\"mouse\";else if(\"pointerout\"===a||\"pointerover\"===a)g=gd,h=hd.pointerLeave,k=hd.pointerEnter,n=\"pointer\";a=null==f?e:Oa(f);e=null==b?e:Oa(b);h=g.getPooled(h,f,c,d);h.type=n+\"leave\";h.target=a;h.relatedTarget=e;c=g.getPooled(k,b,c,d);c.type=n+\"enter\";c.target=e;c.relatedTarget=a;Za(h,\nc,f,b);return[h,c]}};function jd(a){var b=a;if(a.alternate)for(;b.return;)b=b.return;else{if(0!==(b.effectTag&2))return 1;for(;b.return;)if(b=b.return,0!==(b.effectTag&2))return 1}return 3===b.tag?2:3}function kd(a){2!==jd(a)?A(\"188\"):void 0}\nfunction ld(a){var b=a.alternate;if(!b)return b=jd(a),3===b?A(\"188\"):void 0,1===b?null:a;for(var c=a,d=b;;){var e=c.return,f=e?e.alternate:null;if(!e||!f)break;if(e.child===f.child){for(var g=e.child;g;){if(g===c)return kd(e),a;if(g===d)return kd(e),b;g=g.sibling}A(\"188\")}if(c.return!==d.return)c=e,d=f;else{g=!1;for(var h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===c){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}g?\nvoid 0:A(\"189\")}}c.alternate!==d?A(\"190\"):void 0}3!==c.tag?A(\"188\"):void 0;return c.stateNode.current===c?a:b}function md(a){a=ld(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}\nfunction nd(a){a=ld(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child&&4!==b.tag)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}var od=H.extend({animationName:null,elapsedTime:null,pseudoElement:null}),pd=H.extend({clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),qd=bd.extend({relatedTarget:null});\nfunction rd(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}\nvar sd={Esc:\"Escape\",Spacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},td={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",\n116:\"F5\",117:\"F6\",118:\"F7\",119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},ud=bd.extend({key:function(a){if(a.key){var b=sd[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=rd(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?td[a.keyCode]||\"Unidentified\":\"\"},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:ed,charCode:function(a){return\"keypress\"===\na.type?rd(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===a.type?rd(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),vd=fd.extend({dataTransfer:null}),wd=bd.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:ed}),xd=H.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),yd=fd.extend({deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in\na?-a.wheelDeltaX:0},deltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null}),zd=[[\"abort\",\"abort\"],[fb,\"animationEnd\"],[gb,\"animationIteration\"],[hb,\"animationStart\"],[\"canplay\",\"canPlay\"],[\"canplaythrough\",\"canPlayThrough\"],[\"drag\",\"drag\"],[\"dragenter\",\"dragEnter\"],[\"dragexit\",\"dragExit\"],[\"dragleave\",\"dragLeave\"],[\"dragover\",\"dragOver\"],[\"durationchange\",\"durationChange\"],[\"emptied\",\"emptied\"],[\"encrypted\",\"encrypted\"],\n[\"ended\",\"ended\"],[\"error\",\"error\"],[\"gotpointercapture\",\"gotPointerCapture\"],[\"load\",\"load\"],[\"loadeddata\",\"loadedData\"],[\"loadedmetadata\",\"loadedMetadata\"],[\"loadstart\",\"loadStart\"],[\"lostpointercapture\",\"lostPointerCapture\"],[\"mousemove\",\"mouseMove\"],[\"mouseout\",\"mouseOut\"],[\"mouseover\",\"mouseOver\"],[\"playing\",\"playing\"],[\"pointermove\",\"pointerMove\"],[\"pointerout\",\"pointerOut\"],[\"pointerover\",\"pointerOver\"],[\"progress\",\"progress\"],[\"scroll\",\"scroll\"],[\"seeking\",\"seeking\"],[\"stalled\",\"stalled\"],\n[\"suspend\",\"suspend\"],[\"timeupdate\",\"timeUpdate\"],[\"toggle\",\"toggle\"],[\"touchmove\",\"touchMove\"],[ib,\"transitionEnd\"],[\"waiting\",\"waiting\"],[\"wheel\",\"wheel\"]],Ad={},Bd={};function Cd(a,b){var c=a[0];a=a[1];var d=\"on\"+(a[0].toUpperCase()+a.slice(1));b={phasedRegistrationNames:{bubbled:d,captured:d+\"Capture\"},dependencies:[c],isInteractive:b};Ad[a]=b;Bd[c]=b}\n[[\"blur\",\"blur\"],[\"cancel\",\"cancel\"],[\"click\",\"click\"],[\"close\",\"close\"],[\"contextmenu\",\"contextMenu\"],[\"copy\",\"copy\"],[\"cut\",\"cut\"],[\"dblclick\",\"doubleClick\"],[\"dragend\",\"dragEnd\"],[\"dragstart\",\"dragStart\"],[\"drop\",\"drop\"],[\"focus\",\"focus\"],[\"input\",\"input\"],[\"invalid\",\"invalid\"],[\"keydown\",\"keyDown\"],[\"keypress\",\"keyPress\"],[\"keyup\",\"keyUp\"],[\"mousedown\",\"mouseDown\"],[\"mouseup\",\"mouseUp\"],[\"paste\",\"paste\"],[\"pause\",\"pause\"],[\"play\",\"play\"],[\"pointercancel\",\"pointerCancel\"],[\"pointerdown\",\"pointerDown\"],\n[\"pointerup\",\"pointerUp\"],[\"ratechange\",\"rateChange\"],[\"reset\",\"reset\"],[\"seeked\",\"seeked\"],[\"submit\",\"submit\"],[\"touchcancel\",\"touchCancel\"],[\"touchend\",\"touchEnd\"],[\"touchstart\",\"touchStart\"],[\"volumechange\",\"volumeChange\"]].forEach(function(a){Cd(a,!0)});zd.forEach(function(a){Cd(a,!1)});\nvar Dd={eventTypes:Ad,isInteractiveTopLevelEventType:function(a){a=Bd[a];return void 0!==a&&!0===a.isInteractive},extractEvents:function(a,b,c,d){var e=Bd[a];if(!e)return null;switch(a){case \"keypress\":if(0===rd(c))return null;case \"keydown\":case \"keyup\":a=ud;break;case \"blur\":case \"focus\":a=qd;break;case \"click\":if(2===c.button)return null;case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":a=fd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":a=\nvd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":a=wd;break;case fb:case gb:case hb:a=od;break;case ib:a=xd;break;case \"scroll\":a=bd;break;case \"wheel\":a=yd;break;case \"copy\":case \"cut\":case \"paste\":a=pd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":a=gd;break;default:a=H}b=a.getPooled(e,b,c,d);Ya(b);return b}},Ed=Dd.isInteractiveTopLevelEventType,\nFd=[];function Gd(a){var b=a.targetInst;do{if(!b){a.ancestors.push(b);break}var c;for(c=b;c.return;)c=c.return;c=3!==c.tag?null:c.stateNode.containerInfo;if(!c)break;a.ancestors.push(b);b=Na(c)}while(b);for(c=0;c<a.ancestors.length;c++)b=a.ancestors[c],Ja(a.topLevelType,b,a.nativeEvent,Zb(a.nativeEvent))}var Hd=!0;function Id(a){Hd=!!a}function K(a,b){if(!b)return null;var c=(Ed(a)?Kd:Ld).bind(null,a);b.addEventListener(a,c,!1)}\nfunction Md(a,b){if(!b)return null;var c=(Ed(a)?Kd:Ld).bind(null,a);b.addEventListener(a,c,!0)}function Kd(a,b){Tb(Ld,a,b)}function Ld(a,b){if(Hd){var c=Zb(b);c=Na(c);null===c||\"number\"!==typeof c.tag||2===jd(c)||(c=null);if(Fd.length){var d=Fd.pop();d.topLevelType=a;d.nativeEvent=b;d.targetInst=c;a=d}else a={topLevelType:a,nativeEvent:b,targetInst:c,ancestors:[]};try{Wb(Gd,a)}finally{a.topLevelType=null,a.nativeEvent=null,a.targetInst=null,a.ancestors.length=0,10>Fd.length&&Fd.push(a)}}}\nvar Nd={get _enabled(){return Hd},setEnabled:Id,isEnabled:function(){return Hd},trapBubbledEvent:K,trapCapturedEvent:Md,dispatchEvent:Ld},Od={},Pd=0,Qd=\"_reactListenersID\"+(\"\"+Math.random()).slice(2);function Rd(a){Object.prototype.hasOwnProperty.call(a,Qd)||(a[Qd]=Pd++,Od[a[Qd]]={});return Od[a[Qd]]}function Sd(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Td(a,b){var c=Sd(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Sd(c)}}function Ud(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nvar Vd=m.canUseDOM&&\"documentMode\"in document&&11>=document.documentMode,Wd={select:{phasedRegistrationNames:{bubbled:\"onSelect\",captured:\"onSelectCapture\"},dependencies:\"blur contextmenu focus keydown keyup mousedown mouseup selectionchange\".split(\" \")}},Xd=null,Yd=null,Zd=null,$d=!1;\nfunction ae(a,b){if($d||null==Xd||Xd!==da())return null;var c=Xd;\"selectionStart\"in c&&Ud(c)?c={start:c.selectionStart,end:c.selectionEnd}:window.getSelection?(c=window.getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset}):c=void 0;return Zd&&ea(Zd,c)?null:(Zd=c,a=H.getPooled(Wd.select,Yd,a,b),a.type=\"select\",a.target=Xd,Ya(a),a)}\nvar be={eventTypes:Wd,extractEvents:function(a,b,c,d){var e=d.window===d?d.document:9===d.nodeType?d:d.ownerDocument,f;if(!(f=!e)){a:{e=Rd(e);f=sa.onSelect;for(var g=0;g<f.length;g++){var h=f[g];if(!e.hasOwnProperty(h)||!e[h]){e=!1;break a}}e=!0}f=!e}if(f)return null;e=b?Oa(b):window;switch(a){case \"focus\":if(Yb(e)||\"true\"===e.contentEditable)Xd=e,Yd=b,Zd=null;break;case \"blur\":Zd=Yd=Xd=null;break;case \"mousedown\":$d=!0;break;case \"contextmenu\":case \"mouseup\":return $d=!1,ae(c,d);case \"selectionchange\":if(Vd)break;\ncase \"keydown\":case \"keyup\":return ae(c,d)}return null}};Ga.injectEventPluginOrder(\"ResponderEventPlugin SimpleEventPlugin TapEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin\".split(\" \"));wa=Qa.getFiberCurrentPropsFromNode;xa=Qa.getInstanceFromNode;ya=Qa.getNodeFromInstance;Ga.injectEventPluginsByName({SimpleEventPlugin:Dd,EnterLeaveEventPlugin:id,ChangeEventPlugin:ad,SelectEventPlugin:be,BeforeInputEventPlugin:Ib});\nvar ce=\"function\"===typeof requestAnimationFrame?requestAnimationFrame:void 0,de=Date,ee=setTimeout,fe=clearTimeout,ge=void 0;if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var he=performance;ge=function(){return he.now()}}else ge=function(){return de.now()};var ie=void 0,je=void 0;\nif(m.canUseDOM){var ke=\"function\"===typeof ce?ce:function(){A(\"276\")},L=null,le=null,me=-1,ne=!1,oe=!1,pe=0,qe=33,re=33,se={didTimeout:!1,timeRemaining:function(){var a=pe-ge();return 0<a?a:0}},ue=function(a,b){var c=a.scheduledCallback,d=!1;try{c(b),d=!0}finally{je(a),d||(ne=!0,window.postMessage(te,\"*\"))}},te=\"__reactIdleCallback$\"+Math.random().toString(36).slice(2);window.addEventListener(\"message\",function(a){if(a.source===window&&a.data===te&&(ne=!1,null!==L)){if(null!==L){var b=ge();if(!(-1===\nme||me>b)){a=-1;for(var c=[],d=L;null!==d;){var e=d.timeoutTime;-1!==e&&e<=b?c.push(d):-1!==e&&(-1===a||e<a)&&(a=e);d=d.next}if(0<c.length)for(se.didTimeout=!0,b=0,d=c.length;b<d;b++)ue(c[b],se);me=a}}for(a=ge();0<pe-a&&null!==L;)a=L,se.didTimeout=!1,ue(a,se),a=ge();null===L||oe||(oe=!0,ke(ve))}},!1);var ve=function(a){oe=!1;var b=a-pe+re;b<re&&qe<re?(8>b&&(b=8),re=b<qe?qe:b):qe=b;pe=a+re;ne||(ne=!0,window.postMessage(te,\"*\"))};ie=function(a,b){var c=-1;null!=b&&\"number\"===typeof b.timeout&&(c=ge()+\nb.timeout);if(-1===me||-1!==c&&c<me)me=c;a={scheduledCallback:a,timeoutTime:c,prev:null,next:null};null===L?L=a:(b=a.prev=le,null!==b&&(b.next=a));le=a;oe||(oe=!0,ke(ve));return a};je=function(a){if(null!==a.prev||L===a){var b=a.next,c=a.prev;a.next=null;a.prev=null;null!==b?null!==c?(c.next=b,b.prev=c):(b.prev=null,L=b):null!==c?(c.next=null,le=c):le=L=null}}}else{var we=new Map;ie=function(a){var b={scheduledCallback:a,timeoutTime:0,next:null,prev:null},c=ee(function(){a({timeRemaining:function(){return Infinity},\ndidTimeout:!1})});we.set(a,c);return b};je=function(a){var b=we.get(a.scheduledCallback);we.delete(a);fe(b)}}function xe(a){var b=\"\";ba.Children.forEach(a,function(a){null==a||\"string\"!==typeof a&&\"number\"!==typeof a||(b+=a)});return b}function ye(a,b){a=p({children:void 0},b);if(b=xe(b.children))a.children=b;return a}\nfunction ze(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+c;b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction Ae(a,b){var c=b.value;a._wrapperState={initialValue:null!=c?c:b.defaultValue,wasMultiple:!!b.multiple}}function Be(a,b){null!=b.dangerouslySetInnerHTML?A(\"91\"):void 0;return p({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function Ce(a,b){var c=b.value;null==c&&(c=b.defaultValue,b=b.children,null!=b&&(null!=c?A(\"92\"):void 0,Array.isArray(b)&&(1>=b.length?void 0:A(\"93\"),b=b[0]),c=\"\"+b),null==c&&(c=\"\"));a._wrapperState={initialValue:\"\"+c}}\nfunction De(a,b){var c=b.value;null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&(a.defaultValue=c));null!=b.defaultValue&&(a.defaultValue=b.defaultValue)}function Ee(a){var b=a.textContent;b===a._wrapperState.initialValue&&(a.value=b)}var Fe={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};\nfunction Ge(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function He(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?Ge(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar Ie=void 0,Je=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==Fe.svg||\"innerHTML\"in a)a.innerHTML=b;else{Ie=Ie||document.createElement(\"div\");Ie.innerHTML=\"<svg>\"+b+\"</svg>\";for(b=Ie.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction Ke(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar Le={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,\nstopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},Me=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(Le).forEach(function(a){Me.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);Le[b]=Le[a]})});\nfunction Ne(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\");var e=c;var f=b[c];e=null==f||\"boolean\"===typeof f||\"\"===f?\"\":d||\"number\"!==typeof f||0===f||Le.hasOwnProperty(e)&&Le[e]?(\"\"+f).trim():f+\"px\";\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var Oe=p({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction Pe(a,b,c){b&&(Oe[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML?A(\"137\",a,c()):void 0),null!=b.dangerouslySetInnerHTML&&(null!=b.children?A(\"60\"):void 0,\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML?void 0:A(\"61\")),null!=b.style&&\"object\"!==typeof b.style?A(\"62\",c()):void 0)}\nfunction Qe(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}var Re=v.thatReturns(\"\");\nfunction Se(a,b){a=9===a.nodeType||11===a.nodeType?a:a.ownerDocument;var c=Rd(a);b=sa[b];for(var d=0;d<b.length;d++){var e=b[d];if(!c.hasOwnProperty(e)||!c[e]){switch(e){case \"scroll\":Md(\"scroll\",a);break;case \"focus\":case \"blur\":Md(\"focus\",a);Md(\"blur\",a);c.blur=!0;c.focus=!0;break;case \"cancel\":case \"close\":$b(e,!0)&&Md(e,a);break;case \"invalid\":case \"submit\":case \"reset\":break;default:-1===jb.indexOf(e)&&K(e,a)}c[e]=!0}}}\nfunction Te(a,b,c,d){c=9===c.nodeType?c:c.ownerDocument;d===Fe.html&&(d=Ge(a));d===Fe.html?\"script\"===a?(a=c.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):a=\"string\"===typeof b.is?c.createElement(a,{is:b.is}):c.createElement(a):a=c.createElementNS(d,a);return a}function Ue(a,b){return(9===b.nodeType?b:b.ownerDocument).createTextNode(a)}\nfunction Ve(a,b,c,d){var e=Qe(b,c);switch(b){case \"iframe\":case \"object\":K(\"load\",a);var f=c;break;case \"video\":case \"audio\":for(f=0;f<jb.length;f++)K(jb[f],a);f=c;break;case \"source\":K(\"error\",a);f=c;break;case \"img\":case \"image\":case \"link\":K(\"error\",a);K(\"load\",a);f=c;break;case \"form\":K(\"reset\",a);K(\"submit\",a);f=c;break;case \"details\":K(\"toggle\",a);f=c;break;case \"input\":Hc(a,c);f=Gc(a,c);K(\"invalid\",a);Se(d,\"onChange\");break;case \"option\":f=ye(a,c);break;case \"select\":Ae(a,c);f=p({},c,{value:void 0});\nK(\"invalid\",a);Se(d,\"onChange\");break;case \"textarea\":Ce(a,c);f=Be(a,c);K(\"invalid\",a);Se(d,\"onChange\");break;default:f=c}Pe(b,f,Re);var g=f,h;for(h in g)if(g.hasOwnProperty(h)){var k=g[h];\"style\"===h?Ne(a,k,Re):\"dangerouslySetInnerHTML\"===h?(k=k?k.__html:void 0,null!=k&&Je(a,k)):\"children\"===h?\"string\"===typeof k?(\"textarea\"!==b||\"\"!==k)&&Ke(a,k):\"number\"===typeof k&&Ke(a,\"\"+k):\"suppressContentEditableWarning\"!==h&&\"suppressHydrationWarning\"!==h&&\"autoFocus\"!==h&&(ra.hasOwnProperty(h)?null!=k&&Se(d,\nh):null!=k&&Fc(a,h,k,e))}switch(b){case \"input\":cc(a);Mc(a,c,!1);break;case \"textarea\":cc(a);Ee(a,c);break;case \"option\":null!=c.value&&a.setAttribute(\"value\",c.value);break;case \"select\":a.multiple=!!c.multiple;b=c.value;null!=b?ze(a,!!c.multiple,b,!1):null!=c.defaultValue&&ze(a,!!c.multiple,c.defaultValue,!0);break;default:\"function\"===typeof f.onClick&&(a.onclick=v)}}\nfunction We(a,b,c,d,e){var f=null;switch(b){case \"input\":c=Gc(a,c);d=Gc(a,d);f=[];break;case \"option\":c=ye(a,c);d=ye(a,d);f=[];break;case \"select\":c=p({},c,{value:void 0});d=p({},d,{value:void 0});f=[];break;case \"textarea\":c=Be(a,c);d=Be(a,d);f=[];break;default:\"function\"!==typeof c.onClick&&\"function\"===typeof d.onClick&&(a.onclick=v)}Pe(b,d,Re);b=a=void 0;var g=null;for(a in c)if(!d.hasOwnProperty(a)&&c.hasOwnProperty(a)&&null!=c[a])if(\"style\"===a){var h=c[a];for(b in h)h.hasOwnProperty(b)&&(g||\n(g={}),g[b]=\"\")}else\"dangerouslySetInnerHTML\"!==a&&\"children\"!==a&&\"suppressContentEditableWarning\"!==a&&\"suppressHydrationWarning\"!==a&&\"autoFocus\"!==a&&(ra.hasOwnProperty(a)?f||(f=[]):(f=f||[]).push(a,null));for(a in d){var k=d[a];h=null!=c?c[a]:void 0;if(d.hasOwnProperty(a)&&k!==h&&(null!=k||null!=h))if(\"style\"===a)if(h){for(b in h)!h.hasOwnProperty(b)||k&&k.hasOwnProperty(b)||(g||(g={}),g[b]=\"\");for(b in k)k.hasOwnProperty(b)&&h[b]!==k[b]&&(g||(g={}),g[b]=k[b])}else g||(f||(f=[]),f.push(a,g)),\ng=k;else\"dangerouslySetInnerHTML\"===a?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(a,\"\"+k)):\"children\"===a?h===k||\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(a,\"\"+k):\"suppressContentEditableWarning\"!==a&&\"suppressHydrationWarning\"!==a&&(ra.hasOwnProperty(a)?(null!=k&&Se(e,a),f||h===k||(f=[])):(f=f||[]).push(a,k))}g&&(f=f||[]).push(\"style\",g);return f}\nfunction Xe(a,b,c,d,e){\"input\"===c&&\"radio\"===e.type&&null!=e.name&&Jc(a,e);Qe(c,d);d=Qe(c,e);for(var f=0;f<b.length;f+=2){var g=b[f],h=b[f+1];\"style\"===g?Ne(a,h,Re):\"dangerouslySetInnerHTML\"===g?Je(a,h):\"children\"===g?Ke(a,h):Fc(a,g,h,d)}switch(c){case \"input\":Kc(a,e);break;case \"textarea\":De(a,e);break;case \"select\":a._wrapperState.initialValue=void 0,b=a._wrapperState.wasMultiple,a._wrapperState.wasMultiple=!!e.multiple,c=e.value,null!=c?ze(a,!!e.multiple,c,!1):b!==!!e.multiple&&(null!=e.defaultValue?\nze(a,!!e.multiple,e.defaultValue,!0):ze(a,!!e.multiple,e.multiple?[]:\"\",!1))}}\nfunction Ye(a,b,c,d,e){switch(b){case \"iframe\":case \"object\":K(\"load\",a);break;case \"video\":case \"audio\":for(d=0;d<jb.length;d++)K(jb[d],a);break;case \"source\":K(\"error\",a);break;case \"img\":case \"image\":case \"link\":K(\"error\",a);K(\"load\",a);break;case \"form\":K(\"reset\",a);K(\"submit\",a);break;case \"details\":K(\"toggle\",a);break;case \"input\":Hc(a,c);K(\"invalid\",a);Se(e,\"onChange\");break;case \"select\":Ae(a,c);K(\"invalid\",a);Se(e,\"onChange\");break;case \"textarea\":Ce(a,c),K(\"invalid\",a),Se(e,\"onChange\")}Pe(b,\nc,Re);d=null;for(var f in c)if(c.hasOwnProperty(f)){var g=c[f];\"children\"===f?\"string\"===typeof g?a.textContent!==g&&(d=[\"children\",g]):\"number\"===typeof g&&a.textContent!==\"\"+g&&(d=[\"children\",\"\"+g]):ra.hasOwnProperty(f)&&null!=g&&Se(e,f)}switch(b){case \"input\":cc(a);Mc(a,c,!0);break;case \"textarea\":cc(a);Ee(a,c);break;case \"select\":case \"option\":break;default:\"function\"===typeof c.onClick&&(a.onclick=v)}return d}function Ze(a,b){return a.nodeValue!==b}\nvar $e={createElement:Te,createTextNode:Ue,setInitialProperties:Ve,diffProperties:We,updateProperties:Xe,diffHydratedProperties:Ye,diffHydratedText:Ze,warnForUnmatchedText:function(){},warnForDeletedHydratableElement:function(){},warnForDeletedHydratableText:function(){},warnForInsertedHydratedElement:function(){},warnForInsertedHydratedText:function(){},restoreControlledState:function(a,b,c){switch(b){case \"input\":Kc(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;\nc=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Pa(d);e?void 0:A(\"90\");dc(d);Kc(d,e)}}}break;case \"textarea\":De(a,c);break;case \"select\":b=c.value,null!=b&&ze(a,!!c.multiple,b,!1)}}},af=null,bf=null;function cf(a,b){switch(a){case \"button\":case \"input\":case \"select\":case \"textarea\":return!!b.autoFocus}return!1}\nfunction df(a,b){return\"textarea\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&\"string\"===typeof b.dangerouslySetInnerHTML.__html}var ef=ge,ff=ie,gf=je;function hf(a){for(a=a.nextSibling;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}function jf(a){for(a=a.firstChild;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}new Set;var kf=[],lf=-1;function mf(a){return{current:a}}\nfunction M(a){0>lf||(a.current=kf[lf],kf[lf]=null,lf--)}function N(a,b){lf++;kf[lf]=a.current;a.current=b}var nf=mf(ha),O=mf(!1),of=ha;function pf(a){return qf(a)?of:nf.current}\nfunction rf(a,b){var c=a.type.contextTypes;if(!c)return ha;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function qf(a){return 2===a.tag&&null!=a.type.childContextTypes}function sf(a){qf(a)&&(M(O,a),M(nf,a))}function tf(a){M(O,a);M(nf,a)}\nfunction uf(a,b,c){nf.current!==ha?A(\"168\"):void 0;N(nf,b,a);N(O,c,a)}function vf(a,b){var c=a.stateNode,d=a.type.childContextTypes;if(\"function\"!==typeof c.getChildContext)return b;c=c.getChildContext();for(var e in c)e in d?void 0:A(\"108\",uc(a)||\"Unknown\",e);return p({},b,c)}function wf(a){if(!qf(a))return!1;var b=a.stateNode;b=b&&b.__reactInternalMemoizedMergedChildContext||ha;of=nf.current;N(nf,b,a);N(O,O.current,a);return!0}\nfunction xf(a,b){var c=a.stateNode;c?void 0:A(\"169\");if(b){var d=vf(a,of);c.__reactInternalMemoizedMergedChildContext=d;M(O,a);M(nf,a);N(nf,d,a)}else M(O,a);N(O,b,a)}\nfunction yf(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=null;this.index=0;this.ref=null;this.pendingProps=b;this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.expirationTime=0;this.alternate=null}\nfunction zf(a,b,c){var d=a.alternate;null===d?(d=new yf(a.tag,b,a.key,a.mode),d.type=a.type,d.stateNode=a.stateNode,d.alternate=a,a.alternate=d):(d.pendingProps=b,d.effectTag=0,d.nextEffect=null,d.firstEffect=null,d.lastEffect=null);d.expirationTime=c;d.child=a.child;d.memoizedProps=a.memoizedProps;d.memoizedState=a.memoizedState;d.updateQueue=a.updateQueue;d.sibling=a.sibling;d.index=a.index;d.ref=a.ref;return d}\nfunction Af(a,b,c){var d=a.type,e=a.key;a=a.props;if(\"function\"===typeof d)var f=d.prototype&&d.prototype.isReactComponent?2:0;else if(\"string\"===typeof d)f=5;else switch(d){case ic:return Bf(a.children,b,c,e);case pc:f=11;b|=3;break;case jc:f=11;b|=2;break;case kc:return d=new yf(15,a,e,b|4),d.type=kc,d.expirationTime=c,d;case rc:f=16;b|=2;break;default:a:{switch(\"object\"===typeof d&&null!==d?d.$$typeof:null){case lc:f=13;break a;case mc:f=12;break a;case qc:f=14;break a;default:A(\"130\",null==d?\nd:typeof d,\"\")}f=void 0}}b=new yf(f,a,e,b);b.type=d;b.expirationTime=c;return b}function Bf(a,b,c,d){a=new yf(10,a,d,b);a.expirationTime=c;return a}function Cf(a,b,c){a=new yf(6,a,null,b);a.expirationTime=c;return a}function Df(a,b,c){b=new yf(4,null!==a.children?a.children:[],a.key,b);b.expirationTime=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction Ef(a,b,c){b=new yf(3,null,null,b?3:0);a={current:b,containerInfo:a,pendingChildren:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,pendingCommitExpirationTime:0,finishedWork:null,context:null,pendingContext:null,hydrate:c,remainingExpirationTime:0,firstBatch:null,nextScheduledRoot:null};return b.stateNode=a}var Ff=null,Gf=null;function Hf(a){return function(b){try{return a(b)}catch(c){}}}\nfunction If(a){if(\"undefined\"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(b.isDisabled||!b.supportsFiber)return!0;try{var c=b.inject(a);Ff=Hf(function(a){return b.onCommitFiberRoot(c,a)});Gf=Hf(function(a){return b.onCommitFiberUnmount(c,a)})}catch(d){}return!0}function Jf(a){\"function\"===typeof Ff&&Ff(a)}function Kf(a){\"function\"===typeof Gf&&Gf(a)}var Lf=!1;\nfunction Mf(a){return{expirationTime:0,baseState:a,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function Nf(a){return{expirationTime:a.expirationTime,baseState:a.baseState,firstUpdate:a.firstUpdate,lastUpdate:a.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}\nfunction Of(a){return{expirationTime:a,tag:0,payload:null,callback:null,next:null,nextEffect:null}}function Pf(a,b,c){null===a.lastUpdate?a.firstUpdate=a.lastUpdate=b:(a.lastUpdate.next=b,a.lastUpdate=b);if(0===a.expirationTime||a.expirationTime>c)a.expirationTime=c}\nfunction Qf(a,b,c){var d=a.alternate;if(null===d){var e=a.updateQueue;var f=null;null===e&&(e=a.updateQueue=Mf(a.memoizedState))}else e=a.updateQueue,f=d.updateQueue,null===e?null===f?(e=a.updateQueue=Mf(a.memoizedState),f=d.updateQueue=Mf(d.memoizedState)):e=a.updateQueue=Nf(f):null===f&&(f=d.updateQueue=Nf(e));null===f||e===f?Pf(e,b,c):null===e.lastUpdate||null===f.lastUpdate?(Pf(e,b,c),Pf(f,b,c)):(Pf(e,b,c),f.lastUpdate=b)}\nfunction Rf(a,b,c){var d=a.updateQueue;d=null===d?a.updateQueue=Mf(a.memoizedState):Sf(a,d);null===d.lastCapturedUpdate?d.firstCapturedUpdate=d.lastCapturedUpdate=b:(d.lastCapturedUpdate.next=b,d.lastCapturedUpdate=b);if(0===d.expirationTime||d.expirationTime>c)d.expirationTime=c}function Sf(a,b){var c=a.alternate;null!==c&&b===c.updateQueue&&(b=a.updateQueue=Nf(b));return b}\nfunction Tf(a,b,c,d,e,f){switch(c.tag){case 1:return a=c.payload,\"function\"===typeof a?a.call(f,d,e):a;case 3:a.effectTag=a.effectTag&-1025|64;case 0:a=c.payload;e=\"function\"===typeof a?a.call(f,d,e):a;if(null===e||void 0===e)break;return p({},d,e);case 2:Lf=!0}return d}\nfunction Uf(a,b,c,d,e){Lf=!1;if(!(0===b.expirationTime||b.expirationTime>e)){b=Sf(a,b);for(var f=b.baseState,g=null,h=0,k=b.firstUpdate,n=f;null!==k;){var r=k.expirationTime;if(r>e){if(null===g&&(g=k,f=n),0===h||h>r)h=r}else n=Tf(a,b,k,n,c,d),null!==k.callback&&(a.effectTag|=32,k.nextEffect=null,null===b.lastEffect?b.firstEffect=b.lastEffect=k:(b.lastEffect.nextEffect=k,b.lastEffect=k));k=k.next}r=null;for(k=b.firstCapturedUpdate;null!==k;){var w=k.expirationTime;if(w>e){if(null===r&&(r=k,null===\ng&&(f=n)),0===h||h>w)h=w}else n=Tf(a,b,k,n,c,d),null!==k.callback&&(a.effectTag|=32,k.nextEffect=null,null===b.lastCapturedEffect?b.firstCapturedEffect=b.lastCapturedEffect=k:(b.lastCapturedEffect.nextEffect=k,b.lastCapturedEffect=k));k=k.next}null===g&&(b.lastUpdate=null);null===r?b.lastCapturedUpdate=null:a.effectTag|=32;null===g&&null===r&&(f=n);b.baseState=f;b.firstUpdate=g;b.firstCapturedUpdate=r;b.expirationTime=h;a.memoizedState=n}}\nfunction Vf(a,b){\"function\"!==typeof a?A(\"191\",a):void 0;a.call(b)}\nfunction Wf(a,b,c){null!==b.firstCapturedUpdate&&(null!==b.lastUpdate&&(b.lastUpdate.next=b.firstCapturedUpdate,b.lastUpdate=b.lastCapturedUpdate),b.firstCapturedUpdate=b.lastCapturedUpdate=null);a=b.firstEffect;for(b.firstEffect=b.lastEffect=null;null!==a;){var d=a.callback;null!==d&&(a.callback=null,Vf(d,c));a=a.nextEffect}a=b.firstCapturedEffect;for(b.firstCapturedEffect=b.lastCapturedEffect=null;null!==a;)b=a.callback,null!==b&&(a.callback=null,Vf(b,c)),a=a.nextEffect}\nfunction Xf(a,b){return{value:a,source:b,stack:vc(b)}}var Yf=mf(null),Zf=mf(null),$f=mf(0);function ag(a){var b=a.type._context;N($f,b._changedBits,a);N(Zf,b._currentValue,a);N(Yf,a,a);b._currentValue=a.pendingProps.value;b._changedBits=a.stateNode}function bg(a){var b=$f.current,c=Zf.current;M(Yf,a);M(Zf,a);M($f,a);a=a.type._context;a._currentValue=c;a._changedBits=b}var cg={},dg=mf(cg),eg=mf(cg),fg=mf(cg);function gg(a){a===cg?A(\"174\"):void 0;return a}\nfunction ig(a,b){N(fg,b,a);N(eg,a,a);N(dg,cg,a);var c=b.nodeType;switch(c){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:He(null,\"\");break;default:c=8===c?b.parentNode:b,b=c.namespaceURI||null,c=c.tagName,b=He(b,c)}M(dg,a);N(dg,b,a)}function jg(a){M(dg,a);M(eg,a);M(fg,a)}function kg(a){eg.current===a&&(M(dg,a),M(eg,a))}function lg(a,b,c){var d=a.memoizedState;b=b(c,d);d=null===b||void 0===b?d:p({},d,b);a.memoizedState=d;a=a.updateQueue;null!==a&&0===a.expirationTime&&(a.baseState=d)}\nvar pg={isMounted:function(a){return(a=a._reactInternalFiber)?2===jd(a):!1},enqueueSetState:function(a,b,c){a=a._reactInternalFiber;var d=mg();d=ng(d,a);var e=Of(d);e.payload=b;void 0!==c&&null!==c&&(e.callback=c);Qf(a,e,d);og(a,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternalFiber;var d=mg();d=ng(d,a);var e=Of(d);e.tag=1;e.payload=b;void 0!==c&&null!==c&&(e.callback=c);Qf(a,e,d);og(a,d)},enqueueForceUpdate:function(a,b){a=a._reactInternalFiber;var c=mg();c=ng(c,a);var d=Of(c);d.tag=2;void 0!==\nb&&null!==b&&(d.callback=b);Qf(a,d,c);og(a,c)}};function qg(a,b,c,d,e,f){var g=a.stateNode;a=a.type;return\"function\"===typeof g.shouldComponentUpdate?g.shouldComponentUpdate(c,e,f):a.prototype&&a.prototype.isPureReactComponent?!ea(b,c)||!ea(d,e):!0}\nfunction rg(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&pg.enqueueReplaceState(b,b.state,null)}\nfunction sg(a,b){var c=a.type,d=a.stateNode,e=a.pendingProps,f=pf(a);d.props=e;d.state=a.memoizedState;d.refs=ha;d.context=rf(a,f);f=a.updateQueue;null!==f&&(Uf(a,f,e,d,b),d.state=a.memoizedState);f=a.type.getDerivedStateFromProps;\"function\"===typeof f&&(lg(a,f,e),d.state=a.memoizedState);\"function\"===typeof c.getDerivedStateFromProps||\"function\"===typeof d.getSnapshotBeforeUpdate||\"function\"!==typeof d.UNSAFE_componentWillMount&&\"function\"!==typeof d.componentWillMount||(c=d.state,\"function\"===typeof d.componentWillMount&&\nd.componentWillMount(),\"function\"===typeof d.UNSAFE_componentWillMount&&d.UNSAFE_componentWillMount(),c!==d.state&&pg.enqueueReplaceState(d,d.state,null),f=a.updateQueue,null!==f&&(Uf(a,f,e,d,b),d.state=a.memoizedState));\"function\"===typeof d.componentDidMount&&(a.effectTag|=4)}var tg=Array.isArray;\nfunction ug(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;var d=void 0;c&&(2!==c.tag?A(\"110\"):void 0,d=c.stateNode);d?void 0:A(\"147\",a);var e=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs===ha?d.refs={}:d.refs;null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}\"string\"!==typeof a?A(\"148\"):void 0;c._owner?void 0:A(\"254\",a)}return a}\nfunction vg(a,b){\"textarea\"!==a.type&&A(\"31\",\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b,\"\")}\nfunction wg(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.effectTag=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b,c){a=zf(a,b,c);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.effectTag=\n2,c):d;b.effectTag=2;return c}function g(b){a&&null===b.alternate&&(b.effectTag=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Cf(c,a.mode,d),b.return=a,b;b=e(b,c,d);b.return=a;return b}function k(a,b,c,d){if(null!==b&&b.type===c.type)return d=e(b,c.props,d),d.ref=ug(a,b,c),d.return=a,d;d=Af(c,a.mode,d);d.ref=ug(a,b,c);d.return=a;return d}function n(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=\nDf(c,a.mode,d),b.return=a,b;b=e(b,c.children||[],d);b.return=a;return b}function r(a,b,c,d,f){if(null===b||10!==b.tag)return b=Bf(c,a.mode,d,f),b.return=a,b;b=e(b,c,d);b.return=a;return b}function w(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=Cf(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case gc:return c=Af(b,a.mode,c),c.ref=ug(a,null,b),c.return=a,c;case hc:return b=Df(b,a.mode,c),b.return=a,b}if(tg(b)||tc(b))return b=Bf(b,a.mode,c,null),b.return=\na,b;vg(a,b)}return null}function P(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case gc:return c.key===e?c.type===ic?r(a,b,c.props.children,d,e):k(a,b,c,d):null;case hc:return c.key===e?n(a,b,c,d):null}if(tg(c)||tc(c))return null!==e?null:r(a,b,c,d,null);vg(a,c)}return null}function nc(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=a.get(c)||null,h(b,a,\"\"+d,e);\nif(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case gc:return a=a.get(null===d.key?c:d.key)||null,d.type===ic?r(b,a,d.props.children,e,d.key):k(b,a,d,e);case hc:return a=a.get(null===d.key?c:d.key)||null,n(b,a,d,e)}if(tg(d)||tc(d))return a=a.get(c)||null,r(b,a,d,e,null);vg(b,d)}return null}function Jd(e,g,h,k){for(var u=null,x=null,t=g,q=g=0,n=null;null!==t&&q<h.length;q++){t.index>q?(n=t,t=null):n=t.sibling;var l=P(e,t,h[q],k);if(null===l){null===t&&(t=n);break}a&&t&&null===l.alternate&&b(e,\nt);g=f(l,g,q);null===x?u=l:x.sibling=l;x=l;t=n}if(q===h.length)return c(e,t),u;if(null===t){for(;q<h.length;q++)if(t=w(e,h[q],k))g=f(t,g,q),null===x?u=t:x.sibling=t,x=t;return u}for(t=d(e,t);q<h.length;q++)if(n=nc(t,e,q,h[q],k))a&&null!==n.alternate&&t.delete(null===n.key?q:n.key),g=f(n,g,q),null===x?u=n:x.sibling=n,x=n;a&&t.forEach(function(a){return b(e,a)});return u}function E(e,g,h,k){var u=tc(h);\"function\"!==typeof u?A(\"150\"):void 0;h=u.call(h);null==h?A(\"151\"):void 0;for(var t=u=null,n=g,x=\ng=0,y=null,l=h.next();null!==n&&!l.done;x++,l=h.next()){n.index>x?(y=n,n=null):y=n.sibling;var r=P(e,n,l.value,k);if(null===r){n||(n=y);break}a&&n&&null===r.alternate&&b(e,n);g=f(r,g,x);null===t?u=r:t.sibling=r;t=r;n=y}if(l.done)return c(e,n),u;if(null===n){for(;!l.done;x++,l=h.next())l=w(e,l.value,k),null!==l&&(g=f(l,g,x),null===t?u=l:t.sibling=l,t=l);return u}for(n=d(e,n);!l.done;x++,l=h.next())l=nc(n,e,x,l.value,k),null!==l&&(a&&null!==l.alternate&&n.delete(null===l.key?x:l.key),g=f(l,g,x),null===\nt?u=l:t.sibling=l,t=l);a&&n.forEach(function(a){return b(e,a)});return u}return function(a,d,f,h){var k=\"object\"===typeof f&&null!==f&&f.type===ic&&null===f.key;k&&(f=f.props.children);var n=\"object\"===typeof f&&null!==f;if(n)switch(f.$$typeof){case gc:a:{n=f.key;for(k=d;null!==k;){if(k.key===n)if(10===k.tag?f.type===ic:k.type===f.type){c(a,k.sibling);d=e(k,f.type===ic?f.props.children:f.props,h);d.ref=ug(a,k,f);d.return=a;a=d;break a}else{c(a,k);break}else b(a,k);k=k.sibling}f.type===ic?(d=Bf(f.props.children,\na.mode,h,f.key),d.return=a,a=d):(h=Af(f,a.mode,h),h.ref=ug(a,d,f),h.return=a,a=h)}return g(a);case hc:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[],h);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=Df(f,a.mode,h);d.return=a;a=d}return g(a)}if(\"string\"===typeof f||\"number\"===typeof f)return f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f,h),d.return=\na,a=d):(c(a,d),d=Cf(f,a.mode,h),d.return=a,a=d),g(a);if(tg(f))return Jd(a,d,f,h);if(tc(f))return E(a,d,f,h);n&&vg(a,f);if(\"undefined\"===typeof f&&!k)switch(a.tag){case 2:case 1:h=a.type,A(\"152\",h.displayName||h.name||\"Component\")}return c(a,d)}}var xg=wg(!0),yg=wg(!1),zg=null,Ag=null,Bg=!1;function Cg(a,b){var c=new yf(5,null,null,0);c.type=\"DELETED\";c.stateNode=b;c.return=a;c.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}\nfunction Dg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;default:return!1}}function Eg(a){if(Bg){var b=Ag;if(b){var c=b;if(!Dg(a,b)){b=hf(c);if(!b||!Dg(a,b)){a.effectTag|=2;Bg=!1;zg=a;return}Cg(zg,c)}zg=a;Ag=jf(b)}else a.effectTag|=2,Bg=!1,zg=a}}\nfunction Fg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag;)a=a.return;zg=a}function Gg(a){if(a!==zg)return!1;if(!Bg)return Fg(a),Bg=!0,!1;var b=a.type;if(5!==a.tag||\"head\"!==b&&\"body\"!==b&&!df(b,a.memoizedProps))for(b=Ag;b;)Cg(a,b),b=hf(b);Fg(a);Ag=zg?hf(a.stateNode):null;return!0}function Hg(){Ag=zg=null;Bg=!1}function Q(a,b,c){Ig(a,b,c,b.expirationTime)}function Ig(a,b,c,d){b.child=null===a?yg(b,null,c,d):xg(b,a.child,c,d)}\nfunction Jg(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.effectTag|=128}function Kg(a,b,c,d,e){Jg(a,b);var f=0!==(b.effectTag&64);if(!c&&!f)return d&&xf(b,!1),R(a,b);c=b.stateNode;ec.current=b;var g=f?null:c.render();b.effectTag|=1;f&&(Ig(a,b,null,e),b.child=null);Ig(a,b,g,e);b.memoizedState=c.state;b.memoizedProps=c.props;d&&xf(b,!0);return b.child}\nfunction Lg(a){var b=a.stateNode;b.pendingContext?uf(a,b.pendingContext,b.pendingContext!==b.context):b.context&&uf(a,b.context,!1);ig(a,b.containerInfo)}\nfunction Mg(a,b,c,d){var e=a.child;null!==e&&(e.return=a);for(;null!==e;){switch(e.tag){case 12:var f=e.stateNode|0;if(e.type===b&&0!==(f&c)){for(f=e;null!==f;){var g=f.alternate;if(0===f.expirationTime||f.expirationTime>d)f.expirationTime=d,null!==g&&(0===g.expirationTime||g.expirationTime>d)&&(g.expirationTime=d);else if(null!==g&&(0===g.expirationTime||g.expirationTime>d))g.expirationTime=d;else break;f=f.return}f=null}else f=e.child;break;case 13:f=e.type===a.type?null:e.child;break;default:f=\ne.child}if(null!==f)f.return=e;else for(f=e;null!==f;){if(f===a){f=null;break}e=f.sibling;if(null!==e){e.return=f.return;f=e;break}f=f.return}e=f}}\nfunction Qg(a,b,c){var d=b.type._context,e=b.pendingProps,f=b.memoizedProps,g=!0;if(O.current)g=!1;else if(f===e)return b.stateNode=0,ag(b),R(a,b);var h=e.value;b.memoizedProps=e;if(null===f)h=1073741823;else if(f.value===e.value){if(f.children===e.children&&g)return b.stateNode=0,ag(b),R(a,b);h=0}else{var k=f.value;if(k===h&&(0!==k||1/k===1/h)||k!==k&&h!==h){if(f.children===e.children&&g)return b.stateNode=0,ag(b),R(a,b);h=0}else if(h=\"function\"===typeof d._calculateChangedBits?d._calculateChangedBits(k,\nh):1073741823,h|=0,0===h){if(f.children===e.children&&g)return b.stateNode=0,ag(b),R(a,b)}else Mg(b,d,h,c)}b.stateNode=h;ag(b);Q(a,b,e.children);return b.child}function R(a,b){null!==a&&b.child!==a.child?A(\"153\"):void 0;if(null!==b.child){a=b.child;var c=zf(a,a.pendingProps,a.expirationTime);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=zf(a,a.pendingProps,a.expirationTime),c.return=b;c.sibling=null}return b.child}\nfunction Rg(a,b,c){if(0===b.expirationTime||b.expirationTime>c){switch(b.tag){case 3:Lg(b);break;case 2:wf(b);break;case 4:ig(b,b.stateNode.containerInfo);break;case 13:ag(b)}return null}switch(b.tag){case 0:null!==a?A(\"155\"):void 0;var d=b.type,e=b.pendingProps,f=pf(b);f=rf(b,f);d=d(e,f);b.effectTag|=1;\"object\"===typeof d&&null!==d&&\"function\"===typeof d.render&&void 0===d.$$typeof?(f=b.type,b.tag=2,b.memoizedState=null!==d.state&&void 0!==d.state?d.state:null,f=f.getDerivedStateFromProps,\"function\"===\ntypeof f&&lg(b,f,e),e=wf(b),d.updater=pg,b.stateNode=d,d._reactInternalFiber=b,sg(b,c),a=Kg(a,b,!0,e,c)):(b.tag=1,Q(a,b,d),b.memoizedProps=e,a=b.child);return a;case 1:return e=b.type,c=b.pendingProps,O.current||b.memoizedProps!==c?(d=pf(b),d=rf(b,d),e=e(c,d),b.effectTag|=1,Q(a,b,e),b.memoizedProps=c,a=b.child):a=R(a,b),a;case 2:e=wf(b);if(null===a)if(null===b.stateNode){var g=b.pendingProps,h=b.type;d=pf(b);var k=2===b.tag&&null!=b.type.contextTypes;f=k?rf(b,d):ha;g=new h(g,f);b.memoizedState=null!==\ng.state&&void 0!==g.state?g.state:null;g.updater=pg;b.stateNode=g;g._reactInternalFiber=b;k&&(k=b.stateNode,k.__reactInternalMemoizedUnmaskedChildContext=d,k.__reactInternalMemoizedMaskedChildContext=f);sg(b,c);d=!0}else{h=b.type;d=b.stateNode;k=b.memoizedProps;f=b.pendingProps;d.props=k;var n=d.context;g=pf(b);g=rf(b,g);var r=h.getDerivedStateFromProps;(h=\"function\"===typeof r||\"function\"===typeof d.getSnapshotBeforeUpdate)||\"function\"!==typeof d.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof d.componentWillReceiveProps||\n(k!==f||n!==g)&&rg(b,d,f,g);Lf=!1;var w=b.memoizedState;n=d.state=w;var P=b.updateQueue;null!==P&&(Uf(b,P,f,d,c),n=b.memoizedState);k!==f||w!==n||O.current||Lf?(\"function\"===typeof r&&(lg(b,r,f),n=b.memoizedState),(k=Lf||qg(b,k,f,w,n,g))?(h||\"function\"!==typeof d.UNSAFE_componentWillMount&&\"function\"!==typeof d.componentWillMount||(\"function\"===typeof d.componentWillMount&&d.componentWillMount(),\"function\"===typeof d.UNSAFE_componentWillMount&&d.UNSAFE_componentWillMount()),\"function\"===typeof d.componentDidMount&&\n(b.effectTag|=4)):(\"function\"===typeof d.componentDidMount&&(b.effectTag|=4),b.memoizedProps=f,b.memoizedState=n),d.props=f,d.state=n,d.context=g,d=k):(\"function\"===typeof d.componentDidMount&&(b.effectTag|=4),d=!1)}else h=b.type,d=b.stateNode,f=b.memoizedProps,k=b.pendingProps,d.props=f,n=d.context,g=pf(b),g=rf(b,g),r=h.getDerivedStateFromProps,(h=\"function\"===typeof r||\"function\"===typeof d.getSnapshotBeforeUpdate)||\"function\"!==typeof d.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof d.componentWillReceiveProps||\n(f!==k||n!==g)&&rg(b,d,k,g),Lf=!1,n=b.memoizedState,w=d.state=n,P=b.updateQueue,null!==P&&(Uf(b,P,k,d,c),w=b.memoizedState),f!==k||n!==w||O.current||Lf?(\"function\"===typeof r&&(lg(b,r,k),w=b.memoizedState),(r=Lf||qg(b,f,k,n,w,g))?(h||\"function\"!==typeof d.UNSAFE_componentWillUpdate&&\"function\"!==typeof d.componentWillUpdate||(\"function\"===typeof d.componentWillUpdate&&d.componentWillUpdate(k,w,g),\"function\"===typeof d.UNSAFE_componentWillUpdate&&d.UNSAFE_componentWillUpdate(k,w,g)),\"function\"===typeof d.componentDidUpdate&&\n(b.effectTag|=4),\"function\"===typeof d.getSnapshotBeforeUpdate&&(b.effectTag|=256)):(\"function\"!==typeof d.componentDidUpdate||f===a.memoizedProps&&n===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof d.getSnapshotBeforeUpdate||f===a.memoizedProps&&n===a.memoizedState||(b.effectTag|=256),b.memoizedProps=k,b.memoizedState=w),d.props=k,d.state=w,d.context=g,d=r):(\"function\"!==typeof d.componentDidUpdate||f===a.memoizedProps&&n===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof d.getSnapshotBeforeUpdate||\nf===a.memoizedProps&&n===a.memoizedState||(b.effectTag|=256),d=!1);return Kg(a,b,d,e,c);case 3:Lg(b);e=b.updateQueue;if(null!==e)if(d=b.memoizedState,d=null!==d?d.element:null,Uf(b,e,b.pendingProps,null,c),e=b.memoizedState.element,e===d)Hg(),a=R(a,b);else{d=b.stateNode;if(d=(null===a||null===a.child)&&d.hydrate)Ag=jf(b.stateNode.containerInfo),zg=b,d=Bg=!0;d?(b.effectTag|=2,b.child=yg(b,null,e,c)):(Hg(),Q(a,b,e));a=b.child}else Hg(),a=R(a,b);return a;case 5:a:{gg(fg.current);e=gg(dg.current);d=He(e,\nb.type);e!==d&&(N(eg,b,b),N(dg,d,b));null===a&&Eg(b);e=b.type;k=b.memoizedProps;d=b.pendingProps;f=null!==a?a.memoizedProps:null;if(!O.current&&k===d){if(k=b.mode&1&&!!d.hidden)b.expirationTime=1073741823;if(!k||1073741823!==c){a=R(a,b);break a}}k=d.children;df(e,d)?k=null:f&&df(e,f)&&(b.effectTag|=16);Jg(a,b);1073741823!==c&&b.mode&1&&d.hidden?(b.expirationTime=1073741823,b.memoizedProps=d,a=null):(Q(a,b,k),b.memoizedProps=d,a=b.child)}return a;case 6:return null===a&&Eg(b),b.memoizedProps=b.pendingProps,\nnull;case 16:return null;case 4:return ig(b,b.stateNode.containerInfo),e=b.pendingProps,O.current||b.memoizedProps!==e?(null===a?b.child=xg(b,null,e,c):Q(a,b,e),b.memoizedProps=e,a=b.child):a=R(a,b),a;case 14:return e=b.type.render,c=b.pendingProps,d=b.ref,O.current||b.memoizedProps!==c||d!==(null!==a?a.ref:null)?(e=e(c,d),Q(a,b,e),b.memoizedProps=c,a=b.child):a=R(a,b),a;case 10:return c=b.pendingProps,O.current||b.memoizedProps!==c?(Q(a,b,c),b.memoizedProps=c,a=b.child):a=R(a,b),a;case 11:return c=\nb.pendingProps.children,O.current||null!==c&&b.memoizedProps!==c?(Q(a,b,c),b.memoizedProps=c,a=b.child):a=R(a,b),a;case 15:return c=b.pendingProps,b.memoizedProps===c?a=R(a,b):(Q(a,b,c.children),b.memoizedProps=c,a=b.child),a;case 13:return Qg(a,b,c);case 12:a:if(d=b.type,f=b.pendingProps,k=b.memoizedProps,e=d._currentValue,g=d._changedBits,O.current||0!==g||k!==f){b.memoizedProps=f;h=f.unstable_observedBits;if(void 0===h||null===h)h=1073741823;b.stateNode=h;if(0!==(g&h))Mg(b,d,g,c);else if(k===f){a=\nR(a,b);break a}c=f.children;c=c(e);b.effectTag|=1;Q(a,b,c);a=b.child}else a=R(a,b);return a;default:A(\"156\")}}function Sg(a){a.effectTag|=4}var Tg=void 0,Ug=void 0,Vg=void 0;Tg=function(){};Ug=function(a,b,c){(b.updateQueue=c)&&Sg(b)};Vg=function(a,b,c,d){c!==d&&Sg(b)};\nfunction Wg(a,b){var c=b.pendingProps;switch(b.tag){case 1:return null;case 2:return sf(b),null;case 3:jg(b);tf(b);var d=b.stateNode;d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)Gg(b),b.effectTag&=-3;Tg(b);return null;case 5:kg(b);d=gg(fg.current);var e=b.type;if(null!==a&&null!=b.stateNode){var f=a.memoizedProps,g=b.stateNode,h=gg(dg.current);g=We(g,e,f,c,d);Ug(a,b,g,e,f,c,d,h);a.ref!==b.ref&&(b.effectTag|=128)}else{if(!c)return null===b.stateNode?\nA(\"166\"):void 0,null;a=gg(dg.current);if(Gg(b))c=b.stateNode,e=b.type,f=b.memoizedProps,c[C]=b,c[Ma]=f,d=Ye(c,e,f,a,d),b.updateQueue=d,null!==d&&Sg(b);else{a=Te(e,c,d,a);a[C]=b;a[Ma]=c;a:for(f=b.child;null!==f;){if(5===f.tag||6===f.tag)a.appendChild(f.stateNode);else if(4!==f.tag&&null!==f.child){f.child.return=f;f=f.child;continue}if(f===b)break;for(;null===f.sibling;){if(null===f.return||f.return===b)break a;f=f.return}f.sibling.return=f.return;f=f.sibling}Ve(a,e,c,d);cf(e,c)&&Sg(b);b.stateNode=\na}null!==b.ref&&(b.effectTag|=128)}return null;case 6:if(a&&null!=b.stateNode)Vg(a,b,a.memoizedProps,c);else{if(\"string\"!==typeof c)return null===b.stateNode?A(\"166\"):void 0,null;d=gg(fg.current);gg(dg.current);Gg(b)?(d=b.stateNode,c=b.memoizedProps,d[C]=b,Ze(d,c)&&Sg(b)):(d=Ue(c,d),d[C]=b,b.stateNode=d)}return null;case 14:return null;case 16:return null;case 10:return null;case 11:return null;case 15:return null;case 4:return jg(b),Tg(b),null;case 13:return bg(b),null;case 12:return null;case 0:A(\"167\");\ndefault:A(\"156\")}}function Xg(a,b){var c=b.source;null===b.stack&&null!==c&&vc(c);null!==c&&uc(c);b=b.value;null!==a&&2===a.tag&&uc(a);try{b&&b.suppressReactErrorLogging||console.error(b)}catch(d){d&&d.suppressReactErrorLogging||console.error(d)}}function Yg(a){var b=a.ref;if(null!==b)if(\"function\"===typeof b)try{b(null)}catch(c){Zg(a,c)}else b.current=null}\nfunction $g(a){\"function\"===typeof Kf&&Kf(a);switch(a.tag){case 2:Yg(a);var b=a.stateNode;if(\"function\"===typeof b.componentWillUnmount)try{b.props=a.memoizedProps,b.state=a.memoizedState,b.componentWillUnmount()}catch(c){Zg(a,c)}break;case 5:Yg(a);break;case 4:ah(a)}}function bh(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction ch(a){a:{for(var b=a.return;null!==b;){if(bh(b)){var c=b;break a}b=b.return}A(\"160\");c=void 0}var d=b=void 0;switch(c.tag){case 5:b=c.stateNode;d=!1;break;case 3:b=c.stateNode.containerInfo;d=!0;break;case 4:b=c.stateNode.containerInfo;d=!0;break;default:A(\"161\")}c.effectTag&16&&(Ke(b,\"\"),c.effectTag&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||bh(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag;){if(c.effectTag&2)continue b;\nif(null===c.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.effectTag&2)){c=c.stateNode;break a}}for(var e=a;;){if(5===e.tag||6===e.tag)if(c)if(d){var f=b,g=e.stateNode,h=c;8===f.nodeType?f.parentNode.insertBefore(g,h):f.insertBefore(g,h)}else b.insertBefore(e.stateNode,c);else d?(f=b,g=e.stateNode,8===f.nodeType?f.parentNode.insertBefore(g,f):f.appendChild(g)):b.appendChild(e.stateNode);else if(4!==e.tag&&null!==e.child){e.child.return=e;e=e.child;continue}if(e===a)break;for(;null===\ne.sibling;){if(null===e.return||e.return===a)return;e=e.return}e.sibling.return=e.return;e=e.sibling}}\nfunction ah(a){for(var b=a,c=!1,d=void 0,e=void 0;;){if(!c){c=b.return;a:for(;;){null===c?A(\"160\"):void 0;switch(c.tag){case 5:d=c.stateNode;e=!1;break a;case 3:d=c.stateNode.containerInfo;e=!0;break a;case 4:d=c.stateNode.containerInfo;e=!0;break a}c=c.return}c=!0}if(5===b.tag||6===b.tag){a:for(var f=b,g=f;;)if($g(g),null!==g.child&&4!==g.tag)g.child.return=g,g=g.child;else{if(g===f)break;for(;null===g.sibling;){if(null===g.return||g.return===f)break a;g=g.return}g.sibling.return=g.return;g=g.sibling}e?\n(f=d,g=b.stateNode,8===f.nodeType?f.parentNode.removeChild(g):f.removeChild(g)):d.removeChild(b.stateNode)}else if(4===b.tag?d=b.stateNode.containerInfo:$g(b),null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return;b=b.return;4===b.tag&&(c=!1)}b.sibling.return=b.return;b=b.sibling}}\nfunction dh(a,b){switch(b.tag){case 2:break;case 5:var c=b.stateNode;if(null!=c){var d=b.memoizedProps;a=null!==a?a.memoizedProps:d;var e=b.type,f=b.updateQueue;b.updateQueue=null;null!==f&&(c[Ma]=d,Xe(c,f,e,a,d))}break;case 6:null===b.stateNode?A(\"162\"):void 0;b.stateNode.nodeValue=b.memoizedProps;break;case 3:break;case 15:break;case 16:break;default:A(\"163\")}}function eh(a,b,c){c=Of(c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){fh(d);Xg(a,b)};return c}\nfunction gh(a,b,c){c=Of(c);c.tag=3;var d=a.stateNode;null!==d&&\"function\"===typeof d.componentDidCatch&&(c.callback=function(){null===hh?hh=new Set([this]):hh.add(this);var c=b.value,d=b.stack;Xg(a,b);this.componentDidCatch(c,{componentStack:null!==d?d:\"\"})});return c}\nfunction ih(a,b,c,d,e,f){c.effectTag|=512;c.firstEffect=c.lastEffect=null;d=Xf(d,c);a=b;do{switch(a.tag){case 3:a.effectTag|=1024;d=eh(a,d,f);Rf(a,d,f);return;case 2:if(b=d,c=a.stateNode,0===(a.effectTag&64)&&null!==c&&\"function\"===typeof c.componentDidCatch&&(null===hh||!hh.has(c))){a.effectTag|=1024;d=gh(a,b,f);Rf(a,d,f);return}}a=a.return}while(null!==a)}\nfunction jh(a){switch(a.tag){case 2:sf(a);var b=a.effectTag;return b&1024?(a.effectTag=b&-1025|64,a):null;case 3:return jg(a),tf(a),b=a.effectTag,b&1024?(a.effectTag=b&-1025|64,a):null;case 5:return kg(a),null;case 16:return b=a.effectTag,b&1024?(a.effectTag=b&-1025|64,a):null;case 4:return jg(a),null;case 13:return bg(a),null;default:return null}}var kh=ef(),lh=2,mh=kh,nh=0,oh=0,ph=!1,S=null,qh=null,T=0,rh=-1,sh=!1,U=null,th=!1,uh=!1,hh=null;\nfunction vh(){if(null!==S)for(var a=S.return;null!==a;){var b=a;switch(b.tag){case 2:sf(b);break;case 3:jg(b);tf(b);break;case 5:kg(b);break;case 4:jg(b);break;case 13:bg(b)}a=a.return}qh=null;T=0;rh=-1;sh=!1;S=null;uh=!1}\nfunction wh(a){for(;;){var b=a.alternate,c=a.return,d=a.sibling;if(0===(a.effectTag&512)){b=Wg(b,a,T);var e=a;if(1073741823===T||1073741823!==e.expirationTime){var f=0;switch(e.tag){case 3:case 2:var g=e.updateQueue;null!==g&&(f=g.expirationTime)}for(g=e.child;null!==g;)0!==g.expirationTime&&(0===f||f>g.expirationTime)&&(f=g.expirationTime),g=g.sibling;e.expirationTime=f}if(null!==b)return b;null!==c&&0===(c.effectTag&512)&&(null===c.firstEffect&&(c.firstEffect=a.firstEffect),null!==a.lastEffect&&\n(null!==c.lastEffect&&(c.lastEffect.nextEffect=a.firstEffect),c.lastEffect=a.lastEffect),1<a.effectTag&&(null!==c.lastEffect?c.lastEffect.nextEffect=a:c.firstEffect=a,c.lastEffect=a));if(null!==d)return d;if(null!==c)a=c;else{uh=!0;break}}else{a=jh(a,sh,T);if(null!==a)return a.effectTag&=511,a;null!==c&&(c.firstEffect=c.lastEffect=null,c.effectTag|=512);if(null!==d)return d;if(null!==c)a=c;else break}}return null}\nfunction xh(a){var b=Rg(a.alternate,a,T);null===b&&(b=wh(a));ec.current=null;return b}\nfunction yh(a,b,c){ph?A(\"243\"):void 0;ph=!0;if(b!==T||a!==qh||null===S)vh(),qh=a,T=b,rh=-1,S=zf(qh.current,null,T),a.pendingCommitExpirationTime=0;var d=!1;sh=!c||T<=lh;do{try{if(c)for(;null!==S&&!zh();)S=xh(S);else for(;null!==S;)S=xh(S)}catch(f){if(null===S)d=!0,fh(f);else{null===S?A(\"271\"):void 0;c=S;var e=c.return;if(null===e){d=!0;fh(f);break}ih(a,e,c,f,sh,T,mh);S=wh(c)}}break}while(1);ph=!1;if(d)return null;if(null===S){if(uh)return a.pendingCommitExpirationTime=b,a.current.alternate;sh?A(\"262\"):\nvoid 0;0<=rh&&setTimeout(function(){var b=a.current.expirationTime;0!==b&&(0===a.remainingExpirationTime||a.remainingExpirationTime<b)&&Ah(a,b)},rh);Bh(a.current.expirationTime)}return null}\nfunction Zg(a,b){var c;a:{ph&&!th?A(\"263\"):void 0;for(c=a.return;null!==c;){switch(c.tag){case 2:var d=c.stateNode;if(\"function\"===typeof c.type.getDerivedStateFromCatch||\"function\"===typeof d.componentDidCatch&&(null===hh||!hh.has(d))){a=Xf(b,a);a=gh(c,a,1);Qf(c,a,1);og(c,1);c=void 0;break a}break;case 3:a=Xf(b,a);a=eh(c,a,1);Qf(c,a,1);og(c,1);c=void 0;break a}c=c.return}3===a.tag&&(c=Xf(b,a),c=eh(a,c,1),Qf(a,c,1),og(a,1));c=void 0}return c}\nfunction Ch(){var a=2+25*(((mg()-2+500)/25|0)+1);a<=nh&&(a=nh+1);return nh=a}function ng(a,b){a=0!==oh?oh:ph?th?1:T:b.mode&1?Dh?2+10*(((a-2+15)/10|0)+1):2+25*(((a-2+500)/25|0)+1):1;Dh&&(0===Eh||a>Eh)&&(Eh=a);return a}\nfunction og(a,b){for(;null!==a;){if(0===a.expirationTime||a.expirationTime>b)a.expirationTime=b;null!==a.alternate&&(0===a.alternate.expirationTime||a.alternate.expirationTime>b)&&(a.alternate.expirationTime=b);if(null===a.return)if(3===a.tag){var c=a.stateNode;!ph&&0!==T&&b<T&&vh();var d=c.current.expirationTime;ph&&!th&&qh===c||Ah(c,d);Fh>Gh&&A(\"185\")}else break;a=a.return}}function mg(){mh=ef()-kh;return lh=(mh/10|0)+2}\nfunction Hh(a){var b=oh;oh=2+25*(((mg()-2+500)/25|0)+1);try{return a()}finally{oh=b}}function Ih(a,b,c,d,e){var f=oh;oh=1;try{return a(b,c,d,e)}finally{oh=f}}var Jh=null,V=null,Kh=0,Lh=void 0,W=!1,X=null,Y=0,Eh=0,Mh=!1,Nh=!1,Oh=null,Ph=null,Z=!1,Qh=!1,Dh=!1,Rh=null,Gh=1E3,Fh=0,Sh=1;function Th(a){if(0!==Kh){if(a>Kh)return;null!==Lh&&gf(Lh)}var b=ef()-kh;Kh=a;Lh=ff(Uh,{timeout:10*(a-2)-b})}\nfunction Ah(a,b){if(null===a.nextScheduledRoot)a.remainingExpirationTime=b,null===V?(Jh=V=a,a.nextScheduledRoot=a):(V=V.nextScheduledRoot=a,V.nextScheduledRoot=Jh);else{var c=a.remainingExpirationTime;if(0===c||b<c)a.remainingExpirationTime=b}W||(Z?Qh&&(X=a,Y=1,Vh(a,1,!1)):1===b?Wh():Th(b))}\nfunction Xh(){var a=0,b=null;if(null!==V)for(var c=V,d=Jh;null!==d;){var e=d.remainingExpirationTime;if(0===e){null===c||null===V?A(\"244\"):void 0;if(d===d.nextScheduledRoot){Jh=V=d.nextScheduledRoot=null;break}else if(d===Jh)Jh=e=d.nextScheduledRoot,V.nextScheduledRoot=e,d.nextScheduledRoot=null;else if(d===V){V=c;V.nextScheduledRoot=Jh;d.nextScheduledRoot=null;break}else c.nextScheduledRoot=d.nextScheduledRoot,d.nextScheduledRoot=null;d=c.nextScheduledRoot}else{if(0===a||e<a)a=e,b=d;if(d===V)break;\nc=d;d=d.nextScheduledRoot}}c=X;null!==c&&c===b&&1===a?Fh++:Fh=0;X=b;Y=a}function Uh(a){Yh(0,!0,a)}function Wh(){Yh(1,!1,null)}function Yh(a,b,c){Ph=c;Xh();if(b)for(;null!==X&&0!==Y&&(0===a||a>=Y)&&(!Mh||mg()>=Y);)mg(),Vh(X,Y,!Mh),Xh();else for(;null!==X&&0!==Y&&(0===a||a>=Y);)Vh(X,Y,!1),Xh();null!==Ph&&(Kh=0,Lh=null);0!==Y&&Th(Y);Ph=null;Mh=!1;Zh()}function $h(a,b){W?A(\"253\"):void 0;X=a;Y=b;Vh(a,b,!1);Wh();Zh()}\nfunction Zh(){Fh=0;if(null!==Rh){var a=Rh;Rh=null;for(var b=0;b<a.length;b++){var c=a[b];try{c._onComplete()}catch(d){Nh||(Nh=!0,Oh=d)}}}if(Nh)throw a=Oh,Oh=null,Nh=!1,a;}function Vh(a,b,c){W?A(\"245\"):void 0;W=!0;c?(c=a.finishedWork,null!==c?ai(a,c,b):(c=yh(a,b,!0),null!==c&&(zh()?a.finishedWork=c:ai(a,c,b)))):(c=a.finishedWork,null!==c?ai(a,c,b):(c=yh(a,b,!1),null!==c&&ai(a,c,b)));W=!1}\nfunction ai(a,b,c){var d=a.firstBatch;if(null!==d&&d._expirationTime<=c&&(null===Rh?Rh=[d]:Rh.push(d),d._defer)){a.finishedWork=b;a.remainingExpirationTime=0;return}a.finishedWork=null;th=ph=!0;c=b.stateNode;c.current===b?A(\"177\"):void 0;d=c.pendingCommitExpirationTime;0===d?A(\"261\"):void 0;c.pendingCommitExpirationTime=0;mg();ec.current=null;if(1<b.effectTag)if(null!==b.lastEffect){b.lastEffect.nextEffect=b;var e=b.firstEffect}else e=b;else e=b.firstEffect;af=Hd;var f=da();if(Ud(f)){if(\"selectionStart\"in\nf)var g={start:f.selectionStart,end:f.selectionEnd};else a:{var h=window.getSelection&&window.getSelection();if(h&&0!==h.rangeCount){g=h.anchorNode;var k=h.anchorOffset,n=h.focusNode;h=h.focusOffset;try{g.nodeType,n.nodeType}catch(Wa){g=null;break a}var r=0,w=-1,P=-1,nc=0,Jd=0,E=f,t=null;b:for(;;){for(var x;;){E!==g||0!==k&&3!==E.nodeType||(w=r+k);E!==n||0!==h&&3!==E.nodeType||(P=r+h);3===E.nodeType&&(r+=E.nodeValue.length);if(null===(x=E.firstChild))break;t=E;E=x}for(;;){if(E===f)break b;t===g&&\n++nc===k&&(w=r);t===n&&++Jd===h&&(P=r);if(null!==(x=E.nextSibling))break;E=t;t=E.parentNode}E=x}g=-1===w||-1===P?null:{start:w,end:P}}else g=null}g=g||{start:0,end:0}}else g=null;bf={focusedElem:f,selectionRange:g};Id(!1);for(U=e;null!==U;){f=!1;g=void 0;try{for(;null!==U;){if(U.effectTag&256){var u=U.alternate;k=U;switch(k.tag){case 2:if(k.effectTag&256&&null!==u){var y=u.memoizedProps,D=u.memoizedState,ja=k.stateNode;ja.props=k.memoizedProps;ja.state=k.memoizedState;var mi=ja.getSnapshotBeforeUpdate(y,\nD);ja.__reactInternalSnapshotBeforeUpdate=mi}break;case 3:case 5:case 6:case 4:break;default:A(\"163\")}}U=U.nextEffect}}catch(Wa){f=!0,g=Wa}f&&(null===U?A(\"178\"):void 0,Zg(U,g),null!==U&&(U=U.nextEffect))}for(U=e;null!==U;){u=!1;y=void 0;try{for(;null!==U;){var q=U.effectTag;q&16&&Ke(U.stateNode,\"\");if(q&128){var z=U.alternate;if(null!==z){var l=z.ref;null!==l&&(\"function\"===typeof l?l(null):l.current=null)}}switch(q&14){case 2:ch(U);U.effectTag&=-3;break;case 6:ch(U);U.effectTag&=-3;dh(U.alternate,\nU);break;case 4:dh(U.alternate,U);break;case 8:D=U,ah(D),D.return=null,D.child=null,D.alternate&&(D.alternate.child=null,D.alternate.return=null)}U=U.nextEffect}}catch(Wa){u=!0,y=Wa}u&&(null===U?A(\"178\"):void 0,Zg(U,y),null!==U&&(U=U.nextEffect))}l=bf;z=da();q=l.focusedElem;u=l.selectionRange;if(z!==q&&fa(document.documentElement,q)){null!==u&&Ud(q)&&(z=u.start,l=u.end,void 0===l&&(l=z),\"selectionStart\"in q?(q.selectionStart=z,q.selectionEnd=Math.min(l,q.value.length)):window.getSelection&&(z=window.getSelection(),\ny=q[lb()].length,l=Math.min(u.start,y),u=void 0===u.end?l:Math.min(u.end,y),!z.extend&&l>u&&(y=u,u=l,l=y),y=Td(q,l),D=Td(q,u),y&&D&&(1!==z.rangeCount||z.anchorNode!==y.node||z.anchorOffset!==y.offset||z.focusNode!==D.node||z.focusOffset!==D.offset)&&(ja=document.createRange(),ja.setStart(y.node,y.offset),z.removeAllRanges(),l>u?(z.addRange(ja),z.extend(D.node,D.offset)):(ja.setEnd(D.node,D.offset),z.addRange(ja)))));z=[];for(l=q;l=l.parentNode;)1===l.nodeType&&z.push({element:l,left:l.scrollLeft,\ntop:l.scrollTop});\"function\"===typeof q.focus&&q.focus();for(q=0;q<z.length;q++)l=z[q],l.element.scrollLeft=l.left,l.element.scrollTop=l.top}bf=null;Id(af);af=null;c.current=b;for(U=e;null!==U;){e=!1;q=void 0;try{for(z=d;null!==U;){var hg=U.effectTag;if(hg&36){var oc=U.alternate;l=U;u=z;switch(l.tag){case 2:var ca=l.stateNode;if(l.effectTag&4)if(null===oc)ca.props=l.memoizedProps,ca.state=l.memoizedState,ca.componentDidMount();else{var wi=oc.memoizedProps,xi=oc.memoizedState;ca.props=l.memoizedProps;\nca.state=l.memoizedState;ca.componentDidUpdate(wi,xi,ca.__reactInternalSnapshotBeforeUpdate)}var Ng=l.updateQueue;null!==Ng&&(ca.props=l.memoizedProps,ca.state=l.memoizedState,Wf(l,Ng,ca,u));break;case 3:var Og=l.updateQueue;if(null!==Og){y=null;if(null!==l.child)switch(l.child.tag){case 5:y=l.child.stateNode;break;case 2:y=l.child.stateNode}Wf(l,Og,y,u)}break;case 5:var yi=l.stateNode;null===oc&&l.effectTag&4&&cf(l.type,l.memoizedProps)&&yi.focus();break;case 6:break;case 4:break;case 15:break;case 16:break;\ndefault:A(\"163\")}}if(hg&128){l=void 0;var yc=U.ref;if(null!==yc){var Pg=U.stateNode;switch(U.tag){case 5:l=Pg;break;default:l=Pg}\"function\"===typeof yc?yc(l):yc.current=l}}var zi=U.nextEffect;U.nextEffect=null;U=zi}}catch(Wa){e=!0,q=Wa}e&&(null===U?A(\"178\"):void 0,Zg(U,q),null!==U&&(U=U.nextEffect))}ph=th=!1;\"function\"===typeof Jf&&Jf(b.stateNode);b=c.current.expirationTime;0===b&&(hh=null);a.remainingExpirationTime=b}function zh(){return null===Ph||Ph.timeRemaining()>Sh?!1:Mh=!0}\nfunction fh(a){null===X?A(\"246\"):void 0;X.remainingExpirationTime=0;Nh||(Nh=!0,Oh=a)}function Bh(a){null===X?A(\"246\"):void 0;X.remainingExpirationTime=a}function bi(a,b){var c=Z;Z=!0;try{return a(b)}finally{(Z=c)||W||Wh()}}function ci(a,b){if(Z&&!Qh){Qh=!0;try{return a(b)}finally{Qh=!1}}return a(b)}function di(a,b){W?A(\"187\"):void 0;var c=Z;Z=!0;try{return Ih(a,b)}finally{Z=c,Wh()}}\nfunction ei(a,b,c){if(Dh)return a(b,c);Z||W||0===Eh||(Yh(Eh,!1,null),Eh=0);var d=Dh,e=Z;Z=Dh=!0;try{return a(b,c)}finally{Dh=d,(Z=e)||W||Wh()}}function fi(a){var b=Z;Z=!0;try{Ih(a)}finally{(Z=b)||W||Yh(1,!1,null)}}\nfunction gi(a,b,c,d,e){var f=b.current;if(c){c=c._reactInternalFiber;var g;b:{2===jd(c)&&2===c.tag?void 0:A(\"170\");for(g=c;3!==g.tag;){if(qf(g)){g=g.stateNode.__reactInternalMemoizedMergedChildContext;break b}(g=g.return)?void 0:A(\"171\")}g=g.stateNode.context}c=qf(c)?vf(c,g):g}else c=ha;null===b.context?b.context=c:b.pendingContext=c;b=e;e=Of(d);e.payload={element:a};b=void 0===b?null:b;null!==b&&(e.callback=b);Qf(f,e,d);og(f,d);return d}\nfunction hi(a){var b=a._reactInternalFiber;void 0===b&&(\"function\"===typeof a.render?A(\"188\"):A(\"268\",Object.keys(a)));a=md(b);return null===a?null:a.stateNode}function ii(a,b,c,d){var e=b.current,f=mg();e=ng(f,e);return gi(a,b,c,e,d)}function ji(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}\nfunction ki(a){var b=a.findFiberByHostInstance;return If(p({},a,{findHostInstanceByFiber:function(a){a=md(a);return null===a?null:a.stateNode},findFiberByHostInstance:function(a){return b?b(a):null}}))}\nvar li={updateContainerAtExpirationTime:gi,createContainer:function(a,b,c){return Ef(a,b,c)},updateContainer:ii,flushRoot:$h,requestWork:Ah,computeUniqueAsyncExpiration:Ch,batchedUpdates:bi,unbatchedUpdates:ci,deferredUpdates:Hh,syncUpdates:Ih,interactiveUpdates:ei,flushInteractiveUpdates:function(){W||0===Eh||(Yh(Eh,!1,null),Eh=0)},flushControlled:fi,flushSync:di,getPublicRootInstance:ji,findHostInstance:hi,findHostInstanceWithNoPortals:function(a){a=nd(a);return null===a?null:a.stateNode},injectIntoDevTools:ki};\nfunction ni(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:hc,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}Kb.injectFiberControlledHostComponent($e);function oi(a){this._expirationTime=Ch();this._root=a;this._callbacks=this._next=null;this._hasChildren=this._didComplete=!1;this._children=null;this._defer=!0}\noi.prototype.render=function(a){this._defer?void 0:A(\"250\");this._hasChildren=!0;this._children=a;var b=this._root._internalRoot,c=this._expirationTime,d=new pi;gi(a,b,null,c,d._onCommit);return d};oi.prototype.then=function(a){if(this._didComplete)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\noi.prototype.commit=function(){var a=this._root._internalRoot,b=a.firstBatch;this._defer&&null!==b?void 0:A(\"251\");if(this._hasChildren){var c=this._expirationTime;if(b!==this){this._hasChildren&&(c=this._expirationTime=b._expirationTime,this.render(this._children));for(var d=null,e=b;e!==this;)d=e,e=e._next;null===d?A(\"251\"):void 0;d._next=e._next;this._next=b;a.firstBatch=this}this._defer=!1;$h(a,c);b=this._next;this._next=null;b=a.firstBatch=b;null!==b&&b._hasChildren&&b.render(b._children)}else this._next=\nnull,this._defer=!1};oi.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++)(0,a[b])()}};function pi(){this._callbacks=null;this._didCommit=!1;this._onCommit=this._onCommit.bind(this)}pi.prototype.then=function(a){if(this._didCommit)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\npi.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++){var c=a[b];\"function\"!==typeof c?A(\"191\",c):void 0;c()}}};function qi(a,b,c){this._internalRoot=Ef(a,b,c)}qi.prototype.render=function(a,b){var c=this._internalRoot,d=new pi;b=void 0===b?null:b;null!==b&&d.then(b);ii(a,c,null,d._onCommit);return d};\nqi.prototype.unmount=function(a){var b=this._internalRoot,c=new pi;a=void 0===a?null:a;null!==a&&c.then(a);ii(null,b,null,c._onCommit);return c};qi.prototype.legacy_renderSubtreeIntoContainer=function(a,b,c){var d=this._internalRoot,e=new pi;c=void 0===c?null:c;null!==c&&e.then(c);ii(b,d,a,e._onCommit);return e};\nqi.prototype.createBatch=function(){var a=new oi(this),b=a._expirationTime,c=this._internalRoot,d=c.firstBatch;if(null===d)c.firstBatch=a,a._next=null;else{for(c=null;null!==d&&d._expirationTime<=b;)c=d,d=d._next;a._next=d;null!==c&&(c._next=a)}return a};function ri(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}Sb=li.batchedUpdates;Tb=li.interactiveUpdates;Ub=li.flushInteractiveUpdates;\nfunction si(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute(\"data-reactroot\")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new qi(a,!1,b)}\nfunction ti(a,b,c,d,e){ri(c)?void 0:A(\"200\");var f=c._reactRootContainer;if(f){if(\"function\"===typeof e){var g=e;e=function(){var a=ji(f._internalRoot);g.call(a)}}null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)}else{f=c._reactRootContainer=si(c,d);if(\"function\"===typeof e){var h=e;e=function(){var a=ji(f._internalRoot);h.call(a)}}ci(function(){null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)})}return ji(f._internalRoot)}\nfunction ui(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;ri(b)?void 0:A(\"200\");return ni(a,b,null,c)}\nvar vi={createPortal:ui,findDOMNode:function(a){return null==a?null:1===a.nodeType?a:hi(a)},hydrate:function(a,b,c){return ti(null,a,b,!0,c)},render:function(a,b,c){return ti(null,a,b,!1,c)},unstable_renderSubtreeIntoContainer:function(a,b,c,d){null==a||void 0===a._reactInternalFiber?A(\"38\"):void 0;return ti(a,b,c,!1,d)},unmountComponentAtNode:function(a){ri(a)?void 0:A(\"40\");return a._reactRootContainer?(ci(function(){ti(null,null,a,!1,function(){a._reactRootContainer=null})}),!0):!1},unstable_createPortal:function(){return ui.apply(void 0,\narguments)},unstable_batchedUpdates:bi,unstable_deferredUpdates:Hh,unstable_interactiveUpdates:ei,flushSync:di,unstable_flushControlled:fi,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{EventPluginHub:Ka,EventPluginRegistry:va,EventPropagators:$a,ReactControlledComponent:Rb,ReactDOMComponentTree:Qa,ReactDOMEventListener:Nd},unstable_createRoot:function(a,b){return new qi(a,!0,null!=b&&!0===b.hydrate)}};ki({findFiberByHostInstance:Na,bundleType:0,version:\"16.4.1\",rendererPackageName:\"react-dom\"});\nvar Ai={default:vi},Bi=Ai&&vi||Ai;module.exports=Bi.default?Bi.default:Bi;\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n\n\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\n/**\n * Simple, lightweight module assisting with the detection and context of\n * Worker. Helps avoid circular dependencies and allows code to reason about\n * whether or not they are in a Worker, even if they never include the main\n * `ReactWorker` dependency.\n */\nvar ExecutionEnvironment = {\n\n  canUseDOM: canUseDOM,\n\n  canUseWorkers: typeof Worker !== 'undefined',\n\n  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),\n\n  canUseViewport: canUseDOM && !!window.screen,\n\n  isInWorker: !canUseDOM // For now, this is true - might change in the future.\n\n};\n\nmodule.exports = ExecutionEnvironment;\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\n/* eslint-disable fb-www/typeof-undefined */\n\n/**\n * Same as document.activeElement but wraps in a try-catch block. In IE it is\n * not safe to call document.activeElement if there is nothing focused.\n *\n * The activeElement will be null only if the document or document body is not\n * yet defined.\n *\n * @param {?DOMDocument} doc Defaults to current document.\n * @return {?DOMElement}\n */\nfunction getActiveElement(doc) /*?DOMElement*/{\n  doc = doc || (typeof document !== 'undefined' ? document : undefined);\n  if (typeof doc === 'undefined') {\n    return null;\n  }\n  try {\n    return doc.activeElement || doc.body;\n  } catch (e) {\n    return doc.body;\n  }\n}\n\nmodule.exports = getActiveElement;\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n * \n */\n\n/*eslint-disable no-self-compare */\n\n\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  // SameValue algorithm\n  if (x === y) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    // Added the nonzero y check to make Flow happy, but it is redundant\n    return x !== 0 || y !== 0 || 1 / x === 1 / y;\n  } else {\n    // Step 6.a: NaN == NaN\n    return x !== x && y !== y;\n  }\n}\n\n/**\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n * Returns true when the values of all keys are strictly equal.\n */\nfunction shallowEqual(objA, objB) {\n  if (is(objA, objB)) {\n    return true;\n  }\n\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  // Test for A's keys different from B.\n  for (var i = 0; i < keysA.length; i++) {\n    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = shallowEqual;\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nvar isTextNode = __webpack_require__(29);\n\n/*eslint-disable no-bitwise */\n\n/**\n * Checks if a given DOM node contains or is another DOM node.\n */\nfunction containsNode(outerNode, innerNode) {\n  if (!outerNode || !innerNode) {\n    return false;\n  } else if (outerNode === innerNode) {\n    return true;\n  } else if (isTextNode(outerNode)) {\n    return false;\n  } else if (isTextNode(innerNode)) {\n    return containsNode(outerNode, innerNode.parentNode);\n  } else if ('contains' in outerNode) {\n    return outerNode.contains(innerNode);\n  } else if (outerNode.compareDocumentPosition) {\n    return !!(outerNode.compareDocumentPosition(innerNode) & 16);\n  } else {\n    return false;\n  }\n}\n\nmodule.exports = containsNode;\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\nvar isNode = __webpack_require__(30);\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM text node.\n */\nfunction isTextNode(object) {\n  return isNode(object) && object.nodeType == 3;\n}\n\nmodule.exports = isTextNode;\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM node.\n */\nfunction isNode(object) {\n  var doc = object ? object.ownerDocument || object : document;\n  var defaultView = doc.defaultView || window;\n  return !!(object && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));\n}\n\nmodule.exports = isNode;\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nvar ReactPropTypesSecret = __webpack_require__(32);\n\nfunction emptyFunction() {}\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n\n\n/***/ }),\n/* 33 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return SectionLabels; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_spring_dist_react_spring__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_spring_dist_react_spring___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react_spring_dist_react_spring__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__index_css__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__index_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__index_css__);\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var SectionLabels=function(_React$Component){_inherits(SectionLabels,_React$Component);function SectionLabels(){_classCallCheck(this,SectionLabels);return _possibleConstructorReturn(this,(SectionLabels.__proto__||Object.getPrototypeOf(SectionLabels)).apply(this,arguments));}_createClass(SectionLabels,[{key:'render',value:function render(){return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_react_spring_dist_react_spring__[\"Parallax\"].Layer,{offset:1.08,speed:.05,style:{display:'flex',flexDirection:\"column\",alignItems:'flex-start',justifyContent:'start',height:'5vmin',zIndex:3,padding:' 0 5%'}},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('p',{style:{textShadow:'6px 6px 0px rgba(0,0,0,0.2) ',fontWeight:600,fontSize:'5vmin'}},'Portfolio')),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_react_spring_dist_react_spring__[\"Parallax\"].Layer,{offset:2.08,speed:.05,style:{display:'flex',flexDirection:\"column\",alignItems:'flex-start',justifyContent:'start',height:'5vmin',zIndex:3,padding:' 0 5%'}},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('p',{style:{textShadow:'6px 6px 0px rgba(0,0,0,0.2) ',fontWeight:600,fontSize:'5vmin'}},' Skills < / > ')));}}]);return SectionLabels;}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);\n\n/***/ }),\n/* 34 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return AboutMe; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_spring_dist_react_spring__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_spring_dist_react_spring___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react_spring_dist_react_spring__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__index_css__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__index_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__index_css__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__assets_img_ThomasKim_jpg__ = __webpack_require__(35);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__assets_img_ThomasKim_jpg___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__assets_img_ThomasKim_jpg__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__config_firebase_js__ = __webpack_require__(36);\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var AboutMe=function(_React$Component){_inherits(AboutMe,_React$Component);function AboutMe(props){_classCallCheck(this,AboutMe);var _this=_possibleConstructorReturn(this,(AboutMe.__proto__||Object.getPrototypeOf(AboutMe)).call(this,props));_this.state={blurb:'MERN-stack developer (MongoDB/MySQL Express React Node). I enjoy making web apps in REACT. Currently publishing my PWA to an app store.'};return _this;}_createClass(AboutMe,[{key:'componenWillMount',value:function componenWillMount(){var _this2=this;var itemsRef=__WEBPACK_IMPORTED_MODULE_4__config_firebase_js__[\"a\" /* default */].database().ref();itemsRef.on('value',function(snapshot){var blurb=snapshot.val().blurb;_this2.setState({blurb:blurb});});}},{key:'render',value:function render(){return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_react_spring_dist_react_spring__[\"Parallax\"].Layer,{offset:0,speed:0.75,style:{display:'flex',flexDirection:\"column\",alignContent:'center',justifyContent:'center',zIndex:5,padding:'0 5%',marginTop:'-2%'}},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('img',{src:__WEBPACK_IMPORTED_MODULE_3__assets_img_ThomasKim_jpg___default.a,className:'avatar',style:{height:'20vh',width:'20vh',borderRadius:'50%',border:'1vmin solid rgba(3,3,3,0.6)',marginBottom:'5%',boxShadow:'0px 0px 9px 1px rgba(0,0,0,0.5)'},alt:'about me'}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('p',{style:{marginBottom:'7vmin',fontSize:'7vmin',fontWeight:600}},'Hi! I\\'m Thomas, Full Stack Developer')),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_react_spring_dist_react_spring__[\"Parallax\"].Layer,{offset:0,speed:0.25,style:{display:'flex',flexDirection:\"column\",alignContent:'flex-start',justifyContent:'flex-end',zIndex:4,padding:'0 4%'}},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('p',{style:{marginBottom:'15vmin'}},' ',this.state.blurb,'          ')));}}]);return AboutMe;}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__.p + \"static/media/ThomasKim.b9e7b502.jpg\";\n\n/***/ }),\n/* 36 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_firebase_app__ = __webpack_require__(37);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_firebase_app___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_firebase_app__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_firebase_database__ = __webpack_require__(41);\nvar config={apiKey:\"AIzaSyAfMomQhiipmtHYBc-5Odytsgz47CAS9q0\",authDomain:\"mom-or-dad.firebaseapp.com\",databaseURL:\"https://mom-or-dad.firebaseio.com\",projectId:\"mom-or-dad\",storageBucket:\"mom-or-dad.appspot.com\",messagingSenderId:\"346751856796\"};__WEBPACK_IMPORTED_MODULE_0_firebase_app___default.a.initializeApp(config);/* harmony default export */ __webpack_exports__[\"a\"] = (__WEBPACK_IMPORTED_MODULE_0_firebase_app___default.a);\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\n__webpack_require__(38);\nvar firebase = _interopDefault(__webpack_require__(13));\n\n/**\r\n * Copyright 2018 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nmodule.exports = firebase;\n\n\n/***/ }),\n/* 38 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* WEBPACK VAR INJECTION */(function(setImmediate, global) {/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_whatwg_fetch__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_whatwg_fetch___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_whatwg_fetch__);\n\n\n// Store setTimeout reference so promise-polyfill will be unaffected by\n// other code modifying setTimeout (like sinon.useFakeTimers())\nvar setTimeoutFunc = setTimeout;\n\nfunction noop() {}\n\n// Polyfill for Function.prototype.bind\nfunction bind(fn, thisArg) {\n  return function() {\n    fn.apply(thisArg, arguments);\n  };\n}\n\nfunction Promise(fn) {\n  if (!(this instanceof Promise))\n    throw new TypeError('Promises must be constructed via new');\n  if (typeof fn !== 'function') throw new TypeError('not a function');\n  this._state = 0;\n  this._handled = false;\n  this._value = undefined;\n  this._deferreds = [];\n\n  doResolve(fn, this);\n}\n\nfunction handle(self, deferred) {\n  while (self._state === 3) {\n    self = self._value;\n  }\n  if (self._state === 0) {\n    self._deferreds.push(deferred);\n    return;\n  }\n  self._handled = true;\n  Promise._immediateFn(function() {\n    var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      (self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n      return;\n    }\n    var ret;\n    try {\n      ret = cb(self._value);\n    } catch (e) {\n      reject(deferred.promise, e);\n      return;\n    }\n    resolve(deferred.promise, ret);\n  });\n}\n\nfunction resolve(self, newValue) {\n  try {\n    // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n    if (newValue === self)\n      throw new TypeError('A promise cannot be resolved with itself.');\n    if (\n      newValue &&\n      (typeof newValue === 'object' || typeof newValue === 'function')\n    ) {\n      var then = newValue.then;\n      if (newValue instanceof Promise) {\n        self._state = 3;\n        self._value = newValue;\n        finale(self);\n        return;\n      } else if (typeof then === 'function') {\n        doResolve(bind(then, newValue), self);\n        return;\n      }\n    }\n    self._state = 1;\n    self._value = newValue;\n    finale(self);\n  } catch (e) {\n    reject(self, e);\n  }\n}\n\nfunction reject(self, newValue) {\n  self._state = 2;\n  self._value = newValue;\n  finale(self);\n}\n\nfunction finale(self) {\n  if (self._state === 2 && self._deferreds.length === 0) {\n    Promise._immediateFn(function() {\n      if (!self._handled) {\n        Promise._unhandledRejectionFn(self._value);\n      }\n    });\n  }\n\n  for (var i = 0, len = self._deferreds.length; i < len; i++) {\n    handle(self, self._deferreds[i]);\n  }\n  self._deferreds = null;\n}\n\nfunction Handler(onFulfilled, onRejected, promise) {\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, self) {\n  var done = false;\n  try {\n    fn(\n      function(value) {\n        if (done) return;\n        done = true;\n        resolve(self, value);\n      },\n      function(reason) {\n        if (done) return;\n        done = true;\n        reject(self, reason);\n      }\n    );\n  } catch (ex) {\n    if (done) return;\n    done = true;\n    reject(self, ex);\n  }\n}\n\nPromise.prototype['catch'] = function(onRejected) {\n  return this.then(null, onRejected);\n};\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  var prom = new this.constructor(noop);\n\n  handle(this, new Handler(onFulfilled, onRejected, prom));\n  return prom;\n};\n\nPromise.prototype['finally'] = function(callback) {\n  var constructor = this.constructor;\n  return this.then(\n    function(value) {\n      return constructor.resolve(callback()).then(function() {\n        return value;\n      });\n    },\n    function(reason) {\n      return constructor.resolve(callback()).then(function() {\n        return constructor.reject(reason);\n      });\n    }\n  );\n};\n\nPromise.all = function(arr) {\n  return new Promise(function(resolve, reject) {\n    if (!arr || typeof arr.length === 'undefined')\n      throw new TypeError('Promise.all accepts an array');\n    var args = Array.prototype.slice.call(arr);\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n\n    function res(i, val) {\n      try {\n        if (val && (typeof val === 'object' || typeof val === 'function')) {\n          var then = val.then;\n          if (typeof then === 'function') {\n            then.call(\n              val,\n              function(val) {\n                res(i, val);\n              },\n              reject\n            );\n            return;\n          }\n        }\n        args[i] = val;\n        if (--remaining === 0) {\n          resolve(args);\n        }\n      } catch (ex) {\n        reject(ex);\n      }\n    }\n\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.resolve = function(value) {\n  if (value && typeof value === 'object' && value.constructor === Promise) {\n    return value;\n  }\n\n  return new Promise(function(resolve) {\n    resolve(value);\n  });\n};\n\nPromise.reject = function(value) {\n  return new Promise(function(resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function(values) {\n  return new Promise(function(resolve, reject) {\n    for (var i = 0, len = values.length; i < len; i++) {\n      values[i].then(resolve, reject);\n    }\n  });\n};\n\n// Use polyfill for setImmediate for performance gains\nPromise._immediateFn =\n  (typeof setImmediate === 'function' &&\n    function(fn) {\n      setImmediate(fn);\n    }) ||\n  function(fn) {\n    setTimeoutFunc(fn, 0);\n  };\n\nPromise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\n  if (typeof console !== 'undefined' && console) {\n    console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n  }\n};\n\nvar globalNS = (function() {\n  // the only reliable means to get the global object is\n  // `Function('return this')()`\n  // However, this causes CSP violations in Chrome apps.\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('unable to locate global object');\n})();\n\nif (!globalNS.Promise) {\n  globalNS.Promise = Promise;\n}\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar _global = createCommonjsModule(function (module) {\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n});\n\nvar _core = createCommonjsModule(function (module) {\nvar core = module.exports = { version: '2.5.5' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n});\nvar _core_1 = _core.version;\n\nvar _isObject = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\nvar _anObject = function (it) {\n  if (!_isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n\nvar _fails = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n\n// Thank's IE8 for his funny defineProperty\nvar _descriptors = !_fails(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n\nvar document = _global.document;\n// typeof document.createElement is 'object' in old IE\nvar is = _isObject(document) && _isObject(document.createElement);\nvar _domCreate = function (it) {\n  return is ? document.createElement(it) : {};\n};\n\nvar _ie8DomDefine = !_descriptors && !_fails(function () {\n  return Object.defineProperty(_domCreate('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n\n// 7.1.1 ToPrimitive(input [, PreferredType])\n\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nvar _toPrimitive = function (it, S) {\n  if (!_isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !_isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\nvar dP = Object.defineProperty;\n\nvar f = _descriptors ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  _anObject(O);\n  P = _toPrimitive(P, true);\n  _anObject(Attributes);\n  if (_ie8DomDefine) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n\nvar _objectDp = {\n\tf: f\n};\n\nvar _propertyDesc = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n\nvar _hide = _descriptors ? function (object, key, value) {\n  return _objectDp.f(object, key, _propertyDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n\nvar hasOwnProperty = {}.hasOwnProperty;\nvar _has = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n\nvar id = 0;\nvar px = Math.random();\nvar _uid = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\nvar _redefine = createCommonjsModule(function (module) {\nvar SRC = _uid('src');\nvar TO_STRING = 'toString';\nvar $toString = Function[TO_STRING];\nvar TPL = ('' + $toString).split(TO_STRING);\n\n_core.inspectSource = function (it) {\n  return $toString.call(it);\n};\n\n(module.exports = function (O, key, val, safe) {\n  var isFunction = typeof val == 'function';\n  if (isFunction) _has(val, 'name') || _hide(val, 'name', key);\n  if (O[key] === val) return;\n  if (isFunction) _has(val, SRC) || _hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if (O === _global) {\n    O[key] = val;\n  } else if (!safe) {\n    delete O[key];\n    _hide(O, key, val);\n  } else if (O[key]) {\n    O[key] = val;\n  } else {\n    _hide(O, key, val);\n  }\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, TO_STRING, function toString() {\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});\n});\n\nvar _aFunction = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n// optional / simple context binding\n\nvar _ctx = function (fn, that, length) {\n  _aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var target = IS_GLOBAL ? _global : IS_STATIC ? _global[name] || (_global[name] = {}) : (_global[name] || {})[PROTOTYPE];\n  var exports = IS_GLOBAL ? _core : _core[name] || (_core[name] = {});\n  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n  var key, own, out, exp;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    // export native or passed\n    out = (own ? target : source)[key];\n    // bind timers to global for call from export context\n    exp = IS_BIND && own ? _ctx(out, _global) : IS_PROTO && typeof out == 'function' ? _ctx(Function.call, out) : out;\n    // extend global\n    if (target) _redefine(target, key, out, type & $export.U);\n    // export\n    if (exports[key] != out) _hide(exports, key, exp);\n    if (IS_PROTO && expProto[key] != out) expProto[key] = out;\n  }\n};\n_global.core = _core;\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nvar _export = $export;\n\nvar toString = {}.toString;\n\nvar _cof = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\n\n// eslint-disable-next-line no-prototype-builtins\nvar _iobject = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return _cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n// 7.2.1 RequireObjectCoercible(argument)\nvar _defined = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n// 7.1.13 ToObject(argument)\n\nvar _toObject = function (it) {\n  return Object(_defined(it));\n};\n\n// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nvar _toInteger = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n// 7.1.15 ToLength\n\nvar min = Math.min;\nvar _toLength = function (it) {\n  return it > 0 ? min(_toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n\n// 7.2.2 IsArray(argument)\n\nvar _isArray = Array.isArray || function isArray(arg) {\n  return _cof(arg) == 'Array';\n};\n\nvar SHARED = '__core-js_shared__';\nvar store = _global[SHARED] || (_global[SHARED] = {});\nvar _shared = function (key) {\n  return store[key] || (store[key] = {});\n};\n\nvar _wks = createCommonjsModule(function (module) {\nvar store = _shared('wks');\n\nvar Symbol = _global.Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : _uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n});\n\nvar SPECIES = _wks('species');\n\nvar _arraySpeciesConstructor = function (original) {\n  var C;\n  if (_isArray(original)) {\n    C = original.constructor;\n    // cross-realm fallback\n    if (typeof C == 'function' && (C === Array || _isArray(C.prototype))) C = undefined;\n    if (_isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return C === undefined ? Array : C;\n};\n\n// 9.4.2.3 ArraySpeciesCreate(originalArray, length)\n\n\nvar _arraySpeciesCreate = function (original, length) {\n  return new (_arraySpeciesConstructor(original))(length);\n};\n\n// 0 -> Array#forEach\n// 1 -> Array#map\n// 2 -> Array#filter\n// 3 -> Array#some\n// 4 -> Array#every\n// 5 -> Array#find\n// 6 -> Array#findIndex\n\n\n\n\n\nvar _arrayMethods = function (TYPE, $create) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  var create = $create || _arraySpeciesCreate;\n  return function ($this, callbackfn, that) {\n    var O = _toObject($this);\n    var self = _iobject(O);\n    var f = _ctx(callbackfn, that, 3);\n    var length = _toLength(self.length);\n    var index = 0;\n    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var val, res;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      val = self[index];\n      res = f(val, index, O);\n      if (TYPE) {\n        if (IS_MAP) result[index] = res;   // map\n        else if (res) switch (TYPE) {\n          case 3: return true;             // some\n          case 5: return val;              // find\n          case 6: return index;            // findIndex\n          case 2: result.push(val);        // filter\n        } else if (IS_EVERY) return false; // every\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n  };\n};\n\n// 22.1.3.31 Array.prototype[@@unscopables]\nvar UNSCOPABLES = _wks('unscopables');\nvar ArrayProto = Array.prototype;\nif (ArrayProto[UNSCOPABLES] == undefined) _hide(ArrayProto, UNSCOPABLES, {});\nvar _addToUnscopables = function (key) {\n  ArrayProto[UNSCOPABLES][key] = true;\n};\n\n// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)\n\nvar $find = _arrayMethods(5);\nvar KEY = 'find';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n_export(_export.P + _export.F * forced, 'Array', {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n_addToUnscopables(KEY);\n\nvar find = _core.Array.find;\n\n// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)\n\nvar $find$1 = _arrayMethods(6);\nvar KEY$1 = 'findIndex';\nvar forced$1 = true;\n// Shouldn't skip holes\nif (KEY$1 in []) Array(1)[KEY$1](function () { forced$1 = false; });\n_export(_export.P + _export.F * forced$1, 'Array', {\n  findIndex: function findIndex(callbackfn /* , that = undefined */) {\n    return $find$1(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n_addToUnscopables(KEY$1);\n\nvar findIndex = _core.Array.findIndex;\n\n// to indexed object, toObject with fallback for non-array-like ES3 strings\n\n\nvar _toIobject = function (it) {\n  return _iobject(_defined(it));\n};\n\nvar max = Math.max;\nvar min$1 = Math.min;\nvar _toAbsoluteIndex = function (index, length) {\n  index = _toInteger(index);\n  return index < 0 ? max(index + length, 0) : min$1(index, length);\n};\n\n// false -> Array#indexOf\n// true  -> Array#includes\n\n\n\nvar _arrayIncludes = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = _toIobject($this);\n    var length = _toLength(O.length);\n    var index = _toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\nvar shared = _shared('keys');\n\nvar _sharedKey = function (key) {\n  return shared[key] || (shared[key] = _uid(key));\n};\n\nvar arrayIndexOf = _arrayIncludes(false);\nvar IE_PROTO = _sharedKey('IE_PROTO');\n\nvar _objectKeysInternal = function (object, names) {\n  var O = _toIobject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) _has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (_has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n\n// IE 8- don't enum bug keys\nvar _enumBugKeys = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n\n// 19.1.2.14 / 15.2.3.14 Object.keys(O)\n\n\n\nvar _objectKeys = Object.keys || function keys(O) {\n  return _objectKeysInternal(O, _enumBugKeys);\n};\n\nvar f$1 = Object.getOwnPropertySymbols;\n\nvar _objectGops = {\n\tf: f$1\n};\n\nvar f$2 = {}.propertyIsEnumerable;\n\nvar _objectPie = {\n\tf: f$2\n};\n\n// 19.1.2.1 Object.assign(target, source, ...)\n\n\n\n\n\nvar $assign = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nvar _objectAssign = !$assign || _fails(function () {\n  var A = {};\n  var B = {};\n  // eslint-disable-next-line no-undef\n  var S = Symbol();\n  var K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function (k) { B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source) { // eslint-disable-line no-unused-vars\n  var T = _toObject(target);\n  var aLen = arguments.length;\n  var index = 1;\n  var getSymbols = _objectGops.f;\n  var isEnum = _objectPie.f;\n  while (aLen > index) {\n    var S = _iobject(arguments[index++]);\n    var keys = getSymbols ? _objectKeys(S).concat(getSymbols(S)) : _objectKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];\n  } return T;\n} : $assign;\n\n// 19.1.3.1 Object.assign(target, source)\n\n\n_export(_export.S + _export.F, 'Object', { assign: _objectAssign });\n\nvar assign = _core.Object.assign;\n\n// 7.2.8 IsRegExp(argument)\n\n\nvar MATCH = _wks('match');\nvar _isRegexp = function (it) {\n  var isRegExp;\n  return _isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : _cof(it) == 'RegExp');\n};\n\n// helper for String#{startsWith, endsWith, includes}\n\n\n\nvar _stringContext = function (that, searchString, NAME) {\n  if (_isRegexp(searchString)) throw TypeError('String#' + NAME + \" doesn't accept regex!\");\n  return String(_defined(that));\n};\n\nvar MATCH$1 = _wks('match');\nvar _failsIsRegexp = function (KEY) {\n  var re = /./;\n  try {\n    '/./'[KEY](re);\n  } catch (e) {\n    try {\n      re[MATCH$1] = false;\n      return !'/./'[KEY](re);\n    } catch (f) { /* empty */ }\n  } return true;\n};\n\nvar STARTS_WITH = 'startsWith';\nvar $startsWith = ''[STARTS_WITH];\n\n_export(_export.P + _export.F * _failsIsRegexp(STARTS_WITH), 'String', {\n  startsWith: function startsWith(searchString /* , position = 0 */) {\n    var that = _stringContext(this, searchString, STARTS_WITH);\n    var index = _toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length));\n    var search = String(searchString);\n    return $startsWith\n      ? $startsWith.call(that, search, index)\n      : that.slice(index, index + search.length) === search;\n  }\n});\n\nvar startsWith = _core.String.startsWith;\n\nvar _stringRepeat = function repeat(count) {\n  var str = String(_defined(this));\n  var res = '';\n  var n = _toInteger(count);\n  if (n < 0 || n == Infinity) throw RangeError(\"Count can't be negative\");\n  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) res += str;\n  return res;\n};\n\n_export(_export.P, 'String', {\n  // 21.1.3.13 String.prototype.repeat(count)\n  repeat: _stringRepeat\n});\n\nvar repeat = _core.String.repeat;\n\nvar _meta = createCommonjsModule(function (module) {\nvar META = _uid('meta');\n\n\nvar setDesc = _objectDp.f;\nvar id = 0;\nvar isExtensible = Object.isExtensible || function () {\n  return true;\n};\nvar FREEZE = !_fails(function () {\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function (it) {\n  setDesc(it, META, { value: {\n    i: 'O' + ++id, // object ID\n    w: {}          // weak collections IDs\n  } });\n};\nvar fastKey = function (it, create) {\n  // return primitive with prefix\n  if (!_isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if (!_has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return 'F';\n    // not necessary to add metadata\n    if (!create) return 'E';\n    // add missing metadata\n    setMeta(it);\n  // return object ID\n  } return it[META].i;\n};\nvar getWeak = function (it, create) {\n  if (!_has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return true;\n    // not necessary to add metadata\n    if (!create) return false;\n    // add missing metadata\n    setMeta(it);\n  // return hash weak collections IDs\n  } return it[META].w;\n};\n// add metadata on freeze-family methods calling\nvar onFreeze = function (it) {\n  if (FREEZE && meta.NEED && isExtensible(it) && !_has(it, META)) setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY: META,\n  NEED: false,\n  fastKey: fastKey,\n  getWeak: getWeak,\n  onFreeze: onFreeze\n};\n});\nvar _meta_1 = _meta.KEY;\nvar _meta_2 = _meta.NEED;\nvar _meta_3 = _meta.fastKey;\nvar _meta_4 = _meta.getWeak;\nvar _meta_5 = _meta.onFreeze;\n\nvar def = _objectDp.f;\n\nvar TAG = _wks('toStringTag');\n\nvar _setToStringTag = function (it, tag, stat) {\n  if (it && !_has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n\nvar f$3 = _wks;\n\nvar _wksExt = {\n\tf: f$3\n};\n\nvar _library = false;\n\nvar defineProperty = _objectDp.f;\nvar _wksDefine = function (name) {\n  var $Symbol = _core.Symbol || (_core.Symbol = _library ? {} : _global.Symbol || {});\n  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: _wksExt.f(name) });\n};\n\n// all enumerable object keys, includes symbols\n\n\n\nvar _enumKeys = function (it) {\n  var result = _objectKeys(it);\n  var getSymbols = _objectGops.f;\n  if (getSymbols) {\n    var symbols = getSymbols(it);\n    var isEnum = _objectPie.f;\n    var i = 0;\n    var key;\n    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);\n  } return result;\n};\n\nvar _objectDps = _descriptors ? Object.defineProperties : function defineProperties(O, Properties) {\n  _anObject(O);\n  var keys = _objectKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) _objectDp.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n\nvar document$1 = _global.document;\nvar _html = document$1 && document$1.documentElement;\n\n// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\n\n\n\nvar IE_PROTO$1 = _sharedKey('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE$1 = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = _domCreate('iframe');\n  var i = _enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  _html.appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE$1][_enumBugKeys[i]];\n  return createDict();\n};\n\nvar _objectCreate = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE$1] = _anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE$1] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO$1] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : _objectDps(result, Properties);\n};\n\n// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\n\nvar hiddenKeys = _enumBugKeys.concat('length', 'prototype');\n\nvar f$4 = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return _objectKeysInternal(O, hiddenKeys);\n};\n\nvar _objectGopn = {\n\tf: f$4\n};\n\n// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\n\nvar gOPN = _objectGopn.f;\nvar toString$1 = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return gOPN(it);\n  } catch (e) {\n    return windowNames.slice();\n  }\n};\n\nvar f$5 = function getOwnPropertyNames(it) {\n  return windowNames && toString$1.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(_toIobject(it));\n};\n\nvar _objectGopnExt = {\n\tf: f$5\n};\n\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar f$6 = _descriptors ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = _toIobject(O);\n  P = _toPrimitive(P, true);\n  if (_ie8DomDefine) try {\n    return gOPD(O, P);\n  } catch (e) { /* empty */ }\n  if (_has(O, P)) return _propertyDesc(!_objectPie.f.call(O, P), O[P]);\n};\n\nvar _objectGopd = {\n\tf: f$6\n};\n\n// ECMAScript 6 symbols shim\n\n\n\n\n\nvar META = _meta.KEY;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar gOPD$1 = _objectGopd.f;\nvar dP$1 = _objectDp.f;\nvar gOPN$1 = _objectGopnExt.f;\nvar $Symbol = _global.Symbol;\nvar $JSON = _global.JSON;\nvar _stringify = $JSON && $JSON.stringify;\nvar PROTOTYPE$2 = 'prototype';\nvar HIDDEN = _wks('_hidden');\nvar TO_PRIMITIVE = _wks('toPrimitive');\nvar isEnum = {}.propertyIsEnumerable;\nvar SymbolRegistry = _shared('symbol-registry');\nvar AllSymbols = _shared('symbols');\nvar OPSymbols = _shared('op-symbols');\nvar ObjectProto = Object[PROTOTYPE$2];\nvar USE_NATIVE = typeof $Symbol == 'function';\nvar QObject = _global.QObject;\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar setter = !QObject || !QObject[PROTOTYPE$2] || !QObject[PROTOTYPE$2].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar setSymbolDesc = _descriptors && _fails(function () {\n  return _objectCreate(dP$1({}, 'a', {\n    get: function () { return dP$1(this, 'a', { value: 7 }).a; }\n  })).a != 7;\n}) ? function (it, key, D) {\n  var protoDesc = gOPD$1(ObjectProto, key);\n  if (protoDesc) delete ObjectProto[key];\n  dP$1(it, key, D);\n  if (protoDesc && it !== ObjectProto) dP$1(ObjectProto, key, protoDesc);\n} : dP$1;\n\nvar wrap = function (tag) {\n  var sym = AllSymbols[tag] = _objectCreate($Symbol[PROTOTYPE$2]);\n  sym._k = tag;\n  return sym;\n};\n\nvar isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  return it instanceof $Symbol;\n};\n\nvar $defineProperty = function defineProperty(it, key, D) {\n  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);\n  _anObject(it);\n  key = _toPrimitive(key, true);\n  _anObject(D);\n  if (_has(AllSymbols, key)) {\n    if (!D.enumerable) {\n      if (!_has(it, HIDDEN)) dP$1(it, HIDDEN, _propertyDesc(1, {}));\n      it[HIDDEN][key] = true;\n    } else {\n      if (_has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;\n      D = _objectCreate(D, { enumerable: _propertyDesc(0, false) });\n    } return setSymbolDesc(it, key, D);\n  } return dP$1(it, key, D);\n};\nvar $defineProperties = function defineProperties(it, P) {\n  _anObject(it);\n  var keys = _enumKeys(P = _toIobject(P));\n  var i = 0;\n  var l = keys.length;\n  var key;\n  while (l > i) $defineProperty(it, key = keys[i++], P[key]);\n  return it;\n};\nvar $create = function create(it, P) {\n  return P === undefined ? _objectCreate(it) : $defineProperties(_objectCreate(it), P);\n};\nvar $propertyIsEnumerable = function propertyIsEnumerable(key) {\n  var E = isEnum.call(this, key = _toPrimitive(key, true));\n  if (this === ObjectProto && _has(AllSymbols, key) && !_has(OPSymbols, key)) return false;\n  return E || !_has(this, key) || !_has(AllSymbols, key) || _has(this, HIDDEN) && this[HIDDEN][key] ? E : true;\n};\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {\n  it = _toIobject(it);\n  key = _toPrimitive(key, true);\n  if (it === ObjectProto && _has(AllSymbols, key) && !_has(OPSymbols, key)) return;\n  var D = gOPD$1(it, key);\n  if (D && _has(AllSymbols, key) && !(_has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;\n  return D;\n};\nvar $getOwnPropertyNames = function getOwnPropertyNames(it) {\n  var names = gOPN$1(_toIobject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (!_has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);\n  } return result;\n};\nvar $getOwnPropertySymbols = function getOwnPropertySymbols(it) {\n  var IS_OP = it === ObjectProto;\n  var names = gOPN$1(IS_OP ? OPSymbols : _toIobject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (_has(AllSymbols, key = names[i++]) && (IS_OP ? _has(ObjectProto, key) : true)) result.push(AllSymbols[key]);\n  } return result;\n};\n\n// 19.4.1.1 Symbol([description])\nif (!USE_NATIVE) {\n  $Symbol = function Symbol() {\n    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');\n    var tag = _uid(arguments.length > 0 ? arguments[0] : undefined);\n    var $set = function (value) {\n      if (this === ObjectProto) $set.call(OPSymbols, value);\n      if (_has(this, HIDDEN) && _has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;\n      setSymbolDesc(this, tag, _propertyDesc(1, value));\n    };\n    if (_descriptors && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });\n    return wrap(tag);\n  };\n  _redefine($Symbol[PROTOTYPE$2], 'toString', function toString() {\n    return this._k;\n  });\n\n  _objectGopd.f = $getOwnPropertyDescriptor;\n  _objectDp.f = $defineProperty;\n  _objectGopn.f = _objectGopnExt.f = $getOwnPropertyNames;\n  _objectPie.f = $propertyIsEnumerable;\n  _objectGops.f = $getOwnPropertySymbols;\n\n  if (_descriptors && !_library) {\n    _redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);\n  }\n\n  _wksExt.f = function (name) {\n    return wrap(_wks(name));\n  };\n}\n\n_export(_export.G + _export.W + _export.F * !USE_NATIVE, { Symbol: $Symbol });\n\nfor (var es6Symbols = (\n  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14\n  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'\n).split(','), j = 0; es6Symbols.length > j;)_wks(es6Symbols[j++]);\n\nfor (var wellKnownSymbols = _objectKeys(_wks.store), k = 0; wellKnownSymbols.length > k;) _wksDefine(wellKnownSymbols[k++]);\n\n_export(_export.S + _export.F * !USE_NATIVE, 'Symbol', {\n  // 19.4.2.1 Symbol.for(key)\n  'for': function (key) {\n    return _has(SymbolRegistry, key += '')\n      ? SymbolRegistry[key]\n      : SymbolRegistry[key] = $Symbol(key);\n  },\n  // 19.4.2.5 Symbol.keyFor(sym)\n  keyFor: function keyFor(sym) {\n    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');\n    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;\n  },\n  useSetter: function () { setter = true; },\n  useSimple: function () { setter = false; }\n});\n\n_export(_export.S + _export.F * !USE_NATIVE, 'Object', {\n  // 19.1.2.2 Object.create(O [, Properties])\n  create: $create,\n  // 19.1.2.4 Object.defineProperty(O, P, Attributes)\n  defineProperty: $defineProperty,\n  // 19.1.2.3 Object.defineProperties(O, Properties)\n  defineProperties: $defineProperties,\n  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,\n  // 19.1.2.7 Object.getOwnPropertyNames(O)\n  getOwnPropertyNames: $getOwnPropertyNames,\n  // 19.1.2.8 Object.getOwnPropertySymbols(O)\n  getOwnPropertySymbols: $getOwnPropertySymbols\n});\n\n// 24.3.2 JSON.stringify(value [, replacer [, space]])\n$JSON && _export(_export.S + _export.F * (!USE_NATIVE || _fails(function () {\n  var S = $Symbol();\n  // MS Edge converts symbol values to JSON as {}\n  // WebKit converts symbol values to JSON as null\n  // V8 throws on boxed symbols\n  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';\n})), 'JSON', {\n  stringify: function stringify(it) {\n    var args = [it];\n    var i = 1;\n    var replacer, $replacer;\n    while (arguments.length > i) args.push(arguments[i++]);\n    $replacer = replacer = args[1];\n    if (!_isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined\n    if (!_isArray(replacer)) replacer = function (key, value) {\n      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);\n      if (!isSymbol(value)) return value;\n    };\n    args[1] = replacer;\n    return _stringify.apply($JSON, args);\n  }\n});\n\n// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)\n$Symbol[PROTOTYPE$2][TO_PRIMITIVE] || _hide($Symbol[PROTOTYPE$2], TO_PRIMITIVE, $Symbol[PROTOTYPE$2].valueOf);\n// 19.4.3.5 Symbol.prototype[@@toStringTag]\n_setToStringTag($Symbol, 'Symbol');\n// 20.2.1.9 Math[@@toStringTag]\n_setToStringTag(Math, 'Math', true);\n// 24.3.3 JSON[@@toStringTag]\n_setToStringTag(_global.JSON, 'JSON', true);\n\n// getting tag from 19.1.3.6 Object.prototype.toString()\n\nvar TAG$1 = _wks('toStringTag');\n// ES3 wrong here\nvar ARG = _cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nvar _classof = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG$1)) == 'string' ? T\n    // builtinTag case\n    : ARG ? _cof(O)\n    // ES3 arguments fallback\n    : (B = _cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n\n// 19.1.3.6 Object.prototype.toString()\n\nvar test = {};\ntest[_wks('toStringTag')] = 'z';\nif (test + '' != '[object z]') {\n  _redefine(Object.prototype, 'toString', function toString() {\n    return '[object ' + _classof(this) + ']';\n  }, true);\n}\n\n_wksDefine('asyncIterator');\n\n_wksDefine('observable');\n\nvar symbol = _core.Symbol;\n\n// true  -> String#at\n// false -> String#codePointAt\nvar _stringAt = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(_defined(that));\n    var i = _toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n\nvar _iterators = {};\n\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\n_hide(IteratorPrototype, _wks('iterator'), function () { return this; });\n\nvar _iterCreate = function (Constructor, NAME, next) {\n  Constructor.prototype = _objectCreate(IteratorPrototype, { next: _propertyDesc(1, next) });\n  _setToStringTag(Constructor, NAME + ' Iterator');\n};\n\n// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\n\n\nvar IE_PROTO$2 = _sharedKey('IE_PROTO');\nvar ObjectProto$1 = Object.prototype;\n\nvar _objectGpo = Object.getPrototypeOf || function (O) {\n  O = _toObject(O);\n  if (_has(O, IE_PROTO$2)) return O[IE_PROTO$2];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto$1 : null;\n};\n\nvar ITERATOR = _wks('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nvar _iterDefine = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  _iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = _objectGpo($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      _setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!_library && typeof IteratorPrototype[ITERATOR] != 'function') _hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!_library || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    _hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  _iterators[NAME] = $default;\n  _iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) _redefine(proto, key, methods[key]);\n    } else _export(_export.P + _export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n\nvar $at = _stringAt(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\n_iterDefine(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return { value: undefined, done: true };\n  point = $at(O, index);\n  this._i += point.length;\n  return { value: point, done: false };\n});\n\nvar _iterStep = function (done, value) {\n  return { value: value, done: !!done };\n};\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nvar es6_array_iterator = _iterDefine(Array, 'Array', function (iterated, kind) {\n  this._t = _toIobject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return _iterStep(1);\n  }\n  if (kind == 'keys') return _iterStep(0, index);\n  if (kind == 'values') return _iterStep(0, O[index]);\n  return _iterStep(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\n_iterators.Arguments = _iterators.Array;\n\n_addToUnscopables('keys');\n_addToUnscopables('values');\n_addToUnscopables('entries');\n\nvar ITERATOR$1 = _wks('iterator');\nvar TO_STRING_TAG = _wks('toStringTag');\nvar ArrayValues = _iterators.Array;\n\nvar DOMIterables = {\n  CSSRuleList: true, // TODO: Not spec compliant, should be false.\n  CSSStyleDeclaration: false,\n  CSSValueList: false,\n  ClientRectList: false,\n  DOMRectList: false,\n  DOMStringList: false,\n  DOMTokenList: true,\n  DataTransferItemList: false,\n  FileList: false,\n  HTMLAllCollection: false,\n  HTMLCollection: false,\n  HTMLFormElement: false,\n  HTMLSelectElement: false,\n  MediaList: true, // TODO: Not spec compliant, should be false.\n  MimeTypeArray: false,\n  NamedNodeMap: false,\n  NodeList: true,\n  PaintRequestList: false,\n  Plugin: false,\n  PluginArray: false,\n  SVGLengthList: false,\n  SVGNumberList: false,\n  SVGPathSegList: false,\n  SVGPointList: false,\n  SVGStringList: false,\n  SVGTransformList: false,\n  SourceBufferList: false,\n  StyleSheetList: true, // TODO: Not spec compliant, should be false.\n  TextTrackCueList: false,\n  TextTrackList: false,\n  TouchList: false\n};\n\nfor (var collections = _objectKeys(DOMIterables), i = 0; i < collections.length; i++) {\n  var NAME = collections[i];\n  var explicit = DOMIterables[NAME];\n  var Collection = _global[NAME];\n  var proto = Collection && Collection.prototype;\n  var key;\n  if (proto) {\n    if (!proto[ITERATOR$1]) _hide(proto, ITERATOR$1, ArrayValues);\n    if (!proto[TO_STRING_TAG]) _hide(proto, TO_STRING_TAG, NAME);\n    _iterators[NAME] = ArrayValues;\n    if (explicit) for (key in es6_array_iterator) if (!proto[key]) _redefine(proto, key, es6_array_iterator[key], true);\n  }\n}\n\nvar iterator = _wksExt.f('iterator');\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(39).setImmediate, __webpack_require__(1)))\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\n__webpack_require__(40);\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(12)))\n\n/***/ }),\n/* 41 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__firebase_database__ = __webpack_require__(42);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__firebase_database___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__firebase_database__);\n\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(process) {\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar util = __webpack_require__(14);\nvar logger = __webpack_require__(43);\nvar tslib_1 = __webpack_require__(15);\nvar firebase = _interopDefault(__webpack_require__(13));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Wraps a DOM Storage object and:\r\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\r\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\r\n *\r\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\r\n * and one for localStorage.\r\n *\r\n * @constructor\r\n */\r\nvar DOMStorageWrapper = /** @class */ (function () {\r\n    /**\r\n     * @param {Storage} domStorage_ The underlying storage object (e.g. localStorage or sessionStorage)\r\n     */\r\n    function DOMStorageWrapper(domStorage_) {\r\n        this.domStorage_ = domStorage_;\r\n        // Use a prefix to avoid collisions with other stuff saved by the app.\r\n        this.prefix_ = 'firebase:';\r\n    }\r\n    /**\r\n     * @param {string} key The key to save the value under\r\n     * @param {?Object} value The value being stored, or null to remove the key.\r\n     */\r\n    DOMStorageWrapper.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            this.domStorage_.removeItem(this.prefixedName_(key));\r\n        }\r\n        else {\r\n            this.domStorage_.setItem(this.prefixedName_(key), util.stringify(value));\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} key\r\n     * @return {*} The value that was stored under this key, or null\r\n     */\r\n    DOMStorageWrapper.prototype.get = function (key) {\r\n        var storedVal = this.domStorage_.getItem(this.prefixedName_(key));\r\n        if (storedVal == null) {\r\n            return null;\r\n        }\r\n        else {\r\n            return util.jsonEval(storedVal);\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} key\r\n     */\r\n    DOMStorageWrapper.prototype.remove = function (key) {\r\n        this.domStorage_.removeItem(this.prefixedName_(key));\r\n    };\r\n    /**\r\n     * @param {string} name\r\n     * @return {string}\r\n     */\r\n    DOMStorageWrapper.prototype.prefixedName_ = function (name) {\r\n        return this.prefix_ + name;\r\n    };\r\n    DOMStorageWrapper.prototype.toString = function () {\r\n        return this.domStorage_.toString();\r\n    };\r\n    return DOMStorageWrapper;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\r\n * (TODO: create interface for both to implement).\r\n *\r\n * @constructor\r\n */\r\nvar MemoryStorage = /** @class */ (function () {\r\n    function MemoryStorage() {\r\n        this.cache_ = {};\r\n        this.isInMemoryStorage = true;\r\n    }\r\n    MemoryStorage.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            delete this.cache_[key];\r\n        }\r\n        else {\r\n            this.cache_[key] = value;\r\n        }\r\n    };\r\n    MemoryStorage.prototype.get = function (key) {\r\n        if (util.contains(this.cache_, key)) {\r\n            return this.cache_[key];\r\n        }\r\n        return null;\r\n    };\r\n    MemoryStorage.prototype.remove = function (key) {\r\n        delete this.cache_[key];\r\n    };\r\n    return MemoryStorage;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\r\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\r\n * to reflect this type\r\n *\r\n * @param {string} domStorageName Name of the underlying storage object\r\n *   (e.g. 'localStorage' or 'sessionStorage').\r\n * @return {?} Turning off type information until a common interface is defined.\r\n */\r\nvar createStoragefor = function (domStorageName) {\r\n    try {\r\n        // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\r\n        // so it must be inside the try/catch.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window[domStorageName] !== 'undefined') {\r\n            // Need to test cache. Just because it's here doesn't mean it works\r\n            var domStorage = window[domStorageName];\r\n            domStorage.setItem('firebase:sentinel', 'cache');\r\n            domStorage.removeItem('firebase:sentinel');\r\n            return new DOMStorageWrapper(domStorage);\r\n        }\r\n    }\r\n    catch (e) { }\r\n    // Failed to create wrapper.  Just return in-memory storage.\r\n    // TODO: log?\r\n    return new MemoryStorage();\r\n};\r\n/** A storage object that lasts across sessions */\r\nvar PersistentStorage = createStoragefor('localStorage');\r\n/** A storage object that only lasts one session */\r\nvar SessionStorage = createStoragefor('sessionStorage');\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar logClient = new logger.Logger('@firebase/database');\r\n/**\r\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\r\n * @type {function(): number} Generated ID.\r\n */\r\nvar LUIDGenerator = (function () {\r\n    var id = 1;\r\n    return function () {\r\n        return id++;\r\n    };\r\n})();\r\n/**\r\n * Sha1 hash of the input string\r\n * @param {!string} str The string to hash\r\n * @return {!string} The resulting hash\r\n */\r\nvar sha1 = function (str) {\r\n    var utf8Bytes = util.stringToByteArray(str);\r\n    var sha1 = new util.Sha1();\r\n    sha1.update(utf8Bytes);\r\n    var sha1Bytes = sha1.digest();\r\n    return util.base64.encodeByteArray(sha1Bytes);\r\n};\r\n/**\r\n * @param {...*} var_args\r\n * @return {string}\r\n * @private\r\n */\r\nvar buildLogMessage_ = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    var message = '';\r\n    for (var i = 0; i < var_args.length; i++) {\r\n        if (Array.isArray(var_args[i]) ||\r\n            (var_args[i] &&\r\n                typeof var_args[i] === 'object' &&\r\n                typeof var_args[i].length === 'number')) {\r\n            message += buildLogMessage_.apply(null, var_args[i]);\r\n        }\r\n        else if (typeof var_args[i] === 'object') {\r\n            message += util.stringify(var_args[i]);\r\n        }\r\n        else {\r\n            message += var_args[i];\r\n        }\r\n        message += ' ';\r\n    }\r\n    return message;\r\n};\r\n/**\r\n * Use this for all debug messages in Firebase.\r\n * @type {?function(string)}\r\n */\r\nvar logger$1 = null;\r\n/**\r\n * Flag to check for log availability on first log message\r\n * @type {boolean}\r\n * @private\r\n */\r\nvar firstLog_ = true;\r\n/**\r\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\r\n * @param {boolean|?function(string)} logger_ A flag to turn on logging, or a custom logger\r\n * @param {boolean=} persistent Whether or not to persist logging settings across refreshes\r\n */\r\nvar enableLogging = function (logger_, persistent) {\r\n    util.assert(!persistent || (logger_ === true || logger_ === false), \"Can't turn on custom loggers persistently.\");\r\n    if (logger_ === true) {\r\n        logClient.logLevel = logger.LogLevel.VERBOSE;\r\n        logger$1 = logClient.log.bind(logClient);\r\n        if (persistent)\r\n            SessionStorage.set('logging_enabled', true);\r\n    }\r\n    else if (typeof logger_ === 'function') {\r\n        logger$1 = logger_;\r\n    }\r\n    else {\r\n        logger$1 = null;\r\n        SessionStorage.remove('logging_enabled');\r\n    }\r\n};\r\n/**\r\n *\r\n * @param {...(string|Arguments)} var_args\r\n */\r\nvar log = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    if (firstLog_ === true) {\r\n        firstLog_ = false;\r\n        if (logger$1 === null && SessionStorage.get('logging_enabled') === true)\r\n            enableLogging(true);\r\n    }\r\n    if (logger$1) {\r\n        var message = buildLogMessage_.apply(null, var_args);\r\n        logger$1(message);\r\n    }\r\n};\r\n/**\r\n * @param {!string} prefix\r\n * @return {function(...[*])}\r\n */\r\nvar logWrapper = function (prefix) {\r\n    return function () {\r\n        var var_args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            var_args[_i] = arguments[_i];\r\n        }\r\n        log.apply(void 0, [prefix].concat(var_args));\r\n    };\r\n};\r\n/**\r\n * @param {...string} var_args\r\n */\r\nvar error = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_.apply(void 0, var_args);\r\n    logClient.error(message);\r\n};\r\n/**\r\n * @param {...string} var_args\r\n */\r\nvar fatal = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    var message = \"FIREBASE FATAL ERROR: \" + buildLogMessage_.apply(void 0, var_args);\r\n    logClient.error(message);\r\n    throw new Error(message);\r\n};\r\n/**\r\n * @param {...*} var_args\r\n */\r\nvar warn = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE WARNING: ' + buildLogMessage_.apply(void 0, var_args);\r\n    logClient.warn(message);\r\n};\r\n/**\r\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\r\n * does not use https.\r\n */\r\nvar warnIfPageIsSecure = function () {\r\n    // Be very careful accessing browser globals. Who knows what may or may not exist.\r\n    if (typeof window !== 'undefined' &&\r\n        window.location &&\r\n        window.location.protocol &&\r\n        window.location.protocol.indexOf('https:') !== -1) {\r\n        warn('Insecure Firebase access from a secure page. ' +\r\n            'Please use https in calls to new Firebase().');\r\n    }\r\n};\r\n/**\r\n * Returns true if data is NaN, or +/- Infinity.\r\n * @param {*} data\r\n * @return {boolean}\r\n */\r\nvar isInvalidJSONNumber = function (data) {\r\n    return (typeof data === 'number' &&\r\n        (data != data || // NaN\r\n            data == Number.POSITIVE_INFINITY ||\r\n            data == Number.NEGATIVE_INFINITY));\r\n};\r\n/**\r\n * @param {function()} fn\r\n */\r\nvar executeWhenDOMReady = function (fn) {\r\n    if (util.isNodeSdk() || document.readyState === 'complete') {\r\n        fn();\r\n    }\r\n    else {\r\n        // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\r\n        // fire before onload), but fall back to onload.\r\n        var called_1 = false;\r\n        var wrappedFn_1 = function () {\r\n            if (!document.body) {\r\n                setTimeout(wrappedFn_1, Math.floor(10));\r\n                return;\r\n            }\r\n            if (!called_1) {\r\n                called_1 = true;\r\n                fn();\r\n            }\r\n        };\r\n        if (document.addEventListener) {\r\n            document.addEventListener('DOMContentLoaded', wrappedFn_1, false);\r\n            // fallback to onload.\r\n            window.addEventListener('load', wrappedFn_1, false);\r\n        }\r\n        else if (document.attachEvent) {\r\n            // IE.\r\n            document.attachEvent('onreadystatechange', function () {\r\n                if (document.readyState === 'complete')\r\n                    wrappedFn_1();\r\n            });\r\n            // fallback to onload.\r\n            window.attachEvent('onload', wrappedFn_1);\r\n            // jQuery has an extra hack for IE that we could employ (based on\r\n            // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\r\n            // I'm hoping we don't need it.\r\n        }\r\n    }\r\n};\r\n/**\r\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\r\n * @type {!string}\r\n */\r\nvar MIN_NAME = '[MIN_NAME]';\r\n/**\r\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\r\n * @type {!string}\r\n */\r\nvar MAX_NAME = '[MAX_NAME]';\r\n/**\r\n * Compares valid Firebase key names, plus min and max name\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number}\r\n */\r\nvar nameCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a === MIN_NAME || b === MAX_NAME) {\r\n        return -1;\r\n    }\r\n    else if (b === MIN_NAME || a === MAX_NAME) {\r\n        return 1;\r\n    }\r\n    else {\r\n        var aAsInt = tryParseInt(a), bAsInt = tryParseInt(b);\r\n        if (aAsInt !== null) {\r\n            if (bAsInt !== null) {\r\n                return aAsInt - bAsInt == 0 ? a.length - b.length : aAsInt - bAsInt;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (bAsInt !== null) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return a < b ? -1 : 1;\r\n        }\r\n    }\r\n};\r\n/**\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number} comparison result.\r\n */\r\nvar stringCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a < b) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n};\r\n/**\r\n * @param {string} key\r\n * @param {Object} obj\r\n * @return {*}\r\n */\r\nvar requireKey = function (key, obj) {\r\n    if (obj && key in obj) {\r\n        return obj[key];\r\n    }\r\n    else {\r\n        throw new Error('Missing required key (' + key + ') in object: ' + util.stringify(obj));\r\n    }\r\n};\r\n/**\r\n * @param {*} obj\r\n * @return {string}\r\n */\r\nvar ObjectToUniqueKey = function (obj) {\r\n    if (typeof obj !== 'object' || obj === null)\r\n        return util.stringify(obj);\r\n    var keys = [];\r\n    for (var k in obj) {\r\n        keys.push(k);\r\n    }\r\n    // Export as json, but with the keys sorted.\r\n    keys.sort();\r\n    var key = '{';\r\n    for (var i = 0; i < keys.length; i++) {\r\n        if (i !== 0)\r\n            key += ',';\r\n        key += util.stringify(keys[i]);\r\n        key += ':';\r\n        key += ObjectToUniqueKey(obj[keys[i]]);\r\n    }\r\n    key += '}';\r\n    return key;\r\n};\r\n/**\r\n * Splits a string into a number of smaller segments of maximum size\r\n * @param {!string} str The string\r\n * @param {!number} segsize The maximum number of chars in the string.\r\n * @return {Array.<string>} The string, split into appropriately-sized chunks\r\n */\r\nvar splitStringBySize = function (str, segsize) {\r\n    var len = str.length;\r\n    if (len <= segsize) {\r\n        return [str];\r\n    }\r\n    var dataSegs = [];\r\n    for (var c = 0; c < len; c += segsize) {\r\n        if (c + segsize > len) {\r\n            dataSegs.push(str.substring(c, len));\r\n        }\r\n        else {\r\n            dataSegs.push(str.substring(c, c + segsize));\r\n        }\r\n    }\r\n    return dataSegs;\r\n};\r\n/**\r\n * Apply a function to each (key, value) pair in an object or\r\n * apply a function to each (index, value) pair in an array\r\n * @param {!(Object|Array)} obj The object or array to iterate over\r\n * @param {function(?, ?)} fn The function to apply\r\n */\r\nvar each = function (obj, fn) {\r\n    if (Array.isArray(obj)) {\r\n        for (var i = 0; i < obj.length; ++i) {\r\n            fn(i, obj[i]);\r\n        }\r\n    }\r\n    else {\r\n        /**\r\n         * in the conversion of code we removed the goog.object.forEach\r\n         * function which did a value,key callback. We standardized on\r\n         * a single impl that does a key, value callback. So we invert\r\n         * to not have to touch the `each` code points\r\n         */\r\n        util.forEach(obj, function (key, val) { return fn(val, key); });\r\n    }\r\n};\r\n/**\r\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\r\n * I made one modification at the end and removed the NaN / Infinity\r\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\r\n * @param {!number} v A double\r\n * @return {string}\r\n */\r\nvar doubleToIEEE754String = function (v) {\r\n    util.assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\r\n    var ebits = 11, fbits = 52;\r\n    var bias = (1 << (ebits - 1)) - 1, s, e, f, ln, i, bits, str;\r\n    // Compute sign, exponent, fraction\r\n    // Skip NaN / Infinity handling --MJL.\r\n    if (v === 0) {\r\n        e = 0;\r\n        f = 0;\r\n        s = 1 / v === -Infinity ? 1 : 0;\r\n    }\r\n    else {\r\n        s = v < 0;\r\n        v = Math.abs(v);\r\n        if (v >= Math.pow(2, 1 - bias)) {\r\n            // Normalized\r\n            ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\r\n            e = ln + bias;\r\n            f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\r\n        }\r\n        else {\r\n            // Denormalized\r\n            e = 0;\r\n            f = Math.round(v / Math.pow(2, 1 - bias - fbits));\r\n        }\r\n    }\r\n    // Pack sign, exponent, fraction\r\n    bits = [];\r\n    for (i = fbits; i; i -= 1) {\r\n        bits.push(f % 2 ? 1 : 0);\r\n        f = Math.floor(f / 2);\r\n    }\r\n    for (i = ebits; i; i -= 1) {\r\n        bits.push(e % 2 ? 1 : 0);\r\n        e = Math.floor(e / 2);\r\n    }\r\n    bits.push(s ? 1 : 0);\r\n    bits.reverse();\r\n    str = bits.join('');\r\n    // Return the data as a hex string. --MJL\r\n    var hexByteString = '';\r\n    for (i = 0; i < 64; i += 8) {\r\n        var hexByte = parseInt(str.substr(i, 8), 2).toString(16);\r\n        if (hexByte.length === 1)\r\n            hexByte = '0' + hexByte;\r\n        hexByteString = hexByteString + hexByte;\r\n    }\r\n    return hexByteString.toLowerCase();\r\n};\r\n/**\r\n * Used to detect if we're in a Chrome content script (which executes in an\r\n * isolated environment where long-polling doesn't work).\r\n * @return {boolean}\r\n */\r\nvar isChromeExtensionContentScript = function () {\r\n    return !!(typeof window === 'object' &&\r\n        window['chrome'] &&\r\n        window['chrome']['extension'] &&\r\n        !/^chrome/.test(window.location.href));\r\n};\r\n/**\r\n * Used to detect if we're in a Windows 8 Store app.\r\n * @return {boolean}\r\n */\r\nvar isWindowsStoreApp = function () {\r\n    // Check for the presence of a couple WinRT globals\r\n    return typeof Windows === 'object' && typeof Windows.UI === 'object';\r\n};\r\n/**\r\n * Converts a server error code to a Javascript Error\r\n * @param {!string} code\r\n * @param {!Query} query\r\n * @return {Error}\r\n */\r\nvar errorForServerCode = function (code, query) {\r\n    var reason = 'Unknown Error';\r\n    if (code === 'too_big') {\r\n        reason =\r\n            'The data requested exceeds the maximum size ' +\r\n                'that can be accessed with a single request.';\r\n    }\r\n    else if (code == 'permission_denied') {\r\n        reason = \"Client doesn't have permission to access the desired data.\";\r\n    }\r\n    else if (code == 'unavailable') {\r\n        reason = 'The service is unavailable';\r\n    }\r\n    var error = new Error(code + ' at ' + query.path.toString() + ': ' + reason);\r\n    error.code = code.toUpperCase();\r\n    return error;\r\n};\r\n/**\r\n * Used to test for integer-looking strings\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INTEGER_REGEXP_ = new RegExp('^-?\\\\d{1,10}$');\r\n/**\r\n * If the string contains a 32-bit integer, return it.  Else return null.\r\n * @param {!string} str\r\n * @return {?number}\r\n */\r\nvar tryParseInt = function (str) {\r\n    if (INTEGER_REGEXP_.test(str)) {\r\n        var intVal = Number(str);\r\n        if (intVal >= -2147483648 && intVal <= 2147483647) {\r\n            return intVal;\r\n        }\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Helper to run some code but catch any exceptions and re-throw them later.\r\n * Useful for preventing user callbacks from breaking internal code.\r\n *\r\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\r\n * convenient (we don't have to try to figure out when is a safe point to\r\n * re-throw it), and the behavior seems reasonable:\r\n *\r\n * * If you aren't pausing on exceptions, you get an error in the console with\r\n *   the correct stack trace.\r\n * * If you're pausing on all exceptions, the debugger will pause on your\r\n *   exception and then again when we rethrow it.\r\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\r\n *   on us re-throwing it.\r\n *\r\n * @param {!function()} fn The code to guard.\r\n */\r\nvar exceptionGuard = function (fn) {\r\n    try {\r\n        fn();\r\n    }\r\n    catch (e) {\r\n        // Re-throw exception when it's safe.\r\n        setTimeout(function () {\r\n            // It used to be that \"throw e\" would result in a good console error with\r\n            // relevant context, but as of Chrome 39, you just get the firebase.js\r\n            // file/line number where we re-throw it, which is useless. So we log\r\n            // e.stack explicitly.\r\n            var stack = e.stack || '';\r\n            warn('Exception was thrown by user callback.', stack);\r\n            throw e;\r\n        }, Math.floor(0));\r\n    }\r\n};\r\n/**\r\n * @return {boolean} true if we think we're currently being crawled.\r\n */\r\nvar beingCrawled = function () {\r\n    var userAgent = (typeof window === 'object' &&\r\n        window['navigator'] &&\r\n        window['navigator']['userAgent']) ||\r\n        '';\r\n    // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\r\n    // believe to support JavaScript/AJAX rendering.\r\n    // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\r\n    // would have seen the page\" is flaky if we don't treat it as a crawler.\r\n    return (userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i) >= 0);\r\n};\r\n/**\r\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\r\n *\r\n * It is removed with clearTimeout() as normal.\r\n *\r\n * @param {Function} fn Function to run.\r\n * @param {number} time Milliseconds to wait before running.\r\n * @return {number|Object} The setTimeout() return value.\r\n */\r\nvar setTimeoutNonBlocking = function (fn, time) {\r\n    var timeout = setTimeout(fn, time);\r\n    if (typeof timeout === 'object' && timeout['unref']) {\r\n        timeout['unref']();\r\n    }\r\n    return timeout;\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An immutable object representing a parsed path.  It's immutable so that you\r\n * can pass them around to other functions without worrying about them changing\r\n * it.\r\n */\r\nvar Path = /** @class */ (function () {\r\n    /**\r\n     * @param {string|Array.<string>} pathOrString Path string to parse,\r\n     *      or another path, or the raw tokens array\r\n     * @param {number=} pieceNum\r\n     */\r\n    function Path(pathOrString, pieceNum) {\r\n        if (pieceNum === void 0) {\r\n            this.pieces_ = pathOrString.split('/');\r\n            // Remove empty pieces.\r\n            var copyTo = 0;\r\n            for (var i = 0; i < this.pieces_.length; i++) {\r\n                if (this.pieces_[i].length > 0) {\r\n                    this.pieces_[copyTo] = this.pieces_[i];\r\n                    copyTo++;\r\n                }\r\n            }\r\n            this.pieces_.length = copyTo;\r\n            this.pieceNum_ = 0;\r\n        }\r\n        else {\r\n            this.pieces_ = pathOrString;\r\n            this.pieceNum_ = pieceNum;\r\n        }\r\n    }\r\n    Object.defineProperty(Path, \"Empty\", {\r\n        /**\r\n         * Singleton to represent an empty path\r\n         *\r\n         * @const\r\n         */\r\n        get: function () {\r\n            return new Path('');\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Path.prototype.getFront = function () {\r\n        if (this.pieceNum_ >= this.pieces_.length)\r\n            return null;\r\n        return this.pieces_[this.pieceNum_];\r\n    };\r\n    /**\r\n     * @return {number} The number of segments in this path\r\n     */\r\n    Path.prototype.getLength = function () {\r\n        return this.pieces_.length - this.pieceNum_;\r\n    };\r\n    /**\r\n     * @return {!Path}\r\n     */\r\n    Path.prototype.popFront = function () {\r\n        var pieceNum = this.pieceNum_;\r\n        if (pieceNum < this.pieces_.length) {\r\n            pieceNum++;\r\n        }\r\n        return new Path(this.pieces_, pieceNum);\r\n    };\r\n    /**\r\n     * @return {?string}\r\n     */\r\n    Path.prototype.getBack = function () {\r\n        if (this.pieceNum_ < this.pieces_.length)\r\n            return this.pieces_[this.pieces_.length - 1];\r\n        return null;\r\n    };\r\n    Path.prototype.toString = function () {\r\n        var pathString = '';\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            if (this.pieces_[i] !== '')\r\n                pathString += '/' + this.pieces_[i];\r\n        }\r\n        return pathString || '/';\r\n    };\r\n    Path.prototype.toUrlEncodedString = function () {\r\n        var pathString = '';\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            if (this.pieces_[i] !== '')\r\n                pathString += '/' + encodeURIComponent(String(this.pieces_[i]));\r\n        }\r\n        return pathString || '/';\r\n    };\r\n    /**\r\n     * Shallow copy of the parts of the path.\r\n     *\r\n     * @param {number=} begin\r\n     * @return {!Array<string>}\r\n     */\r\n    Path.prototype.slice = function (begin) {\r\n        if (begin === void 0) { begin = 0; }\r\n        return this.pieces_.slice(this.pieceNum_ + begin);\r\n    };\r\n    /**\r\n     * @return {?Path}\r\n     */\r\n    Path.prototype.parent = function () {\r\n        if (this.pieceNum_ >= this.pieces_.length)\r\n            return null;\r\n        var pieces = [];\r\n        for (var i = this.pieceNum_; i < this.pieces_.length - 1; i++)\r\n            pieces.push(this.pieces_[i]);\r\n        return new Path(pieces, 0);\r\n    };\r\n    /**\r\n     * @param {string|!Path} childPathObj\r\n     * @return {!Path}\r\n     */\r\n    Path.prototype.child = function (childPathObj) {\r\n        var pieces = [];\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++)\r\n            pieces.push(this.pieces_[i]);\r\n        if (childPathObj instanceof Path) {\r\n            for (var i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\r\n                pieces.push(childPathObj.pieces_[i]);\r\n            }\r\n        }\r\n        else {\r\n            var childPieces = childPathObj.split('/');\r\n            for (var i = 0; i < childPieces.length; i++) {\r\n                if (childPieces[i].length > 0)\r\n                    pieces.push(childPieces[i]);\r\n            }\r\n        }\r\n        return new Path(pieces, 0);\r\n    };\r\n    /**\r\n     * @return {boolean} True if there are no segments in this path\r\n     */\r\n    Path.prototype.isEmpty = function () {\r\n        return this.pieceNum_ >= this.pieces_.length;\r\n    };\r\n    /**\r\n     * @param {!Path} outerPath\r\n     * @param {!Path} innerPath\r\n     * @return {!Path} The path from outerPath to innerPath\r\n     */\r\n    Path.relativePath = function (outerPath, innerPath) {\r\n        var outer = outerPath.getFront(), inner = innerPath.getFront();\r\n        if (outer === null) {\r\n            return innerPath;\r\n        }\r\n        else if (outer === inner) {\r\n            return Path.relativePath(outerPath.popFront(), innerPath.popFront());\r\n        }\r\n        else {\r\n            throw new Error('INTERNAL ERROR: innerPath (' +\r\n                innerPath +\r\n                ') is not within ' +\r\n                'outerPath (' +\r\n                outerPath +\r\n                ')');\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Path} left\r\n     * @param {!Path} right\r\n     * @return {number} -1, 0, 1 if left is less, equal, or greater than the right.\r\n     */\r\n    Path.comparePaths = function (left, right) {\r\n        var leftKeys = left.slice();\r\n        var rightKeys = right.slice();\r\n        for (var i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\r\n            var cmp = nameCompare(leftKeys[i], rightKeys[i]);\r\n            if (cmp !== 0)\r\n                return cmp;\r\n        }\r\n        if (leftKeys.length === rightKeys.length)\r\n            return 0;\r\n        return leftKeys.length < rightKeys.length ? -1 : 1;\r\n    };\r\n    /**\r\n     *\r\n     * @param {Path} other\r\n     * @return {boolean} true if paths are the same.\r\n     */\r\n    Path.prototype.equals = function (other) {\r\n        if (this.getLength() !== other.getLength()) {\r\n            return false;\r\n        }\r\n        for (var i = this.pieceNum_, j = other.pieceNum_; i <= this.pieces_.length; i++, j++) {\r\n            if (this.pieces_[i] !== other.pieces_[j]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Path} other\r\n     * @return {boolean} True if this path is a parent (or the same as) other\r\n     */\r\n    Path.prototype.contains = function (other) {\r\n        var i = this.pieceNum_;\r\n        var j = other.pieceNum_;\r\n        if (this.getLength() > other.getLength()) {\r\n            return false;\r\n        }\r\n        while (i < this.pieces_.length) {\r\n            if (this.pieces_[i] !== other.pieces_[j]) {\r\n                return false;\r\n            }\r\n            ++i;\r\n            ++j;\r\n        }\r\n        return true;\r\n    };\r\n    return Path;\r\n}()); // end Path\r\n/**\r\n * Dynamic (mutable) path used to count path lengths.\r\n *\r\n * This class is used to efficiently check paths for valid\r\n * length (in UTF8 bytes) and depth (used in path validation).\r\n *\r\n * Throws Error exception if path is ever invalid.\r\n *\r\n * The definition of a path always begins with '/'.\r\n */\r\nvar ValidationPath = /** @class */ (function () {\r\n    /**\r\n     * @param {!Path} path Initial Path.\r\n     * @param {string} errorPrefix_ Prefix for any error messages.\r\n     */\r\n    function ValidationPath(path, errorPrefix_) {\r\n        this.errorPrefix_ = errorPrefix_;\r\n        /** @type {!Array<string>} */\r\n        this.parts_ = path.slice();\r\n        /** @type {number} Initialize to number of '/' chars needed in path. */\r\n        this.byteLength_ = Math.max(1, this.parts_.length);\r\n        for (var i = 0; i < this.parts_.length; i++) {\r\n            this.byteLength_ += util.stringLength(this.parts_[i]);\r\n        }\r\n        this.checkValid_();\r\n    }\r\n    Object.defineProperty(ValidationPath, \"MAX_PATH_DEPTH\", {\r\n        /** @const {number} Maximum key depth. */\r\n        get: function () {\r\n            return 32;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ValidationPath, \"MAX_PATH_LENGTH_BYTES\", {\r\n        /** @const {number} Maximum number of (UTF8) bytes in a Firebase path. */\r\n        get: function () {\r\n            return 768;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /** @param {string} child */\r\n    ValidationPath.prototype.push = function (child) {\r\n        // Count the needed '/'\r\n        if (this.parts_.length > 0) {\r\n            this.byteLength_ += 1;\r\n        }\r\n        this.parts_.push(child);\r\n        this.byteLength_ += util.stringLength(child);\r\n        this.checkValid_();\r\n    };\r\n    ValidationPath.prototype.pop = function () {\r\n        var last = this.parts_.pop();\r\n        this.byteLength_ -= util.stringLength(last);\r\n        // Un-count the previous '/'\r\n        if (this.parts_.length > 0) {\r\n            this.byteLength_ -= 1;\r\n        }\r\n    };\r\n    ValidationPath.prototype.checkValid_ = function () {\r\n        if (this.byteLength_ > ValidationPath.MAX_PATH_LENGTH_BYTES) {\r\n            throw new Error(this.errorPrefix_ +\r\n                'has a key path longer than ' +\r\n                ValidationPath.MAX_PATH_LENGTH_BYTES +\r\n                ' bytes (' +\r\n                this.byteLength_ +\r\n                ').');\r\n        }\r\n        if (this.parts_.length > ValidationPath.MAX_PATH_DEPTH) {\r\n            throw new Error(this.errorPrefix_ +\r\n                'path specified exceeds the maximum depth that can be written (' +\r\n                ValidationPath.MAX_PATH_DEPTH +\r\n                ') or object contains a cycle ' +\r\n                this.toErrorString());\r\n        }\r\n    };\r\n    /**\r\n     * String for use in error messages - uses '.' notation for path.\r\n     *\r\n     * @return {string}\r\n     */\r\n    ValidationPath.prototype.toErrorString = function () {\r\n        if (this.parts_.length == 0) {\r\n            return '';\r\n        }\r\n        return \"in property '\" + this.parts_.join('.') + \"'\";\r\n    };\r\n    return ValidationPath;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PROTOCOL_VERSION = '5';\r\nvar VERSION_PARAM = 'v';\r\nvar TRANSPORT_SESSION_PARAM = 's';\r\nvar REFERER_PARAM = 'r';\r\nvar FORGE_REF = 'f';\r\nvar FORGE_DOMAIN = 'firebaseio.com';\r\nvar LAST_SESSION_PARAM = 'ls';\r\nvar WEBSOCKET = 'websocket';\r\nvar LONG_POLLING = 'long_polling';\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A class that holds metadata about a Repo object\r\n *\r\n * @constructor\r\n */\r\nvar RepoInfo = /** @class */ (function () {\r\n    /**\r\n     * @param {string} host Hostname portion of the url for the repo\r\n     * @param {boolean} secure Whether or not this repo is accessed over ssl\r\n     * @param {string} namespace The namespace represented by the repo\r\n     * @param {boolean} webSocketOnly Whether to prefer websockets over all other transports (used by Nest).\r\n     * @param {string=} persistenceKey Override the default session persistence storage key\r\n     */\r\n    function RepoInfo(host, secure, namespace, webSocketOnly, persistenceKey) {\r\n        if (persistenceKey === void 0) { persistenceKey = ''; }\r\n        this.secure = secure;\r\n        this.namespace = namespace;\r\n        this.webSocketOnly = webSocketOnly;\r\n        this.persistenceKey = persistenceKey;\r\n        this.host = host.toLowerCase();\r\n        this.domain = this.host.substr(this.host.indexOf('.') + 1);\r\n        this.internalHost = PersistentStorage.get('host:' + host) || this.host;\r\n    }\r\n    RepoInfo.prototype.needsQueryParam = function () {\r\n        return this.host !== this.internalHost || this.isCustomHost();\r\n    };\r\n    RepoInfo.prototype.isCacheableHost = function () {\r\n        return this.internalHost.substr(0, 2) === 's-';\r\n    };\r\n    RepoInfo.prototype.isDemoHost = function () {\r\n        return this.domain === 'firebaseio-demo.com';\r\n    };\r\n    RepoInfo.prototype.isCustomHost = function () {\r\n        return (this.domain !== 'firebaseio.com' && this.domain !== 'firebaseio-demo.com');\r\n    };\r\n    RepoInfo.prototype.updateHost = function (newHost) {\r\n        if (newHost !== this.internalHost) {\r\n            this.internalHost = newHost;\r\n            if (this.isCacheableHost()) {\r\n                PersistentStorage.set('host:' + this.host, this.internalHost);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns the websocket URL for this repo\r\n     * @param {string} type of connection\r\n     * @param {Object} params list\r\n     * @return {string} The URL for this repo\r\n     */\r\n    RepoInfo.prototype.connectionURL = function (type, params) {\r\n        util.assert(typeof type === 'string', 'typeof type must == string');\r\n        util.assert(typeof params === 'object', 'typeof params must == object');\r\n        var connURL;\r\n        if (type === WEBSOCKET) {\r\n            connURL =\r\n                (this.secure ? 'wss://' : 'ws://') + this.internalHost + '/.ws?';\r\n        }\r\n        else if (type === LONG_POLLING) {\r\n            connURL =\r\n                (this.secure ? 'https://' : 'http://') + this.internalHost + '/.lp?';\r\n        }\r\n        else {\r\n            throw new Error('Unknown connection type: ' + type);\r\n        }\r\n        if (this.needsQueryParam()) {\r\n            params['ns'] = this.namespace;\r\n        }\r\n        var pairs = [];\r\n        util.forEach(params, function (key, value) {\r\n            pairs.push(key + '=' + value);\r\n        });\r\n        return connURL + pairs.join('&');\r\n    };\r\n    /** @return {string} */\r\n    RepoInfo.prototype.toString = function () {\r\n        var str = this.toURLString();\r\n        if (this.persistenceKey) {\r\n            str += '<' + this.persistenceKey + '>';\r\n        }\r\n        return str;\r\n    };\r\n    /** @return {string} */\r\n    RepoInfo.prototype.toURLString = function () {\r\n        return (this.secure ? 'https://' : 'http://') + this.host;\r\n    };\r\n    return RepoInfo;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!string} pathString\r\n * @return {string}\r\n */\r\nfunction decodePath(pathString) {\r\n    var pathStringDecoded = '';\r\n    var pieces = pathString.split('/');\r\n    for (var i = 0; i < pieces.length; i++) {\r\n        if (pieces[i].length > 0) {\r\n            var piece = pieces[i];\r\n            try {\r\n                piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\r\n            }\r\n            catch (e) { }\r\n            pathStringDecoded += '/' + piece;\r\n        }\r\n    }\r\n    return pathStringDecoded;\r\n}\r\n/**\r\n * @param {!string} queryString\r\n * @return {!{[key:string]:string}} key value hash\r\n */\r\nfunction decodeQuery(queryString) {\r\n    var results = {};\r\n    if (queryString.charAt(0) === '?') {\r\n        queryString = queryString.substring(1);\r\n    }\r\n    for (var _i = 0, _a = queryString.split('&'); _i < _a.length; _i++) {\r\n        var segment = _a[_i];\r\n        if (segment.length === 0) {\r\n            continue;\r\n        }\r\n        var kv = segment.split('=');\r\n        if (kv.length === 2) {\r\n            results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\r\n        }\r\n        else {\r\n            warn(\"Invalid query segment '\" + segment + \"' in query '\" + queryString + \"'\");\r\n        }\r\n    }\r\n    return results;\r\n}\r\n/**\r\n *\r\n * @param {!string} dataURL\r\n * @return {{repoInfo: !RepoInfo, path: !Path}}\r\n */\r\nvar parseRepoInfo = function (dataURL) {\r\n    var parsedUrl = parseURL(dataURL), namespace = parsedUrl.subdomain;\r\n    if (parsedUrl.domain === 'firebase') {\r\n        fatal(parsedUrl.host +\r\n            ' is no longer supported. ' +\r\n            'Please use <YOUR FIREBASE>.firebaseio.com instead');\r\n    }\r\n    // Catch common error of uninitialized namespace value.\r\n    if ((!namespace || namespace == 'undefined') &&\r\n        parsedUrl.domain !== 'localhost') {\r\n        fatal('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');\r\n    }\r\n    if (!parsedUrl.secure) {\r\n        warnIfPageIsSecure();\r\n    }\r\n    var webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\r\n    return {\r\n        repoInfo: new RepoInfo(parsedUrl.host, parsedUrl.secure, namespace, webSocketOnly),\r\n        path: new Path(parsedUrl.pathString)\r\n    };\r\n};\r\n/**\r\n *\r\n * @param {!string} dataURL\r\n * @return {{host: string, port: number, domain: string, subdomain: string, secure: boolean, scheme: string, pathString: string}}\r\n */\r\nvar parseURL = function (dataURL) {\r\n    // Default to empty strings in the event of a malformed string.\r\n    var host = '', domain = '', subdomain = '', pathString = '';\r\n    // Always default to SSL, unless otherwise specified.\r\n    var secure = true, scheme = 'https', port = 443;\r\n    // Don't do any validation here. The caller is responsible for validating the result of parsing.\r\n    if (typeof dataURL === 'string') {\r\n        // Parse scheme.\r\n        var colonInd = dataURL.indexOf('//');\r\n        if (colonInd >= 0) {\r\n            scheme = dataURL.substring(0, colonInd - 1);\r\n            dataURL = dataURL.substring(colonInd + 2);\r\n        }\r\n        // Parse host, path, and query string.\r\n        var slashInd = dataURL.indexOf('/');\r\n        if (slashInd === -1) {\r\n            slashInd = dataURL.length;\r\n        }\r\n        var questionMarkInd = dataURL.indexOf('?');\r\n        if (questionMarkInd === -1) {\r\n            questionMarkInd = dataURL.length;\r\n        }\r\n        host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\r\n        if (slashInd < questionMarkInd) {\r\n            // For pathString, questionMarkInd will always come after slashInd\r\n            pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\r\n        }\r\n        var queryParams = decodeQuery(dataURL.substring(Math.min(dataURL.length, questionMarkInd)));\r\n        // If we have a port, use scheme for determining if it's secure.\r\n        colonInd = host.indexOf(':');\r\n        if (colonInd >= 0) {\r\n            secure = scheme === 'https' || scheme === 'wss';\r\n            port = parseInt(host.substring(colonInd + 1), 10);\r\n        }\r\n        else {\r\n            colonInd = dataURL.length;\r\n        }\r\n        var parts = host.split('.');\r\n        if (parts.length === 3) {\r\n            // Normalize namespaces to lowercase to share storage / connection.\r\n            domain = parts[1];\r\n            subdomain = parts[0].toLowerCase();\r\n        }\r\n        else if (parts.length === 2) {\r\n            domain = parts[0];\r\n        }\r\n        else if (parts[0].slice(0, colonInd).toLowerCase() === 'localhost') {\r\n            domain = 'localhost';\r\n        }\r\n        // Support `ns` query param if subdomain not already set\r\n        if (subdomain === '' && 'ns' in queryParams) {\r\n            subdomain = queryParams['ns'];\r\n        }\r\n    }\r\n    return {\r\n        host: host,\r\n        port: port,\r\n        domain: domain,\r\n        subdomain: subdomain,\r\n        secure: secure,\r\n        scheme: scheme,\r\n        pathString: pathString\r\n    };\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * True for invalid Firebase keys\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * True for invalid Firebase paths.\r\n * Allows '/' in paths.\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * Maximum number of characters to allow in leaf value\r\n * @type {number}\r\n * @private\r\n */\r\nvar MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\r\n/**\r\n * @param {*} key\r\n * @return {boolean}\r\n */\r\nvar isValidKey = function (key) {\r\n    return (typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key));\r\n};\r\n/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */\r\nvar isValidPathString = function (pathString) {\r\n    return (typeof pathString === 'string' &&\r\n        pathString.length !== 0 &&\r\n        !INVALID_PATH_REGEX_.test(pathString));\r\n};\r\n/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */\r\nvar isValidRootPathString = function (pathString) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    return isValidPathString(pathString);\r\n};\r\n/**\r\n * @param {*} priority\r\n * @return {boolean}\r\n */\r\nvar isValidPriority = function (priority) {\r\n    return (priority === null ||\r\n        typeof priority === 'string' ||\r\n        (typeof priority === 'number' && !isInvalidJSONNumber(priority)) ||\r\n        (priority && typeof priority === 'object' && util.contains(priority, '.sv')));\r\n};\r\n/**\r\n * Pre-validate a datum passed as an argument to Firebase function.\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */\r\nvar validateFirebaseDataArg = function (fnName, argumentNumber, data, path, optional) {\r\n    if (optional && data === undefined)\r\n        return;\r\n    validateFirebaseData(util.errorPrefix(fnName, argumentNumber, optional), data, path);\r\n};\r\n/**\r\n * Validate a data object client-side before sending to server.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {*} data\r\n * @param {!Path|!ValidationPath} path_\r\n */\r\nvar validateFirebaseData = function (errorPrefix, data, path_) {\r\n    var path = path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\r\n    if (data === undefined) {\r\n        throw new Error(errorPrefix + 'contains undefined ' + path.toErrorString());\r\n    }\r\n    if (typeof data === 'function') {\r\n        throw new Error(errorPrefix +\r\n            'contains a function ' +\r\n            path.toErrorString() +\r\n            ' with contents = ' +\r\n            data.toString());\r\n    }\r\n    if (isInvalidJSONNumber(data)) {\r\n        throw new Error(errorPrefix + 'contains ' + data.toString() + ' ' + path.toErrorString());\r\n    }\r\n    // Check max leaf size, but try to avoid the utf8 conversion if we can.\r\n    if (typeof data === 'string' &&\r\n        data.length > MAX_LEAF_SIZE_ / 3 &&\r\n        util.stringLength(data) > MAX_LEAF_SIZE_) {\r\n        throw new Error(errorPrefix +\r\n            'contains a string greater than ' +\r\n            MAX_LEAF_SIZE_ +\r\n            ' utf8 bytes ' +\r\n            path.toErrorString() +\r\n            \" ('\" +\r\n            data.substring(0, 50) +\r\n            \"...')\");\r\n    }\r\n    // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\r\n    // to save extra walking of large objects.\r\n    if (data && typeof data === 'object') {\r\n        var hasDotValue_1 = false, hasActualChild_1 = false;\r\n        util.forEach(data, function (key, value) {\r\n            if (key === '.value') {\r\n                hasDotValue_1 = true;\r\n            }\r\n            else if (key !== '.priority' && key !== '.sv') {\r\n                hasActualChild_1 = true;\r\n                if (!isValidKey(key)) {\r\n                    throw new Error(errorPrefix +\r\n                        ' contains an invalid key (' +\r\n                        key +\r\n                        ') ' +\r\n                        path.toErrorString() +\r\n                        '.  Keys must be non-empty strings ' +\r\n                        'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n                }\r\n            }\r\n            path.push(key);\r\n            validateFirebaseData(errorPrefix, value, path);\r\n            path.pop();\r\n        });\r\n        if (hasDotValue_1 && hasActualChild_1) {\r\n            throw new Error(errorPrefix +\r\n                ' contains \".value\" child ' +\r\n                path.toErrorString() +\r\n                ' in addition to actual children.');\r\n        }\r\n    }\r\n};\r\n/**\r\n * Pre-validate paths passed in the firebase function.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {Array<!Path>} mergePaths\r\n */\r\nvar validateFirebaseMergePaths = function (errorPrefix, mergePaths) {\r\n    var i, curPath;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        var keys = curPath.slice();\r\n        for (var j = 0; j < keys.length; j++) {\r\n            if (keys[j] === '.priority' && j === keys.length - 1) {\r\n                // .priority is OK\r\n            }\r\n            else if (!isValidKey(keys[j])) {\r\n                throw new Error(errorPrefix +\r\n                    'contains an invalid key (' +\r\n                    keys[j] +\r\n                    ') in path ' +\r\n                    curPath.toString() +\r\n                    '. Keys must be non-empty strings ' +\r\n                    'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n            }\r\n        }\r\n    }\r\n    // Check that update keys are not descendants of each other.\r\n    // We rely on the property that sorting guarantees that ancestors come\r\n    // right before descendants.\r\n    mergePaths.sort(Path.comparePaths);\r\n    var prevPath = null;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        if (prevPath !== null && prevPath.contains(curPath)) {\r\n            throw new Error(errorPrefix +\r\n                'contains a path ' +\r\n                prevPath.toString() +\r\n                ' that is ancestor of another path ' +\r\n                curPath.toString());\r\n        }\r\n        prevPath = curPath;\r\n    }\r\n};\r\n/**\r\n * pre-validate an object passed as an argument to firebase function (\r\n * must be an object - e.g. for firebase.update()).\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */\r\nvar validateFirebaseMergeDataArg = function (fnName, argumentNumber, data, path, optional) {\r\n    if (optional && data === undefined)\r\n        return;\r\n    var errorPrefix = util.errorPrefix(fnName, argumentNumber, optional);\r\n    if (!(data && typeof data === 'object') || Array.isArray(data)) {\r\n        throw new Error(errorPrefix + ' must be an object containing the children to replace.');\r\n    }\r\n    var mergePaths = [];\r\n    util.forEach(data, function (key, value) {\r\n        var curPath = new Path(key);\r\n        validateFirebaseData(errorPrefix, value, path.child(curPath));\r\n        if (curPath.getBack() === '.priority') {\r\n            if (!isValidPriority(value)) {\r\n                throw new Error(errorPrefix +\r\n                    \"contains an invalid value for '\" +\r\n                    curPath.toString() +\r\n                    \"', which must be a valid \" +\r\n                    'Firebase priority (a string, finite number, server value, or null).');\r\n            }\r\n        }\r\n        mergePaths.push(curPath);\r\n    });\r\n    validateFirebaseMergePaths(errorPrefix, mergePaths);\r\n};\r\nvar validatePriority = function (fnName, argumentNumber, priority, optional) {\r\n    if (optional && priority === undefined)\r\n        return;\r\n    if (isInvalidJSONNumber(priority))\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'is ' +\r\n            priority.toString() +\r\n            ', but must be a valid Firebase priority (a string, finite number, ' +\r\n            'server value, or null).');\r\n    // Special case to allow importing data with a .sv.\r\n    if (!isValidPriority(priority))\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid Firebase priority ' +\r\n            '(a string, finite number, server value, or null).');\r\n};\r\nvar validateEventType = function (fnName, argumentNumber, eventType, optional) {\r\n    if (optional && eventType === undefined)\r\n        return;\r\n    switch (eventType) {\r\n        case 'value':\r\n        case 'child_added':\r\n        case 'child_removed':\r\n        case 'child_changed':\r\n        case 'child_moved':\r\n            break;\r\n        default:\r\n            throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n                'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\r\n                '\"child_changed\", or \"child_moved\".');\r\n    }\r\n};\r\nvar validateKey = function (fnName, argumentNumber, key, optional) {\r\n    if (optional && key === undefined)\r\n        return;\r\n    if (!isValidKey(key))\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'was an invalid key = \"' +\r\n            key +\r\n            '\".  Firebase keys must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").');\r\n};\r\nvar validatePathString = function (fnName, argumentNumber, pathString, optional) {\r\n    if (optional && pathString === undefined)\r\n        return;\r\n    if (!isValidPathString(pathString))\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'was an invalid path = \"' +\r\n            pathString +\r\n            '\". Paths must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');\r\n};\r\nvar validateRootPathString = function (fnName, argumentNumber, pathString, optional) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    validatePathString(fnName, argumentNumber, pathString, optional);\r\n};\r\nvar validateWritablePath = function (fnName, path) {\r\n    if (path.getFront() === '.info') {\r\n        throw new Error(fnName + \" failed = Can't modify data under /.info/\");\r\n    }\r\n};\r\nvar validateUrl = function (fnName, argumentNumber, parsedUrl) {\r\n    // TODO = Validate server better.\r\n    var pathString = parsedUrl.path.toString();\r\n    if (!(typeof parsedUrl.repoInfo.host === 'string') ||\r\n        parsedUrl.repoInfo.host.length === 0 ||\r\n        (!isValidKey(parsedUrl.repoInfo.namespace) &&\r\n            parsedUrl.repoInfo.host.split(':')[0] !== 'localhost') ||\r\n        (pathString.length !== 0 && !isValidRootPathString(pathString))) {\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, false) +\r\n            'must be a valid firebase URL and ' +\r\n            'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".');\r\n    }\r\n};\r\nvar validateBoolean = function (fnName, argumentNumber, bool, optional) {\r\n    if (optional && bool === undefined)\r\n        return;\r\n    if (typeof bool !== 'boolean')\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) + 'must be a boolean.');\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n */\r\nvar OnDisconnect = /** @class */ (function () {\r\n    /**\r\n     * @param {!Repo} repo_\r\n     * @param {!Path} path_\r\n     */\r\n    function OnDisconnect(repo_, path_) {\r\n        this.repo_ = repo_;\r\n        this.path_ = path_;\r\n    }\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.cancel = function (onComplete) {\r\n        util.validateArgCount('OnDisconnect.cancel', 0, 1, arguments.length);\r\n        util.validateCallback('OnDisconnect.cancel', 1, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectCancel(this.path_, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.remove = function (onComplete) {\r\n        util.validateArgCount('OnDisconnect.remove', 0, 1, arguments.length);\r\n        validateWritablePath('OnDisconnect.remove', this.path_);\r\n        util.validateCallback('OnDisconnect.remove', 1, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSet(this.path_, null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} value\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.set = function (value, onComplete) {\r\n        util.validateArgCount('OnDisconnect.set', 1, 2, arguments.length);\r\n        validateWritablePath('OnDisconnect.set', this.path_);\r\n        validateFirebaseDataArg('OnDisconnect.set', 1, value, this.path_, false);\r\n        util.validateCallback('OnDisconnect.set', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSet(this.path_, value, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} value\r\n     * @param {number|string|null} priority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.setWithPriority = function (value, priority, onComplete) {\r\n        util.validateArgCount('OnDisconnect.setWithPriority', 2, 3, arguments.length);\r\n        validateWritablePath('OnDisconnect.setWithPriority', this.path_);\r\n        validateFirebaseDataArg('OnDisconnect.setWithPriority', 1, value, this.path_, false);\r\n        validatePriority('OnDisconnect.setWithPriority', 2, priority, false);\r\n        util.validateCallback('OnDisconnect.setWithPriority', 3, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSetWithPriority(this.path_, value, priority, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {!Object} objectToMerge\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.update = function (objectToMerge, onComplete) {\r\n        util.validateArgCount('OnDisconnect.update', 1, 2, arguments.length);\r\n        validateWritablePath('OnDisconnect.update', this.path_);\r\n        if (Array.isArray(objectToMerge)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < objectToMerge.length; ++i) {\r\n                newObjectToMerge['' + i] = objectToMerge[i];\r\n            }\r\n            objectToMerge = newObjectToMerge;\r\n            warn('Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the ' +\r\n                'existing data, or an Object with integer keys if you really do want to only update some of the children.');\r\n        }\r\n        validateFirebaseMergeDataArg('OnDisconnect.update', 1, objectToMerge, this.path_, false);\r\n        util.validateCallback('OnDisconnect.update', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectUpdate(this.path_, objectToMerge, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    return OnDisconnect;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar TransactionResult = /** @class */ (function () {\r\n    /**\r\n     * A type for the resolve value of Firebase.transaction.\r\n     * @constructor\r\n     * @dict\r\n     * @param {boolean} committed\r\n     * @param {DataSnapshot} snapshot\r\n     */\r\n    function TransactionResult(committed, snapshot) {\r\n        this.committed = committed;\r\n        this.snapshot = snapshot;\r\n    }\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    TransactionResult.prototype.toJSON = function () {\r\n        util.validateArgCount('TransactionResult.toJSON', 0, 1, arguments.length);\r\n        return { committed: this.committed, snapshot: this.snapshot.toJSON() };\r\n    };\r\n    return TransactionResult;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Fancy ID generator that creates 20-character string identifiers with the\r\n * following properties:\r\n *\r\n * 1. They're based on timestamp so that they sort *after* any existing ids.\r\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\r\n *    collide with other clients' IDs.\r\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\r\n *    that will sort properly).\r\n * 4. They're monotonically increasing. Even if you generate more than one in\r\n *    the same timestamp, the latter ones will sort after the former ones. We do\r\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\r\n *    in the case of a timestamp collision).\r\n */\r\nvar nextPushId = (function () {\r\n    // Modeled after base64 web-safe chars, but ordered by ASCII.\r\n    var PUSH_CHARS = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\r\n    // Timestamp of last push, used to prevent local collisions if you push twice\r\n    // in one ms.\r\n    var lastPushTime = 0;\r\n    // We generate 72-bits of randomness which get turned into 12 characters and\r\n    // appended to the timestamp to prevent collisions with other clients. We\r\n    // store the last characters we generated because in the event of a collision,\r\n    // we'll use those same characters except \"incremented\" by one.\r\n    var lastRandChars = [];\r\n    return function (now) {\r\n        var duplicateTime = now === lastPushTime;\r\n        lastPushTime = now;\r\n        var i;\r\n        var timeStampChars = new Array(8);\r\n        for (i = 7; i >= 0; i--) {\r\n            timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\r\n            // NOTE: Can't use << here because javascript will convert to int and lose\r\n            // the upper bits.\r\n            now = Math.floor(now / 64);\r\n        }\r\n        util.assert(now === 0, 'Cannot push at time == 0');\r\n        var id = timeStampChars.join('');\r\n        if (!duplicateTime) {\r\n            for (i = 0; i < 12; i++) {\r\n                lastRandChars[i] = Math.floor(Math.random() * 64);\r\n            }\r\n        }\r\n        else {\r\n            // If the timestamp hasn't changed since last push, use the same random\r\n            // number, except incremented by 1.\r\n            for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\r\n                lastRandChars[i] = 0;\r\n            }\r\n            lastRandChars[i]++;\r\n        }\r\n        for (i = 0; i < 12; i++) {\r\n            id += PUSH_CHARS.charAt(lastRandChars[i]);\r\n        }\r\n        util.assert(id.length === 20, 'nextPushId: Length should be 20.');\r\n        return id;\r\n    };\r\n})();\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @param {!string} name\r\n * @param {!Node} node\r\n * @constructor\r\n * @struct\r\n */\r\nvar NamedNode = /** @class */ (function () {\r\n    function NamedNode(name, node) {\r\n        this.name = name;\r\n        this.node = node;\r\n    }\r\n    /**\r\n     *\r\n     * @param {!string} name\r\n     * @param {!Node} node\r\n     * @return {NamedNode}\r\n     */\r\n    NamedNode.Wrap = function (name, node) {\r\n        return new NamedNode(name, node);\r\n    };\r\n    return NamedNode;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @constructor\r\n */\r\nvar Index = /** @class */ (function () {\r\n    function Index() {\r\n    }\r\n    /**\r\n     * @return {function(!NamedNode, !NamedNode):number} A standalone comparison function for\r\n     * this index\r\n     */\r\n    Index.prototype.getCompare = function () {\r\n        return this.compare.bind(this);\r\n    };\r\n    /**\r\n     * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\r\n     * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\r\n     *\r\n     * @param {!Node} oldNode\r\n     * @param {!Node} newNode\r\n     * @return {boolean} True if the portion of the snapshot being indexed changed between oldNode and newNode\r\n     */\r\n    Index.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        var oldWrapped = new NamedNode(MIN_NAME, oldNode);\r\n        var newWrapped = new NamedNode(MIN_NAME, newNode);\r\n        return this.compare(oldWrapped, newWrapped) !== 0;\r\n    };\r\n    /**\r\n     * @return {!NamedNode} a node wrapper that will sort equal to or less than\r\n     * any other node wrapper, using this index\r\n     */\r\n    Index.prototype.minPost = function () {\r\n        return NamedNode.MIN;\r\n    };\r\n    return Index;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __EMPTY_NODE;\r\nvar KeyIndex = /** @class */ (function (_super) {\r\n    tslib_1.__extends(KeyIndex, _super);\r\n    function KeyIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(KeyIndex, \"__EMPTY_NODE\", {\r\n        get: function () {\r\n            return __EMPTY_NODE;\r\n        },\r\n        set: function (val) {\r\n            __EMPTY_NODE = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.compare = function (a, b) {\r\n        return nameCompare(a.name, b.name);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.isDefinedOn = function (node) {\r\n        // We could probably return true here (since every node has a key), but it's never called\r\n        // so just leaving unimplemented for now.\r\n        throw util.assertionError('KeyIndex.isDefinedOn not expected to be called.');\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return false; // The key for a node never changes.\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.minPost = function () {\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.maxPost = function () {\r\n        // TODO: This should really be created once and cached in a static property, but\r\n        // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\r\n        return new NamedNode(MAX_NAME, __EMPTY_NODE);\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    KeyIndex.prototype.makePost = function (indexValue, name) {\r\n        util.assert(typeof indexValue === 'string', 'KeyIndex indexValue must always be a string.');\r\n        // We just use empty node, but it'll never be compared, since our comparator only looks at name.\r\n        return new NamedNode(indexValue, __EMPTY_NODE);\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    KeyIndex.prototype.toString = function () {\r\n        return '.key';\r\n    };\r\n    return KeyIndex;\r\n}(Index));\r\nvar KEY_INDEX = new KeyIndex();\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar MAX_NODE;\r\nfunction setMaxNode(val) {\r\n    MAX_NODE = val;\r\n}\r\n/**\r\n * @param {(!string|!number)} priority\r\n * @return {!string}\r\n */\r\nvar priorityHashText = function (priority) {\r\n    if (typeof priority === 'number')\r\n        return 'number:' + doubleToIEEE754String(priority);\r\n    else\r\n        return 'string:' + priority;\r\n};\r\n/**\r\n * Validates that a priority snapshot Node is valid.\r\n *\r\n * @param {!Node} priorityNode\r\n */\r\nvar validatePriorityNode = function (priorityNode) {\r\n    if (priorityNode.isLeafNode()) {\r\n        var val = priorityNode.val();\r\n        util.assert(typeof val === 'string' ||\r\n            typeof val === 'number' ||\r\n            (typeof val === 'object' && util.contains(val, '.sv')), 'Priority must be a string or number.');\r\n    }\r\n    else {\r\n        util.assert(priorityNode === MAX_NODE || priorityNode.isEmpty(), 'priority of unexpected type.');\r\n    }\r\n    // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\r\n    util.assert(priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(), \"Priority nodes can't have a priority of their own.\");\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __childrenNodeConstructor;\r\n/**\r\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\r\n * implements Node and stores the value of the node (a string,\r\n * number, or boolean) accessible via getValue().\r\n */\r\nvar LeafNode = /** @class */ (function () {\r\n    /**\r\n     * @implements {Node}\r\n     * @param {!(string|number|boolean|Object)} value_ The value to store in this leaf node.\r\n     *                                         The object type is possible in the event of a deferred value\r\n     * @param {!Node=} priorityNode_ The priority of this node.\r\n     */\r\n    function LeafNode(value_, priorityNode_) {\r\n        if (priorityNode_ === void 0) { priorityNode_ = LeafNode.__childrenNodeConstructor.EMPTY_NODE; }\r\n        this.value_ = value_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.lazyHash_ = null;\r\n        util.assert(this.value_ !== undefined && this.value_ !== null, \"LeafNode shouldn't be created with null/undefined value.\");\r\n        validatePriorityNode(this.priorityNode_);\r\n    }\r\n    Object.defineProperty(LeafNode, \"__childrenNodeConstructor\", {\r\n        get: function () {\r\n            return __childrenNodeConstructor;\r\n        },\r\n        set: function (val) {\r\n            __childrenNodeConstructor = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isLeafNode = function () {\r\n        return true;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPriority = function () {\r\n        return this.priorityNode_;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updatePriority = function (newPriorityNode) {\r\n        return new LeafNode(this.value_, newPriorityNode);\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getChild = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this;\r\n        }\r\n        else if (path.getFront() === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.hasChild = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPredecessorChildName = function (childName, childNode) {\r\n        return null;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else if (newChildNode.isEmpty() && childName !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName, newChildNode).updatePriority(this.priorityNode_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = path.getFront();\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else if (newChildNode.isEmpty() && front !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            util.assert(front !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\r\n            return this.updateImmediateChild(front, LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(path.popFront(), newChildNode));\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.numChildren = function () {\r\n        return 0;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.forEachChild = function (index, action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.val = function (exportFormat) {\r\n        if (exportFormat && !this.getPriority().isEmpty())\r\n            return {\r\n                '.value': this.getValue(),\r\n                '.priority': this.getPriority().val()\r\n            };\r\n        else\r\n            return this.getValue();\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash = '';\r\n            if (!this.priorityNode_.isEmpty())\r\n                toHash +=\r\n                    'priority:' +\r\n                        priorityHashText(this.priorityNode_.val()) +\r\n                        ':';\r\n            var type = typeof this.value_;\r\n            toHash += type + ':';\r\n            if (type === 'number') {\r\n                toHash += doubleToIEEE754String(this.value_);\r\n            }\r\n            else {\r\n                toHash += this.value_;\r\n            }\r\n            this.lazyHash_ = sha1(toHash);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /**\r\n     * Returns the value of the leaf node.\r\n     * @return {Object|string|number|boolean} The value of the node.\r\n     */\r\n    LeafNode.prototype.getValue = function () {\r\n        return this.value_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.compareTo = function (other) {\r\n        if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\r\n            return 1;\r\n        }\r\n        else if (other instanceof LeafNode.__childrenNodeConstructor) {\r\n            return -1;\r\n        }\r\n        else {\r\n            util.assert(other.isLeafNode(), 'Unknown node type');\r\n            return this.compareToLeafNode_(other);\r\n        }\r\n    };\r\n    /**\r\n     * Comparison specifically for two leaf nodes\r\n     * @param {!LeafNode} otherLeaf\r\n     * @return {!number}\r\n     * @private\r\n     */\r\n    LeafNode.prototype.compareToLeafNode_ = function (otherLeaf) {\r\n        var otherLeafType = typeof otherLeaf.value_;\r\n        var thisLeafType = typeof this.value_;\r\n        var otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\r\n        var thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\r\n        util.assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\r\n        util.assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\r\n        if (otherIndex === thisIndex) {\r\n            // Same type, compare values\r\n            if (thisLeafType === 'object') {\r\n                // Deferred value nodes are all equal, but we should also never get to this point...\r\n                return 0;\r\n            }\r\n            else {\r\n                // Note that this works because true > false, all others are number or string comparisons\r\n                if (this.value_ < otherLeaf.value_) {\r\n                    return -1;\r\n                }\r\n                else if (this.value_ === otherLeaf.value_) {\r\n                    return 0;\r\n                }\r\n                else {\r\n                    return 1;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return thisIndex - otherIndex;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.withIndex = function () {\r\n        return this;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.isIndexed = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.equals = function (other) {\r\n        /**\r\n         * @inheritDoc\r\n         */\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            var otherLeaf = other;\r\n            return (this.value_ === otherLeaf.value_ &&\r\n                this.priorityNode_.equals(otherLeaf.priorityNode_));\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * The sort order for comparing leaf nodes of different types. If two leaf nodes have\r\n     * the same type, the comparison falls back to their value\r\n     * @type {Array.<!string>}\r\n     * @const\r\n     */\r\n    LeafNode.VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\r\n    return LeafNode;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar nodeFromJSON;\r\nvar MAX_NODE$1;\r\nfunction setNodeFromJSON(val) {\r\n    nodeFromJSON = val;\r\n}\r\nfunction setMaxNode$1(val) {\r\n    MAX_NODE$1 = val;\r\n}\r\n/**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */\r\nvar PriorityIndex = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PriorityIndex, _super);\r\n    function PriorityIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.compare = function (a, b) {\r\n        var aPriority = a.node.getPriority();\r\n        var bPriority = b.node.getPriority();\r\n        var indexCmp = aPriority.compareTo(bPriority);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getPriority().isEmpty();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.getPriority().equals(newNode.getPriority());\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.minPost = function () {\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.maxPost = function () {\r\n        return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE$1));\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    PriorityIndex.prototype.makePost = function (indexValue, name) {\r\n        var priorityNode = nodeFromJSON(indexValue);\r\n        return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    PriorityIndex.prototype.toString = function () {\r\n        return '.priority';\r\n    };\r\n    return PriorityIndex;\r\n}(Index));\r\nvar PRIORITY_INDEX = new PriorityIndex();\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An iterator over an LLRBNode.\r\n */\r\nvar SortedMapIterator = /** @class */ (function () {\r\n    /**\r\n     * @template K, V, T\r\n     * @param {LLRBNode|LLRBEmptyNode} node Node to iterate.\r\n     * @param {?K} startKey\r\n     * @param {function(K, K): number} comparator\r\n     * @param {boolean} isReverse_ Whether or not to iterate in reverse\r\n     * @param {(function(K, V):T)=} resultGenerator_\r\n     */\r\n    function SortedMapIterator(node, startKey, comparator, isReverse_, resultGenerator_) {\r\n        if (resultGenerator_ === void 0) { resultGenerator_ = null; }\r\n        this.isReverse_ = isReverse_;\r\n        this.resultGenerator_ = resultGenerator_;\r\n        /** @private\r\n         * @type {Array.<!LLRBNode>}\r\n         */\r\n        this.nodeStack_ = [];\r\n        var cmp = 1;\r\n        while (!node.isEmpty()) {\r\n            node = node;\r\n            cmp = startKey ? comparator(node.key, startKey) : 1;\r\n            // flip the comparison if we're going in reverse\r\n            if (isReverse_)\r\n                cmp *= -1;\r\n            if (cmp < 0) {\r\n                // This node is less than our start key. ignore it\r\n                if (this.isReverse_) {\r\n                    node = node.left;\r\n                }\r\n                else {\r\n                    node = node.right;\r\n                }\r\n            }\r\n            else if (cmp === 0) {\r\n                // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\r\n                this.nodeStack_.push(node);\r\n                break;\r\n            }\r\n            else {\r\n                // This node is greater than our start key, add it to the stack and move to the next one\r\n                this.nodeStack_.push(node);\r\n                if (this.isReverse_) {\r\n                    node = node.right;\r\n                }\r\n                else {\r\n                    node = node.left;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    SortedMapIterator.prototype.getNext = function () {\r\n        if (this.nodeStack_.length === 0)\r\n            return null;\r\n        var node = this.nodeStack_.pop();\r\n        var result;\r\n        if (this.resultGenerator_)\r\n            result = this.resultGenerator_(node.key, node.value);\r\n        else\r\n            result = { key: node.key, value: node.value };\r\n        if (this.isReverse_) {\r\n            node = node.left;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.right;\r\n            }\r\n        }\r\n        else {\r\n            node = node.right;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.left;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    SortedMapIterator.prototype.hasNext = function () {\r\n        return this.nodeStack_.length > 0;\r\n    };\r\n    SortedMapIterator.prototype.peek = function () {\r\n        if (this.nodeStack_.length === 0)\r\n            return null;\r\n        var node = this.nodeStack_[this.nodeStack_.length - 1];\r\n        if (this.resultGenerator_) {\r\n            return this.resultGenerator_(node.key, node.value);\r\n        }\r\n        else {\r\n            return { key: node.key, value: node.value };\r\n        }\r\n    };\r\n    return SortedMapIterator;\r\n}());\r\n/**\r\n * Represents a node in a Left-leaning Red-Black tree.\r\n */\r\nvar LLRBNode = /** @class */ (function () {\r\n    /**\r\n     * @template K, V\r\n     * @param {!K} key Key associated with this node.\r\n     * @param {!V} value Value associated with this node.\r\n     * @param {?boolean} color Whether this node is red.\r\n     * @param {?(LLRBNode|LLRBEmptyNode)=} left Left child.\r\n     * @param {?(LLRBNode|LLRBEmptyNode)=} right Right child.\r\n     */\r\n    function LLRBNode(key, value, color, left, right) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this.color = color != null ? color : LLRBNode.RED;\r\n        this.left =\r\n            left != null ? left : SortedMap.EMPTY_NODE;\r\n        this.right =\r\n            right != null ? right : SortedMap.EMPTY_NODE;\r\n    }\r\n    /**\r\n     * Returns a copy of the current node, optionally replacing pieces of it.\r\n     *\r\n     * @param {?K} key New key for the node, or null.\r\n     * @param {?V} value New value for the node, or null.\r\n     * @param {?boolean} color New color for the node, or null.\r\n     * @param {?LLRBNode|LLRBEmptyNode} left New left child for the node, or null.\r\n     * @param {?LLRBNode|LLRBEmptyNode} right New right child for the node, or null.\r\n     * @return {!LLRBNode} The node copy.\r\n     */\r\n    LLRBNode.prototype.copy = function (key, value, color, left, right) {\r\n        return new LLRBNode(key != null ? key : this.key, value != null ? value : this.value, color != null ? color : this.color, left != null ? left : this.left, right != null ? right : this.right);\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the tree.\r\n     */\r\n    LLRBNode.prototype.count = function () {\r\n        return this.left.count() + 1 + this.right.count();\r\n    };\r\n    /**\r\n     * @return {boolean} True if the tree is empty.\r\n     */\r\n    LLRBNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called for each\r\n     *   node.  If it returns true, traversal is aborted.\r\n     * @return {*} The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    LLRBNode.prototype.inorderTraversal = function (action) {\r\n        return (this.left.inorderTraversal(action) ||\r\n            action(this.key, this.value) ||\r\n            this.right.inorderTraversal(action));\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!Object, !Object)} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {*} True if traversal was aborted.\r\n     */\r\n    LLRBNode.prototype.reverseTraversal = function (action) {\r\n        return (this.right.reverseTraversal(action) ||\r\n            action(this.key, this.value) ||\r\n            this.left.reverseTraversal(action));\r\n    };\r\n    /**\r\n     * @return {!Object} The minimum node in the tree.\r\n     * @private\r\n     */\r\n    LLRBNode.prototype.min_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            return this.left.min_();\r\n        }\r\n    };\r\n    /**\r\n     * @return {!K} The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.minKey = function () {\r\n        return this.min_().key;\r\n    };\r\n    /**\r\n     * @return {!K} The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.maxKey = function () {\r\n        if (this.right.isEmpty()) {\r\n            return this.key;\r\n        }\r\n        else {\r\n            return this.right.maxKey();\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Object} key Key to insert.\r\n     * @param {!Object} value Value to insert.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode} New tree, with the key/value added.\r\n     */\r\n    LLRBNode.prototype.insert = function (key, value, comparator) {\r\n        var cmp, n;\r\n        n = this;\r\n        cmp = comparator(key, n.key);\r\n        if (cmp < 0) {\r\n            n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\r\n        }\r\n        else if (cmp === 0) {\r\n            n = n.copy(null, value, null, null, null);\r\n        }\r\n        else {\r\n            n = n.copy(null, null, null, null, n.right.insert(key, value, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the minimum key removed.\r\n     */\r\n    LLRBNode.prototype.removeMin_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return SortedMap.EMPTY_NODE;\r\n        }\r\n        var n = this;\r\n        if (!n.left.isRed_() && !n.left.left.isRed_())\r\n            n = n.moveRedLeft_();\r\n        n = n.copy(null, null, null, n.left.removeMin_(), null);\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @param {!Object} key The key of the item to remove.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the specified item removed.\r\n     */\r\n    LLRBNode.prototype.remove = function (key, comparator) {\r\n        var n, smallest;\r\n        n = this;\r\n        if (comparator(key, n.key) < 0) {\r\n            if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\r\n                n = n.moveRedLeft_();\r\n            }\r\n            n = n.copy(null, null, null, n.left.remove(key, comparator), null);\r\n        }\r\n        else {\r\n            if (n.left.isRed_())\r\n                n = n.rotateRight_();\r\n            if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\r\n                n = n.moveRedRight_();\r\n            }\r\n            if (comparator(key, n.key) === 0) {\r\n                if (n.right.isEmpty()) {\r\n                    return SortedMap.EMPTY_NODE;\r\n                }\r\n                else {\r\n                    smallest = n.right.min_();\r\n                    n = n.copy(smallest.key, smallest.value, null, null, n.right.removeMin_());\r\n                }\r\n            }\r\n            n = n.copy(null, null, null, null, n.right.remove(key, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {boolean} Whether this is a RED node.\r\n     */\r\n    LLRBNode.prototype.isRed_ = function () {\r\n        return this.color;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree after performing any needed rotations.\r\n     */\r\n    LLRBNode.prototype.fixUp_ = function () {\r\n        var n = this;\r\n        if (n.right.isRed_() && !n.left.isRed_())\r\n            n = n.rotateLeft_();\r\n        if (n.left.isRed_() && n.left.left.isRed_())\r\n            n = n.rotateRight_();\r\n        if (n.left.isRed_() && n.right.isRed_())\r\n            n = n.colorFlip_();\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after moveRedLeft.\r\n     */\r\n    LLRBNode.prototype.moveRedLeft_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.right.left.isRed_()) {\r\n            n = n.copy(null, null, null, null, n.right.rotateRight_());\r\n            n = n.rotateLeft_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after moveRedRight.\r\n     */\r\n    LLRBNode.prototype.moveRedRight_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.left.left.isRed_()) {\r\n            n = n.rotateRight_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after rotateLeft.\r\n     */\r\n    LLRBNode.prototype.rotateLeft_ = function () {\r\n        var nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\r\n        return this.right.copy(null, null, this.color, nl, null);\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after rotateRight.\r\n     */\r\n    LLRBNode.prototype.rotateRight_ = function () {\r\n        var nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\r\n        return this.left.copy(null, null, this.color, null, nr);\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after colorFlip.\r\n     */\r\n    LLRBNode.prototype.colorFlip_ = function () {\r\n        var left = this.left.copy(null, null, !this.left.color, null, null);\r\n        var right = this.right.copy(null, null, !this.right.color, null, null);\r\n        return this.copy(null, null, !this.color, left, right);\r\n    };\r\n    /**\r\n     * For testing.\r\n     *\r\n     * @private\r\n     * @return {boolean} True if all is well.\r\n     */\r\n    LLRBNode.prototype.checkMaxDepth_ = function () {\r\n        var blackDepth = this.check_();\r\n        return Math.pow(2.0, blackDepth) <= this.count() + 1;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {number} Not sure what this returns exactly. :-).\r\n     */\r\n    LLRBNode.prototype.check_ = function () {\r\n        var blackDepth;\r\n        if (this.isRed_() && this.left.isRed_()) {\r\n            throw new Error('Red node has red child(' + this.key + ',' + this.value + ')');\r\n        }\r\n        if (this.right.isRed_()) {\r\n            throw new Error('Right child of (' + this.key + ',' + this.value + ') is red');\r\n        }\r\n        blackDepth = this.left.check_();\r\n        if (blackDepth !== this.right.check_()) {\r\n            throw new Error('Black depths differ');\r\n        }\r\n        else {\r\n            return blackDepth + (this.isRed_() ? 0 : 1);\r\n        }\r\n    };\r\n    LLRBNode.RED = true;\r\n    LLRBNode.BLACK = false;\r\n    return LLRBNode;\r\n}());\r\n/**\r\n * Represents an empty node (a leaf node in the Red-Black Tree).\r\n */\r\nvar LLRBEmptyNode = /** @class */ (function () {\r\n    function LLRBEmptyNode() {\r\n    }\r\n    /**\r\n     * Returns a copy of the current node.\r\n     *\r\n     * @return {!LLRBEmptyNode} The node copy.\r\n     */\r\n    LLRBEmptyNode.prototype.copy = function (key, value, color, left, right) {\r\n        return this;\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key/value added.\r\n     *\r\n     * @param {!K} key Key to be added.\r\n     * @param {!V} value Value to be added.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode} New tree, with item added.\r\n     */\r\n    LLRBEmptyNode.prototype.insert = function (key, value, comparator) {\r\n        return new LLRBNode(key, value, null);\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key removed.\r\n     *\r\n     * @param {!K} key The key to remove.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBEmptyNode} New tree, with item removed.\r\n     */\r\n    LLRBEmptyNode.prototype.remove = function (key, comparator) {\r\n        return this;\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the tree.\r\n     */\r\n    LLRBEmptyNode.prototype.count = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @return {boolean} True if the tree is empty.\r\n     */\r\n    LLRBEmptyNode.prototype.isEmpty = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {boolean} True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.inorderTraversal = function (action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V)} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {boolean} True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.reverseTraversal = function (action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * @return {null}\r\n     */\r\n    LLRBEmptyNode.prototype.minKey = function () {\r\n        return null;\r\n    };\r\n    /**\r\n     * @return {null}\r\n     */\r\n    LLRBEmptyNode.prototype.maxKey = function () {\r\n        return null;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {number} Not sure what this returns exactly. :-).\r\n     */\r\n    LLRBEmptyNode.prototype.check_ = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {boolean} Whether this node is red.\r\n     */\r\n    LLRBEmptyNode.prototype.isRed_ = function () {\r\n        return false;\r\n    };\r\n    return LLRBEmptyNode;\r\n}());\r\n/**\r\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\r\n * tree.\r\n */\r\nvar SortedMap = /** @class */ (function () {\r\n    /**\r\n     * @template K, V\r\n     * @param {function(K, K):number} comparator_ Key comparator.\r\n     * @param {LLRBNode=} root_ (Optional) Root node for the map.\r\n     */\r\n    function SortedMap(comparator_, root_) {\r\n        if (root_ === void 0) { root_ = SortedMap.EMPTY_NODE; }\r\n        this.comparator_ = comparator_;\r\n        this.root_ = root_;\r\n    }\r\n    /**\r\n     * Returns a copy of the map, with the specified key/value added or replaced.\r\n     * (TODO: We should perhaps rename this method to 'put')\r\n     *\r\n     * @param {!K} key Key to be added.\r\n     * @param {!V} value Value to be added.\r\n     * @return {!SortedMap.<K, V>} New map, with item added.\r\n     */\r\n    SortedMap.prototype.insert = function (key, value) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .insert(key, value, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns a copy of the map, with the specified key removed.\r\n     *\r\n     * @param {!K} key The key to remove.\r\n     * @return {!SortedMap.<K, V>} New map, with item removed.\r\n     */\r\n    SortedMap.prototype.remove = function (key) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .remove(key, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns the value of the node with the given key, or null.\r\n     *\r\n     * @param {!K} key The key to look up.\r\n     * @return {?V} The value of the node with the given key, or null if the\r\n     * key doesn't exist.\r\n     */\r\n    SortedMap.prototype.get = function (key) {\r\n        var cmp;\r\n        var node = this.root_;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                return node.value;\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                node = node.right;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Returns the key of the item *before* the specified key, or null if key is the first item.\r\n     * @param {K} key The key to find the predecessor of\r\n     * @return {?K} The predecessor key.\r\n     */\r\n    SortedMap.prototype.getPredecessorKey = function (key) {\r\n        var cmp, node = this.root_, rightParent = null;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                if (!node.left.isEmpty()) {\r\n                    node = node.left;\r\n                    while (!node.right.isEmpty())\r\n                        node = node.right;\r\n                    return node.key;\r\n                }\r\n                else if (rightParent) {\r\n                    return rightParent.key;\r\n                }\r\n                else {\r\n                    return null; // first item.\r\n                }\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                rightParent = node;\r\n                node = node.right;\r\n            }\r\n        }\r\n        throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');\r\n    };\r\n    /**\r\n     * @return {boolean} True if the map is empty.\r\n     */\r\n    SortedMap.prototype.isEmpty = function () {\r\n        return this.root_.isEmpty();\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the map.\r\n     */\r\n    SortedMap.prototype.count = function () {\r\n        return this.root_.count();\r\n    };\r\n    /**\r\n     * @return {?K} The minimum key in the map.\r\n     */\r\n    SortedMap.prototype.minKey = function () {\r\n        return this.root_.minKey();\r\n    };\r\n    /**\r\n     * @return {?K} The maximum key in the map.\r\n     */\r\n    SortedMap.prototype.maxKey = function () {\r\n        return this.root_.maxKey();\r\n    };\r\n    /**\r\n     * Traverses the map in key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @return {*} The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    SortedMap.prototype.inorderTraversal = function (action) {\r\n        return this.root_.inorderTraversal(action);\r\n    };\r\n    /**\r\n     * Traverses the map in reverse key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param {function(!Object, !Object)} action Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @return {*} True if the traversal was aborted.\r\n     */\r\n    SortedMap.prototype.reverseTraversal = function (action) {\r\n        return this.root_.reverseTraversal(action);\r\n    };\r\n    /**\r\n     * Returns an iterator over the SortedMap.\r\n     * @template T\r\n     * @param {(function(K, V):T)=} resultGenerator\r\n     * @return {SortedMapIterator.<K, V, T>} The iterator.\r\n     */\r\n    SortedMap.prototype.getIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, true, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, true, resultGenerator);\r\n    };\r\n    /**\r\n     * Always use the same empty node, to reduce memory.\r\n     * @const\r\n     */\r\n    SortedMap.EMPTY_NODE = new LLRBEmptyNode();\r\n    return SortedMap;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar LOG_2 = Math.log(2);\r\n/**\r\n * @constructor\r\n */\r\nvar Base12Num = /** @class */ (function () {\r\n    /**\r\n     * @param {number} length\r\n     */\r\n    function Base12Num(length) {\r\n        var logBase2 = function (num) {\r\n            return parseInt((Math.log(num) / LOG_2), 10);\r\n        };\r\n        var bitMask = function (bits) { return parseInt(Array(bits + 1).join('1'), 2); };\r\n        this.count = logBase2(length + 1);\r\n        this.current_ = this.count - 1;\r\n        var mask = bitMask(this.count);\r\n        this.bits_ = (length + 1) & mask;\r\n    }\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    Base12Num.prototype.nextBitIsOne = function () {\r\n        //noinspection JSBitwiseOperatorUsage\r\n        var result = !(this.bits_ & (0x1 << this.current_));\r\n        this.current_--;\r\n        return result;\r\n    };\r\n    return Base12Num;\r\n}());\r\n/**\r\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\r\n * function\r\n *\r\n * Uses the algorithm described in the paper linked here:\r\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\r\n *\r\n * @template K, V\r\n * @param {Array.<!NamedNode>} childList Unsorted list of children\r\n * @param {function(!NamedNode, !NamedNode):number} cmp The comparison method to be used\r\n * @param {(function(NamedNode):K)=} keyFn An optional function to extract K from a node wrapper, if K's\r\n *                                                        type is not NamedNode\r\n * @param {(function(K, K):number)=} mapSortFn An optional override for comparator used by the generated sorted map\r\n * @return {SortedMap.<K, V>}\r\n */\r\nvar buildChildSet = function (childList, cmp, keyFn, mapSortFn) {\r\n    childList.sort(cmp);\r\n    var buildBalancedTree = function (low, high) {\r\n        var length = high - low;\r\n        var namedNode;\r\n        var key;\r\n        if (length == 0) {\r\n            return null;\r\n        }\r\n        else if (length == 1) {\r\n            namedNode = childList[low];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, null, null);\r\n        }\r\n        else {\r\n            var middle = parseInt((length / 2), 10) + low;\r\n            var left = buildBalancedTree(low, middle);\r\n            var right = buildBalancedTree(middle + 1, high);\r\n            namedNode = childList[middle];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, left, right);\r\n        }\r\n    };\r\n    var buildFrom12Array = function (base12) {\r\n        var node = null;\r\n        var root = null;\r\n        var index = childList.length;\r\n        var buildPennant = function (chunkSize, color) {\r\n            var low = index - chunkSize;\r\n            var high = index;\r\n            index -= chunkSize;\r\n            var childTree = buildBalancedTree(low + 1, high);\r\n            var namedNode = childList[low];\r\n            var key = keyFn ? keyFn(namedNode) : namedNode;\r\n            attachPennant(new LLRBNode(key, namedNode.node, color, null, childTree));\r\n        };\r\n        var attachPennant = function (pennant) {\r\n            if (node) {\r\n                node.left = pennant;\r\n                node = pennant;\r\n            }\r\n            else {\r\n                root = pennant;\r\n                node = pennant;\r\n            }\r\n        };\r\n        for (var i = 0; i < base12.count; ++i) {\r\n            var isOne = base12.nextBitIsOne();\r\n            // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\r\n            var chunkSize = Math.pow(2, base12.count - (i + 1));\r\n            if (isOne) {\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n            }\r\n            else {\r\n                // current == 2\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n                buildPennant(chunkSize, LLRBNode.RED);\r\n            }\r\n        }\r\n        return root;\r\n    };\r\n    var base12 = new Base12Num(childList.length);\r\n    var root = buildFrom12Array(base12);\r\n    return new SortedMap(mapSortFn || cmp, root);\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _defaultIndexMap;\r\nvar fallbackObject = {};\r\n/**\r\n *\r\n * @param {Object.<string, FallbackType|SortedMap.<NamedNode, Node>>} indexes\r\n * @param {Object.<string, Index>} indexSet\r\n * @constructor\r\n */\r\nvar IndexMap = /** @class */ (function () {\r\n    function IndexMap(indexes_, indexSet_) {\r\n        this.indexes_ = indexes_;\r\n        this.indexSet_ = indexSet_;\r\n    }\r\n    Object.defineProperty(IndexMap, \"Default\", {\r\n        /**\r\n         * The default IndexMap for nodes without a priority\r\n         * @type {!IndexMap}\r\n         * @const\r\n         */\r\n        get: function () {\r\n            util.assert(fallbackObject && PRIORITY_INDEX, 'ChildrenNode.ts has not been loaded');\r\n            _defaultIndexMap =\r\n                _defaultIndexMap ||\r\n                    new IndexMap({ '.priority': fallbackObject }, { '.priority': PRIORITY_INDEX });\r\n            return _defaultIndexMap;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     *\r\n     * @param {!string} indexKey\r\n     * @return {?SortedMap.<NamedNode, Node>}\r\n     */\r\n    IndexMap.prototype.get = function (indexKey) {\r\n        var sortedMap = util.safeGet(this.indexes_, indexKey);\r\n        if (!sortedMap)\r\n            throw new Error('No index defined for ' + indexKey);\r\n        if (sortedMap === fallbackObject) {\r\n            // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\r\n            // regular child map\r\n            return null;\r\n        }\r\n        else {\r\n            return sortedMap;\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {boolean}\r\n     */\r\n    IndexMap.prototype.hasIndex = function (indexDefinition) {\r\n        return util.contains(this.indexSet_, indexDefinition.toString());\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @param {!SortedMap.<string, !Node>} existingChildren\r\n     * @return {!IndexMap}\r\n     */\r\n    IndexMap.prototype.addIndex = function (indexDefinition, existingChildren) {\r\n        util.assert(indexDefinition !== KEY_INDEX, \"KeyIndex always exists and isn't meant to be added to the IndexMap.\");\r\n        var childList = [];\r\n        var sawIndexedValue = false;\r\n        var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n        var next = iter.getNext();\r\n        while (next) {\r\n            sawIndexedValue =\r\n                sawIndexedValue || indexDefinition.isDefinedOn(next.node);\r\n            childList.push(next);\r\n            next = iter.getNext();\r\n        }\r\n        var newIndex;\r\n        if (sawIndexedValue) {\r\n            newIndex = buildChildSet(childList, indexDefinition.getCompare());\r\n        }\r\n        else {\r\n            newIndex = fallbackObject;\r\n        }\r\n        var indexName = indexDefinition.toString();\r\n        var newIndexSet = util.clone(this.indexSet_);\r\n        newIndexSet[indexName] = indexDefinition;\r\n        var newIndexes = util.clone(this.indexes_);\r\n        newIndexes[indexName] = newIndex;\r\n        return new IndexMap(newIndexes, newIndexSet);\r\n    };\r\n    /**\r\n     * Ensure that this node is properly tracked in any indexes that we're maintaining\r\n     * @param {!NamedNode} namedNode\r\n     * @param {!SortedMap.<string, !Node>} existingChildren\r\n     * @return {!IndexMap}\r\n     */\r\n    IndexMap.prototype.addToIndexes = function (namedNode, existingChildren) {\r\n        var _this = this;\r\n        var newIndexes = util.map(this.indexes_, function (indexedChildren, indexName) {\r\n            var index = util.safeGet(_this.indexSet_, indexName);\r\n            util.assert(index, 'Missing index implementation for ' + indexName);\r\n            if (indexedChildren === fallbackObject) {\r\n                // Check to see if we need to index everything\r\n                if (index.isDefinedOn(namedNode.node)) {\r\n                    // We need to build this index\r\n                    var childList = [];\r\n                    var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n                    var next = iter.getNext();\r\n                    while (next) {\r\n                        if (next.name != namedNode.name) {\r\n                            childList.push(next);\r\n                        }\r\n                        next = iter.getNext();\r\n                    }\r\n                    childList.push(namedNode);\r\n                    return buildChildSet(childList, index.getCompare());\r\n                }\r\n                else {\r\n                    // No change, this remains a fallback\r\n                    return fallbackObject;\r\n                }\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                var newChildren = indexedChildren;\r\n                if (existingSnap) {\r\n                    newChildren = newChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                return newChildren.insert(namedNode, namedNode.node);\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    /**\r\n     * Create a new IndexMap instance with the given value removed\r\n     * @param {!NamedNode} namedNode\r\n     * @param {!SortedMap.<string, !Node>} existingChildren\r\n     * @return {!IndexMap}\r\n     */\r\n    IndexMap.prototype.removeFromIndexes = function (namedNode, existingChildren) {\r\n        var newIndexes = util.map(this.indexes_, function (indexedChildren) {\r\n            if (indexedChildren === fallbackObject) {\r\n                // This is the fallback. Just return it, nothing to do in this case\r\n                return indexedChildren;\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                if (existingSnap) {\r\n                    return indexedChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                else {\r\n                    // No record of this child\r\n                    return indexedChildren;\r\n                }\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    return IndexMap;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction NAME_ONLY_COMPARATOR(left, right) {\r\n    return nameCompare(left.name, right.name);\r\n}\r\nfunction NAME_COMPARATOR(left, right) {\r\n    return nameCompare(left, right);\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\r\nvar EMPTY_NODE;\r\n/**\r\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\r\n * (i.e. nodes with children).  It implements Node and stores the\r\n * list of children in the children property, sorted by child name.\r\n *\r\n * @constructor\r\n * @implements {Node}\r\n */\r\nvar ChildrenNode = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!SortedMap.<string, !Node>} children_ List of children\r\n     * of this node..\r\n     * @param {?Node} priorityNode_ The priority of this node (as a snapshot node).\r\n     * @param {!IndexMap} indexMap_\r\n     */\r\n    function ChildrenNode(children_, priorityNode_, indexMap_) {\r\n        this.children_ = children_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.indexMap_ = indexMap_;\r\n        this.lazyHash_ = null;\r\n        /**\r\n         * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\r\n         * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\r\n         * class instead of an empty ChildrenNode.\r\n         */\r\n        if (this.priorityNode_) {\r\n            validatePriorityNode(this.priorityNode_);\r\n        }\r\n        if (this.children_.isEmpty()) {\r\n            util.assert(!this.priorityNode_ || this.priorityNode_.isEmpty(), 'An empty node cannot have a priority');\r\n        }\r\n    }\r\n    Object.defineProperty(ChildrenNode, \"EMPTY_NODE\", {\r\n        get: function () {\r\n            return (EMPTY_NODE ||\r\n                (EMPTY_NODE = new ChildrenNode(new SortedMap(NAME_COMPARATOR), null, IndexMap.Default)));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isLeafNode = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPriority = function () {\r\n        return this.priorityNode_ || EMPTY_NODE;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updatePriority = function (newPriorityNode) {\r\n        if (this.children_.isEmpty()) {\r\n            // Don't allow priorities on empty nodes\r\n            return this;\r\n        }\r\n        else {\r\n            return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.getPriority();\r\n        }\r\n        else {\r\n            var child = this.children_.get(childName);\r\n            return child === null ? EMPTY_NODE : child;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getChild = function (path) {\r\n        var front = path.getFront();\r\n        if (front === null)\r\n            return this;\r\n        return this.getImmediateChild(front).getChild(path.popFront());\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hasChild = function (childName) {\r\n        return this.children_.get(childName) !== null;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        util.assert(newChildNode, 'We should always be passing snapshot nodes');\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else {\r\n            var namedNode = new NamedNode(childName, newChildNode);\r\n            var newChildren = void 0, newIndexMap = void 0, newPriority = void 0;\r\n            if (newChildNode.isEmpty()) {\r\n                newChildren = this.children_.remove(childName);\r\n                newIndexMap = this.indexMap_.removeFromIndexes(namedNode, this.children_);\r\n            }\r\n            else {\r\n                newChildren = this.children_.insert(childName, newChildNode);\r\n                newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\r\n            }\r\n            newPriority = newChildren.isEmpty() ? EMPTY_NODE : this.priorityNode_;\r\n            return new ChildrenNode(newChildren, newPriority, newIndexMap);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = path.getFront();\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else {\r\n            util.assert(path.getFront() !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\r\n            var newImmediateChild = this.getImmediateChild(front).updateChild(path.popFront(), newChildNode);\r\n            return this.updateImmediateChild(front, newImmediateChild);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isEmpty = function () {\r\n        return this.children_.isEmpty();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.numChildren = function () {\r\n        return this.children_.count();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.val = function (exportFormat) {\r\n        if (this.isEmpty())\r\n            return null;\r\n        var obj = {};\r\n        var numKeys = 0, maxKey = 0, allIntegerKeys = true;\r\n        this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            obj[key] = childNode.val(exportFormat);\r\n            numKeys++;\r\n            if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\r\n                maxKey = Math.max(maxKey, Number(key));\r\n            }\r\n            else {\r\n                allIntegerKeys = false;\r\n            }\r\n        });\r\n        if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\r\n            // convert to array.\r\n            var array = [];\r\n            for (var key in obj)\r\n                array[key] = obj[key];\r\n            return array;\r\n        }\r\n        else {\r\n            if (exportFormat && !this.getPriority().isEmpty()) {\r\n                obj['.priority'] = this.getPriority().val();\r\n            }\r\n            return obj;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash_1 = '';\r\n            if (!this.getPriority().isEmpty())\r\n                toHash_1 +=\r\n                    'priority:' +\r\n                        priorityHashText(this.getPriority().val()) +\r\n                        ':';\r\n            this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                var childHash = childNode.hash();\r\n                if (childHash !== '')\r\n                    toHash_1 += ':' + key + ':' + childHash;\r\n            });\r\n            this.lazyHash_ = toHash_1 === '' ? '' : sha1(toHash_1);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPredecessorChildName = function (childName, childNode, index) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            var predecessor = idx.getPredecessorKey(new NamedNode(childName, childNode));\r\n            return predecessor ? predecessor.name : null;\r\n        }\r\n        else {\r\n            return this.children_.getPredecessorKey(childName);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?string}\r\n     */\r\n    ChildrenNode.prototype.getFirstChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var minKey = idx.minKey();\r\n            return minKey && minKey.name;\r\n        }\r\n        else {\r\n            return this.children_.minKey();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?NamedNode}\r\n     */\r\n    ChildrenNode.prototype.getFirstChild = function (indexDefinition) {\r\n        var minKey = this.getFirstChildName(indexDefinition);\r\n        if (minKey) {\r\n            return new NamedNode(minKey, this.children_.get(minKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Given an index, return the key name of the largest value we have, according to that index\r\n     * @param {!Index} indexDefinition\r\n     * @return {?string}\r\n     */\r\n    ChildrenNode.prototype.getLastChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var maxKey = idx.maxKey();\r\n            return maxKey && maxKey.name;\r\n        }\r\n        else {\r\n            return this.children_.maxKey();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?NamedNode}\r\n     */\r\n    ChildrenNode.prototype.getLastChild = function (indexDefinition) {\r\n        var maxKey = this.getLastChildName(indexDefinition);\r\n        if (maxKey) {\r\n            return new NamedNode(maxKey, this.children_.get(maxKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.forEachChild = function (index, action) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            return idx.inorderTraversal(function (wrappedNode) {\r\n                return action(wrappedNode.name, wrappedNode.node);\r\n            });\r\n        }\r\n        else {\r\n            return this.children_.inorderTraversal(action);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getIterator = function (indexDefinition) {\r\n        return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\r\n    };\r\n    /**\r\n     *\r\n     * @param {!NamedNode} startPost\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getIteratorFrom = function (startPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getIteratorFrom(startPost, function (key) { return key; });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getIteratorFrom(startPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, startPost) < 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getReverseIterator = function (indexDefinition) {\r\n        return this.getReverseIteratorFrom(indexDefinition.maxPost(), indexDefinition);\r\n    };\r\n    /**\r\n     * @param {!NamedNode} endPost\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getReverseIteratorFrom = function (endPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getReverseIteratorFrom(endPost, function (key) {\r\n                return key;\r\n            });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getReverseIteratorFrom(endPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, endPost) > 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.compareTo = function (other) {\r\n        if (this.isEmpty()) {\r\n            if (other.isEmpty()) {\r\n                return 0;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (other.isLeafNode() || other.isEmpty()) {\r\n            return 1;\r\n        }\r\n        else if (other === MAX_NODE$2) {\r\n            return -1;\r\n        }\r\n        else {\r\n            // Must be another node with children.\r\n            return 0;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.withIndex = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX ||\r\n            this.indexMap_.hasIndex(indexDefinition)) {\r\n            return this;\r\n        }\r\n        else {\r\n            var newIndexMap = this.indexMap_.addIndex(indexDefinition, this.children_);\r\n            return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.isIndexed = function (index) {\r\n        return index === KEY_INDEX || this.indexMap_.hasIndex(index);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.equals = function (other) {\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            return false;\r\n        }\r\n        else {\r\n            var otherChildrenNode = other;\r\n            if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\r\n                return false;\r\n            }\r\n            else if (this.children_.count() === otherChildrenNode.children_.count()) {\r\n                var thisIter = this.getIterator(PRIORITY_INDEX);\r\n                var otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\r\n                var thisCurrent = thisIter.getNext();\r\n                var otherCurrent = otherIter.getNext();\r\n                while (thisCurrent && otherCurrent) {\r\n                    if (thisCurrent.name !== otherCurrent.name ||\r\n                        !thisCurrent.node.equals(otherCurrent.node)) {\r\n                        return false;\r\n                    }\r\n                    thisCurrent = thisIter.getNext();\r\n                    otherCurrent = otherIter.getNext();\r\n                }\r\n                return thisCurrent === null && otherCurrent === null;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\r\n     * instead.\r\n     *\r\n     * @private\r\n     * @param {!Index} indexDefinition\r\n     * @return {?SortedMap.<NamedNode, Node>}\r\n     */\r\n    ChildrenNode.prototype.resolveIndex_ = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX) {\r\n            return null;\r\n        }\r\n        else {\r\n            return this.indexMap_.get(indexDefinition.toString());\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @type {RegExp}\r\n     */\r\n    ChildrenNode.INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\r\n    return ChildrenNode;\r\n}());\r\n/**\r\n * @constructor\r\n * @extends {ChildrenNode}\r\n * @private\r\n */\r\nvar MaxNode = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MaxNode, _super);\r\n    function MaxNode() {\r\n        return _super.call(this, new SortedMap(NAME_COMPARATOR), ChildrenNode.EMPTY_NODE, IndexMap.Default) || this;\r\n    }\r\n    MaxNode.prototype.compareTo = function (other) {\r\n        if (other === this) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return 1;\r\n        }\r\n    };\r\n    MaxNode.prototype.equals = function (other) {\r\n        // Not that we every compare it, but MAX_NODE is only ever equal to itself\r\n        return other === this;\r\n    };\r\n    MaxNode.prototype.getPriority = function () {\r\n        return this;\r\n    };\r\n    MaxNode.prototype.getImmediateChild = function (childName) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    };\r\n    MaxNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    return MaxNode;\r\n}(ChildrenNode));\r\n/**\r\n * Marker that will sort higher than any other snapshot.\r\n * @type {!MAX_NODE}\r\n * @const\r\n */\r\nvar MAX_NODE$2 = new MaxNode();\r\nObject.defineProperties(NamedNode, {\r\n    MIN: {\r\n        value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\r\n    },\r\n    MAX: {\r\n        value: new NamedNode(MAX_NAME, MAX_NODE$2)\r\n    }\r\n});\r\n/**\r\n * Reference Extensions\r\n */\r\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\r\nLeafNode.__childrenNodeConstructor = ChildrenNode;\r\nsetMaxNode(MAX_NODE$2);\r\nsetMaxNode$1(MAX_NODE$2);\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar USE_HINZE = true;\r\n/**\r\n * Constructs a snapshot node representing the passed JSON and returns it.\r\n * @param {*} json JSON to create a node for.\r\n * @param {?string|?number=} priority Optional priority to use.  This will be ignored if the\r\n * passed JSON contains a .priority property.\r\n * @return {!Node}\r\n */\r\nfunction nodeFromJSON$1(json, priority) {\r\n    if (priority === void 0) { priority = null; }\r\n    if (json === null) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    }\r\n    if (typeof json === 'object' && '.priority' in json) {\r\n        priority = json['.priority'];\r\n    }\r\n    util.assert(priority === null ||\r\n        typeof priority === 'string' ||\r\n        typeof priority === 'number' ||\r\n        (typeof priority === 'object' && '.sv' in priority), 'Invalid priority type found: ' + typeof priority);\r\n    if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\r\n        json = json['.value'];\r\n    }\r\n    // Valid leaf nodes include non-objects or server-value wrapper objects\r\n    if (typeof json !== 'object' || '.sv' in json) {\r\n        var jsonLeaf = json;\r\n        return new LeafNode(jsonLeaf, nodeFromJSON$1(priority));\r\n    }\r\n    if (!(json instanceof Array) && USE_HINZE) {\r\n        var children_1 = [];\r\n        var childrenHavePriority_1 = false;\r\n        var hinzeJsonObj_1 = json;\r\n        util.forEach(hinzeJsonObj_1, function (key, child) {\r\n            if (typeof key !== 'string' || key.substring(0, 1) !== '.') {\r\n                // Ignore metadata nodes\r\n                var childNode = nodeFromJSON$1(hinzeJsonObj_1[key]);\r\n                if (!childNode.isEmpty()) {\r\n                    childrenHavePriority_1 =\r\n                        childrenHavePriority_1 || !childNode.getPriority().isEmpty();\r\n                    children_1.push(new NamedNode(key, childNode));\r\n                }\r\n            }\r\n        });\r\n        if (children_1.length == 0) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var childSet = buildChildSet(children_1, NAME_ONLY_COMPARATOR, function (namedNode) { return namedNode.name; }, NAME_COMPARATOR);\r\n        if (childrenHavePriority_1) {\r\n            var sortedChildSet = buildChildSet(children_1, PRIORITY_INDEX.getCompare());\r\n            return new ChildrenNode(childSet, nodeFromJSON$1(priority), new IndexMap({ '.priority': sortedChildSet }, { '.priority': PRIORITY_INDEX }));\r\n        }\r\n        else {\r\n            return new ChildrenNode(childSet, nodeFromJSON$1(priority), IndexMap.Default);\r\n        }\r\n    }\r\n    else {\r\n        var node_1 = ChildrenNode.EMPTY_NODE;\r\n        var jsonObj_1 = json;\r\n        util.forEach(jsonObj_1, function (key, childData) {\r\n            if (util.contains(jsonObj_1, key)) {\r\n                if (key.substring(0, 1) !== '.') {\r\n                    // ignore metadata nodes.\r\n                    var childNode = nodeFromJSON$1(childData);\r\n                    if (childNode.isLeafNode() || !childNode.isEmpty())\r\n                        node_1 = node_1.updateImmediateChild(key, childNode);\r\n                }\r\n            }\r\n        });\r\n        return node_1.updatePriority(nodeFromJSON$1(priority));\r\n    }\r\n}\r\nsetNodeFromJSON(nodeFromJSON$1);\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */\r\nvar ValueIndex = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ValueIndex, _super);\r\n    function ValueIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.compare = function (a, b) {\r\n        var indexCmp = a.node.compareTo(b.node);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.isDefinedOn = function (node) {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.equals(newNode);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.minPost = function () {\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.maxPost = function () {\r\n        return NamedNode.MAX;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    ValueIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON$1(indexValue);\r\n        return new NamedNode(name, valueNode);\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    ValueIndex.prototype.toString = function () {\r\n        return '.value';\r\n    };\r\n    return ValueIndex;\r\n}(Index));\r\nvar VALUE_INDEX = new ValueIndex();\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!Path} indexPath\r\n * @constructor\r\n * @extends {Index}\r\n */\r\nvar PathIndex = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PathIndex, _super);\r\n    function PathIndex(indexPath_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.indexPath_ = indexPath_;\r\n        util.assert(!indexPath_.isEmpty() && indexPath_.getFront() !== '.priority', \"Can't create PathIndex with empty path or .priority key\");\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {!Node} snap\r\n     * @return {!Node}\r\n     * @protected\r\n     */\r\n    PathIndex.prototype.extractChild = function (snap) {\r\n        return snap.getChild(this.indexPath_);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getChild(this.indexPath_).isEmpty();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.compare = function (a, b) {\r\n        var aChild = this.extractChild(a.node);\r\n        var bChild = this.extractChild(b.node);\r\n        var indexCmp = aChild.compareTo(bChild);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON$1(indexValue);\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, valueNode);\r\n        return new NamedNode(name, node);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.maxPost = function () {\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE$2);\r\n        return new NamedNode(MAX_NAME, node);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.toString = function () {\r\n        return this.indexPath_.slice().join('/');\r\n    };\r\n    return PathIndex;\r\n}(Index));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\r\n * surfaces the public methods (val, forEach, etc.) we want to expose.\r\n */\r\nvar DataSnapshot = /** @class */ (function () {\r\n    /**\r\n     * @param {!Node} node_ A SnapshotNode to wrap.\r\n     * @param {!Reference} ref_ The ref of the location this snapshot came from.\r\n     * @param {!Index} index_ The iteration order for this snapshot\r\n     */\r\n    function DataSnapshot(node_, ref_, index_) {\r\n        this.node_ = node_;\r\n        this.ref_ = ref_;\r\n        this.index_ = index_;\r\n    }\r\n    /**\r\n     * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\r\n     * empty.\r\n     *\r\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.val = function () {\r\n        util.validateArgCount('DataSnapshot.val', 0, 0, arguments.length);\r\n        return this.node_.val();\r\n    };\r\n    /**\r\n     * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\r\n     * the entire node contents.\r\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.exportVal = function () {\r\n        util.validateArgCount('DataSnapshot.exportVal', 0, 0, arguments.length);\r\n        return this.node_.val(true);\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    DataSnapshot.prototype.toJSON = function () {\r\n        // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\r\n        util.validateArgCount('DataSnapshot.toJSON', 0, 1, arguments.length);\r\n        return this.exportVal();\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a non-null value.\r\n     *\r\n     * @return {boolean} Whether the snapshot contains a non-null value, or is empty.\r\n     */\r\n    DataSnapshot.prototype.exists = function () {\r\n        util.validateArgCount('DataSnapshot.exists', 0, 0, arguments.length);\r\n        return !this.node_.isEmpty();\r\n    };\r\n    /**\r\n     * Returns a DataSnapshot of the specified child node's contents.\r\n     *\r\n     * @param {!string} childPathString Path to a child.\r\n     * @return {!DataSnapshot} DataSnapshot for child node.\r\n     */\r\n    DataSnapshot.prototype.child = function (childPathString) {\r\n        util.validateArgCount('DataSnapshot.child', 0, 1, arguments.length);\r\n        // Ensure the childPath is a string (can be a number)\r\n        childPathString = String(childPathString);\r\n        validatePathString('DataSnapshot.child', 1, childPathString, false);\r\n        var childPath = new Path(childPathString);\r\n        var childRef = this.ref_.child(childPath);\r\n        return new DataSnapshot(this.node_.getChild(childPath), childRef, PRIORITY_INDEX);\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a child at the specified path.\r\n     *\r\n     * @param {!string} childPathString Path to a child.\r\n     * @return {boolean} Whether the child exists.\r\n     */\r\n    DataSnapshot.prototype.hasChild = function (childPathString) {\r\n        util.validateArgCount('DataSnapshot.hasChild', 1, 1, arguments.length);\r\n        validatePathString('DataSnapshot.hasChild', 1, childPathString, false);\r\n        var childPath = new Path(childPathString);\r\n        return !this.node_.getChild(childPath).isEmpty();\r\n    };\r\n    /**\r\n     * Returns the priority of the object, or null if no priority was set.\r\n     *\r\n     * @return {string|number|null} The priority.\r\n     */\r\n    DataSnapshot.prototype.getPriority = function () {\r\n        util.validateArgCount('DataSnapshot.getPriority', 0, 0, arguments.length);\r\n        // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\r\n        return this.node_.getPriority().val();\r\n    };\r\n    /**\r\n     * Iterates through child nodes and calls the specified action for each one.\r\n     *\r\n     * @param {function(!DataSnapshot)} action Callback function to be called\r\n     * for each child.\r\n     * @return {boolean} True if forEach was canceled by action returning true for\r\n     * one of the child nodes.\r\n     */\r\n    DataSnapshot.prototype.forEach = function (action) {\r\n        var _this = this;\r\n        util.validateArgCount('DataSnapshot.forEach', 1, 1, arguments.length);\r\n        util.validateCallback('DataSnapshot.forEach', 1, action, false);\r\n        if (this.node_.isLeafNode())\r\n            return false;\r\n        var childrenNode = this.node_;\r\n        // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\r\n        return !!childrenNode.forEachChild(this.index_, function (key, node) {\r\n            return action(new DataSnapshot(node, _this.ref_.child(key), PRIORITY_INDEX));\r\n        });\r\n    };\r\n    /**\r\n     * Returns whether this DataSnapshot has children.\r\n     * @return {boolean} True if the DataSnapshot contains 1 or more child nodes.\r\n     */\r\n    DataSnapshot.prototype.hasChildren = function () {\r\n        util.validateArgCount('DataSnapshot.hasChildren', 0, 0, arguments.length);\r\n        if (this.node_.isLeafNode())\r\n            return false;\r\n        else\r\n            return !this.node_.isEmpty();\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"key\", {\r\n        get: function () {\r\n            return this.ref_.getKey();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the number of children for this DataSnapshot.\r\n     * @return {number} The number of children that this DataSnapshot contains.\r\n     */\r\n    DataSnapshot.prototype.numChildren = function () {\r\n        util.validateArgCount('DataSnapshot.numChildren', 0, 0, arguments.length);\r\n        return this.node_.numChildren();\r\n    };\r\n    /**\r\n     * @return {Reference} The Firebase reference for the location this snapshot's data came from.\r\n     */\r\n    DataSnapshot.prototype.getRef = function () {\r\n        util.validateArgCount('DataSnapshot.ref', 0, 0, arguments.length);\r\n        return this.ref_;\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"ref\", {\r\n        get: function () {\r\n            return this.getRef();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return DataSnapshot;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Encapsulates the data needed to raise an event\r\n * @implements {Event}\r\n */\r\nvar DataEvent = /** @class */ (function () {\r\n    /**\r\n     * @param {!string} eventType One of: value, child_added, child_changed, child_moved, child_removed\r\n     * @param {!EventRegistration} eventRegistration The function to call to with the event data. User provided\r\n     * @param {!DataSnapshot} snapshot The data backing the event\r\n     * @param {?string=} prevName Optional, the name of the previous child for child_* events.\r\n     */\r\n    function DataEvent(eventType, eventRegistration, snapshot, prevName) {\r\n        this.eventType = eventType;\r\n        this.eventRegistration = eventRegistration;\r\n        this.snapshot = snapshot;\r\n        this.prevName = prevName;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getPath = function () {\r\n        var ref = this.snapshot.getRef();\r\n        if (this.eventType === 'value') {\r\n            return ref.path;\r\n        }\r\n        else {\r\n            return ref.getParent().path;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getEventType = function () {\r\n        return this.eventType;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.toString = function () {\r\n        return (this.getPath().toString() +\r\n            ':' +\r\n            this.eventType +\r\n            ':' +\r\n            util.stringify(this.snapshot.exportVal()));\r\n    };\r\n    return DataEvent;\r\n}());\r\nvar CancelEvent = /** @class */ (function () {\r\n    /**\r\n     * @param {EventRegistration} eventRegistration\r\n     * @param {Error} error\r\n     * @param {!Path} path\r\n     */\r\n    function CancelEvent(eventRegistration, error, path) {\r\n        this.eventRegistration = eventRegistration;\r\n        this.error = error;\r\n        this.path = path;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getPath = function () {\r\n        return this.path;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getEventType = function () {\r\n        return 'cancel';\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.toString = function () {\r\n        return this.path.toString() + ':cancel';\r\n    };\r\n    return CancelEvent;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Represents registration for 'value' events.\r\n */\r\nvar ValueEventRegistration = /** @class */ (function () {\r\n    /**\r\n     * @param {?function(!DataSnapshot)} callback_\r\n     * @param {?function(Error)} cancelCallback_\r\n     * @param {?Object} context_\r\n     */\r\n    function ValueEventRegistration(callback_, cancelCallback_, context_) {\r\n        this.callback_ = callback_;\r\n        this.cancelCallback_ = cancelCallback_;\r\n        this.context_ = context_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.respondsTo = function (eventType) {\r\n        return eventType === 'value';\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.createEvent = function (change, query) {\r\n        var index = query.getQueryParams().getIndex();\r\n        return new DataEvent('value', this, new DataSnapshot(change.snapshotNode, query.getRef(), index));\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        var ctx = this.context_;\r\n        if (eventData.getEventType() === 'cancel') {\r\n            util.assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\r\n            var cancelCB_1 = this.cancelCallback_;\r\n            return function () {\r\n                // We know that error exists, we checked above that this is a cancel event\r\n                cancelCB_1.call(ctx, eventData.error);\r\n            };\r\n        }\r\n        else {\r\n            var cb_1 = this.callback_;\r\n            return function () {\r\n                cb_1.call(ctx, eventData.snapshot);\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.cancelCallback_) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.matches = function (other) {\r\n        if (!(other instanceof ValueEventRegistration)) {\r\n            return false;\r\n        }\r\n        else if (!other.callback_ || !this.callback_) {\r\n            // If no callback specified, we consider it to match any callback.\r\n            return true;\r\n        }\r\n        else {\r\n            return (other.callback_ === this.callback_ && other.context_ === this.context_);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.hasAnyCallback = function () {\r\n        return this.callback_ !== null;\r\n    };\r\n    return ValueEventRegistration;\r\n}());\r\n/**\r\n * Represents the registration of 1 or more child_xxx events.\r\n *\r\n * Currently, it is always exactly 1 child_xxx event, but the idea is we might let you\r\n * register a group of callbacks together in the future.\r\n *\r\n * @constructor\r\n * @implements {EventRegistration}\r\n */\r\nvar ChildEventRegistration = /** @class */ (function () {\r\n    /**\r\n     * @param {?Object.<string, function(!DataSnapshot, ?string=)>} callbacks_\r\n     * @param {?function(Error)} cancelCallback_\r\n     * @param {Object=} context_\r\n     */\r\n    function ChildEventRegistration(callbacks_, cancelCallback_, context_) {\r\n        this.callbacks_ = callbacks_;\r\n        this.cancelCallback_ = cancelCallback_;\r\n        this.context_ = context_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.respondsTo = function (eventType) {\r\n        var eventToCheck = eventType === 'children_added' ? 'child_added' : eventType;\r\n        eventToCheck =\r\n            eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\r\n        return util.contains(this.callbacks_, eventToCheck);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.cancelCallback_) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.createEvent = function (change, query) {\r\n        util.assert(change.childName != null, 'Child events should have a childName.');\r\n        var ref = query.getRef().child(/** @type {!string} */ (change.childName));\r\n        var index = query.getQueryParams().getIndex();\r\n        return new DataEvent(change.type, this, new DataSnapshot(change.snapshotNode, ref, index), change.prevName);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        var ctx = this.context_;\r\n        if (eventData.getEventType() === 'cancel') {\r\n            util.assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\r\n            var cancelCB_2 = this.cancelCallback_;\r\n            return function () {\r\n                // We know that error exists, we checked above that this is a cancel event\r\n                cancelCB_2.call(ctx, eventData.error);\r\n            };\r\n        }\r\n        else {\r\n            var cb_2 = this.callbacks_[eventData.eventType];\r\n            return function () {\r\n                cb_2.call(ctx, eventData.snapshot, eventData.prevName);\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.matches = function (other) {\r\n        if (other instanceof ChildEventRegistration) {\r\n            if (!this.callbacks_ || !other.callbacks_) {\r\n                return true;\r\n            }\r\n            else if (this.context_ === other.context_) {\r\n                var otherCount = util.getCount(other.callbacks_);\r\n                var thisCount = util.getCount(this.callbacks_);\r\n                if (otherCount === thisCount) {\r\n                    // If count is 1, do an exact match on eventType, if either is defined but null, it's a match.\r\n                    //  If event types don't match, not a match\r\n                    // If count is not 1, exact match across all\r\n                    if (otherCount === 1) {\r\n                        var otherKey /** @type {!string} */ = util.getAnyKey(other.callbacks_);\r\n                        var thisKey /** @type {!string} */ = util.getAnyKey(this.callbacks_);\r\n                        return (thisKey === otherKey &&\r\n                            (!other.callbacks_[otherKey] ||\r\n                                !this.callbacks_[thisKey] ||\r\n                                other.callbacks_[otherKey] === this.callbacks_[thisKey]));\r\n                    }\r\n                    else {\r\n                        // Exact match on each key.\r\n                        return util.every(this.callbacks_, function (eventType, cb) { return other.callbacks_[eventType] === cb; });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.hasAnyCallback = function () {\r\n        return this.callbacks_ !== null;\r\n    };\r\n    return ChildEventRegistration;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __referenceConstructor;\r\n/**\r\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\r\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\r\n *\r\n * Since every Firebase reference is a query, Firebase inherits from this object.\r\n */\r\nvar Query = /** @class */ (function () {\r\n    function Query(repo, path, queryParams_, orderByCalled_) {\r\n        this.repo = repo;\r\n        this.path = path;\r\n        this.queryParams_ = queryParams_;\r\n        this.orderByCalled_ = orderByCalled_;\r\n    }\r\n    Object.defineProperty(Query, \"__referenceConstructor\", {\r\n        get: function () {\r\n            util.assert(__referenceConstructor, 'Reference.ts has not been loaded');\r\n            return __referenceConstructor;\r\n        },\r\n        set: function (val) {\r\n            __referenceConstructor = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Validates start/end values for queries.\r\n     * @param {!QueryParams} params\r\n     * @private\r\n     */\r\n    Query.validateQueryEndpoints_ = function (params) {\r\n        var startNode = null;\r\n        var endNode = null;\r\n        if (params.hasStart()) {\r\n            startNode = params.getIndexStartValue();\r\n        }\r\n        if (params.hasEnd()) {\r\n            endNode = params.getIndexEndValue();\r\n        }\r\n        if (params.getIndex() === KEY_INDEX) {\r\n            var tooManyArgsError = 'Query: When ordering by key, you may only pass one argument to ' +\r\n                'startAt(), endAt(), or equalTo().';\r\n            var wrongArgTypeError = 'Query: When ordering by key, the argument passed to startAt(), endAt(),' +\r\n                'or equalTo() must be a string.';\r\n            if (params.hasStart()) {\r\n                var startName = params.getIndexStartName();\r\n                if (startName != MIN_NAME) {\r\n                    throw new Error(tooManyArgsError);\r\n                }\r\n                else if (typeof startNode !== 'string') {\r\n                    throw new Error(wrongArgTypeError);\r\n                }\r\n            }\r\n            if (params.hasEnd()) {\r\n                var endName = params.getIndexEndName();\r\n                if (endName != MAX_NAME) {\r\n                    throw new Error(tooManyArgsError);\r\n                }\r\n                else if (typeof endNode !== 'string') {\r\n                    throw new Error(wrongArgTypeError);\r\n                }\r\n            }\r\n        }\r\n        else if (params.getIndex() === PRIORITY_INDEX) {\r\n            if ((startNode != null && !isValidPriority(startNode)) ||\r\n                (endNode != null && !isValidPriority(endNode))) {\r\n                throw new Error('Query: When ordering by priority, the first argument passed to startAt(), ' +\r\n                    'endAt(), or equalTo() must be a valid priority value (null, a number, or a string).');\r\n            }\r\n        }\r\n        else {\r\n            util.assert(params.getIndex() instanceof PathIndex ||\r\n                params.getIndex() === VALUE_INDEX, 'unknown index type.');\r\n            if ((startNode != null && typeof startNode === 'object') ||\r\n                (endNode != null && typeof endNode === 'object')) {\r\n                throw new Error('Query: First argument passed to startAt(), endAt(), or equalTo() cannot be ' +\r\n                    'an object.');\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Validates that limit* has been called with the correct combination of parameters\r\n     * @param {!QueryParams} params\r\n     * @private\r\n     */\r\n    Query.validateLimit_ = function (params) {\r\n        if (params.hasStart() &&\r\n            params.hasEnd() &&\r\n            params.hasLimit() &&\r\n            !params.hasAnchoredLimit()) {\r\n            throw new Error(\"Query: Can't combine startAt(), endAt(), and limit(). Use limitToFirst() or limitToLast() instead.\");\r\n        }\r\n    };\r\n    /**\r\n     * Validates that no other order by call has been made\r\n     * @param {!string} fnName\r\n     * @private\r\n     */\r\n    Query.prototype.validateNoPreviousOrderByCall_ = function (fnName) {\r\n        if (this.orderByCalled_ === true) {\r\n            throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\r\n        }\r\n    };\r\n    /**\r\n     * @return {!QueryParams}\r\n     */\r\n    Query.prototype.getQueryParams = function () {\r\n        return this.queryParams_;\r\n    };\r\n    /**\r\n     * @return {!Reference}\r\n     */\r\n    Query.prototype.getRef = function () {\r\n        util.validateArgCount('Query.ref', 0, 0, arguments.length);\r\n        // This is a slight hack. We cannot goog.require('fb.api.Firebase'), since Firebase requires fb.api.Query.\r\n        // However, we will always export 'Firebase' to the global namespace, so it's guaranteed to exist by the time this\r\n        // method gets called.\r\n        return new Query.__referenceConstructor(this.repo, this.path);\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @param {!function(DataSnapshot, string=)} callback\r\n     * @param {(function(Error)|Object)=} cancelCallbackOrContext\r\n     * @param {Object=} context\r\n     * @return {!function(DataSnapshot, string=)}\r\n     */\r\n    Query.prototype.on = function (eventType, callback, cancelCallbackOrContext, context) {\r\n        util.validateArgCount('Query.on', 2, 4, arguments.length);\r\n        validateEventType('Query.on', 1, eventType, false);\r\n        util.validateCallback('Query.on', 2, callback, false);\r\n        var ret = Query.getCancelAndContextArgs_('Query.on', cancelCallbackOrContext, context);\r\n        if (eventType === 'value') {\r\n            this.onValueEvent(callback, ret.cancel, ret.context);\r\n        }\r\n        else {\r\n            var callbacks = {};\r\n            callbacks[eventType] = callback;\r\n            this.onChildEvent(callbacks, ret.cancel, ret.context);\r\n        }\r\n        return callback;\r\n    };\r\n    /**\r\n     * @param {!function(!DataSnapshot)} callback\r\n     * @param {?function(Error)} cancelCallback\r\n     * @param {?Object} context\r\n     * @protected\r\n     */\r\n    Query.prototype.onValueEvent = function (callback, cancelCallback, context) {\r\n        var container = new ValueEventRegistration(callback, cancelCallback || null, context || null);\r\n        this.repo.addEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * @param {!Object.<string, !function(!DataSnapshot, ?string)>} callbacks\r\n     * @param {?function(Error)} cancelCallback\r\n     * @param {?Object} context\r\n     * @protected\r\n     */\r\n    Query.prototype.onChildEvent = function (callbacks, cancelCallback, context) {\r\n        var container = new ChildEventRegistration(callbacks, cancelCallback, context);\r\n        this.repo.addEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * @param {string=} eventType\r\n     * @param {(function(!DataSnapshot, ?string=))=} callback\r\n     * @param {Object=} context\r\n     */\r\n    Query.prototype.off = function (eventType, callback, context) {\r\n        util.validateArgCount('Query.off', 0, 3, arguments.length);\r\n        validateEventType('Query.off', 1, eventType, true);\r\n        util.validateCallback('Query.off', 2, callback, true);\r\n        util.validateContextObject('Query.off', 3, context, true);\r\n        var container = null;\r\n        var callbacks = null;\r\n        if (eventType === 'value') {\r\n            var valueCallback = callback || null;\r\n            container = new ValueEventRegistration(valueCallback, null, context || null);\r\n        }\r\n        else if (eventType) {\r\n            if (callback) {\r\n                callbacks = {};\r\n                callbacks[eventType] = callback;\r\n            }\r\n            container = new ChildEventRegistration(callbacks, null, context || null);\r\n        }\r\n        this.repo.removeEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * Attaches a listener, waits for the first event, and then removes the listener\r\n     * @param {!string} eventType\r\n     * @param {!function(!DataSnapshot, string=)} userCallback\r\n     * @param cancelOrContext\r\n     * @param context\r\n     * @return {!firebase.Promise}\r\n     */\r\n    Query.prototype.once = function (eventType, userCallback, cancelOrContext, context) {\r\n        var _this = this;\r\n        util.validateArgCount('Query.once', 1, 4, arguments.length);\r\n        validateEventType('Query.once', 1, eventType, false);\r\n        util.validateCallback('Query.once', 2, userCallback, true);\r\n        var ret = Query.getCancelAndContextArgs_('Query.once', cancelOrContext, context);\r\n        // TODO: Implement this more efficiently (in particular, use 'get' wire protocol for 'value' event)\r\n        // TODO: consider actually wiring the callbacks into the promise. We cannot do this without a breaking change\r\n        // because the API currently expects callbacks will be called synchronously if the data is cached, but this is\r\n        // against the Promise specification.\r\n        var firstCall = true;\r\n        var deferred = new util.Deferred();\r\n        // A dummy error handler in case a user wasn't expecting promises\r\n        deferred.promise.catch(function () { });\r\n        var onceCallback = function (snapshot) {\r\n            // NOTE: Even though we unsubscribe, we may get called multiple times if a single action (e.g. set() with JSON)\r\n            // triggers multiple events (e.g. child_added or child_changed).\r\n            if (firstCall) {\r\n                firstCall = false;\r\n                _this.off(eventType, onceCallback);\r\n                if (userCallback) {\r\n                    userCallback.bind(ret.context)(snapshot);\r\n                }\r\n                deferred.resolve(snapshot);\r\n            }\r\n        };\r\n        this.on(eventType, onceCallback, \r\n        /*cancel=*/ function (err) {\r\n            _this.off(eventType, onceCallback);\r\n            if (ret.cancel)\r\n                ret.cancel.bind(ret.context)(err);\r\n            deferred.reject(err);\r\n        });\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the start of the window.\r\n     * @param {!number} limit\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.limitToFirst = function (limit) {\r\n        util.validateArgCount('Query.limitToFirst', 1, 1, arguments.length);\r\n        if (typeof limit !== 'number' ||\r\n            Math.floor(limit) !== limit ||\r\n            limit <= 0) {\r\n            throw new Error('Query.limitToFirst: First argument must be a positive integer.');\r\n        }\r\n        if (this.queryParams_.hasLimit()) {\r\n            throw new Error('Query.limitToFirst: Limit was already set (by another call to limit, ' +\r\n                'limitToFirst, or limitToLast).');\r\n        }\r\n        return new Query(this.repo, this.path, this.queryParams_.limitToFirst(limit), this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the end of the window.\r\n     * @param {!number} limit\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.limitToLast = function (limit) {\r\n        util.validateArgCount('Query.limitToLast', 1, 1, arguments.length);\r\n        if (typeof limit !== 'number' ||\r\n            Math.floor(limit) !== limit ||\r\n            limit <= 0) {\r\n            throw new Error('Query.limitToLast: First argument must be a positive integer.');\r\n        }\r\n        if (this.queryParams_.hasLimit()) {\r\n            throw new Error('Query.limitToLast: Limit was already set (by another call to limit, ' +\r\n                'limitToFirst, or limitToLast).');\r\n        }\r\n        return new Query(this.repo, this.path, this.queryParams_.limitToLast(limit), this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Given a child path, return a new query ordered by the specified grandchild path.\r\n     * @param {!string} path\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByChild = function (path) {\r\n        util.validateArgCount('Query.orderByChild', 1, 1, arguments.length);\r\n        if (path === '$key') {\r\n            throw new Error('Query.orderByChild: \"$key\" is invalid.  Use Query.orderByKey() instead.');\r\n        }\r\n        else if (path === '$priority') {\r\n            throw new Error('Query.orderByChild: \"$priority\" is invalid.  Use Query.orderByPriority() instead.');\r\n        }\r\n        else if (path === '$value') {\r\n            throw new Error('Query.orderByChild: \"$value\" is invalid.  Use Query.orderByValue() instead.');\r\n        }\r\n        validatePathString('Query.orderByChild', 1, path, false);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByChild');\r\n        var parsedPath = new Path(path);\r\n        if (parsedPath.isEmpty()) {\r\n            throw new Error('Query.orderByChild: cannot pass in empty path.  Use Query.orderByValue() instead.');\r\n        }\r\n        var index = new PathIndex(parsedPath);\r\n        var newParams = this.queryParams_.orderBy(index);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the KeyIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByKey = function () {\r\n        util.validateArgCount('Query.orderByKey', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByKey');\r\n        var newParams = this.queryParams_.orderBy(KEY_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the PriorityIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByPriority = function () {\r\n        util.validateArgCount('Query.orderByPriority', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByPriority');\r\n        var newParams = this.queryParams_.orderBy(PRIORITY_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the ValueIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByValue = function () {\r\n        util.validateArgCount('Query.orderByValue', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByValue');\r\n        var newParams = this.queryParams_.orderBy(VALUE_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * @param {number|string|boolean|null} value\r\n     * @param {?string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.startAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        util.validateArgCount('Query.startAt', 0, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.startAt', 1, value, this.path, true);\r\n        validateKey('Query.startAt', 2, name, true);\r\n        var newParams = this.queryParams_.startAt(value, name);\r\n        Query.validateLimit_(newParams);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        if (this.queryParams_.hasStart()) {\r\n            throw new Error('Query.startAt: Starting point was already set (by another call to startAt ' +\r\n                'or equalTo).');\r\n        }\r\n        // Calling with no params tells us to start at the beginning.\r\n        if (value === undefined) {\r\n            value = null;\r\n            name = null;\r\n        }\r\n        return new Query(this.repo, this.path, newParams, this.orderByCalled_);\r\n    };\r\n    /**\r\n     * @param {number|string|boolean|null} value\r\n     * @param {?string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.endAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        util.validateArgCount('Query.endAt', 0, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.endAt', 1, value, this.path, true);\r\n        validateKey('Query.endAt', 2, name, true);\r\n        var newParams = this.queryParams_.endAt(value, name);\r\n        Query.validateLimit_(newParams);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        if (this.queryParams_.hasEnd()) {\r\n            throw new Error('Query.endAt: Ending point was already set (by another call to endAt or ' +\r\n                'equalTo).');\r\n        }\r\n        return new Query(this.repo, this.path, newParams, this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Load the selection of children with exactly the specified value, and, optionally,\r\n     * the specified name.\r\n     * @param {number|string|boolean|null} value\r\n     * @param {string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.equalTo = function (value, name) {\r\n        util.validateArgCount('Query.equalTo', 1, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.equalTo', 1, value, this.path, false);\r\n        validateKey('Query.equalTo', 2, name, true);\r\n        if (this.queryParams_.hasStart()) {\r\n            throw new Error('Query.equalTo: Starting point was already set (by another call to startAt or ' +\r\n                'equalTo).');\r\n        }\r\n        if (this.queryParams_.hasEnd()) {\r\n            throw new Error('Query.equalTo: Ending point was already set (by another call to endAt or ' +\r\n                'equalTo).');\r\n        }\r\n        return this.startAt(value, name).endAt(value, name);\r\n    };\r\n    /**\r\n     * @return {!string} URL for this location.\r\n     */\r\n    Query.prototype.toString = function () {\r\n        util.validateArgCount('Query.toString', 0, 0, arguments.length);\r\n        return this.repo.toString() + this.path.toUrlEncodedString();\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users.\r\n    Query.prototype.toJSON = function () {\r\n        // An optional spacer argument is unnecessary for a string.\r\n        util.validateArgCount('Query.toJSON', 0, 1, arguments.length);\r\n        return this.toString();\r\n    };\r\n    /**\r\n     * An object representation of the query parameters used by this Query.\r\n     * @return {!Object}\r\n     */\r\n    Query.prototype.queryObject = function () {\r\n        return this.queryParams_.getQueryObject();\r\n    };\r\n    /**\r\n     * @return {!string}\r\n     */\r\n    Query.prototype.queryIdentifier = function () {\r\n        var obj = this.queryObject();\r\n        var id = ObjectToUniqueKey(obj);\r\n        return id === '{}' ? 'default' : id;\r\n    };\r\n    /**\r\n     * Return true if this query and the provided query are equivalent; otherwise, return false.\r\n     * @param {Query} other\r\n     * @return {boolean}\r\n     */\r\n    Query.prototype.isEqual = function (other) {\r\n        util.validateArgCount('Query.isEqual', 1, 1, arguments.length);\r\n        if (!(other instanceof Query)) {\r\n            var error$$1 = 'Query.isEqual failed: First argument must be an instance of firebase.database.Query.';\r\n            throw new Error(error$$1);\r\n        }\r\n        var sameRepo = this.repo === other.repo;\r\n        var samePath = this.path.equals(other.path);\r\n        var sameQueryIdentifier = this.queryIdentifier() === other.queryIdentifier();\r\n        return sameRepo && samePath && sameQueryIdentifier;\r\n    };\r\n    /**\r\n     * Helper used by .on and .once to extract the context and or cancel arguments.\r\n     * @param {!string} fnName The function name (on or once)\r\n     * @param {(function(Error)|Object)=} cancelOrContext\r\n     * @param {Object=} context\r\n     * @return {{cancel: ?function(Error), context: ?Object}}\r\n     * @private\r\n     */\r\n    Query.getCancelAndContextArgs_ = function (fnName, cancelOrContext, context) {\r\n        var ret = { cancel: null, context: null };\r\n        if (cancelOrContext && context) {\r\n            ret.cancel = cancelOrContext;\r\n            util.validateCallback(fnName, 3, ret.cancel, true);\r\n            ret.context = context;\r\n            util.validateContextObject(fnName, 4, ret.context, true);\r\n        }\r\n        else if (cancelOrContext) {\r\n            // we have either a cancel callback or a context.\r\n            if (typeof cancelOrContext === 'object' && cancelOrContext !== null) {\r\n                // it's a context!\r\n                ret.context = cancelOrContext;\r\n            }\r\n            else if (typeof cancelOrContext === 'function') {\r\n                ret.cancel = cancelOrContext;\r\n            }\r\n            else {\r\n                throw new Error(util.errorPrefix(fnName, 3, true) +\r\n                    ' must either be a cancel callback or a context object.');\r\n            }\r\n        }\r\n        return ret;\r\n    };\r\n    Object.defineProperty(Query.prototype, \"ref\", {\r\n        get: function () {\r\n            return this.getRef();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Query;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Implements a set with a count of elements.\r\n *\r\n * @template K, V\r\n */\r\nvar CountedSet = /** @class */ (function () {\r\n    function CountedSet() {\r\n        this.set = {};\r\n    }\r\n    /**\r\n     * @param {!K} item\r\n     * @param {V} val\r\n     */\r\n    CountedSet.prototype.add = function (item, val) {\r\n        this.set[item] = val !== null ? val : true;\r\n    };\r\n    /**\r\n     * @param {!K} key\r\n     * @return {boolean}\r\n     */\r\n    CountedSet.prototype.contains = function (key) {\r\n        return util.contains(this.set, key);\r\n    };\r\n    /**\r\n     * @param {!K} item\r\n     * @return {V}\r\n     */\r\n    CountedSet.prototype.get = function (item) {\r\n        return this.contains(item) ? this.set[item] : undefined;\r\n    };\r\n    /**\r\n     * @param {!K} item\r\n     */\r\n    CountedSet.prototype.remove = function (item) {\r\n        delete this.set[item];\r\n    };\r\n    /**\r\n     * Deletes everything in the set\r\n     */\r\n    CountedSet.prototype.clear = function () {\r\n        this.set = {};\r\n    };\r\n    /**\r\n     * True if there's nothing in the set\r\n     * @return {boolean}\r\n     */\r\n    CountedSet.prototype.isEmpty = function () {\r\n        return util.isEmpty(this.set);\r\n    };\r\n    /**\r\n     * @return {number} The number of items in the set\r\n     */\r\n    CountedSet.prototype.count = function () {\r\n        return util.getCount(this.set);\r\n    };\r\n    /**\r\n     * Run a function on each k,v pair in the set\r\n     * @param {function(K, V)} fn\r\n     */\r\n    CountedSet.prototype.each = function (fn) {\r\n        util.forEach(this.set, function (k, v) { return fn(k, v); });\r\n    };\r\n    /**\r\n     * Mostly for debugging\r\n     * @return {Array.<K>} The keys present in this CountedSet\r\n     */\r\n    CountedSet.prototype.keys = function () {\r\n        var keys = [];\r\n        util.forEach(this.set, function (k) {\r\n            keys.push(k);\r\n        });\r\n        return keys;\r\n    };\r\n    return CountedSet;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper class to store a sparse set of snapshots.\r\n *\r\n * @constructor\r\n */\r\nvar SparseSnapshotTree = /** @class */ (function () {\r\n    function SparseSnapshotTree() {\r\n        /**\r\n         * @private\r\n         * @type {Node}\r\n         */\r\n        this.value_ = null;\r\n        /**\r\n         * @private\r\n         * @type {CountedSet}\r\n         */\r\n        this.children_ = null;\r\n    }\r\n    /**\r\n     * Gets the node stored at the given path if one exists.\r\n     *\r\n     * @param {!Path} path Path to look up snapshot for.\r\n     * @return {?Node} The retrieved node, or null.\r\n     */\r\n    SparseSnapshotTree.prototype.find = function (path) {\r\n        if (this.value_ != null) {\r\n            return this.value_.getChild(path);\r\n        }\r\n        else if (!path.isEmpty() && this.children_ != null) {\r\n            var childKey = path.getFront();\r\n            path = path.popFront();\r\n            if (this.children_.contains(childKey)) {\r\n                var childTree = this.children_.get(childKey);\r\n                return childTree.find(path);\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Stores the given node at the specified path. If there is already a node\r\n     * at a shallower path, it merges the new data into that snapshot node.\r\n     *\r\n     * @param {!Path} path Path to look up snapshot for.\r\n     * @param {!Node} data The new data, or null.\r\n     */\r\n    SparseSnapshotTree.prototype.remember = function (path, data) {\r\n        if (path.isEmpty()) {\r\n            this.value_ = data;\r\n            this.children_ = null;\r\n        }\r\n        else if (this.value_ !== null) {\r\n            this.value_ = this.value_.updateChild(path, data);\r\n        }\r\n        else {\r\n            if (this.children_ == null) {\r\n                this.children_ = new CountedSet();\r\n            }\r\n            var childKey = path.getFront();\r\n            if (!this.children_.contains(childKey)) {\r\n                this.children_.add(childKey, new SparseSnapshotTree());\r\n            }\r\n            var child = this.children_.get(childKey);\r\n            path = path.popFront();\r\n            child.remember(path, data);\r\n        }\r\n    };\r\n    /**\r\n     * Purge the data at path from the cache.\r\n     *\r\n     * @param {!Path} path Path to look up snapshot for.\r\n     * @return {boolean} True if this node should now be removed.\r\n     */\r\n    SparseSnapshotTree.prototype.forget = function (path) {\r\n        if (path.isEmpty()) {\r\n            this.value_ = null;\r\n            this.children_ = null;\r\n            return true;\r\n        }\r\n        else {\r\n            if (this.value_ !== null) {\r\n                if (this.value_.isLeafNode()) {\r\n                    // We're trying to forget a node that doesn't exist\r\n                    return false;\r\n                }\r\n                else {\r\n                    var value = this.value_;\r\n                    this.value_ = null;\r\n                    var self_1 = this;\r\n                    value.forEachChild(PRIORITY_INDEX, function (key, tree) {\r\n                        self_1.remember(new Path(key), tree);\r\n                    });\r\n                    return this.forget(path);\r\n                }\r\n            }\r\n            else if (this.children_ !== null) {\r\n                var childKey = path.getFront();\r\n                path = path.popFront();\r\n                if (this.children_.contains(childKey)) {\r\n                    var safeToRemove = this.children_.get(childKey).forget(path);\r\n                    if (safeToRemove) {\r\n                        this.children_.remove(childKey);\r\n                    }\r\n                }\r\n                if (this.children_.isEmpty()) {\r\n                    this.children_ = null;\r\n                    return true;\r\n                }\r\n                else {\r\n                    return false;\r\n                }\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Recursively iterates through all of the stored tree and calls the\r\n     * callback on each one.\r\n     *\r\n     * @param {!Path} prefixPath Path to look up node for.\r\n     * @param {!Function} func The function to invoke for each tree.\r\n     */\r\n    SparseSnapshotTree.prototype.forEachTree = function (prefixPath, func) {\r\n        if (this.value_ !== null) {\r\n            func(prefixPath, this.value_);\r\n        }\r\n        else {\r\n            this.forEachChild(function (key, tree) {\r\n                var path = new Path(prefixPath.toString() + '/' + key);\r\n                tree.forEachTree(path, func);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Iterates through each immediate child and triggers the callback.\r\n     *\r\n     * @param {!Function} func The function to invoke for each child.\r\n     */\r\n    SparseSnapshotTree.prototype.forEachChild = function (func) {\r\n        if (this.children_ !== null) {\r\n            this.children_.each(function (key, tree) {\r\n                func(key, tree);\r\n            });\r\n        }\r\n    };\r\n    return SparseSnapshotTree;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Generate placeholders for deferred values.\r\n * @param {?Object} values\r\n * @return {!Object}\r\n */\r\nvar generateWithValues = function (values) {\r\n    values = values || {};\r\n    values['timestamp'] = values['timestamp'] || new Date().getTime();\r\n    return values;\r\n};\r\n/**\r\n * Value to use when firing local events. When writing server values, fire\r\n * local events with an approximate value, otherwise return value as-is.\r\n * @param {(Object|string|number|boolean)} value\r\n * @param {!Object} serverValues\r\n * @return {!(string|number|boolean)}\r\n */\r\nvar resolveDeferredValue = function (value, serverValues) {\r\n    if (!value || typeof value !== 'object') {\r\n        return value;\r\n    }\r\n    else {\r\n        util.assert('.sv' in value, 'Unexpected leaf node or priority contents');\r\n        return serverValues[value['.sv']];\r\n    }\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the tree with the\r\n * specified generated replacement values.\r\n * @param {!SparseSnapshotTree} tree\r\n * @param {!Object} serverValues\r\n * @return {!SparseSnapshotTree}\r\n */\r\nvar resolveDeferredValueTree = function (tree, serverValues) {\r\n    var resolvedTree = new SparseSnapshotTree();\r\n    tree.forEachTree(new Path(''), function (path, node) {\r\n        resolvedTree.remember(path, resolveDeferredValueSnapshot(node, serverValues));\r\n    });\r\n    return resolvedTree;\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the node with the\r\n * specified generated replacement values.  If there are no server values in the node,\r\n * it'll be returned as-is.\r\n * @param {!Node} node\r\n * @param {!Object} serverValues\r\n * @return {!Node}\r\n */\r\nvar resolveDeferredValueSnapshot = function (node, serverValues) {\r\n    var rawPri = node.getPriority().val();\r\n    var priority = resolveDeferredValue(rawPri, serverValues);\r\n    var newNode;\r\n    if (node.isLeafNode()) {\r\n        var leafNode = node;\r\n        var value = resolveDeferredValue(leafNode.getValue(), serverValues);\r\n        if (value !== leafNode.getValue() ||\r\n            priority !== leafNode.getPriority().val()) {\r\n            return new LeafNode(value, nodeFromJSON$1(priority));\r\n        }\r\n        else {\r\n            return node;\r\n        }\r\n    }\r\n    else {\r\n        var childrenNode = node;\r\n        newNode = childrenNode;\r\n        if (priority !== childrenNode.getPriority().val()) {\r\n            newNode = newNode.updatePriority(new LeafNode(priority));\r\n        }\r\n        childrenNode.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n            var newChildNode = resolveDeferredValueSnapshot(childNode, serverValues);\r\n            if (newChildNode !== childNode) {\r\n                newNode = newNode.updateImmediateChild(childName, newChildNode);\r\n            }\r\n        });\r\n        return newNode;\r\n    }\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @enum\r\n */\r\nvar OperationType;\r\n(function (OperationType) {\r\n    OperationType[OperationType[\"OVERWRITE\"] = 0] = \"OVERWRITE\";\r\n    OperationType[OperationType[\"MERGE\"] = 1] = \"MERGE\";\r\n    OperationType[OperationType[\"ACK_USER_WRITE\"] = 2] = \"ACK_USER_WRITE\";\r\n    OperationType[OperationType[\"LISTEN_COMPLETE\"] = 3] = \"LISTEN_COMPLETE\";\r\n})(OperationType || (OperationType = {}));\r\n/**\r\n * @param {boolean} fromUser\r\n * @param {boolean} fromServer\r\n * @param {?string} queryId\r\n * @param {boolean} tagged\r\n * @constructor\r\n */\r\nvar OperationSource = /** @class */ (function () {\r\n    function OperationSource(fromUser, fromServer, queryId, tagged) {\r\n        this.fromUser = fromUser;\r\n        this.fromServer = fromServer;\r\n        this.queryId = queryId;\r\n        this.tagged = tagged;\r\n        util.assert(!tagged || fromServer, 'Tagged queries must be from server.');\r\n    }\r\n    /**\r\n     * @const\r\n     * @type {!OperationSource}\r\n     */\r\n    OperationSource.User = new OperationSource(\r\n    /*fromUser=*/ true, false, null, \r\n    /*tagged=*/ false);\r\n    /**\r\n     * @const\r\n     * @type {!OperationSource}\r\n     */\r\n    OperationSource.Server = new OperationSource(false, \r\n    /*fromServer=*/ true, null, \r\n    /*tagged=*/ false);\r\n    /**\r\n     * @param {string} queryId\r\n     * @return {!OperationSource}\r\n     */\r\n    OperationSource.forServerTaggedQuery = function (queryId) {\r\n        return new OperationSource(false, \r\n        /*fromServer=*/ true, queryId, \r\n        /*tagged=*/ true);\r\n    };\r\n    return OperationSource;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar AckUserWrite = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!ImmutableTree<!boolean>} affectedTree A tree containing true for each affected path. Affected paths can't overlap.\r\n     * @param {!boolean} revert\r\n     */\r\n    function AckUserWrite(\r\n    /**@inheritDoc */ path, \r\n    /**@inheritDoc */ affectedTree, \r\n    /**@inheritDoc */ revert) {\r\n        this.path = path;\r\n        this.affectedTree = affectedTree;\r\n        this.revert = revert;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.ACK_USER_WRITE;\r\n        /** @inheritDoc */\r\n        this.source = OperationSource.User;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    AckUserWrite.prototype.operationForChild = function (childName) {\r\n        if (!this.path.isEmpty()) {\r\n            util.assert(this.path.getFront() === childName, 'operationForChild called for unrelated child.');\r\n            return new AckUserWrite(this.path.popFront(), this.affectedTree, this.revert);\r\n        }\r\n        else if (this.affectedTree.value != null) {\r\n            util.assert(this.affectedTree.children.isEmpty(), 'affectedTree should not have overlapping affected paths.');\r\n            // All child locations are affected as well; just return same operation.\r\n            return this;\r\n        }\r\n        else {\r\n            var childTree = this.affectedTree.subtree(new Path(childName));\r\n            return new AckUserWrite(Path.Empty, childTree, this.revert);\r\n        }\r\n    };\r\n    return AckUserWrite;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar emptyChildrenSingleton;\r\n/**\r\n * Singleton empty children collection.\r\n *\r\n * @const\r\n * @type {!SortedMap.<string, !ImmutableTree.<?>>}\r\n */\r\nvar EmptyChildren = function () {\r\n    if (!emptyChildrenSingleton) {\r\n        emptyChildrenSingleton = new SortedMap(stringCompare);\r\n    }\r\n    return emptyChildrenSingleton;\r\n};\r\n/**\r\n * A tree with immutable elements.\r\n */\r\nvar ImmutableTree = /** @class */ (function () {\r\n    /**\r\n     * @template T\r\n     * @param {?T} value\r\n     * @param {SortedMap.<string, !ImmutableTree.<T>>=} children\r\n     */\r\n    function ImmutableTree(value, children) {\r\n        if (children === void 0) { children = EmptyChildren(); }\r\n        this.value = value;\r\n        this.children = children;\r\n    }\r\n    /**\r\n     * @template T\r\n     * @param {!Object.<string, !T>} obj\r\n     * @return {!ImmutableTree.<!T>}\r\n     */\r\n    ImmutableTree.fromObject = function (obj) {\r\n        var tree = ImmutableTree.Empty;\r\n        util.forEach(obj, function (childPath, childSnap) {\r\n            tree = tree.set(new Path(childPath), childSnap);\r\n        });\r\n        return tree;\r\n    };\r\n    /**\r\n     * True if the value is empty and there are no children\r\n     * @return {boolean}\r\n     */\r\n    ImmutableTree.prototype.isEmpty = function () {\r\n        return this.value === null && this.children.isEmpty();\r\n    };\r\n    /**\r\n     * Given a path and predicate, return the first node and the path to that node\r\n     * where the predicate returns true.\r\n     *\r\n     * TODO Do a perf test -- If we're creating a bunch of {path: value:} objects\r\n     * on the way back out, it may be better to pass down a pathSoFar obj.\r\n     *\r\n     * @param {!Path} relativePath The remainder of the path\r\n     * @param {function(T):boolean} predicate The predicate to satisfy to return a\r\n     *   node\r\n     * @return {?{path:!Path, value:!T}}\r\n     */\r\n    ImmutableTree.prototype.findRootMostMatchingPathAndValue = function (relativePath, predicate) {\r\n        if (this.value != null && predicate(this.value)) {\r\n            return { path: Path.Empty, value: this.value };\r\n        }\r\n        else {\r\n            if (relativePath.isEmpty()) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = relativePath.getFront();\r\n                var child = this.children.get(front);\r\n                if (child !== null) {\r\n                    var childExistingPathAndValue = child.findRootMostMatchingPathAndValue(relativePath.popFront(), predicate);\r\n                    if (childExistingPathAndValue != null) {\r\n                        var fullPath = new Path(front).child(childExistingPathAndValue.path);\r\n                        return { path: fullPath, value: childExistingPathAndValue.value };\r\n                    }\r\n                    else {\r\n                        return null;\r\n                    }\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Find, if it exists, the shortest subpath of the given path that points a defined\r\n     * value in the tree\r\n     * @param {!Path} relativePath\r\n     * @return {?{path: !Path, value: !T}}\r\n     */\r\n    ImmutableTree.prototype.findRootMostValueAndPath = function (relativePath) {\r\n        return this.findRootMostMatchingPathAndValue(relativePath, function () { return true; });\r\n    };\r\n    /**\r\n     * @param {!Path} relativePath\r\n     * @return {!ImmutableTree.<T>} The subtree at the given path\r\n     */\r\n    ImmutableTree.prototype.subtree = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var childTree = this.children.get(front);\r\n            if (childTree !== null) {\r\n                return childTree.subtree(relativePath.popFront());\r\n            }\r\n            else {\r\n                return ImmutableTree.Empty;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets a value at the specified path.\r\n     *\r\n     * @param {!Path} relativePath Path to set value at.\r\n     * @param {?T} toSet Value to set.\r\n     * @return {!ImmutableTree.<T>} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.set = function (relativePath, toSet) {\r\n        if (relativePath.isEmpty()) {\r\n            return new ImmutableTree(toSet, this.children);\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front) || ImmutableTree.Empty;\r\n            var newChild = child.set(relativePath.popFront(), toSet);\r\n            var newChildren = this.children.insert(front, newChild);\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Removes the value at the specified path.\r\n     *\r\n     * @param {!Path} relativePath Path to value to remove.\r\n     * @return {!ImmutableTree.<T>} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.remove = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            if (this.children.isEmpty()) {\r\n                return ImmutableTree.Empty;\r\n            }\r\n            else {\r\n                return new ImmutableTree(null, this.children);\r\n            }\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                var newChild = child.remove(relativePath.popFront());\r\n                var newChildren = void 0;\r\n                if (newChild.isEmpty()) {\r\n                    newChildren = this.children.remove(front);\r\n                }\r\n                else {\r\n                    newChildren = this.children.insert(front, newChild);\r\n                }\r\n                if (this.value === null && newChildren.isEmpty()) {\r\n                    return ImmutableTree.Empty;\r\n                }\r\n                else {\r\n                    return new ImmutableTree(this.value, newChildren);\r\n                }\r\n            }\r\n            else {\r\n                return this;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Gets a value from the tree.\r\n     *\r\n     * @param {!Path} relativePath Path to get value for.\r\n     * @return {?T} Value at path, or null.\r\n     */\r\n    ImmutableTree.prototype.get = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            return this.value;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                return child.get(relativePath.popFront());\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Replace the subtree at the specified path with the given new tree.\r\n     *\r\n     * @param {!Path} relativePath Path to replace subtree for.\r\n     * @param {!ImmutableTree} newTree New tree.\r\n     * @return {!ImmutableTree} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.setTree = function (relativePath, newTree) {\r\n        if (relativePath.isEmpty()) {\r\n            return newTree;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front) || ImmutableTree.Empty;\r\n            var newChild = child.setTree(relativePath.popFront(), newTree);\r\n            var newChildren = void 0;\r\n            if (newChild.isEmpty()) {\r\n                newChildren = this.children.remove(front);\r\n            }\r\n            else {\r\n                newChildren = this.children.insert(front, newChild);\r\n            }\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Performs a depth first fold on this tree. Transforms a tree into a single\r\n     * value, given a function that operates on the path to a node, an optional\r\n     * current value, and a map of child names to folded subtrees\r\n     * @template V\r\n     * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n     * @return {V}\r\n     */\r\n    ImmutableTree.prototype.fold = function (fn) {\r\n        return this.fold_(Path.Empty, fn);\r\n    };\r\n    /**\r\n     * Recursive helper for public-facing fold() method\r\n     * @template V\r\n     * @param {!Path} pathSoFar\r\n     * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n     * @return {V}\r\n     * @private\r\n     */\r\n    ImmutableTree.prototype.fold_ = function (pathSoFar, fn) {\r\n        var accum = {};\r\n        this.children.inorderTraversal(function (childKey, childTree) {\r\n            accum[childKey] = childTree.fold_(pathSoFar.child(childKey), fn);\r\n        });\r\n        return fn(pathSoFar, this.value, accum);\r\n    };\r\n    /**\r\n     * Find the first matching value on the given path. Return the result of applying f to it.\r\n     * @template V\r\n     * @param {!Path} path\r\n     * @param {!function(!Path, !T):?V} f\r\n     * @return {?V}\r\n     */\r\n    ImmutableTree.prototype.findOnPath = function (path, f) {\r\n        return this.findOnPath_(path, Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.findOnPath_ = function (pathToFollow, pathSoFar, f) {\r\n        var result = this.value ? f(pathSoFar, this.value) : false;\r\n        if (result) {\r\n            return result;\r\n        }\r\n        else {\r\n            if (pathToFollow.isEmpty()) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = pathToFollow.getFront();\r\n                var nextChild = this.children.get(front);\r\n                if (nextChild) {\r\n                    return nextChild.findOnPath_(pathToFollow.popFront(), pathSoFar.child(front), f);\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!function(!Path, !T)} f\r\n     * @returns {!ImmutableTree.<T>}\r\n     */\r\n    ImmutableTree.prototype.foreachOnPath = function (path, f) {\r\n        return this.foreachOnPath_(path, Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.foreachOnPath_ = function (pathToFollow, currentRelativePath, f) {\r\n        if (pathToFollow.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            if (this.value) {\r\n                f(currentRelativePath, this.value);\r\n            }\r\n            var front = pathToFollow.getFront();\r\n            var nextChild = this.children.get(front);\r\n            if (nextChild) {\r\n                return nextChild.foreachOnPath_(pathToFollow.popFront(), currentRelativePath.child(front), f);\r\n            }\r\n            else {\r\n                return ImmutableTree.Empty;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Calls the given function for each node in the tree that has a value.\r\n     *\r\n     * @param {function(!Path, !T)} f A function to be called with\r\n     *   the path from the root of the tree to a node, and the value at that node.\r\n     *   Called in depth-first order.\r\n     */\r\n    ImmutableTree.prototype.foreach = function (f) {\r\n        this.foreach_(Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.foreach_ = function (currentRelativePath, f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            childTree.foreach_(currentRelativePath.child(childName), f);\r\n        });\r\n        if (this.value) {\r\n            f(currentRelativePath, this.value);\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {function(string, !T)} f\r\n     */\r\n    ImmutableTree.prototype.foreachChild = function (f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            if (childTree.value) {\r\n                f(childName, childTree.value);\r\n            }\r\n        });\r\n    };\r\n    ImmutableTree.Empty = new ImmutableTree(null);\r\n    return ImmutableTree;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar ListenComplete = /** @class */ (function () {\r\n    function ListenComplete(source, path) {\r\n        this.source = source;\r\n        this.path = path;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.LISTEN_COMPLETE;\r\n    }\r\n    ListenComplete.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            return new ListenComplete(this.source, Path.Empty);\r\n        }\r\n        else {\r\n            return new ListenComplete(this.source, this.path.popFront());\r\n        }\r\n    };\r\n    return ListenComplete;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!Node} snap\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar Overwrite = /** @class */ (function () {\r\n    function Overwrite(source, path, snap) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.snap = snap;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.OVERWRITE;\r\n    }\r\n    Overwrite.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            return new Overwrite(this.source, Path.Empty, this.snap.getImmediateChild(childName));\r\n        }\r\n        else {\r\n            return new Overwrite(this.source, this.path.popFront(), this.snap);\r\n        }\r\n    };\r\n    return Overwrite;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!ImmutableTree.<!Node>} children\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar Merge = /** @class */ (function () {\r\n    function Merge(\r\n    /**@inheritDoc */ source, \r\n    /**@inheritDoc */ path, \r\n    /**@inheritDoc */ children) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.children = children;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.MERGE;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Merge.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            var childTree = this.children.subtree(new Path(childName));\r\n            if (childTree.isEmpty()) {\r\n                // This child is unaffected\r\n                return null;\r\n            }\r\n            else if (childTree.value) {\r\n                // We have a snapshot for the child in question.  This becomes an overwrite of the child.\r\n                return new Overwrite(this.source, Path.Empty, childTree.value);\r\n            }\r\n            else {\r\n                // This is a merge at a deeper level\r\n                return new Merge(this.source, Path.Empty, childTree);\r\n            }\r\n        }\r\n        else {\r\n            util.assert(this.path.getFront() === childName, \"Can't get a merge for a child not on the path of the operation\");\r\n            return new Merge(this.source, this.path.popFront(), this.children);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Merge.prototype.toString = function () {\r\n        return ('Operation(' +\r\n            this.path +\r\n            ': ' +\r\n            this.source.toString() +\r\n            ' merge: ' +\r\n            this.children.toString() +\r\n            ')');\r\n    };\r\n    return Merge;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\r\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\r\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\r\n * whether a node potentially had children removed due to a filter.\r\n */\r\nvar CacheNode = /** @class */ (function () {\r\n    /**\r\n     * @param {!Node} node_\r\n     * @param {boolean} fullyInitialized_\r\n     * @param {boolean} filtered_\r\n     */\r\n    function CacheNode(node_, fullyInitialized_, filtered_) {\r\n        this.node_ = node_;\r\n        this.fullyInitialized_ = fullyInitialized_;\r\n        this.filtered_ = filtered_;\r\n    }\r\n    /**\r\n     * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isFullyInitialized = function () {\r\n        return this.fullyInitialized_;\r\n    };\r\n    /**\r\n     * Returns whether this node is potentially missing children due to a filter applied to the node\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isFiltered = function () {\r\n        return this.filtered_;\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isCompleteForPath = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this.isFullyInitialized() && !this.filtered_;\r\n        }\r\n        var childKey = path.getFront();\r\n        return this.isCompleteForChild(childKey);\r\n    };\r\n    /**\r\n     * @param {!string} key\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isCompleteForChild = function (key) {\r\n        return ((this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key));\r\n    };\r\n    /**\r\n     * @return {!Node}\r\n     */\r\n    CacheNode.prototype.getNode = function () {\r\n        return this.node_;\r\n    };\r\n    return CacheNode;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Stores the data we have cached for a view.\r\n *\r\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\r\n *\r\n * @constructor\r\n */\r\nvar ViewCache = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!CacheNode} eventCache_\r\n     * @param {!CacheNode} serverCache_\r\n     */\r\n    function ViewCache(eventCache_, serverCache_) {\r\n        this.eventCache_ = eventCache_;\r\n        this.serverCache_ = serverCache_;\r\n    }\r\n    /**\r\n     * @param {!Node} eventSnap\r\n     * @param {boolean} complete\r\n     * @param {boolean} filtered\r\n     * @return {!ViewCache}\r\n     */\r\n    ViewCache.prototype.updateEventSnap = function (eventSnap, complete, filtered) {\r\n        return new ViewCache(new CacheNode(eventSnap, complete, filtered), this.serverCache_);\r\n    };\r\n    /**\r\n     * @param {!Node} serverSnap\r\n     * @param {boolean} complete\r\n     * @param {boolean} filtered\r\n     * @return {!ViewCache}\r\n     */\r\n    ViewCache.prototype.updateServerSnap = function (serverSnap, complete, filtered) {\r\n        return new ViewCache(this.eventCache_, new CacheNode(serverSnap, complete, filtered));\r\n    };\r\n    /**\r\n     * @return {!CacheNode}\r\n     */\r\n    ViewCache.prototype.getEventCache = function () {\r\n        return this.eventCache_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    ViewCache.prototype.getCompleteEventSnap = function () {\r\n        return this.eventCache_.isFullyInitialized()\r\n            ? this.eventCache_.getNode()\r\n            : null;\r\n    };\r\n    /**\r\n     * @return {!CacheNode}\r\n     */\r\n    ViewCache.prototype.getServerCache = function () {\r\n        return this.serverCache_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    ViewCache.prototype.getCompleteServerSnap = function () {\r\n        return this.serverCache_.isFullyInitialized()\r\n            ? this.serverCache_.getNode()\r\n            : null;\r\n    };\r\n    /**\r\n     * @const\r\n     * @type {ViewCache}\r\n     */\r\n    ViewCache.Empty = new ViewCache(new CacheNode(ChildrenNode.EMPTY_NODE, \r\n    /*fullyInitialized=*/ false, \r\n    /*filtered=*/ false), new CacheNode(ChildrenNode.EMPTY_NODE, \r\n    /*fullyInitialized=*/ false, \r\n    /*filtered=*/ false));\r\n    return ViewCache;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @struct\r\n * @param {!string} type The event type\r\n * @param {!Node} snapshotNode The data\r\n * @param {string=} childName The name for this child, if it's a child event\r\n * @param {Node=} oldSnap Used for intermediate processing of child changed events\r\n * @param {string=} prevName The name for the previous child, if applicable\r\n */\r\nvar Change = /** @class */ (function () {\r\n    function Change(type, snapshotNode, childName, oldSnap, prevName) {\r\n        this.type = type;\r\n        this.snapshotNode = snapshotNode;\r\n        this.childName = childName;\r\n        this.oldSnap = oldSnap;\r\n        this.prevName = prevName;\r\n    }\r\n    /**\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.valueChange = function (snapshot) {\r\n        return new Change(Change.VALUE, snapshot);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childAddedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_ADDED, snapshot, childKey);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childRemovedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_REMOVED, snapshot, childKey);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} newSnapshot\r\n     * @param {!Node} oldSnapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childChangedChange = function (childKey, newSnapshot, oldSnapshot) {\r\n        return new Change(Change.CHILD_CHANGED, newSnapshot, childKey, oldSnapshot);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childMovedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_MOVED, snapshot, childKey);\r\n    };\r\n    //event types\r\n    /** Event type for a child added */\r\n    Change.CHILD_ADDED = 'child_added';\r\n    /** Event type for a child removed */\r\n    Change.CHILD_REMOVED = 'child_removed';\r\n    /** Event type for a child changed */\r\n    Change.CHILD_CHANGED = 'child_changed';\r\n    /** Event type for a child moved */\r\n    Change.CHILD_MOVED = 'child_moved';\r\n    /** Event type for a value change */\r\n    Change.VALUE = 'value';\r\n    return Change;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n * @param {!Index} index\r\n */\r\nvar IndexedFilter = /** @class */ (function () {\r\n    function IndexedFilter(index_) {\r\n        this.index_ = index_;\r\n    }\r\n    IndexedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        util.assert(snap.isIndexed(this.index_), 'A node must be indexed if only a child is updated');\r\n        var oldChild = snap.getImmediateChild(key);\r\n        // Check if anything actually changed.\r\n        if (oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))) {\r\n            // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\r\n            // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\r\n            // to avoid treating these cases as \"nothing changed.\"\r\n            if (oldChild.isEmpty() == newChild.isEmpty()) {\r\n                // Nothing changed.\r\n                // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\r\n                //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\r\n                return snap;\r\n            }\r\n        }\r\n        if (optChangeAccumulator != null) {\r\n            if (newChild.isEmpty()) {\r\n                if (snap.hasChild(key)) {\r\n                    optChangeAccumulator.trackChildChange(Change.childRemovedChange(key, oldChild));\r\n                }\r\n                else {\r\n                    util.assert(snap.isLeafNode(), 'A child remove without an old child only makes sense on a leaf node');\r\n                }\r\n            }\r\n            else if (oldChild.isEmpty()) {\r\n                optChangeAccumulator.trackChildChange(Change.childAddedChange(key, newChild));\r\n            }\r\n            else {\r\n                optChangeAccumulator.trackChildChange(Change.childChangedChange(key, newChild, oldChild));\r\n            }\r\n        }\r\n        if (snap.isLeafNode() && newChild.isEmpty()) {\r\n            return snap;\r\n        }\r\n        else {\r\n            // Make sure the node is indexed\r\n            return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (optChangeAccumulator != null) {\r\n            if (!oldSnap.isLeafNode()) {\r\n                oldSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (!newSnap.hasChild(key)) {\r\n                        optChangeAccumulator.trackChildChange(Change.childRemovedChange(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n            if (!newSnap.isLeafNode()) {\r\n                newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (oldSnap.hasChild(key)) {\r\n                        var oldChild = oldSnap.getImmediateChild(key);\r\n                        if (!oldChild.equals(childNode)) {\r\n                            optChangeAccumulator.trackChildChange(Change.childChangedChange(key, childNode, oldChild));\r\n                        }\r\n                    }\r\n                    else {\r\n                        optChangeAccumulator.trackChildChange(Change.childAddedChange(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        return newSnap.withIndex(this.index_);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        if (oldSnap.isEmpty()) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        else {\r\n            return oldSnap.updatePriority(newPriority);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.filtersNodes = function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.getIndexedFilter = function () {\r\n        return this;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    return IndexedFilter;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n */\r\nvar ChildChangeAccumulator = /** @class */ (function () {\r\n    function ChildChangeAccumulator() {\r\n        this.changeMap_ = {};\r\n    }\r\n    /**\r\n     * @param {!Change} change\r\n     */\r\n    ChildChangeAccumulator.prototype.trackChildChange = function (change) {\r\n        var type = change.type;\r\n        var childKey /** @type {!string} */ = change.childName;\r\n        util.assert(type == Change.CHILD_ADDED ||\r\n            type == Change.CHILD_CHANGED ||\r\n            type == Change.CHILD_REMOVED, 'Only child changes supported for tracking');\r\n        util.assert(childKey !== '.priority', 'Only non-priority child changes can be tracked.');\r\n        var oldChange = util.safeGet(this.changeMap_, childKey);\r\n        if (oldChange) {\r\n            var oldType = oldChange.type;\r\n            if (type == Change.CHILD_ADDED && oldType == Change.CHILD_REMOVED) {\r\n                this.changeMap_[childKey] = Change.childChangedChange(childKey, change.snapshotNode, oldChange.snapshotNode);\r\n            }\r\n            else if (type == Change.CHILD_REMOVED &&\r\n                oldType == Change.CHILD_ADDED) {\r\n                delete this.changeMap_[childKey];\r\n            }\r\n            else if (type == Change.CHILD_REMOVED &&\r\n                oldType == Change.CHILD_CHANGED) {\r\n                this.changeMap_[childKey] = Change.childRemovedChange(childKey, oldChange.oldSnap);\r\n            }\r\n            else if (type == Change.CHILD_CHANGED &&\r\n                oldType == Change.CHILD_ADDED) {\r\n                this.changeMap_[childKey] = Change.childAddedChange(childKey, change.snapshotNode);\r\n            }\r\n            else if (type == Change.CHILD_CHANGED &&\r\n                oldType == Change.CHILD_CHANGED) {\r\n                this.changeMap_[childKey] = Change.childChangedChange(childKey, change.snapshotNode, oldChange.oldSnap);\r\n            }\r\n            else {\r\n                throw util.assertionError('Illegal combination of changes: ' +\r\n                    change +\r\n                    ' occurred after ' +\r\n                    oldChange);\r\n            }\r\n        }\r\n        else {\r\n            this.changeMap_[childKey] = change;\r\n        }\r\n    };\r\n    /**\r\n     * @return {!Array.<!Change>}\r\n     */\r\n    ChildChangeAccumulator.prototype.getChanges = function () {\r\n        return util.getValues(this.changeMap_);\r\n    };\r\n    return ChildChangeAccumulator;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of CompleteChildSource that never returns any additional children\r\n *\r\n * @private\r\n * @constructor\r\n * @implements CompleteChildSource\r\n */\r\nvar NoCompleteChildSource_ = /** @class */ (function () {\r\n    function NoCompleteChildSource_() {\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    NoCompleteChildSource_.prototype.getCompleteChild = function (childKey) {\r\n        return null;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    NoCompleteChildSource_.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        return null;\r\n    };\r\n    return NoCompleteChildSource_;\r\n}());\r\n/**\r\n * Singleton instance.\r\n * @const\r\n * @type {!CompleteChildSource}\r\n */\r\nvar NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\r\n/**\r\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\r\n * old event caches available to calculate complete children.\r\n *\r\n *\r\n * @implements CompleteChildSource\r\n */\r\nvar WriteTreeCompleteChildSource = /** @class */ (function () {\r\n    /**\r\n     * @param {!WriteTreeRef} writes_\r\n     * @param {!ViewCache} viewCache_\r\n     * @param {?Node} optCompleteServerCache_\r\n     */\r\n    function WriteTreeCompleteChildSource(writes_, viewCache_, optCompleteServerCache_) {\r\n        if (optCompleteServerCache_ === void 0) { optCompleteServerCache_ = null; }\r\n        this.writes_ = writes_;\r\n        this.viewCache_ = viewCache_;\r\n        this.optCompleteServerCache_ = optCompleteServerCache_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WriteTreeCompleteChildSource.prototype.getCompleteChild = function (childKey) {\r\n        var node = this.viewCache_.getEventCache();\r\n        if (node.isCompleteForChild(childKey)) {\r\n            return node.getNode().getImmediateChild(childKey);\r\n        }\r\n        else {\r\n            var serverNode = this.optCompleteServerCache_ != null\r\n                ? new CacheNode(this.optCompleteServerCache_, true, false)\r\n                : this.viewCache_.getServerCache();\r\n            return this.writes_.calcCompleteChild(childKey, serverNode);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WriteTreeCompleteChildSource.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        var completeServerData = this.optCompleteServerCache_ != null\r\n            ? this.optCompleteServerCache_\r\n            : this.viewCache_.getCompleteServerSnap();\r\n        var nodes = this.writes_.calcIndexedSlice(completeServerData, child, 1, reverse, index);\r\n        if (nodes.length === 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            return nodes[0];\r\n        }\r\n    };\r\n    return WriteTreeCompleteChildSource;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @struct\r\n */\r\nvar ProcessorResult = /** @class */ (function () {\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Array.<!Change>} changes\r\n     */\r\n    function ProcessorResult(viewCache, changes) {\r\n        this.viewCache = viewCache;\r\n        this.changes = changes;\r\n    }\r\n    return ProcessorResult;\r\n}());\r\n/**\r\n * @constructor\r\n */\r\nvar ViewProcessor = /** @class */ (function () {\r\n    /**\r\n     * @param {!NodeFilter} filter_\r\n     */\r\n    function ViewProcessor(filter_) {\r\n        this.filter_ = filter_;\r\n    }\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     */\r\n    ViewProcessor.prototype.assertIndexed = function (viewCache) {\r\n        util.assert(viewCache\r\n            .getEventCache()\r\n            .getNode()\r\n            .isIndexed(this.filter_.getIndex()), 'Event snap not indexed');\r\n        util.assert(viewCache\r\n            .getServerCache()\r\n            .getNode()\r\n            .isIndexed(this.filter_.getIndex()), 'Server snap not indexed');\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @return {!ProcessorResult}\r\n     */\r\n    ViewProcessor.prototype.applyOperation = function (oldViewCache, operation, writesCache, completeCache) {\r\n        var accumulator = new ChildChangeAccumulator();\r\n        var newViewCache, filterServerNode;\r\n        if (operation.type === OperationType.OVERWRITE) {\r\n            var overwrite = operation;\r\n            if (overwrite.source.fromUser) {\r\n                newViewCache = this.applyUserOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                util.assert(overwrite.source.fromServer, 'Unknown source.');\r\n                // We filter the node if it's a tagged update or the node has been previously filtered  and the\r\n                // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\r\n                // again\r\n                filterServerNode =\r\n                    overwrite.source.tagged ||\r\n                        (oldViewCache.getServerCache().isFiltered() &&\r\n                            !overwrite.path.isEmpty());\r\n                newViewCache = this.applyServerOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.MERGE) {\r\n            var merge = operation;\r\n            if (merge.source.fromUser) {\r\n                newViewCache = this.applyUserMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                util.assert(merge.source.fromServer, 'Unknown source.');\r\n                // We filter the node if it's a tagged update or the node has been previously filtered\r\n                filterServerNode =\r\n                    merge.source.tagged || oldViewCache.getServerCache().isFiltered();\r\n                newViewCache = this.applyServerMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.ACK_USER_WRITE) {\r\n            var ackUserWrite = operation;\r\n            if (!ackUserWrite.revert) {\r\n                newViewCache = this.ackUserWrite_(oldViewCache, ackUserWrite.path, ackUserWrite.affectedTree, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                newViewCache = this.revertUserWrite_(oldViewCache, ackUserWrite.path, writesCache, completeCache, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.LISTEN_COMPLETE) {\r\n            newViewCache = this.listenComplete_(oldViewCache, operation.path, writesCache, accumulator);\r\n        }\r\n        else {\r\n            throw util.assertionError('Unknown operation type: ' + operation.type);\r\n        }\r\n        var changes = accumulator.getChanges();\r\n        ViewProcessor.maybeAddValueEvent_(oldViewCache, newViewCache, changes);\r\n        return new ProcessorResult(newViewCache, changes);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!ViewCache} newViewCache\r\n     * @param {!Array.<!Change>} accumulator\r\n     * @private\r\n     */\r\n    ViewProcessor.maybeAddValueEvent_ = function (oldViewCache, newViewCache, accumulator) {\r\n        var eventSnap = newViewCache.getEventCache();\r\n        if (eventSnap.isFullyInitialized()) {\r\n            var isLeafOrEmpty = eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\r\n            var oldCompleteSnap = oldViewCache.getCompleteEventSnap();\r\n            if (accumulator.length > 0 ||\r\n                !oldViewCache.getEventCache().isFullyInitialized() ||\r\n                (isLeafOrEmpty &&\r\n                    !eventSnap\r\n                        .getNode()\r\n                        .equals(/** @type {!Node} */ (oldCompleteSnap))) ||\r\n                !eventSnap\r\n                    .getNode()\r\n                    .getPriority()\r\n                    .equals(oldCompleteSnap.getPriority())) {\r\n                accumulator.push(Change.valueChange(\r\n                /** @type {!Node} */ newViewCache.getCompleteEventSnap()));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} changePath\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {!CompleteChildSource} source\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.generateEventCacheAfterServerEvent_ = function (viewCache, changePath, writesCache, source, accumulator) {\r\n        var oldEventSnap = viewCache.getEventCache();\r\n        if (writesCache.shadowingWrite(changePath) != null) {\r\n            // we have a shadowing write, ignore changes\r\n            return viewCache;\r\n        }\r\n        else {\r\n            var newEventCache = void 0, serverNode = void 0;\r\n            if (changePath.isEmpty()) {\r\n                // TODO: figure out how this plays with \"sliding ack windows\"\r\n                util.assert(viewCache.getServerCache().isFullyInitialized(), 'If change path is empty, we must have complete server data');\r\n                if (viewCache.getServerCache().isFiltered()) {\r\n                    // We need to special case this, because we need to only apply writes to complete children, or\r\n                    // we might end up raising events for incomplete children. If the server data is filtered deep\r\n                    // writes cannot be guaranteed to be complete\r\n                    var serverCache = viewCache.getCompleteServerSnap();\r\n                    var completeChildren = serverCache instanceof ChildrenNode\r\n                        ? serverCache\r\n                        : ChildrenNode.EMPTY_NODE;\r\n                    var completeEventChildren = writesCache.calcCompleteEventChildren(completeChildren);\r\n                    newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeEventChildren, accumulator);\r\n                }\r\n                else {\r\n                    var completeNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                    newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeNode, accumulator);\r\n                }\r\n            }\r\n            else {\r\n                var childKey = changePath.getFront();\r\n                if (childKey == '.priority') {\r\n                    util.assert(changePath.getLength() == 1, \"Can't have a priority with additional path components\");\r\n                    var oldEventNode = oldEventSnap.getNode();\r\n                    serverNode = viewCache.getServerCache().getNode();\r\n                    // we might have overwrites for this priority\r\n                    var updatedPriority = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventNode, serverNode);\r\n                    if (updatedPriority != null) {\r\n                        newEventCache = this.filter_.updatePriority(oldEventNode, updatedPriority);\r\n                    }\r\n                    else {\r\n                        // priority didn't change, keep old node\r\n                        newEventCache = oldEventSnap.getNode();\r\n                    }\r\n                }\r\n                else {\r\n                    var childChangePath = changePath.popFront();\r\n                    // update child\r\n                    var newEventChild = void 0;\r\n                    if (oldEventSnap.isCompleteForChild(childKey)) {\r\n                        serverNode = viewCache.getServerCache().getNode();\r\n                        var eventChildUpdate = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventSnap.getNode(), serverNode);\r\n                        if (eventChildUpdate != null) {\r\n                            newEventChild = oldEventSnap\r\n                                .getNode()\r\n                                .getImmediateChild(childKey)\r\n                                .updateChild(childChangePath, eventChildUpdate);\r\n                        }\r\n                        else {\r\n                            // Nothing changed, just keep the old child\r\n                            newEventChild = oldEventSnap\r\n                                .getNode()\r\n                                .getImmediateChild(childKey);\r\n                        }\r\n                    }\r\n                    else {\r\n                        newEventChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\r\n                    }\r\n                    if (newEventChild != null) {\r\n                        newEventCache = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newEventChild, childChangePath, source, accumulator);\r\n                    }\r\n                    else {\r\n                        // no complete child available or no change\r\n                        newEventCache = oldEventSnap.getNode();\r\n                    }\r\n                }\r\n            }\r\n            return viewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized() || changePath.isEmpty(), this.filter_.filtersNodes());\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Path} changePath\r\n     * @param {!Node} changedSnap\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {boolean} filterServerNode\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyServerOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, filterServerNode, accumulator) {\r\n        var oldServerSnap = oldViewCache.getServerCache();\r\n        var newServerCache;\r\n        var serverFilter = filterServerNode\r\n            ? this.filter_\r\n            : this.filter_.getIndexedFilter();\r\n        if (changePath.isEmpty()) {\r\n            newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), changedSnap, null);\r\n        }\r\n        else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\r\n            // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\r\n            var newServerNode = oldServerSnap\r\n                .getNode()\r\n                .updateChild(changePath, changedSnap);\r\n            newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), newServerNode, null);\r\n        }\r\n        else {\r\n            var childKey = changePath.getFront();\r\n            if (!oldServerSnap.isCompleteForPath(changePath) &&\r\n                changePath.getLength() > 1) {\r\n                // We don't update incomplete nodes with updates intended for other listeners\r\n                return oldViewCache;\r\n            }\r\n            var childChangePath = changePath.popFront();\r\n            var childNode = oldServerSnap.getNode().getImmediateChild(childKey);\r\n            var newChildNode = childNode.updateChild(childChangePath, changedSnap);\r\n            if (childKey == '.priority') {\r\n                newServerCache = serverFilter.updatePriority(oldServerSnap.getNode(), newChildNode);\r\n            }\r\n            else {\r\n                newServerCache = serverFilter.updateChild(oldServerSnap.getNode(), childKey, newChildNode, childChangePath, NO_COMPLETE_CHILD_SOURCE, null);\r\n            }\r\n        }\r\n        var newViewCache = oldViewCache.updateServerSnap(newServerCache, oldServerSnap.isFullyInitialized() || changePath.isEmpty(), serverFilter.filtersNodes());\r\n        var source = new WriteTreeCompleteChildSource(writesCache, newViewCache, completeCache);\r\n        return this.generateEventCacheAfterServerEvent_(newViewCache, changePath, writesCache, source, accumulator);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Path} changePath\r\n     * @param {!Node} changedSnap\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyUserOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, accumulator) {\r\n        var oldEventSnap = oldViewCache.getEventCache();\r\n        var newViewCache, newEventCache;\r\n        var source = new WriteTreeCompleteChildSource(writesCache, oldViewCache, completeCache);\r\n        if (changePath.isEmpty()) {\r\n            newEventCache = this.filter_.updateFullNode(oldViewCache.getEventCache().getNode(), changedSnap, accumulator);\r\n            newViewCache = oldViewCache.updateEventSnap(newEventCache, true, this.filter_.filtersNodes());\r\n        }\r\n        else {\r\n            var childKey = changePath.getFront();\r\n            if (childKey === '.priority') {\r\n                newEventCache = this.filter_.updatePriority(oldViewCache.getEventCache().getNode(), changedSnap);\r\n                newViewCache = oldViewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized(), oldEventSnap.isFiltered());\r\n            }\r\n            else {\r\n                var childChangePath = changePath.popFront();\r\n                var oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\r\n                var newChild = void 0;\r\n                if (childChangePath.isEmpty()) {\r\n                    // Child overwrite, we can replace the child\r\n                    newChild = changedSnap;\r\n                }\r\n                else {\r\n                    var childNode = source.getCompleteChild(childKey);\r\n                    if (childNode != null) {\r\n                        if (childChangePath.getBack() === '.priority' &&\r\n                            childNode.getChild(childChangePath.parent()).isEmpty()) {\r\n                            // This is a priority update on an empty node. If this node exists on the server, the\r\n                            // server will send down the priority in the update, so ignore for now\r\n                            newChild = childNode;\r\n                        }\r\n                        else {\r\n                            newChild = childNode.updateChild(childChangePath, changedSnap);\r\n                        }\r\n                    }\r\n                    else {\r\n                        // There is no complete child node available\r\n                        newChild = ChildrenNode.EMPTY_NODE;\r\n                    }\r\n                }\r\n                if (!oldChild.equals(newChild)) {\r\n                    var newEventSnap = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newChild, childChangePath, source, accumulator);\r\n                    newViewCache = oldViewCache.updateEventSnap(newEventSnap, oldEventSnap.isFullyInitialized(), this.filter_.filtersNodes());\r\n                }\r\n                else {\r\n                    newViewCache = oldViewCache;\r\n                }\r\n            }\r\n        }\r\n        return newViewCache;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {string} childKey\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    ViewProcessor.cacheHasChild_ = function (viewCache, childKey) {\r\n        return viewCache.getEventCache().isCompleteForChild(childKey);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {ImmutableTree.<!Node>} changedChildren\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyUserMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, accumulator) {\r\n        var _this = this;\r\n        // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n        // window leaving room for new items.  It's important we process these changes first, so we\r\n        // iterate the changes twice, first processing any that affect items currently in view.\r\n        // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n        // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n        // not the other.\r\n        var curViewCache = viewCache;\r\n        changedChildren.foreach(function (relativePath, childNode) {\r\n            var writePath = path.child(relativePath);\r\n            if (ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\r\n                curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n            }\r\n        });\r\n        changedChildren.foreach(function (relativePath, childNode) {\r\n            var writePath = path.child(relativePath);\r\n            if (!ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\r\n                curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n            }\r\n        });\r\n        return curViewCache;\r\n    };\r\n    /**\r\n     * @param {!Node} node\r\n     * @param {ImmutableTree.<!Node>} merge\r\n     * @return {!Node}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyMerge_ = function (node, merge) {\r\n        merge.foreach(function (relativePath, childNode) {\r\n            node = node.updateChild(relativePath, childNode);\r\n        });\r\n        return node;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!ImmutableTree.<!Node>} changedChildren\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache\r\n     * @param {boolean} filterServerNode\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyServerMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, filterServerNode, accumulator) {\r\n        var _this = this;\r\n        // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\r\n        // wait for the complete data update coming soon.\r\n        if (viewCache\r\n            .getServerCache()\r\n            .getNode()\r\n            .isEmpty() &&\r\n            !viewCache.getServerCache().isFullyInitialized()) {\r\n            return viewCache;\r\n        }\r\n        // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n        // window leaving room for new items.  It's important we process these changes first, so we\r\n        // iterate the changes twice, first processing any that affect items currently in view.\r\n        // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n        // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n        // not the other.\r\n        var curViewCache = viewCache;\r\n        var viewMergeTree;\r\n        if (path.isEmpty()) {\r\n            viewMergeTree = changedChildren;\r\n        }\r\n        else {\r\n            viewMergeTree = ImmutableTree.Empty.setTree(path, changedChildren);\r\n        }\r\n        var serverNode = viewCache.getServerCache().getNode();\r\n        viewMergeTree.children.inorderTraversal(function (childKey, childTree) {\r\n            if (serverNode.hasChild(childKey)) {\r\n                var serverChild = viewCache\r\n                    .getServerCache()\r\n                    .getNode()\r\n                    .getImmediateChild(childKey);\r\n                var newChild = _this.applyMerge_(serverChild, childTree);\r\n                curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n            }\r\n        });\r\n        viewMergeTree.children.inorderTraversal(function (childKey, childMergeTree) {\r\n            var isUnknownDeepMerge = !viewCache.getServerCache().isCompleteForChild(childKey) &&\r\n                childMergeTree.value == null;\r\n            if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\r\n                var serverChild = viewCache\r\n                    .getServerCache()\r\n                    .getNode()\r\n                    .getImmediateChild(childKey);\r\n                var newChild = _this.applyMerge_(serverChild, childMergeTree);\r\n                curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n            }\r\n        });\r\n        return curViewCache;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} ackPath\r\n     * @param {!ImmutableTree<!boolean>} affectedTree\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.ackUserWrite_ = function (viewCache, ackPath, affectedTree, writesCache, completeCache, accumulator) {\r\n        if (writesCache.shadowingWrite(ackPath) != null) {\r\n            return viewCache;\r\n        }\r\n        // Only filter server node if it is currently filtered\r\n        var filterServerNode = viewCache.getServerCache().isFiltered();\r\n        // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\r\n        // now that it won't be shadowed.\r\n        var serverCache = viewCache.getServerCache();\r\n        if (affectedTree.value != null) {\r\n            // This is an overwrite.\r\n            if ((ackPath.isEmpty() && serverCache.isFullyInitialized()) ||\r\n                serverCache.isCompleteForPath(ackPath)) {\r\n                return this.applyServerOverwrite_(viewCache, ackPath, serverCache.getNode().getChild(ackPath), writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n            else if (ackPath.isEmpty()) {\r\n                // This is a goofy edge case where we are acking data at this location but don't have full data.  We\r\n                // should just re-apply whatever we have in our cache as a merge.\r\n                var changedChildren_1 = ImmutableTree.Empty;\r\n                serverCache.getNode().forEachChild(KEY_INDEX, function (name, node) {\r\n                    changedChildren_1 = changedChildren_1.set(new Path(name), node);\r\n                });\r\n                return this.applyServerMerge_(viewCache, ackPath, changedChildren_1, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n            else {\r\n                return viewCache;\r\n            }\r\n        }\r\n        else {\r\n            // This is a merge.\r\n            var changedChildren_2 = ImmutableTree.Empty;\r\n            affectedTree.foreach(function (mergePath, value) {\r\n                var serverCachePath = ackPath.child(mergePath);\r\n                if (serverCache.isCompleteForPath(serverCachePath)) {\r\n                    changedChildren_2 = changedChildren_2.set(mergePath, serverCache.getNode().getChild(serverCachePath));\r\n                }\r\n            });\r\n            return this.applyServerMerge_(viewCache, ackPath, changedChildren_2, writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.listenComplete_ = function (viewCache, path, writesCache, accumulator) {\r\n        var oldServerNode = viewCache.getServerCache();\r\n        var newViewCache = viewCache.updateServerSnap(oldServerNode.getNode(), oldServerNode.isFullyInitialized() || path.isEmpty(), oldServerNode.isFiltered());\r\n        return this.generateEventCacheAfterServerEvent_(newViewCache, path, writesCache, NO_COMPLETE_CHILD_SOURCE, accumulator);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeServerCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.revertUserWrite_ = function (viewCache, path, writesCache, completeServerCache, accumulator) {\r\n        var complete;\r\n        if (writesCache.shadowingWrite(path) != null) {\r\n            return viewCache;\r\n        }\r\n        else {\r\n            var source = new WriteTreeCompleteChildSource(writesCache, viewCache, completeServerCache);\r\n            var oldEventCache = viewCache.getEventCache().getNode();\r\n            var newEventCache = void 0;\r\n            if (path.isEmpty() || path.getFront() === '.priority') {\r\n                var newNode = void 0;\r\n                if (viewCache.getServerCache().isFullyInitialized()) {\r\n                    newNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                }\r\n                else {\r\n                    var serverChildren = viewCache.getServerCache().getNode();\r\n                    util.assert(serverChildren instanceof ChildrenNode, 'serverChildren would be complete if leaf node');\r\n                    newNode = writesCache.calcCompleteEventChildren(serverChildren);\r\n                }\r\n                newNode = newNode;\r\n                newEventCache = this.filter_.updateFullNode(oldEventCache, newNode, accumulator);\r\n            }\r\n            else {\r\n                var childKey = path.getFront();\r\n                var newChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\r\n                if (newChild == null &&\r\n                    viewCache.getServerCache().isCompleteForChild(childKey)) {\r\n                    newChild = oldEventCache.getImmediateChild(childKey);\r\n                }\r\n                if (newChild != null) {\r\n                    newEventCache = this.filter_.updateChild(oldEventCache, childKey, newChild, path.popFront(), source, accumulator);\r\n                }\r\n                else if (viewCache\r\n                    .getEventCache()\r\n                    .getNode()\r\n                    .hasChild(childKey)) {\r\n                    // No complete child available, delete the existing one, if any\r\n                    newEventCache = this.filter_.updateChild(oldEventCache, childKey, ChildrenNode.EMPTY_NODE, path.popFront(), source, accumulator);\r\n                }\r\n                else {\r\n                    newEventCache = oldEventCache;\r\n                }\r\n                if (newEventCache.isEmpty() &&\r\n                    viewCache.getServerCache().isFullyInitialized()) {\r\n                    // We might have reverted all child writes. Maybe the old event was a leaf node\r\n                    complete = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                    if (complete.isLeafNode()) {\r\n                        newEventCache = this.filter_.updateFullNode(newEventCache, complete, accumulator);\r\n                    }\r\n                }\r\n            }\r\n            complete =\r\n                viewCache.getServerCache().isFullyInitialized() ||\r\n                    writesCache.shadowingWrite(Path.Empty) != null;\r\n            return viewCache.updateEventSnap(newEventCache, complete, this.filter_.filtersNodes());\r\n        }\r\n    };\r\n    return ViewProcessor;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\r\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\r\n * for details.\r\n *\r\n * @constructor\r\n */\r\nvar EventGenerator = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Query} query_\r\n     */\r\n    function EventGenerator(query_) {\r\n        this.query_ = query_;\r\n        /**\r\n         * @private\r\n         * @type {!Index}\r\n         */\r\n        this.index_ = this.query_.getQueryParams().getIndex();\r\n    }\r\n    /**\r\n     * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\r\n     * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\r\n     *\r\n     * Notes:\r\n     *  - child_moved events will be synthesized at this time for any child_changed events that affect\r\n     *    our index.\r\n     *  - prevName will be calculated based on the index ordering.\r\n     *\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Node} eventCache\r\n     * @param {!Array.<!EventRegistration>} eventRegistrations\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    EventGenerator.prototype.generateEventsForChanges = function (changes, eventCache, eventRegistrations) {\r\n        var _this = this;\r\n        var events = [];\r\n        var moves = [];\r\n        changes.forEach(function (change) {\r\n            if (change.type === Change.CHILD_CHANGED &&\r\n                _this.index_.indexedValueChanged(change.oldSnap, change.snapshotNode)) {\r\n                moves.push(Change.childMovedChange(change.childName, change.snapshotNode));\r\n            }\r\n        });\r\n        this.generateEventsForType_(events, Change.CHILD_REMOVED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_ADDED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_MOVED, moves, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_CHANGED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.VALUE, changes, eventRegistrations, eventCache);\r\n        return events;\r\n    };\r\n    /**\r\n     * Given changes of a single change type, generate the corresponding events.\r\n     *\r\n     * @param {!Array.<!Event>} events\r\n     * @param {!string} eventType\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Array.<!EventRegistration>} registrations\r\n     * @param {!Node} eventCache\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.generateEventsForType_ = function (events, eventType, changes, registrations, eventCache) {\r\n        var _this = this;\r\n        var filteredChanges = changes.filter(function (change) { return change.type === eventType; });\r\n        filteredChanges.sort(this.compareChanges_.bind(this));\r\n        filteredChanges.forEach(function (change) {\r\n            var materializedChange = _this.materializeSingleChange_(change, eventCache);\r\n            registrations.forEach(function (registration) {\r\n                if (registration.respondsTo(change.type)) {\r\n                    events.push(registration.createEvent(materializedChange, _this.query_));\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Change} change\r\n     * @param {!Node} eventCache\r\n     * @return {!Change}\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.materializeSingleChange_ = function (change, eventCache) {\r\n        if (change.type === 'value' || change.type === 'child_removed') {\r\n            return change;\r\n        }\r\n        else {\r\n            change.prevName = eventCache.getPredecessorChildName(\r\n            /** @type {!string} */\r\n            change.childName, change.snapshotNode, this.index_);\r\n            return change;\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Change} a\r\n     * @param {!Change} b\r\n     * @return {number}\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.compareChanges_ = function (a, b) {\r\n        if (a.childName == null || b.childName == null) {\r\n            throw util.assertionError('Should only compare child_ events.');\r\n        }\r\n        var aWrapped = new NamedNode(a.childName, a.snapshotNode);\r\n        var bWrapped = new NamedNode(b.childName, b.snapshotNode);\r\n        return this.index_.compare(aWrapped, bWrapped);\r\n    };\r\n    return EventGenerator;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A view represents a specific location and query that has 1 or more event registrations.\r\n *\r\n * It does several things:\r\n *  - Maintains the list of event registrations for this location/query.\r\n *  - Maintains a cache of the data visible for this location/query.\r\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\r\n *    registrations returns the set of events to be raised.\r\n * @constructor\r\n */\r\nvar View = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Query} query_\r\n     * @param {!ViewCache} initialViewCache\r\n     */\r\n    function View(query_, initialViewCache) {\r\n        this.query_ = query_;\r\n        this.eventRegistrations_ = [];\r\n        var params = this.query_.getQueryParams();\r\n        var indexFilter = new IndexedFilter(params.getIndex());\r\n        var filter = params.getNodeFilter();\r\n        /**\r\n         * @type {ViewProcessor}\r\n         * @private\r\n         */\r\n        this.processor_ = new ViewProcessor(filter);\r\n        var initialServerCache = initialViewCache.getServerCache();\r\n        var initialEventCache = initialViewCache.getEventCache();\r\n        // Don't filter server node with other filter than index, wait for tagged listen\r\n        var serverSnap = indexFilter.updateFullNode(ChildrenNode.EMPTY_NODE, initialServerCache.getNode(), null);\r\n        var eventSnap = filter.updateFullNode(ChildrenNode.EMPTY_NODE, initialEventCache.getNode(), null);\r\n        var newServerCache = new CacheNode(serverSnap, initialServerCache.isFullyInitialized(), indexFilter.filtersNodes());\r\n        var newEventCache = new CacheNode(eventSnap, initialEventCache.isFullyInitialized(), filter.filtersNodes());\r\n        /**\r\n         * @type {!ViewCache}\r\n         * @private\r\n         */\r\n        this.viewCache_ = new ViewCache(newEventCache, newServerCache);\r\n        /**\r\n         * @type {!EventGenerator}\r\n         * @private\r\n         */\r\n        this.eventGenerator_ = new EventGenerator(this.query_);\r\n    }\r\n    /**\r\n     * @return {!Query}\r\n     */\r\n    View.prototype.getQuery = function () {\r\n        return this.query_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    View.prototype.getServerCache = function () {\r\n        return this.viewCache_.getServerCache().getNode();\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    View.prototype.getCompleteServerCache = function (path) {\r\n        var cache = this.viewCache_.getCompleteServerSnap();\r\n        if (cache) {\r\n            // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\r\n            // we need to see if it contains the child we're interested in.\r\n            if (this.query_.getQueryParams().loadsAllData() ||\r\n                (!path.isEmpty() && !cache.getImmediateChild(path.getFront()).isEmpty())) {\r\n                return cache.getChild(path);\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    View.prototype.isEmpty = function () {\r\n        return this.eventRegistrations_.length === 0;\r\n    };\r\n    /**\r\n     * @param {!EventRegistration} eventRegistration\r\n     */\r\n    View.prototype.addEventRegistration = function (eventRegistration) {\r\n        this.eventRegistrations_.push(eventRegistration);\r\n    };\r\n    /**\r\n     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {!Array.<!Event>} Cancel events, if cancelError was provided.\r\n     */\r\n    View.prototype.removeEventRegistration = function (eventRegistration, cancelError) {\r\n        var cancelEvents = [];\r\n        if (cancelError) {\r\n            util.assert(eventRegistration == null, 'A cancel should cancel all event registrations.');\r\n            var path_1 = this.query_.path;\r\n            this.eventRegistrations_.forEach(function (registration) {\r\n                cancelError /** @type {!Error} */ = cancelError;\r\n                var maybeEvent = registration.createCancelEvent(cancelError, path_1);\r\n                if (maybeEvent) {\r\n                    cancelEvents.push(maybeEvent);\r\n                }\r\n            });\r\n        }\r\n        if (eventRegistration) {\r\n            var remaining = [];\r\n            for (var i = 0; i < this.eventRegistrations_.length; ++i) {\r\n                var existing = this.eventRegistrations_[i];\r\n                if (!existing.matches(eventRegistration)) {\r\n                    remaining.push(existing);\r\n                }\r\n                else if (eventRegistration.hasAnyCallback()) {\r\n                    // We're removing just this one\r\n                    remaining = remaining.concat(this.eventRegistrations_.slice(i + 1));\r\n                    break;\r\n                }\r\n            }\r\n            this.eventRegistrations_ = remaining;\r\n        }\r\n        else {\r\n            this.eventRegistrations_ = [];\r\n        }\r\n        return cancelEvents;\r\n    };\r\n    /**\r\n     * Applies the given Operation, updates our cache, and returns the appropriate events.\r\n     *\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeServerCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.applyOperation = function (operation, writesCache, completeServerCache) {\r\n        if (operation.type === OperationType.MERGE &&\r\n            operation.source.queryId !== null) {\r\n            util.assert(this.viewCache_.getCompleteServerSnap(), 'We should always have a full cache before handling merges');\r\n            util.assert(this.viewCache_.getCompleteEventSnap(), 'Missing event cache, even though we have a server cache');\r\n        }\r\n        var oldViewCache = this.viewCache_;\r\n        var result = this.processor_.applyOperation(oldViewCache, operation, writesCache, completeServerCache);\r\n        this.processor_.assertIndexed(result.viewCache);\r\n        util.assert(result.viewCache.getServerCache().isFullyInitialized() ||\r\n            !oldViewCache.getServerCache().isFullyInitialized(), 'Once a server snap is complete, it should never go back');\r\n        this.viewCache_ = result.viewCache;\r\n        return this.generateEventsForChanges_(result.changes, result.viewCache.getEventCache().getNode(), null);\r\n    };\r\n    /**\r\n     * @param {!EventRegistration} registration\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.getInitialEvents = function (registration) {\r\n        var eventSnap = this.viewCache_.getEventCache();\r\n        var initialChanges = [];\r\n        if (!eventSnap.getNode().isLeafNode()) {\r\n            var eventNode = eventSnap.getNode();\r\n            eventNode.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                initialChanges.push(Change.childAddedChange(key, childNode));\r\n            });\r\n        }\r\n        if (eventSnap.isFullyInitialized()) {\r\n            initialChanges.push(Change.valueChange(eventSnap.getNode()));\r\n        }\r\n        return this.generateEventsForChanges_(initialChanges, eventSnap.getNode(), registration);\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Node} eventCache\r\n     * @param {EventRegistration=} eventRegistration\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.generateEventsForChanges_ = function (changes, eventCache, eventRegistration) {\r\n        var registrations = eventRegistration\r\n            ? [eventRegistration]\r\n            : this.eventRegistrations_;\r\n        return this.eventGenerator_.generateEventsForChanges(changes, eventCache, registrations);\r\n    };\r\n    return View;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __referenceConstructor$1;\r\n/**\r\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\r\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\r\n * and user writes (set, transaction, update).\r\n *\r\n * It's responsible for:\r\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\r\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\r\n *    applyUserOverwrite, etc.)\r\n */\r\nvar SyncPoint = /** @class */ (function () {\r\n    function SyncPoint() {\r\n        /**\r\n         * The Views being tracked at this location in the tree, stored as a map where the key is a\r\n         * queryId and the value is the View for that query.\r\n         *\r\n         * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\r\n         *\r\n         * @type {!Object.<!string, !View>}\r\n         * @private\r\n         */\r\n        this.views_ = {};\r\n    }\r\n    Object.defineProperty(SyncPoint, \"__referenceConstructor\", {\r\n        get: function () {\r\n            util.assert(__referenceConstructor$1, 'Reference.ts has not been loaded');\r\n            return __referenceConstructor$1;\r\n        },\r\n        set: function (val) {\r\n            util.assert(!__referenceConstructor$1, '__referenceConstructor has already been defined');\r\n            __referenceConstructor$1 = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    SyncPoint.prototype.isEmpty = function () {\r\n        return util.isEmpty(this.views_);\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} optCompleteServerCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    SyncPoint.prototype.applyOperation = function (operation, writesCache, optCompleteServerCache) {\r\n        var queryId = operation.source.queryId;\r\n        if (queryId !== null) {\r\n            var view = util.safeGet(this.views_, queryId);\r\n            util.assert(view != null, 'SyncTree gave us an op for an invalid query.');\r\n            return view.applyOperation(operation, writesCache, optCompleteServerCache);\r\n        }\r\n        else {\r\n            var events_1 = [];\r\n            util.forEach(this.views_, function (key, view) {\r\n                events_1 = events_1.concat(view.applyOperation(operation, writesCache, optCompleteServerCache));\r\n            });\r\n            return events_1;\r\n        }\r\n    };\r\n    /**\r\n     * Add an event callback for the specified query.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {!EventRegistration} eventRegistration\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache Complete server cache, if we have it.\r\n     * @param {boolean} serverCacheComplete\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncPoint.prototype.addEventRegistration = function (query, eventRegistration, writesCache, serverCache, serverCacheComplete) {\r\n        var queryId = query.queryIdentifier();\r\n        var view = util.safeGet(this.views_, queryId);\r\n        if (!view) {\r\n            // TODO: make writesCache take flag for complete server node\r\n            var eventCache = writesCache.calcCompleteEventCache(serverCacheComplete ? serverCache : null);\r\n            var eventCacheComplete = false;\r\n            if (eventCache) {\r\n                eventCacheComplete = true;\r\n            }\r\n            else if (serverCache instanceof ChildrenNode) {\r\n                eventCache = writesCache.calcCompleteEventChildren(serverCache);\r\n                eventCacheComplete = false;\r\n            }\r\n            else {\r\n                eventCache = ChildrenNode.EMPTY_NODE;\r\n                eventCacheComplete = false;\r\n            }\r\n            var viewCache = new ViewCache(new CacheNode(\r\n            /** @type {!Node} */ (eventCache), eventCacheComplete, false), new CacheNode(\r\n            /** @type {!Node} */ (serverCache), serverCacheComplete, false));\r\n            view = new View(query, viewCache);\r\n            this.views_[queryId] = view;\r\n        }\r\n        // This is guaranteed to exist now, we just created anything that was missing\r\n        view.addEventRegistration(eventRegistration);\r\n        return view.getInitialEvents(eventRegistration);\r\n    };\r\n    /**\r\n     * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\r\n     *\r\n     * If query is the default query, we'll check all views for the specified eventRegistration.\r\n     * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\r\n     *\r\n     * @param {!Query} query\r\n     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {{removed:!Array.<!Query>, events:!Array.<!Event>}} removed queries and any cancel events\r\n     */\r\n    SyncPoint.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\r\n        var queryId = query.queryIdentifier();\r\n        var removed = [];\r\n        var cancelEvents = [];\r\n        var hadCompleteView = this.hasCompleteView();\r\n        if (queryId === 'default') {\r\n            // When you do ref.off(...), we search all views for the registration to remove.\r\n            var self_1 = this;\r\n            util.forEach(this.views_, function (viewQueryId, view) {\r\n                cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\r\n                if (view.isEmpty()) {\r\n                    delete self_1.views_[viewQueryId];\r\n                    // We'll deal with complete views later.\r\n                    if (!view\r\n                        .getQuery()\r\n                        .getQueryParams()\r\n                        .loadsAllData()) {\r\n                        removed.push(view.getQuery());\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            // remove the callback from the specific view.\r\n            var view = util.safeGet(this.views_, queryId);\r\n            if (view) {\r\n                cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\r\n                if (view.isEmpty()) {\r\n                    delete this.views_[queryId];\r\n                    // We'll deal with complete views later.\r\n                    if (!view\r\n                        .getQuery()\r\n                        .getQueryParams()\r\n                        .loadsAllData()) {\r\n                        removed.push(view.getQuery());\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (hadCompleteView && !this.hasCompleteView()) {\r\n            // We removed our last complete view.\r\n            removed.push(new SyncPoint.__referenceConstructor(query.repo, query.path));\r\n        }\r\n        return { removed: removed, events: cancelEvents };\r\n    };\r\n    /**\r\n     * @return {!Array.<!View>}\r\n     */\r\n    SyncPoint.prototype.getQueryViews = function () {\r\n        var _this = this;\r\n        var values = Object.keys(this.views_).map(function (key) { return _this.views_[key]; });\r\n        return values.filter(function (view) {\r\n            return !view\r\n                .getQuery()\r\n                .getQueryParams()\r\n                .loadsAllData();\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Path} path The path to the desired complete snapshot\r\n     * @return {?Node} A complete cache, if it exists\r\n     */\r\n    SyncPoint.prototype.getCompleteServerCache = function (path) {\r\n        var serverCache = null;\r\n        util.forEach(this.views_, function (key, view) {\r\n            serverCache = serverCache || view.getCompleteServerCache(path);\r\n        });\r\n        return serverCache;\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @return {?View}\r\n     */\r\n    SyncPoint.prototype.viewForQuery = function (query) {\r\n        var params = query.getQueryParams();\r\n        if (params.loadsAllData()) {\r\n            return this.getCompleteView();\r\n        }\r\n        else {\r\n            var queryId = query.queryIdentifier();\r\n            return util.safeGet(this.views_, queryId);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @return {boolean}\r\n     */\r\n    SyncPoint.prototype.viewExistsForQuery = function (query) {\r\n        return this.viewForQuery(query) != null;\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    SyncPoint.prototype.hasCompleteView = function () {\r\n        return this.getCompleteView() != null;\r\n    };\r\n    /**\r\n     * @return {?View}\r\n     */\r\n    SyncPoint.prototype.getCompleteView = function () {\r\n        var completeView = util.findValue(this.views_, function (view) {\r\n            return view\r\n                .getQuery()\r\n                .getQueryParams()\r\n                .loadsAllData();\r\n        });\r\n        return completeView || null;\r\n    };\r\n    return SyncPoint;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\r\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\r\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\r\n * to reflect the write added.\r\n *\r\n * @constructor\r\n * @param {!ImmutableTree.<!Node>} writeTree\r\n */\r\nvar CompoundWrite = /** @class */ (function () {\r\n    function CompoundWrite(writeTree_) {\r\n        this.writeTree_ = writeTree_;\r\n    }\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!Node} node\r\n     * @return {!CompoundWrite}\r\n     */\r\n    CompoundWrite.prototype.addWrite = function (path, node) {\r\n        if (path.isEmpty()) {\r\n            return new CompoundWrite(new ImmutableTree(node));\r\n        }\r\n        else {\r\n            var rootmost = this.writeTree_.findRootMostValueAndPath(path);\r\n            if (rootmost != null) {\r\n                var rootMostPath = rootmost.path;\r\n                var value = rootmost.value;\r\n                var relativePath = Path.relativePath(rootMostPath, path);\r\n                value = value.updateChild(relativePath, node);\r\n                return new CompoundWrite(this.writeTree_.set(rootMostPath, value));\r\n            }\r\n            else {\r\n                var subtree = new ImmutableTree(node);\r\n                var newWriteTree = this.writeTree_.setTree(path, subtree);\r\n                return new CompoundWrite(newWriteTree);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} updates\r\n     * @return {!CompoundWrite}\r\n     */\r\n    CompoundWrite.prototype.addWrites = function (path, updates) {\r\n        var newWrite = this;\r\n        util.forEach(updates, function (childKey, node) {\r\n            newWrite = newWrite.addWrite(path.child(childKey), node);\r\n        });\r\n        return newWrite;\r\n    };\r\n    /**\r\n     * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\r\n     * location, which must be removed by calling this method with that path.\r\n     *\r\n     * @param {!Path} path The path at which a write and all deeper writes should be removed\r\n     * @return {!CompoundWrite} The new CompoundWrite with the removed path\r\n     */\r\n    CompoundWrite.prototype.removeWrite = function (path) {\r\n        if (path.isEmpty()) {\r\n            return CompoundWrite.Empty;\r\n        }\r\n        else {\r\n            var newWriteTree = this.writeTree_.setTree(path, ImmutableTree.Empty);\r\n            return new CompoundWrite(newWriteTree);\r\n        }\r\n    };\r\n    /**\r\n     * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\r\n     * considered \"complete\".\r\n     *\r\n     * @param {!Path} path The path to check for\r\n     * @return {boolean} Whether there is a complete write at that path\r\n     */\r\n    CompoundWrite.prototype.hasCompleteWrite = function (path) {\r\n        return this.getCompleteNode(path) != null;\r\n    };\r\n    /**\r\n     * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\r\n     * writes from deeper paths, but will return child nodes from a more shallow path.\r\n     *\r\n     * @param {!Path} path The path to get a complete write\r\n     * @return {?Node} The node if complete at that path, or null otherwise.\r\n     */\r\n    CompoundWrite.prototype.getCompleteNode = function (path) {\r\n        var rootmost = this.writeTree_.findRootMostValueAndPath(path);\r\n        if (rootmost != null) {\r\n            return this.writeTree_\r\n                .get(rootmost.path)\r\n                .getChild(Path.relativePath(rootmost.path, path));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Returns all children that are guaranteed to be a complete overwrite.\r\n     *\r\n     * @return {!Array.<NamedNode>} A list of all complete children.\r\n     */\r\n    CompoundWrite.prototype.getCompleteChildren = function () {\r\n        var children = [];\r\n        var node = this.writeTree_.value;\r\n        if (node != null) {\r\n            // If it's a leaf node, it has no children; so nothing to do.\r\n            if (!node.isLeafNode()) {\r\n                node.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n                    children.push(new NamedNode(childName, childNode));\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            this.writeTree_.children.inorderTraversal(function (childName, childTree) {\r\n                if (childTree.value != null) {\r\n                    children.push(new NamedNode(childName, childTree.value));\r\n                }\r\n            });\r\n        }\r\n        return children;\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @return {!CompoundWrite}\r\n     */\r\n    CompoundWrite.prototype.childCompoundWrite = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            var shadowingNode = this.getCompleteNode(path);\r\n            if (shadowingNode != null) {\r\n                return new CompoundWrite(new ImmutableTree(shadowingNode));\r\n            }\r\n            else {\r\n                return new CompoundWrite(this.writeTree_.subtree(path));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\r\n     * @return {boolean} Whether this CompoundWrite is empty\r\n     */\r\n    CompoundWrite.prototype.isEmpty = function () {\r\n        return this.writeTree_.isEmpty();\r\n    };\r\n    /**\r\n     * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\r\n     * node\r\n     * @param {!Node} node The node to apply this CompoundWrite to\r\n     * @return {!Node} The node with all writes applied\r\n     */\r\n    CompoundWrite.prototype.apply = function (node) {\r\n        return CompoundWrite.applySubtreeWrite_(Path.Empty, this.writeTree_, node);\r\n    };\r\n    /**\r\n     * @type {!CompoundWrite}\r\n     */\r\n    CompoundWrite.Empty = new CompoundWrite(new ImmutableTree(null));\r\n    /**\r\n     * @param {!Path} relativePath\r\n     * @param {!ImmutableTree.<!Node>} writeTree\r\n     * @param {!Node} node\r\n     * @return {!Node}\r\n     * @private\r\n     */\r\n    CompoundWrite.applySubtreeWrite_ = function (relativePath, writeTree, node) {\r\n        if (writeTree.value != null) {\r\n            // Since there a write is always a leaf, we're done here\r\n            return node.updateChild(relativePath, writeTree.value);\r\n        }\r\n        else {\r\n            var priorityWrite_1 = null;\r\n            writeTree.children.inorderTraversal(function (childKey, childTree) {\r\n                if (childKey === '.priority') {\r\n                    // Apply priorities at the end so we don't update priorities for either empty nodes or forget\r\n                    // to apply priorities to empty nodes that are later filled\r\n                    util.assert(childTree.value !== null, 'Priority writes must always be leaf nodes');\r\n                    priorityWrite_1 = childTree.value;\r\n                }\r\n                else {\r\n                    node = CompoundWrite.applySubtreeWrite_(relativePath.child(childKey), childTree, node);\r\n                }\r\n            });\r\n            // If there was a priority write, we only apply it if the node is not empty\r\n            if (!node.getChild(relativePath).isEmpty() && priorityWrite_1 !== null) {\r\n                node = node.updateChild(relativePath.child('.priority'), priorityWrite_1);\r\n            }\r\n            return node;\r\n        }\r\n    };\r\n    return CompoundWrite;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them\r\n * with underlying server data (to create \"event cache\" data).  Pending writes are added with addOverwrite()\r\n * and addMerge(), and removed with removeWrite().\r\n *\r\n * @constructor\r\n */\r\nvar WriteTree = /** @class */ (function () {\r\n    function WriteTree() {\r\n        /**\r\n         * A tree tracking the result of applying all visible writes.  This does not include transactions with\r\n         * applyLocally=false or writes that are completely shadowed by other writes.\r\n         *\r\n         * @type {!CompoundWrite}\r\n         * @private\r\n         */\r\n        this.visibleWrites_ = CompoundWrite.Empty;\r\n        /**\r\n         * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary\r\n         * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also\r\n         * used by transactions).\r\n         *\r\n         * @type {!Array.<!WriteRecord>}\r\n         * @private\r\n         */\r\n        this.allWrites_ = [];\r\n        this.lastWriteId_ = -1;\r\n    }\r\n    /**\r\n     * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {!WriteTreeRef}\r\n     */\r\n    WriteTree.prototype.childWrites = function (path) {\r\n        return new WriteTreeRef(path, this);\r\n    };\r\n    /**\r\n     * Record a new overwrite from user code.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} snap\r\n     * @param {!number} writeId\r\n     * @param {boolean=} visible This is set to false by some transactions. It should be excluded from event caches\r\n     */\r\n    WriteTree.prototype.addOverwrite = function (path, snap, writeId, visible) {\r\n        util.assert(writeId > this.lastWriteId_, 'Stacking an older write on top of newer ones');\r\n        if (visible === undefined) {\r\n            visible = true;\r\n        }\r\n        this.allWrites_.push({\r\n            path: path,\r\n            snap: snap,\r\n            writeId: writeId,\r\n            visible: visible\r\n        });\r\n        if (visible) {\r\n            this.visibleWrites_ = this.visibleWrites_.addWrite(path, snap);\r\n        }\r\n        this.lastWriteId_ = writeId;\r\n    };\r\n    /**\r\n     * Record a new merge from user code.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @param {!number} writeId\r\n     */\r\n    WriteTree.prototype.addMerge = function (path, changedChildren, writeId) {\r\n        util.assert(writeId > this.lastWriteId_, 'Stacking an older merge on top of newer ones');\r\n        this.allWrites_.push({\r\n            path: path,\r\n            children: changedChildren,\r\n            writeId: writeId,\r\n            visible: true\r\n        });\r\n        this.visibleWrites_ = this.visibleWrites_.addWrites(path, changedChildren);\r\n        this.lastWriteId_ = writeId;\r\n    };\r\n    /**\r\n     * @param {!number} writeId\r\n     * @return {?WriteRecord}\r\n     */\r\n    WriteTree.prototype.getWrite = function (writeId) {\r\n        for (var i = 0; i < this.allWrites_.length; i++) {\r\n            var record = this.allWrites_[i];\r\n            if (record.writeId === writeId) {\r\n                return record;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\r\n     * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\r\n     *\r\n     * @param {!number} writeId\r\n     * @return {boolean} true if the write may have been visible (meaning we'll need to reevaluate / raise\r\n     * events as a result).\r\n     */\r\n    WriteTree.prototype.removeWrite = function (writeId) {\r\n        // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\r\n        // out of order.\r\n        //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\r\n        //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\r\n        var _this = this;\r\n        var idx = this.allWrites_.findIndex(function (s) {\r\n            return s.writeId === writeId;\r\n        });\r\n        util.assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\r\n        var writeToRemove = this.allWrites_[idx];\r\n        this.allWrites_.splice(idx, 1);\r\n        var removedWriteWasVisible = writeToRemove.visible;\r\n        var removedWriteOverlapsWithOtherWrites = false;\r\n        var i = this.allWrites_.length - 1;\r\n        while (removedWriteWasVisible && i >= 0) {\r\n            var currentWrite = this.allWrites_[i];\r\n            if (currentWrite.visible) {\r\n                if (i >= idx &&\r\n                    this.recordContainsPath_(currentWrite, writeToRemove.path)) {\r\n                    // The removed write was completely shadowed by a subsequent write.\r\n                    removedWriteWasVisible = false;\r\n                }\r\n                else if (writeToRemove.path.contains(currentWrite.path)) {\r\n                    // Either we're covering some writes or they're covering part of us (depending on which came first).\r\n                    removedWriteOverlapsWithOtherWrites = true;\r\n                }\r\n            }\r\n            i--;\r\n        }\r\n        if (!removedWriteWasVisible) {\r\n            return false;\r\n        }\r\n        else if (removedWriteOverlapsWithOtherWrites) {\r\n            // There's some shadowing going on. Just rebuild the visible writes from scratch.\r\n            this.resetTree_();\r\n            return true;\r\n        }\r\n        else {\r\n            // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\r\n            if (writeToRemove.snap) {\r\n                this.visibleWrites_ = this.visibleWrites_.removeWrite(writeToRemove.path);\r\n            }\r\n            else {\r\n                var children = writeToRemove.children;\r\n                util.forEach(children, function (childName) {\r\n                    _this.visibleWrites_ = _this.visibleWrites_.removeWrite(writeToRemove.path.child(childName));\r\n                });\r\n            }\r\n            return true;\r\n        }\r\n    };\r\n    /**\r\n     * Return a complete snapshot for the given path if there's visible write data at that path, else null.\r\n     * No server data is considered.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.getCompleteWriteData = function (path) {\r\n        return this.visibleWrites_.getCompleteNode(path);\r\n    };\r\n    /**\r\n     * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\r\n     * writes), attempt to calculate a complete snapshot for the given path\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?Node} completeServerCache\r\n     * @param {Array.<number>=} writeIdsToExclude An optional set to be excluded\r\n     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcCompleteEventCache = function (treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n        if (!writeIdsToExclude && !includeHiddenWrites) {\r\n            var shadowingNode = this.visibleWrites_.getCompleteNode(treePath);\r\n            if (shadowingNode != null) {\r\n                return shadowingNode;\r\n            }\r\n            else {\r\n                var subMerge = this.visibleWrites_.childCompoundWrite(treePath);\r\n                if (subMerge.isEmpty()) {\r\n                    return completeServerCache;\r\n                }\r\n                else if (completeServerCache == null &&\r\n                    !subMerge.hasCompleteWrite(Path.Empty)) {\r\n                    // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\r\n                    return null;\r\n                }\r\n                else {\r\n                    var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                    return subMerge.apply(layeredCache);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n            if (!includeHiddenWrites && merge.isEmpty()) {\r\n                return completeServerCache;\r\n            }\r\n            else {\r\n                // If the server cache is null, and we don't have a complete cache, we need to return null\r\n                if (!includeHiddenWrites &&\r\n                    completeServerCache == null &&\r\n                    !merge.hasCompleteWrite(Path.Empty)) {\r\n                    return null;\r\n                }\r\n                else {\r\n                    var filter = function (write) {\r\n                        return ((write.visible || includeHiddenWrites) &&\r\n                            (!writeIdsToExclude ||\r\n                                !~writeIdsToExclude.indexOf(write.writeId)) &&\r\n                            (write.path.contains(treePath) || treePath.contains(write.path)));\r\n                    };\r\n                    var mergeAtPath = WriteTree.layerTree_(this.allWrites_, filter, treePath);\r\n                    var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                    return mergeAtPath.apply(layeredCache);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\r\n     * Used when creating new views, to pre-fill their complete event children snapshot.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?ChildrenNode} completeServerChildren\r\n     * @return {!ChildrenNode}\r\n     */\r\n    WriteTree.prototype.calcCompleteEventChildren = function (treePath, completeServerChildren) {\r\n        var completeChildren = ChildrenNode.EMPTY_NODE;\r\n        var topLevelSet = this.visibleWrites_.getCompleteNode(treePath);\r\n        if (topLevelSet) {\r\n            if (!topLevelSet.isLeafNode()) {\r\n                // we're shadowing everything. Return the children.\r\n                topLevelSet.forEachChild(PRIORITY_INDEX, function (childName, childSnap) {\r\n                    completeChildren = completeChildren.updateImmediateChild(childName, childSnap);\r\n                });\r\n            }\r\n            return completeChildren;\r\n        }\r\n        else if (completeServerChildren) {\r\n            // Layer any children we have on top of this\r\n            // We know we don't have a top-level set, so just enumerate existing children\r\n            var merge_1 = this.visibleWrites_.childCompoundWrite(treePath);\r\n            completeServerChildren.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n                var node = merge_1\r\n                    .childCompoundWrite(new Path(childName))\r\n                    .apply(childNode);\r\n                completeChildren = completeChildren.updateImmediateChild(childName, node);\r\n            });\r\n            // Add any complete children we have from the set\r\n            merge_1.getCompleteChildren().forEach(function (namedNode) {\r\n                completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n            });\r\n            return completeChildren;\r\n        }\r\n        else {\r\n            // We don't have anything to layer on top of. Layer on any children we have\r\n            // Note that we can return an empty snap if we have a defined delete\r\n            var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n            merge.getCompleteChildren().forEach(function (namedNode) {\r\n                completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n            });\r\n            return completeChildren;\r\n        }\r\n    };\r\n    /**\r\n     * Given that the underlying server data has updated, determine what, if anything, needs to be\r\n     * applied to the event cache.\r\n     *\r\n     * Possibilities:\r\n     *\r\n     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n     *\r\n     * 2. Some write is completely shadowing. No events to be raised\r\n     *\r\n     * 3. Is partially shadowed. Events\r\n     *\r\n     * Either existingEventSnap or existingServerSnap must exist\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {!Path} childPath\r\n     * @param {?Node} existingEventSnap\r\n     * @param {?Node} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcEventCacheAfterServerOverwrite = function (treePath, childPath, existingEventSnap, existingServerSnap) {\r\n        util.assert(existingEventSnap || existingServerSnap, 'Either existingEventSnap or existingServerSnap must exist');\r\n        var path = treePath.child(childPath);\r\n        if (this.visibleWrites_.hasCompleteWrite(path)) {\r\n            // At this point we can probably guarantee that we're in case 2, meaning no events\r\n            // May need to check visibility while doing the findRootMostValueAndPath call\r\n            return null;\r\n        }\r\n        else {\r\n            // No complete shadowing. We're either partially shadowing or not shadowing at all.\r\n            var childMerge = this.visibleWrites_.childCompoundWrite(path);\r\n            if (childMerge.isEmpty()) {\r\n                // We're not shadowing at all. Case 1\r\n                return existingServerSnap.getChild(childPath);\r\n            }\r\n            else {\r\n                // This could be more efficient if the serverNode + updates doesn't change the eventSnap\r\n                // However this is tricky to find out, since user updates don't necessary change the server\r\n                // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\r\n                // adds nodes, but doesn't change any existing writes. It is therefore not enough to\r\n                // only check if the updates change the serverNode.\r\n                // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\r\n                return childMerge.apply(existingServerSnap.getChild(childPath));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n     * complete child for this ChildKey.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {!string} childKey\r\n     * @param {!CacheNode} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcCompleteChild = function (treePath, childKey, existingServerSnap) {\r\n        var path = treePath.child(childKey);\r\n        var shadowingNode = this.visibleWrites_.getCompleteNode(path);\r\n        if (shadowingNode != null) {\r\n            return shadowingNode;\r\n        }\r\n        else {\r\n            if (existingServerSnap.isCompleteForChild(childKey)) {\r\n                var childMerge = this.visibleWrites_.childCompoundWrite(path);\r\n                return childMerge.apply(existingServerSnap.getNode().getImmediateChild(childKey));\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n     * a higher path, this will return the child of that write relative to the write and this path.\r\n     * Returns null if there is no write at this path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.shadowingWrite = function (path) {\r\n        return this.visibleWrites_.getCompleteNode(path);\r\n    };\r\n    /**\r\n     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n     * the window, but may now be in the window.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?Node} completeServerData\r\n     * @param {!NamedNode} startPost\r\n     * @param {!number} count\r\n     * @param {boolean} reverse\r\n     * @param {!Index} index\r\n     * @return {!Array.<!NamedNode>}\r\n     */\r\n    WriteTree.prototype.calcIndexedSlice = function (treePath, completeServerData, startPost, count, reverse, index) {\r\n        var toIterate;\r\n        var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n        var shadowingNode = merge.getCompleteNode(Path.Empty);\r\n        if (shadowingNode != null) {\r\n            toIterate = shadowingNode;\r\n        }\r\n        else if (completeServerData != null) {\r\n            toIterate = merge.apply(completeServerData);\r\n        }\r\n        else {\r\n            // no children to iterate on\r\n            return [];\r\n        }\r\n        toIterate = toIterate.withIndex(index);\r\n        if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\r\n            var nodes = [];\r\n            var cmp = index.getCompare();\r\n            var iter = reverse\r\n                ? toIterate.getReverseIteratorFrom(startPost, index)\r\n                : toIterate.getIteratorFrom(startPost, index);\r\n            var next = iter.getNext();\r\n            while (next && nodes.length < count) {\r\n                if (cmp(next, startPost) !== 0) {\r\n                    nodes.push(next);\r\n                }\r\n                next = iter.getNext();\r\n            }\r\n            return nodes;\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * @param {!WriteRecord} writeRecord\r\n     * @param {!Path} path\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    WriteTree.prototype.recordContainsPath_ = function (writeRecord, path) {\r\n        if (writeRecord.snap) {\r\n            return writeRecord.path.contains(path);\r\n        }\r\n        else {\r\n            // findKey can return undefined, so use !! to coerce to boolean\r\n            return !!util.findKey(writeRecord.children, function (childSnap, childName) {\r\n                return writeRecord.path.child(childName).contains(path);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\r\n     * @private\r\n     */\r\n    WriteTree.prototype.resetTree_ = function () {\r\n        this.visibleWrites_ = WriteTree.layerTree_(this.allWrites_, WriteTree.DefaultFilter_, Path.Empty);\r\n        if (this.allWrites_.length > 0) {\r\n            this.lastWriteId_ = this.allWrites_[this.allWrites_.length - 1].writeId;\r\n        }\r\n        else {\r\n            this.lastWriteId_ = -1;\r\n        }\r\n    };\r\n    /**\r\n     * The default filter used when constructing the tree. Keep everything that's visible.\r\n     *\r\n     * @param {!WriteRecord} write\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    WriteTree.DefaultFilter_ = function (write) {\r\n        return write.visible;\r\n    };\r\n    /**\r\n     * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\r\n     * event data at that path.\r\n     *\r\n     * @param {!Array.<!WriteRecord>} writes\r\n     * @param {!function(!WriteRecord):boolean} filter\r\n     * @param {!Path} treeRoot\r\n     * @return {!CompoundWrite}\r\n     * @private\r\n     */\r\n    WriteTree.layerTree_ = function (writes, filter, treeRoot) {\r\n        var compoundWrite = CompoundWrite.Empty;\r\n        for (var i = 0; i < writes.length; ++i) {\r\n            var write = writes[i];\r\n            // Theory, a later set will either:\r\n            // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\r\n            // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\r\n            if (filter(write)) {\r\n                var writePath = write.path;\r\n                var relativePath = void 0;\r\n                if (write.snap) {\r\n                    if (treeRoot.contains(writePath)) {\r\n                        relativePath = Path.relativePath(treeRoot, writePath);\r\n                        compoundWrite = compoundWrite.addWrite(relativePath, write.snap);\r\n                    }\r\n                    else if (writePath.contains(treeRoot)) {\r\n                        relativePath = Path.relativePath(writePath, treeRoot);\r\n                        compoundWrite = compoundWrite.addWrite(Path.Empty, write.snap.getChild(relativePath));\r\n                    }\r\n                    else {\r\n                        // There is no overlap between root path and write path, ignore write\r\n                    }\r\n                }\r\n                else if (write.children) {\r\n                    if (treeRoot.contains(writePath)) {\r\n                        relativePath = Path.relativePath(treeRoot, writePath);\r\n                        compoundWrite = compoundWrite.addWrites(relativePath, write.children);\r\n                    }\r\n                    else if (writePath.contains(treeRoot)) {\r\n                        relativePath = Path.relativePath(writePath, treeRoot);\r\n                        if (relativePath.isEmpty()) {\r\n                            compoundWrite = compoundWrite.addWrites(Path.Empty, write.children);\r\n                        }\r\n                        else {\r\n                            var child = util.safeGet(write.children, relativePath.getFront());\r\n                            if (child) {\r\n                                // There exists a child in this node that matches the root path\r\n                                var deepNode = child.getChild(relativePath.popFront());\r\n                                compoundWrite = compoundWrite.addWrite(Path.Empty, deepNode);\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        // There is no overlap between root path and write path, ignore write\r\n                    }\r\n                }\r\n                else {\r\n                    throw util.assertionError('WriteRecord should have .snap or .children');\r\n                }\r\n            }\r\n        }\r\n        return compoundWrite;\r\n    };\r\n    return WriteTree;\r\n}());\r\n/**\r\n * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods\r\n * just proxy to the underlying WriteTree.\r\n *\r\n * @constructor\r\n */\r\nvar WriteTreeRef = /** @class */ (function () {\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!WriteTree} writeTree\r\n     */\r\n    function WriteTreeRef(path, writeTree) {\r\n        this.treePath_ = path;\r\n        this.writeTree_ = writeTree;\r\n    }\r\n    /**\r\n     * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\r\n     * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\r\n     * can lead to a more expensive calculation.\r\n     *\r\n     * @param {?Node} completeServerCache\r\n     * @param {Array.<number>=} writeIdsToExclude Optional writes to exclude.\r\n     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteEventCache = function (completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n        return this.writeTree_.calcCompleteEventCache(this.treePath_, completeServerCache, writeIdsToExclude, includeHiddenWrites);\r\n    };\r\n    /**\r\n     * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\r\n     * mix of the given server data and write data.\r\n     *\r\n     * @param {?ChildrenNode} completeServerChildren\r\n     * @return {!ChildrenNode}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteEventChildren = function (completeServerChildren) {\r\n        return this.writeTree_.calcCompleteEventChildren(this.treePath_, completeServerChildren);\r\n    };\r\n    /**\r\n     * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\r\n     * if anything, needs to be applied to the event cache.\r\n     *\r\n     * Possibilities:\r\n     *\r\n     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n     *\r\n     * 2. Some write is completely shadowing. No events to be raised\r\n     *\r\n     * 3. Is partially shadowed. Events should be raised\r\n     *\r\n     * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\r\n     *\r\n     * @param {!Path} path\r\n     * @param {?Node} existingEventSnap\r\n     * @param {?Node} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcEventCacheAfterServerOverwrite = function (path, existingEventSnap, existingServerSnap) {\r\n        return this.writeTree_.calcEventCacheAfterServerOverwrite(this.treePath_, path, existingEventSnap, existingServerSnap);\r\n    };\r\n    /**\r\n     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n     * a higher path, this will return the child of that write relative to the write and this path.\r\n     * Returns null if there is no write at this path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.shadowingWrite = function (path) {\r\n        return this.writeTree_.shadowingWrite(this.treePath_.child(path));\r\n    };\r\n    /**\r\n     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n     * the window, but may now be in the window\r\n     *\r\n     * @param {?Node} completeServerData\r\n     * @param {!NamedNode} startPost\r\n     * @param {!number} count\r\n     * @param {boolean} reverse\r\n     * @param {!Index} index\r\n     * @return {!Array.<!NamedNode>}\r\n     */\r\n    WriteTreeRef.prototype.calcIndexedSlice = function (completeServerData, startPost, count, reverse, index) {\r\n        return this.writeTree_.calcIndexedSlice(this.treePath_, completeServerData, startPost, count, reverse, index);\r\n    };\r\n    /**\r\n     * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n     * complete child for this ChildKey.\r\n     *\r\n     * @param {!string} childKey\r\n     * @param {!CacheNode} existingServerCache\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteChild = function (childKey, existingServerCache) {\r\n        return this.writeTree_.calcCompleteChild(this.treePath_, childKey, existingServerCache);\r\n    };\r\n    /**\r\n     * Return a WriteTreeRef for a child.\r\n     *\r\n     * @param {string} childName\r\n     * @return {!WriteTreeRef}\r\n     */\r\n    WriteTreeRef.prototype.child = function (childName) {\r\n        return new WriteTreeRef(this.treePath_.child(childName), this.writeTree_);\r\n    };\r\n    return WriteTreeRef;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * SyncTree is the central class for managing event callback registration, data caching, views\r\n * (query processing), and event generation.  There are typically two SyncTree instances for\r\n * each Repo, one for the normal Firebase data, and one for the .info data.\r\n *\r\n * It has a number of responsibilities, including:\r\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\r\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\r\n *    (applyUserOverwrite(), applyUserMerge()).\r\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\r\n *    applyServerMerge()).\r\n *  - Generating user-facing events for server and user changes (all of the apply* methods\r\n *    return the set of events that need to be raised as a result).\r\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\r\n *    to the correct set of paths and queries to satisfy the current set of user event\r\n *    callbacks (listens are started/stopped using the provided listenProvider).\r\n *\r\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\r\n * events are returned to the caller rather than raised synchronously.\r\n *\r\n * @constructor\r\n */\r\nvar SyncTree = /** @class */ (function () {\r\n    /**\r\n     * @param {!ListenProvider} listenProvider_ Used by SyncTree to start / stop listening\r\n     *   to server data.\r\n     */\r\n    function SyncTree(listenProvider_) {\r\n        this.listenProvider_ = listenProvider_;\r\n        /**\r\n         * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\r\n         * @type {!ImmutableTree.<!SyncPoint>}\r\n         * @private\r\n         */\r\n        this.syncPointTree_ = ImmutableTree.Empty;\r\n        /**\r\n         * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\r\n         * @type {!WriteTree}\r\n         * @private\r\n         */\r\n        this.pendingWriteTree_ = new WriteTree();\r\n        this.tagToQueryMap_ = {};\r\n        this.queryToTagMap_ = {};\r\n    }\r\n    /**\r\n     * Apply the data changes for a user-generated set() or transaction() call.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} newData\r\n     * @param {number} writeId\r\n     * @param {boolean=} visible\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyUserOverwrite = function (path, newData, writeId, visible) {\r\n        // Record pending write.\r\n        this.pendingWriteTree_.addOverwrite(path, newData, writeId, visible);\r\n        if (!visible) {\r\n            return [];\r\n        }\r\n        else {\r\n            return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.User, path, newData));\r\n        }\r\n    };\r\n    /**\r\n     * Apply the data from a user-generated update() call\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @param {!number} writeId\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyUserMerge = function (path, changedChildren, writeId) {\r\n        // Record pending merge.\r\n        this.pendingWriteTree_.addMerge(path, changedChildren, writeId);\r\n        var changeTree = ImmutableTree.fromObject(changedChildren);\r\n        return this.applyOperationToSyncPoints_(new Merge(OperationSource.User, path, changeTree));\r\n    };\r\n    /**\r\n     * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\r\n     *\r\n     * @param {!number} writeId\r\n     * @param {boolean=} revert True if the given write failed and needs to be reverted\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.ackUserWrite = function (writeId, revert) {\r\n        if (revert === void 0) { revert = false; }\r\n        var write = this.pendingWriteTree_.getWrite(writeId);\r\n        var needToReevaluate = this.pendingWriteTree_.removeWrite(writeId);\r\n        if (!needToReevaluate) {\r\n            return [];\r\n        }\r\n        else {\r\n            var affectedTree_1 = ImmutableTree.Empty;\r\n            if (write.snap != null) {\r\n                // overwrite\r\n                affectedTree_1 = affectedTree_1.set(Path.Empty, true);\r\n            }\r\n            else {\r\n                util.forEach(write.children, function (pathString, node) {\r\n                    affectedTree_1 = affectedTree_1.set(new Path(pathString), node);\r\n                });\r\n            }\r\n            return this.applyOperationToSyncPoints_(new AckUserWrite(write.path, affectedTree_1, revert));\r\n        }\r\n    };\r\n    /**\r\n     * Apply new server data for the specified path..\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} newData\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyServerOverwrite = function (path, newData) {\r\n        return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.Server, path, newData));\r\n    };\r\n    /**\r\n     * Apply new server data to be merged in at the specified path.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyServerMerge = function (path, changedChildren) {\r\n        var changeTree = ImmutableTree.fromObject(changedChildren);\r\n        return this.applyOperationToSyncPoints_(new Merge(OperationSource.Server, path, changeTree));\r\n    };\r\n    /**\r\n     * Apply a listen complete for a query\r\n     *\r\n     * @param {!Path} path\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyListenComplete = function (path) {\r\n        return this.applyOperationToSyncPoints_(new ListenComplete(OperationSource.Server, path));\r\n    };\r\n    /**\r\n     * Apply new server data for the specified tagged query.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} snap\r\n     * @param {!number} tag\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedQueryOverwrite = function (path, snap, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey != null) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var op = new Overwrite(OperationSource.forServerTaggedQuery(queryId), relativePath, snap);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // Query must have been removed already\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Apply server data to be merged in for the specified tagged query.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @param {!number} tag\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedQueryMerge = function (path, changedChildren, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var changeTree = ImmutableTree.fromObject(changedChildren);\r\n            var op = new Merge(OperationSource.forServerTaggedQuery(queryId), relativePath, changeTree);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // We've already removed the query. No big deal, ignore the update\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Apply a listen complete for a tagged query\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!number} tag\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedListenComplete = function (path, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var op = new ListenComplete(OperationSource.forServerTaggedQuery(queryId), relativePath);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // We've already removed the query. No big deal, ignore the update\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Add an event callback for the specified query.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {!EventRegistration} eventRegistration\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.addEventRegistration = function (query, eventRegistration) {\r\n        var path = query.path;\r\n        var serverCache = null;\r\n        var foundAncestorDefaultView = false;\r\n        // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\r\n        // Consider optimizing this once there's a better understanding of what actual behavior will be.\r\n        this.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\r\n            var relativePath = Path.relativePath(pathToSyncPoint, path);\r\n            serverCache = serverCache || sp.getCompleteServerCache(relativePath);\r\n            foundAncestorDefaultView =\r\n                foundAncestorDefaultView || sp.hasCompleteView();\r\n        });\r\n        var syncPoint = this.syncPointTree_.get(path);\r\n        if (!syncPoint) {\r\n            syncPoint = new SyncPoint();\r\n            this.syncPointTree_ = this.syncPointTree_.set(path, syncPoint);\r\n        }\r\n        else {\r\n            foundAncestorDefaultView =\r\n                foundAncestorDefaultView || syncPoint.hasCompleteView();\r\n            serverCache = serverCache || syncPoint.getCompleteServerCache(Path.Empty);\r\n        }\r\n        var serverCacheComplete;\r\n        if (serverCache != null) {\r\n            serverCacheComplete = true;\r\n        }\r\n        else {\r\n            serverCacheComplete = false;\r\n            serverCache = ChildrenNode.EMPTY_NODE;\r\n            var subtree = this.syncPointTree_.subtree(path);\r\n            subtree.foreachChild(function (childName, childSyncPoint) {\r\n                var completeCache = childSyncPoint.getCompleteServerCache(Path.Empty);\r\n                if (completeCache) {\r\n                    serverCache = serverCache.updateImmediateChild(childName, completeCache);\r\n                }\r\n            });\r\n        }\r\n        var viewAlreadyExists = syncPoint.viewExistsForQuery(query);\r\n        if (!viewAlreadyExists && !query.getQueryParams().loadsAllData()) {\r\n            // We need to track a tag for this query\r\n            var queryKey = SyncTree.makeQueryKey_(query);\r\n            util.assert(!(queryKey in this.queryToTagMap_), 'View does not exist, but we have a tag');\r\n            var tag = SyncTree.getNextQueryTag_();\r\n            this.queryToTagMap_[queryKey] = tag;\r\n            // Coerce to string to avoid sparse arrays.\r\n            this.tagToQueryMap_['_' + tag] = queryKey;\r\n        }\r\n        var writesCache = this.pendingWriteTree_.childWrites(path);\r\n        var events = syncPoint.addEventRegistration(query, eventRegistration, writesCache, serverCache, serverCacheComplete);\r\n        if (!viewAlreadyExists && !foundAncestorDefaultView) {\r\n            var view /** @type !View */ = syncPoint.viewForQuery(query);\r\n            events = events.concat(this.setupListener_(query, view));\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     * Remove event callback(s).\r\n     *\r\n     * If query is the default query, we'll check all queries for the specified eventRegistration.\r\n     * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {?EventRegistration} eventRegistration If null, all callbacks are removed.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {!Array.<!Event>} Cancel events, if cancelError was provided.\r\n     */\r\n    SyncTree.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\r\n        var _this = this;\r\n        // Find the syncPoint first. Then deal with whether or not it has matching listeners\r\n        var path = query.path;\r\n        var maybeSyncPoint = this.syncPointTree_.get(path);\r\n        var cancelEvents = [];\r\n        // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\r\n        // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\r\n        // not loadsAllData().\r\n        if (maybeSyncPoint &&\r\n            (query.queryIdentifier() === 'default' ||\r\n                maybeSyncPoint.viewExistsForQuery(query))) {\r\n            /**\r\n             * @type {{removed: !Array.<!Query>, events: !Array.<!Event>}}\r\n             */\r\n            var removedAndEvents = maybeSyncPoint.removeEventRegistration(query, eventRegistration, cancelError);\r\n            if (maybeSyncPoint.isEmpty()) {\r\n                this.syncPointTree_ = this.syncPointTree_.remove(path);\r\n            }\r\n            var removed = removedAndEvents.removed;\r\n            cancelEvents = removedAndEvents.events;\r\n            // We may have just removed one of many listeners and can short-circuit this whole process\r\n            // We may also not have removed a default listener, in which case all of the descendant listeners should already be\r\n            // properly set up.\r\n            //\r\n            // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\r\n            // queryId === 'default'\r\n            var removingDefault = -1 !==\r\n                removed.findIndex(function (query) {\r\n                    return query.getQueryParams().loadsAllData();\r\n                });\r\n            var covered = this.syncPointTree_.findOnPath(path, function (relativePath, parentSyncPoint) {\r\n                return parentSyncPoint.hasCompleteView();\r\n            });\r\n            if (removingDefault && !covered) {\r\n                var subtree = this.syncPointTree_.subtree(path);\r\n                // There are potentially child listeners. Determine what if any listens we need to send before executing the\r\n                // removal\r\n                if (!subtree.isEmpty()) {\r\n                    // We need to fold over our subtree and collect the listeners to send\r\n                    var newViews = this.collectDistinctViewsForSubTree_(subtree);\r\n                    // Ok, we've collected all the listens we need. Set them up.\r\n                    for (var i = 0; i < newViews.length; ++i) {\r\n                        var view = newViews[i], newQuery = view.getQuery();\r\n                        var listener = this.createListenerForView_(view);\r\n                        this.listenProvider_.startListening(SyncTree.queryForListening_(newQuery), this.tagForQuery_(newQuery), listener.hashFn, listener.onComplete);\r\n                    }\r\n                }\r\n                else {\r\n                    // There's nothing below us, so nothing we need to start listening on\r\n                }\r\n            }\r\n            // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\r\n            // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\r\n            // Also, note that if we have a cancelError, it's already been removed at the provider level.\r\n            if (!covered && removed.length > 0 && !cancelError) {\r\n                // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\r\n                // default. Otherwise, we need to iterate through and cancel each individual query\r\n                if (removingDefault) {\r\n                    // We don't tag default listeners\r\n                    var defaultTag = null;\r\n                    this.listenProvider_.stopListening(SyncTree.queryForListening_(query), defaultTag);\r\n                }\r\n                else {\r\n                    removed.forEach(function (queryToRemove) {\r\n                        var tagToRemove = _this.queryToTagMap_[SyncTree.makeQueryKey_(queryToRemove)];\r\n                        _this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToRemove), tagToRemove);\r\n                    });\r\n                }\r\n            }\r\n            // Now, clear all of the tags we're tracking for the removed listens\r\n            this.removeTags_(removed);\r\n        }\r\n        else {\r\n            // No-op, this listener must've been already removed\r\n        }\r\n        return cancelEvents;\r\n    };\r\n    /**\r\n     * Returns a complete cache, if we have one, of the data at a particular path. The location must have a listener above\r\n     * it, but as this is only used by transaction code, that should always be the case anyways.\r\n     *\r\n     * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\r\n     * @param {!Path} path The path to the data we want\r\n     * @param {Array.<number>=} writeIdsToExclude A specific set to be excluded\r\n     * @return {?Node}\r\n     */\r\n    SyncTree.prototype.calcCompleteEventCache = function (path, writeIdsToExclude) {\r\n        var includeHiddenSets = true;\r\n        var writeTree = this.pendingWriteTree_;\r\n        var serverCache = this.syncPointTree_.findOnPath(path, function (pathSoFar, syncPoint) {\r\n            var relativePath = Path.relativePath(pathSoFar, path);\r\n            var serverCache = syncPoint.getCompleteServerCache(relativePath);\r\n            if (serverCache) {\r\n                return serverCache;\r\n            }\r\n        });\r\n        return writeTree.calcCompleteEventCache(path, serverCache, writeIdsToExclude, includeHiddenSets);\r\n    };\r\n    /**\r\n     * This collapses multiple unfiltered views into a single view, since we only need a single\r\n     * listener for them.\r\n     *\r\n     * @param {!ImmutableTree.<!SyncPoint>} subtree\r\n     * @return {!Array.<!View>}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.collectDistinctViewsForSubTree_ = function (subtree) {\r\n        return subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n            if (maybeChildSyncPoint && maybeChildSyncPoint.hasCompleteView()) {\r\n                var completeView = maybeChildSyncPoint.getCompleteView();\r\n                return [completeView];\r\n            }\r\n            else {\r\n                // No complete view here, flatten any deeper listens into an array\r\n                var views_1 = [];\r\n                if (maybeChildSyncPoint) {\r\n                    views_1 = maybeChildSyncPoint.getQueryViews();\r\n                }\r\n                util.forEach(childMap, function (key, childViews) {\r\n                    views_1 = views_1.concat(childViews);\r\n                });\r\n                return views_1;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Array.<!Query>} queries\r\n     * @private\r\n     */\r\n    SyncTree.prototype.removeTags_ = function (queries) {\r\n        for (var j = 0; j < queries.length; ++j) {\r\n            var removedQuery = queries[j];\r\n            if (!removedQuery.getQueryParams().loadsAllData()) {\r\n                // We should have a tag for this\r\n                var removedQueryKey = SyncTree.makeQueryKey_(removedQuery);\r\n                var removedQueryTag = this.queryToTagMap_[removedQueryKey];\r\n                delete this.queryToTagMap_[removedQueryKey];\r\n                delete this.tagToQueryMap_['_' + removedQueryTag];\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Normalizes a query to a query we send the server for listening\r\n     * @param {!Query} query\r\n     * @return {!Query} The normalized query\r\n     * @private\r\n     */\r\n    SyncTree.queryForListening_ = function (query) {\r\n        if (query.getQueryParams().loadsAllData() &&\r\n            !query.getQueryParams().isDefault()) {\r\n            // We treat queries that load all data as default queries\r\n            // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\r\n            // from Query\r\n            return /** @type {!Query} */ query.getRef();\r\n        }\r\n        else {\r\n            return query;\r\n        }\r\n    };\r\n    /**\r\n     * For a given new listen, manage the de-duplication of outstanding subscriptions.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {!View} view\r\n     * @return {!Array.<!Event>} This method can return events to support synchronous data sources\r\n     * @private\r\n     */\r\n    SyncTree.prototype.setupListener_ = function (query, view) {\r\n        var path = query.path;\r\n        var tag = this.tagForQuery_(query);\r\n        var listener = this.createListenerForView_(view);\r\n        var events = this.listenProvider_.startListening(SyncTree.queryForListening_(query), tag, listener.hashFn, listener.onComplete);\r\n        var subtree = this.syncPointTree_.subtree(path);\r\n        // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\r\n        // may need to shadow other listens as well.\r\n        if (tag) {\r\n            util.assert(!subtree.value.hasCompleteView(), \"If we're adding a query, it shouldn't be shadowed\");\r\n        }\r\n        else {\r\n            // Shadow everything at or below this location, this is a default listener.\r\n            var queriesToStop = subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n                if (!relativePath.isEmpty() &&\r\n                    maybeChildSyncPoint &&\r\n                    maybeChildSyncPoint.hasCompleteView()) {\r\n                    return [maybeChildSyncPoint.getCompleteView().getQuery()];\r\n                }\r\n                else {\r\n                    // No default listener here, flatten any deeper queries into an array\r\n                    var queries_1 = [];\r\n                    if (maybeChildSyncPoint) {\r\n                        queries_1 = queries_1.concat(maybeChildSyncPoint.getQueryViews().map(function (view) { return view.getQuery(); }));\r\n                    }\r\n                    util.forEach(childMap, function (key, childQueries) {\r\n                        queries_1 = queries_1.concat(childQueries);\r\n                    });\r\n                    return queries_1;\r\n                }\r\n            });\r\n            for (var i = 0; i < queriesToStop.length; ++i) {\r\n                var queryToStop = queriesToStop[i];\r\n                this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToStop), this.tagForQuery_(queryToStop));\r\n            }\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     *\r\n     * @param {!View} view\r\n     * @return {{hashFn: function(), onComplete: function(!string, *)}}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.createListenerForView_ = function (view) {\r\n        var _this = this;\r\n        var query = view.getQuery();\r\n        var tag = this.tagForQuery_(query);\r\n        return {\r\n            hashFn: function () {\r\n                var cache = view.getServerCache() || ChildrenNode.EMPTY_NODE;\r\n                return cache.hash();\r\n            },\r\n            onComplete: function (status) {\r\n                if (status === 'ok') {\r\n                    if (tag) {\r\n                        return _this.applyTaggedListenComplete(query.path, tag);\r\n                    }\r\n                    else {\r\n                        return _this.applyListenComplete(query.path);\r\n                    }\r\n                }\r\n                else {\r\n                    // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\r\n                    // Note that this may need to be scoped to just this listener if we change permissions on filtered children\r\n                    var error$$1 = errorForServerCode(status, query);\r\n                    return _this.removeEventRegistration(query, \r\n                    /*eventRegistration*/ null, error$$1);\r\n                }\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\r\n     * @private\r\n     * @param {!Query} query\r\n     * @return {string}\r\n     */\r\n    SyncTree.makeQueryKey_ = function (query) {\r\n        return query.path.toString() + '$' + query.queryIdentifier();\r\n    };\r\n    /**\r\n     * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\r\n     * @private\r\n     * @param {!string} queryKey\r\n     * @return {{queryId: !string, path: !Path}}\r\n     */\r\n    SyncTree.parseQueryKey_ = function (queryKey) {\r\n        var splitIndex = queryKey.indexOf('$');\r\n        util.assert(splitIndex !== -1 && splitIndex < queryKey.length - 1, 'Bad queryKey.');\r\n        return {\r\n            queryId: queryKey.substr(splitIndex + 1),\r\n            path: new Path(queryKey.substr(0, splitIndex))\r\n        };\r\n    };\r\n    /**\r\n     * Return the query associated with the given tag, if we have one\r\n     * @param {!number} tag\r\n     * @return {?string}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.queryKeyForTag_ = function (tag) {\r\n        return this.tagToQueryMap_['_' + tag];\r\n    };\r\n    /**\r\n     * Return the tag associated with the given query.\r\n     * @param {!Query} query\r\n     * @return {?number}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.tagForQuery_ = function (query) {\r\n        var queryKey = SyncTree.makeQueryKey_(query);\r\n        return util.safeGet(this.queryToTagMap_, queryKey);\r\n    };\r\n    /**\r\n     * Static accessor for query tags.\r\n     * @return {number}\r\n     * @private\r\n     */\r\n    SyncTree.getNextQueryTag_ = function () {\r\n        return SyncTree.nextQueryTag_++;\r\n    };\r\n    /**\r\n     * A helper method to apply tagged operations\r\n     *\r\n     * @param {!Path} queryPath\r\n     * @param {!Operation} operation\r\n     * @return {!Array.<!Event>}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.applyTaggedOperation_ = function (queryPath, operation) {\r\n        var syncPoint = this.syncPointTree_.get(queryPath);\r\n        util.assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\r\n        var writesCache = this.pendingWriteTree_.childWrites(queryPath);\r\n        return syncPoint.applyOperation(operation, writesCache, \r\n        /*serverCache=*/ null);\r\n    };\r\n    /**\r\n     * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\r\n     *\r\n     * NOTES:\r\n     * - Descendant SyncPoints will be visited first (since we raise events depth-first).\r\n  \n     * - We call applyOperation() on each SyncPoint passing three things:\r\n     *   1. A version of the Operation that has been made relative to the SyncPoint location.\r\n     *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\r\n     *   3. A snapshot Node with cached server data, if we have it.\r\n  \n     * - We concatenate all of the events returned by each SyncPoint and return the result.\r\n     *\r\n     * @param {!Operation} operation\r\n     * @return {!Array.<!Event>}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.applyOperationToSyncPoints_ = function (operation) {\r\n        return this.applyOperationHelper_(operation, this.syncPointTree_, \r\n        /*serverCache=*/ null, this.pendingWriteTree_.childWrites(Path.Empty));\r\n    };\r\n    /**\r\n     * Recursive helper for applyOperationToSyncPoints_\r\n     *\r\n     * @private\r\n     * @param {!Operation} operation\r\n     * @param {ImmutableTree.<!SyncPoint>} syncPointTree\r\n     * @param {?Node} serverCache\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    SyncTree.prototype.applyOperationHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\r\n        if (operation.path.isEmpty()) {\r\n            return this.applyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache);\r\n        }\r\n        else {\r\n            var syncPoint = syncPointTree.get(Path.Empty);\r\n            // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n            if (serverCache == null && syncPoint != null) {\r\n                serverCache = syncPoint.getCompleteServerCache(Path.Empty);\r\n            }\r\n            var events = [];\r\n            var childName = operation.path.getFront();\r\n            var childOperation = operation.operationForChild(childName);\r\n            var childTree = syncPointTree.children.get(childName);\r\n            if (childTree && childOperation) {\r\n                var childServerCache = serverCache\r\n                    ? serverCache.getImmediateChild(childName)\r\n                    : null;\r\n                var childWritesCache = writesCache.child(childName);\r\n                events = events.concat(this.applyOperationHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n            }\r\n            if (syncPoint) {\r\n                events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\r\n            }\r\n            return events;\r\n        }\r\n    };\r\n    /**\r\n     * Recursive helper for applyOperationToSyncPoints_\r\n     *\r\n     * @private\r\n     * @param {!Operation} operation\r\n     * @param {ImmutableTree.<!SyncPoint>} syncPointTree\r\n     * @param {?Node} serverCache\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    SyncTree.prototype.applyOperationDescendantsHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\r\n        var _this = this;\r\n        var syncPoint = syncPointTree.get(Path.Empty);\r\n        // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n        if (serverCache == null && syncPoint != null) {\r\n            serverCache = syncPoint.getCompleteServerCache(Path.Empty);\r\n        }\r\n        var events = [];\r\n        syncPointTree.children.inorderTraversal(function (childName, childTree) {\r\n            var childServerCache = serverCache\r\n                ? serverCache.getImmediateChild(childName)\r\n                : null;\r\n            var childWritesCache = writesCache.child(childName);\r\n            var childOperation = operation.operationForChild(childName);\r\n            if (childOperation) {\r\n                events = events.concat(_this.applyOperationDescendantsHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n            }\r\n        });\r\n        if (syncPoint) {\r\n            events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     * Static tracker for next query tag.\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    SyncTree.nextQueryTag_ = 1;\r\n    return SyncTree;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\r\n *\r\n * @constructor\r\n */\r\nvar SnapshotHolder = /** @class */ (function () {\r\n    function SnapshotHolder() {\r\n        this.rootNode_ = ChildrenNode.EMPTY_NODE;\r\n    }\r\n    SnapshotHolder.prototype.getNode = function (path) {\r\n        return this.rootNode_.getChild(path);\r\n    };\r\n    SnapshotHolder.prototype.updateSnapshot = function (path, newSnapshotNode) {\r\n        this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\r\n    };\r\n    return SnapshotHolder;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Abstraction around FirebaseApp's token fetching capabilities.\r\n */\r\nvar AuthTokenProvider = /** @class */ (function () {\r\n    /**\r\n     * @param {!FirebaseApp} app_\r\n     */\r\n    function AuthTokenProvider(app_) {\r\n        this.app_ = app_;\r\n    }\r\n    /**\r\n     * @param {boolean} forceRefresh\r\n     * @return {!Promise<FirebaseAuthTokenData>}\r\n     */\r\n    AuthTokenProvider.prototype.getToken = function (forceRefresh) {\r\n        return this.app_['INTERNAL']['getToken'](forceRefresh).then(null, \r\n        // .catch\r\n        function (error$$1) {\r\n            // TODO: Need to figure out all the cases this is raised and whether\r\n            // this makes sense.\r\n            if (error$$1 && error$$1.code === 'auth/token-not-initialized') {\r\n                log('Got auth/token-not-initialized error.  Treating as null token.');\r\n                return null;\r\n            }\r\n            else {\r\n                return Promise.reject(error$$1);\r\n            }\r\n        });\r\n    };\r\n    AuthTokenProvider.prototype.addTokenChangeListener = function (listener) {\r\n        // TODO: We might want to wrap the listener and call it with no args to\r\n        // avoid a leaky abstraction, but that makes removing the listener harder.\r\n        this.app_['INTERNAL']['addAuthTokenListener'](listener);\r\n    };\r\n    AuthTokenProvider.prototype.removeTokenChangeListener = function (listener) {\r\n        this.app_['INTERNAL']['removeAuthTokenListener'](listener);\r\n    };\r\n    AuthTokenProvider.prototype.notifyForInvalidToken = function () {\r\n        var errorMessage = 'Provided authentication credentials for the app named \"' +\r\n            this.app_.name +\r\n            '\" are invalid. This usually indicates your app was not ' +\r\n            'initialized correctly. ';\r\n        if ('credential' in this.app_.options) {\r\n            errorMessage +=\r\n                'Make sure the \"credential\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else if ('serviceAccount' in this.app_.options) {\r\n            errorMessage +=\r\n                'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else {\r\n            errorMessage +=\r\n                'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\r\n                    'initializeApp() match the values provided for your app at ' +\r\n                    'https://console.firebase.google.com/.';\r\n        }\r\n        warn(errorMessage);\r\n    };\r\n    return AuthTokenProvider;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Tracks a collection of stats.\r\n *\r\n * @constructor\r\n */\r\nvar StatsCollection = /** @class */ (function () {\r\n    function StatsCollection() {\r\n        this.counters_ = {};\r\n    }\r\n    StatsCollection.prototype.incrementCounter = function (name, amount) {\r\n        if (amount === void 0) { amount = 1; }\r\n        if (!util.contains(this.counters_, name))\r\n            this.counters_[name] = 0;\r\n        this.counters_[name] += amount;\r\n    };\r\n    StatsCollection.prototype.get = function () {\r\n        return util.deepCopy(this.counters_);\r\n    };\r\n    return StatsCollection;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar StatsManager = /** @class */ (function () {\r\n    function StatsManager() {\r\n    }\r\n    StatsManager.getCollection = function (repoInfo) {\r\n        var hashString = repoInfo.toString();\r\n        if (!this.collections_[hashString]) {\r\n            this.collections_[hashString] = new StatsCollection();\r\n        }\r\n        return this.collections_[hashString];\r\n    };\r\n    StatsManager.getOrCreateReporter = function (repoInfo, creatorFunction) {\r\n        var hashString = repoInfo.toString();\r\n        if (!this.reporters_[hashString]) {\r\n            this.reporters_[hashString] = creatorFunction();\r\n        }\r\n        return this.reporters_[hashString];\r\n    };\r\n    StatsManager.collections_ = {};\r\n    StatsManager.reporters_ = {};\r\n    return StatsManager;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns the delta from the previous call to get stats.\r\n *\r\n * @param collection_ The collection to \"listen\" to.\r\n * @constructor\r\n */\r\nvar StatsListener = /** @class */ (function () {\r\n    function StatsListener(collection_) {\r\n        this.collection_ = collection_;\r\n        this.last_ = null;\r\n    }\r\n    StatsListener.prototype.get = function () {\r\n        var newStats = this.collection_.get();\r\n        var delta = util.clone(newStats);\r\n        if (this.last_) {\r\n            util.forEach(this.last_, function (stat, value) {\r\n                delta[stat] = delta[stat] - value;\r\n            });\r\n        }\r\n        this.last_ = newStats;\r\n        return delta;\r\n    };\r\n    return StatsListener;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\r\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\r\n// seconds to try to ensure the Firebase connection is established / settled.\r\nvar FIRST_STATS_MIN_TIME = 10 * 1000;\r\nvar FIRST_STATS_MAX_TIME = 30 * 1000;\r\n// We'll continue to report stats on average every 5 minutes.\r\nvar REPORT_STATS_INTERVAL = 5 * 60 * 1000;\r\n/**\r\n * @constructor\r\n */\r\nvar StatsReporter = /** @class */ (function () {\r\n    /**\r\n     * @param collection\r\n     * @param server_\r\n     */\r\n    function StatsReporter(collection, server_) {\r\n        this.server_ = server_;\r\n        this.statsToReport_ = {};\r\n        this.statsListener_ = new StatsListener(collection);\r\n        var timeout = FIRST_STATS_MIN_TIME +\r\n            (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\r\n    }\r\n    StatsReporter.prototype.includeStat = function (stat) {\r\n        this.statsToReport_[stat] = true;\r\n    };\r\n    StatsReporter.prototype.reportStats_ = function () {\r\n        var _this = this;\r\n        var stats = this.statsListener_.get();\r\n        var reportedStats = {};\r\n        var haveStatsToReport = false;\r\n        util.forEach(stats, function (stat, value) {\r\n            if (value > 0 && util.contains(_this.statsToReport_, stat)) {\r\n                reportedStats[stat] = value;\r\n                haveStatsToReport = true;\r\n            }\r\n        });\r\n        if (haveStatsToReport) {\r\n            this.server_.reportStats(reportedStats);\r\n        }\r\n        // queue our next run.\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL));\r\n    };\r\n    return StatsReporter;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The event queue serves a few purposes:\r\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\r\n *    events being queued.\r\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\r\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\r\n *    left off, ensuring that the events are still raised synchronously and in order.\r\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\r\n *    events are raised synchronously.\r\n *\r\n * NOTE: This can all go away if/when we move to async events.\r\n *\r\n * @constructor\r\n */\r\nvar EventQueue = /** @class */ (function () {\r\n    function EventQueue() {\r\n        /**\r\n         * @private\r\n         * @type {!Array.<EventList>}\r\n         */\r\n        this.eventLists_ = [];\r\n        /**\r\n         * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\r\n         * @private\r\n         * @type {!number}\r\n         */\r\n        this.recursionDepth_ = 0;\r\n    }\r\n    /**\r\n     * @param {!Array.<Event>} eventDataList The new events to queue.\r\n     */\r\n    EventQueue.prototype.queueEvents = function (eventDataList) {\r\n        // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\r\n        var currList = null;\r\n        for (var i = 0; i < eventDataList.length; i++) {\r\n            var eventData = eventDataList[i];\r\n            var eventPath = eventData.getPath();\r\n            if (currList !== null && !eventPath.equals(currList.getPath())) {\r\n                this.eventLists_.push(currList);\r\n                currList = null;\r\n            }\r\n            if (currList === null) {\r\n                currList = new EventList(eventPath);\r\n            }\r\n            currList.add(eventData);\r\n        }\r\n        if (currList) {\r\n            this.eventLists_.push(currList);\r\n        }\r\n    };\r\n    /**\r\n     * Queues the specified events and synchronously raises all events (including previously queued ones)\r\n     * for the specified path.\r\n     *\r\n     * It is assumed that the new events are all for the specified path.\r\n     *\r\n     * @param {!Path} path The path to raise events for.\r\n     * @param {!Array.<Event>} eventDataList The new events to raise.\r\n     */\r\n    EventQueue.prototype.raiseEventsAtPath = function (path, eventDataList) {\r\n        this.queueEvents(eventDataList);\r\n        this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\r\n            return eventPath.equals(path);\r\n        });\r\n    };\r\n    /**\r\n     * Queues the specified events and synchronously raises all events (including previously queued ones) for\r\n     * locations related to the specified change path (i.e. all ancestors and descendants).\r\n     *\r\n     * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\r\n     *\r\n     * @param {!Path} changedPath The path to raise events for.\r\n     * @param {!Array.<!Event>} eventDataList The events to raise\r\n     */\r\n    EventQueue.prototype.raiseEventsForChangedPath = function (changedPath, eventDataList) {\r\n        this.queueEvents(eventDataList);\r\n        this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\r\n            return eventPath.contains(changedPath) || changedPath.contains(eventPath);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!function(!Path):boolean} predicate\r\n     * @private\r\n     */\r\n    EventQueue.prototype.raiseQueuedEventsMatchingPredicate_ = function (predicate) {\r\n        this.recursionDepth_++;\r\n        var sentAll = true;\r\n        for (var i = 0; i < this.eventLists_.length; i++) {\r\n            var eventList = this.eventLists_[i];\r\n            if (eventList) {\r\n                var eventPath = eventList.getPath();\r\n                if (predicate(eventPath)) {\r\n                    this.eventLists_[i].raise();\r\n                    this.eventLists_[i] = null;\r\n                }\r\n                else {\r\n                    sentAll = false;\r\n                }\r\n            }\r\n        }\r\n        if (sentAll) {\r\n            this.eventLists_ = [];\r\n        }\r\n        this.recursionDepth_--;\r\n    };\r\n    return EventQueue;\r\n}());\r\n/**\r\n * @param {!Path} path\r\n * @constructor\r\n */\r\nvar EventList = /** @class */ (function () {\r\n    function EventList(path_) {\r\n        this.path_ = path_;\r\n        /**\r\n         * @type {!Array.<Event>}\r\n         * @private\r\n         */\r\n        this.events_ = [];\r\n    }\r\n    /**\r\n     * @param {!Event} eventData\r\n     */\r\n    EventList.prototype.add = function (eventData) {\r\n        this.events_.push(eventData);\r\n    };\r\n    /**\r\n     * Iterates through the list and raises each event\r\n     */\r\n    EventList.prototype.raise = function () {\r\n        for (var i = 0; i < this.events_.length; i++) {\r\n            var eventData = this.events_[i];\r\n            if (eventData !== null) {\r\n                this.events_[i] = null;\r\n                var eventFn = eventData.getEventRunner();\r\n                if (logger$1) {\r\n                    log('event: ' + eventData.toString());\r\n                }\r\n                exceptionGuard(eventFn);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @return {!Path}\r\n     */\r\n    EventList.prototype.getPath = function () {\r\n        return this.path_;\r\n    };\r\n    return EventList;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Base class to be used if you want to emit events. Call the constructor with\r\n * the set of allowed event names.\r\n */\r\nvar EventEmitter = /** @class */ (function () {\r\n    /**\r\n     * @param {!Array.<string>} allowedEvents_\r\n     */\r\n    function EventEmitter(allowedEvents_) {\r\n        this.allowedEvents_ = allowedEvents_;\r\n        this.listeners_ = {};\r\n        util.assert(Array.isArray(allowedEvents_) && allowedEvents_.length > 0, 'Requires a non-empty array');\r\n    }\r\n    /**\r\n     * To be called by derived classes to trigger events.\r\n     * @param {!string} eventType\r\n     * @param {...*} var_args\r\n     */\r\n    EventEmitter.prototype.trigger = function (eventType) {\r\n        var var_args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            var_args[_i - 1] = arguments[_i];\r\n        }\r\n        if (Array.isArray(this.listeners_[eventType])) {\r\n            // Clone the list, since callbacks could add/remove listeners.\r\n            var listeners = this.listeners_[eventType].slice();\r\n            for (var i = 0; i < listeners.length; i++) {\r\n                listeners[i].callback.apply(listeners[i].context, var_args);\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.on = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        this.listeners_[eventType] = this.listeners_[eventType] || [];\r\n        this.listeners_[eventType].push({ callback: callback, context: context });\r\n        var eventData = this.getInitialEvent(eventType);\r\n        if (eventData) {\r\n            callback.apply(context, eventData);\r\n        }\r\n    };\r\n    EventEmitter.prototype.off = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        var listeners = this.listeners_[eventType] || [];\r\n        for (var i = 0; i < listeners.length; i++) {\r\n            if (listeners[i].callback === callback &&\r\n                (!context || context === listeners[i].context)) {\r\n                listeners.splice(i, 1);\r\n                return;\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.validateEventType_ = function (eventType) {\r\n        util.assert(this.allowedEvents_.find(function (et) {\r\n            return et === eventType;\r\n        }), 'Unknown event: ' + eventType);\r\n    };\r\n    return EventEmitter;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @extends {EventEmitter}\r\n */\r\nvar VisibilityMonitor = /** @class */ (function (_super) {\r\n    tslib_1.__extends(VisibilityMonitor, _super);\r\n    function VisibilityMonitor() {\r\n        var _this = _super.call(this, ['visible']) || this;\r\n        var hidden;\r\n        var visibilityChange;\r\n        if (typeof document !== 'undefined' &&\r\n            typeof document.addEventListener !== 'undefined') {\r\n            if (typeof document['hidden'] !== 'undefined') {\r\n                // Opera 12.10 and Firefox 18 and later support\r\n                visibilityChange = 'visibilitychange';\r\n                hidden = 'hidden';\r\n            }\r\n            else if (typeof document['mozHidden'] !== 'undefined') {\r\n                visibilityChange = 'mozvisibilitychange';\r\n                hidden = 'mozHidden';\r\n            }\r\n            else if (typeof document['msHidden'] !== 'undefined') {\r\n                visibilityChange = 'msvisibilitychange';\r\n                hidden = 'msHidden';\r\n            }\r\n            else if (typeof document['webkitHidden'] !== 'undefined') {\r\n                visibilityChange = 'webkitvisibilitychange';\r\n                hidden = 'webkitHidden';\r\n            }\r\n        }\r\n        // Initially, we always assume we are visible. This ensures that in browsers\r\n        // without page visibility support or in cases where we are never visible\r\n        // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\r\n        // reconnects\r\n        _this.visible_ = true;\r\n        if (visibilityChange) {\r\n            document.addEventListener(visibilityChange, function () {\r\n                var visible = !document[hidden];\r\n                if (visible !== _this.visible_) {\r\n                    _this.visible_ = visible;\r\n                    _this.trigger('visible', visible);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    VisibilityMonitor.getInstance = function () {\r\n        return new VisibilityMonitor();\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @return {Array.<boolean>}\r\n     */\r\n    VisibilityMonitor.prototype.getInitialEvent = function (eventType) {\r\n        util.assert(eventType === 'visible', 'Unknown event type: ' + eventType);\r\n        return [this.visible_];\r\n    };\r\n    return VisibilityMonitor;\r\n}(EventEmitter));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Monitors online state (as reported by window.online/offline events).\r\n *\r\n * The expectation is that this could have many false positives (thinks we are online\r\n * when we're not), but no false negatives.  So we can safely use it to determine when\r\n * we definitely cannot reach the internet.\r\n *\r\n * @extends {EventEmitter}\r\n */\r\nvar OnlineMonitor = /** @class */ (function (_super) {\r\n    tslib_1.__extends(OnlineMonitor, _super);\r\n    function OnlineMonitor() {\r\n        var _this = _super.call(this, ['online']) || this;\r\n        _this.online_ = true;\r\n        // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\r\n        // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\r\n        // It would seem that the 'online' event does not always fire consistently. So we disable it\r\n        // for Cordova.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window.addEventListener !== 'undefined' &&\r\n            !util.isMobileCordova()) {\r\n            window.addEventListener('online', function () {\r\n                if (!_this.online_) {\r\n                    _this.online_ = true;\r\n                    _this.trigger('online', true);\r\n                }\r\n            }, false);\r\n            window.addEventListener('offline', function () {\r\n                if (_this.online_) {\r\n                    _this.online_ = false;\r\n                    _this.trigger('online', false);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    OnlineMonitor.getInstance = function () {\r\n        return new OnlineMonitor();\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @return {Array.<boolean>}\r\n     */\r\n    OnlineMonitor.prototype.getInitialEvent = function (eventType) {\r\n        util.assert(eventType === 'online', 'Unknown event type: ' + eventType);\r\n        return [this.online_];\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    OnlineMonitor.prototype.currentlyOnline = function () {\r\n        return this.online_;\r\n    };\r\n    return OnlineMonitor;\r\n}(EventEmitter));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class ensures the packets from the server arrive in order\r\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\r\n * @constructor\r\n */\r\nvar PacketReceiver = /** @class */ (function () {\r\n    /**\r\n     * @param onMessage_\r\n     */\r\n    function PacketReceiver(onMessage_) {\r\n        this.onMessage_ = onMessage_;\r\n        this.pendingResponses = [];\r\n        this.currentResponseNum = 0;\r\n        this.closeAfterResponse = -1;\r\n        this.onClose = null;\r\n    }\r\n    PacketReceiver.prototype.closeAfter = function (responseNum, callback) {\r\n        this.closeAfterResponse = responseNum;\r\n        this.onClose = callback;\r\n        if (this.closeAfterResponse < this.currentResponseNum) {\r\n            this.onClose();\r\n            this.onClose = null;\r\n        }\r\n    };\r\n    /**\r\n     * Each message from the server comes with a response number, and an array of data. The responseNumber\r\n     * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\r\n     * browsers will respond in the same order as the requests we sent\r\n     * @param {number} requestNum\r\n     * @param {Array} data\r\n     */\r\n    PacketReceiver.prototype.handleResponse = function (requestNum, data) {\r\n        var _this = this;\r\n        this.pendingResponses[requestNum] = data;\r\n        var _loop_1 = function () {\r\n            var toProcess = this_1.pendingResponses[this_1.currentResponseNum];\r\n            delete this_1.pendingResponses[this_1.currentResponseNum];\r\n            var _loop_2 = function (i) {\r\n                if (toProcess[i]) {\r\n                    exceptionGuard(function () {\r\n                        _this.onMessage_(toProcess[i]);\r\n                    });\r\n                }\r\n            };\r\n            for (var i = 0; i < toProcess.length; ++i) {\r\n                _loop_2(i);\r\n            }\r\n            if (this_1.currentResponseNum === this_1.closeAfterResponse) {\r\n                if (this_1.onClose) {\r\n                    this_1.onClose();\r\n                    this_1.onClose = null;\r\n                }\r\n                return \"break\";\r\n            }\r\n            this_1.currentResponseNum++;\r\n        };\r\n        var this_1 = this;\r\n        while (this.pendingResponses[this.currentResponseNum]) {\r\n            var state_1 = _loop_1();\r\n            if (state_1 === \"break\")\r\n                break;\r\n        }\r\n    };\r\n    return PacketReceiver;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// URL query parameters associated with longpolling\r\nvar FIREBASE_LONGPOLL_START_PARAM = 'start';\r\nvar FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\r\nvar FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\r\nvar FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\r\nvar FIREBASE_LONGPOLL_ID_PARAM = 'id';\r\nvar FIREBASE_LONGPOLL_PW_PARAM = 'pw';\r\nvar FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\r\nvar FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\r\nvar FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\r\nvar FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\r\nvar FIREBASE_LONGPOLL_DATA_PARAM = 'd';\r\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM = 'disconn';\r\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\r\n//Data size constants.\r\n//TODO: Perf: the maximum length actually differs from browser to browser.\r\n// We should check what browser we're on and set accordingly.\r\nvar MAX_URL_DATA_SIZE = 1870;\r\nvar SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\r\nvar MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\r\n/**\r\n * Keepalive period\r\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\r\n * length of 30 seconds that we can't exceed.\r\n * @const\r\n * @type {number}\r\n */\r\nvar KEEPALIVE_REQUEST_INTERVAL = 25000;\r\n/**\r\n * How long to wait before aborting a long-polling connection attempt.\r\n * @const\r\n * @type {number}\r\n */\r\nvar LP_CONNECT_TIMEOUT = 30000;\r\n/**\r\n * This class manages a single long-polling connection.\r\n *\r\n * @constructor\r\n * @implements {Transport}\r\n */\r\nvar BrowserPollConnection = /** @class */ (function () {\r\n    /**\r\n     * @param {string} connId An identifier for this connection, used for logging\r\n     * @param {RepoInfo} repoInfo The info for the endpoint to send data to.\r\n     * @param {string=} transportSessionId Optional transportSessionid if we are reconnecting for an existing\r\n     *                                         transport session\r\n     * @param {string=}  lastSessionId Optional lastSessionId if the PersistentConnection has already created a\r\n     *                                     connection previously\r\n     */\r\n    function BrowserPollConnection(connId, repoInfo, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.repoInfo = repoInfo;\r\n        this.transportSessionId = transportSessionId;\r\n        this.lastSessionId = lastSessionId;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.everConnected_ = false;\r\n        this.log_ = logWrapper(connId);\r\n        this.stats_ = StatsManager.getCollection(repoInfo);\r\n        this.urlFn = function (params) {\r\n            return repoInfo.connectionURL(LONG_POLLING, params);\r\n        };\r\n    }\r\n    /**\r\n     *\r\n     * @param {function(Object)} onMessage Callback when messages arrive\r\n     * @param {function()} onDisconnect Callback with connection lost.\r\n     */\r\n    BrowserPollConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.curSegmentNum = 0;\r\n        this.onDisconnect_ = onDisconnect;\r\n        this.myPacketOrderer = new PacketReceiver(onMessage);\r\n        this.isClosed_ = false;\r\n        this.connectTimeoutTimer_ = setTimeout(function () {\r\n            _this.log_('Timed out trying to connect.');\r\n            // Make sure we clear the host cache\r\n            _this.onClosed_();\r\n            _this.connectTimeoutTimer_ = null;\r\n        }, Math.floor(LP_CONNECT_TIMEOUT));\r\n        // Ensure we delay the creation of the iframe until the DOM is loaded.\r\n        executeWhenDOMReady(function () {\r\n            if (_this.isClosed_)\r\n                return;\r\n            //Set up a callback that gets triggered once a connection is set up.\r\n            _this.scriptTagHolder = new FirebaseIFrameScriptHolder(function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var command = args[0], arg1 = args[1], arg2 = args[2];\r\n                _this.incrementIncomingBytes_(args);\r\n                if (!_this.scriptTagHolder)\r\n                    return; // we closed the connection.\r\n                if (_this.connectTimeoutTimer_) {\r\n                    clearTimeout(_this.connectTimeoutTimer_);\r\n                    _this.connectTimeoutTimer_ = null;\r\n                }\r\n                _this.everConnected_ = true;\r\n                if (command == FIREBASE_LONGPOLL_START_PARAM) {\r\n                    _this.id = arg1;\r\n                    _this.password = arg2;\r\n                }\r\n                else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\r\n                    // Don't clear the host cache. We got a response from the server, so we know it's reachable\r\n                    if (arg1) {\r\n                        // We aren't expecting any more data (other than what the server's already in the process of sending us\r\n                        // through our already open polls), so don't send any more.\r\n                        _this.scriptTagHolder.sendNewPolls = false;\r\n                        // arg1 in this case is the last response number sent by the server. We should try to receive\r\n                        // all of the responses up to this one before closing\r\n                        _this.myPacketOrderer.closeAfter(arg1, function () {\r\n                            _this.onClosed_();\r\n                        });\r\n                    }\r\n                    else {\r\n                        _this.onClosed_();\r\n                    }\r\n                }\r\n                else {\r\n                    throw new Error('Unrecognized command received: ' + command);\r\n                }\r\n            }, function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var pN = args[0], data = args[1];\r\n                _this.incrementIncomingBytes_(args);\r\n                _this.myPacketOrderer.handleResponse(pN, data);\r\n            }, function () {\r\n                _this.onClosed_();\r\n            }, _this.urlFn);\r\n            //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\r\n            //from cache.\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(Math.random() * 100000000);\r\n            if (_this.scriptTagHolder.uniqueCallbackIdentifier)\r\n                urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] = _this.scriptTagHolder.uniqueCallbackIdentifier;\r\n            urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n            if (_this.transportSessionId) {\r\n                urlParams[TRANSPORT_SESSION_PARAM] = _this.transportSessionId;\r\n            }\r\n            if (_this.lastSessionId) {\r\n                urlParams[LAST_SESSION_PARAM] = _this.lastSessionId;\r\n            }\r\n            if (!util.isNodeSdk() &&\r\n                typeof location !== 'undefined' &&\r\n                location.href &&\r\n                location.href.indexOf(FORGE_DOMAIN) !== -1) {\r\n                urlParams[REFERER_PARAM] = FORGE_REF;\r\n            }\r\n            var connectURL = _this.urlFn(urlParams);\r\n            _this.log_('Connecting via long-poll to ' + connectURL);\r\n            _this.scriptTagHolder.addTag(connectURL, function () {\r\n                /* do nothing */\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Call this when a handshake has completed successfully and we want to consider the connection established\r\n     */\r\n    BrowserPollConnection.prototype.start = function () {\r\n        this.scriptTagHolder.startLongPoll(this.id, this.password);\r\n        this.addDisconnectPingFrame(this.id, this.password);\r\n    };\r\n    /**\r\n     * Forces long polling to be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceAllow = function () {\r\n        BrowserPollConnection.forceAllow_ = true;\r\n    };\r\n    /**\r\n     * Forces longpolling to not be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceDisallow = function () {\r\n        BrowserPollConnection.forceDisallow_ = true;\r\n    };\r\n    // Static method, use string literal so it can be accessed in a generic way\r\n    BrowserPollConnection.isAvailable = function () {\r\n        // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\r\n        // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\r\n        return (BrowserPollConnection.forceAllow_ ||\r\n            (!BrowserPollConnection.forceDisallow_ &&\r\n                typeof document !== 'undefined' &&\r\n                document.createElement != null &&\r\n                !isChromeExtensionContentScript() &&\r\n                !isWindowsStoreApp() &&\r\n                !util.isNodeSdk()));\r\n    };\r\n    /**\r\n     * No-op for polling\r\n     */\r\n    BrowserPollConnection.prototype.markConnectionHealthy = function () { };\r\n    /**\r\n     * Stops polling and cleans up the iframe\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.scriptTagHolder) {\r\n            this.scriptTagHolder.close();\r\n            this.scriptTagHolder = null;\r\n        }\r\n        //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\r\n        if (this.myDisconnFrame) {\r\n            document.body.removeChild(this.myDisconnFrame);\r\n            this.myDisconnFrame = null;\r\n        }\r\n        if (this.connectTimeoutTimer_) {\r\n            clearTimeout(this.connectTimeoutTimer_);\r\n            this.connectTimeoutTimer_ = null;\r\n        }\r\n    };\r\n    /**\r\n     * Triggered when this transport is closed\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is closing itself');\r\n            this.shutdown_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_(this.everConnected_);\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\r\n     * that we've left.\r\n     */\r\n    BrowserPollConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is being closed.');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\r\n     * broken into chunks (since URLs have a small maximum length).\r\n     * @param {!Object} data The JSON data to transmit.\r\n     */\r\n    BrowserPollConnection.prototype.send = function (data) {\r\n        var dataStr = util.stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //first, lets get the base64-encoded data\r\n        var base64data = util.base64Encode(dataStr);\r\n        //We can only fit a certain amount in each URL, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\r\n        //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\r\n        //of segments so that we can reassemble the packet on the server.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.scriptTagHolder.enqueueSegment(this.curSegmentNum, dataSegs.length, dataSegs[i]);\r\n            this.curSegmentNum++;\r\n        }\r\n    };\r\n    /**\r\n     * This is how we notify the server that we're leaving.\r\n     * We aren't able to send requests with DHTML on a window close event, but we can\r\n     * trigger XHR requests in some browsers (everything but Opera basically).\r\n     * @param {!string} id\r\n     * @param {!string} pw\r\n     */\r\n    BrowserPollConnection.prototype.addDisconnectPingFrame = function (id, pw) {\r\n        if (util.isNodeSdk())\r\n            return;\r\n        this.myDisconnFrame = document.createElement('iframe');\r\n        var urlParams = {};\r\n        urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\r\n        urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\r\n        urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\r\n        this.myDisconnFrame.src = this.urlFn(urlParams);\r\n        this.myDisconnFrame.style.display = 'none';\r\n        document.body.appendChild(this.myDisconnFrame);\r\n    };\r\n    /**\r\n     * Used to track the bytes received by this client\r\n     * @param {*} args\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.incrementIncomingBytes_ = function (args) {\r\n        // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\r\n        var bytesReceived = util.stringify(args).length;\r\n        this.bytesReceived += bytesReceived;\r\n        this.stats_.incrementCounter('bytes_received', bytesReceived);\r\n    };\r\n    return BrowserPollConnection;\r\n}());\r\n/*********************************************************************************************\r\n * A wrapper around an iframe that is used as a long-polling script holder.\r\n * @constructor\r\n *********************************************************************************************/\r\nvar FirebaseIFrameScriptHolder = /** @class */ (function () {\r\n    /**\r\n     * @param commandCB - The callback to be called when control commands are recevied from the server.\r\n     * @param onMessageCB - The callback to be triggered when responses arrive from the server.\r\n     * @param onDisconnect - The callback to be triggered when this tag holder is closed\r\n     * @param urlFn - A function that provides the URL of the endpoint to send data to.\r\n     */\r\n    function FirebaseIFrameScriptHolder(commandCB, onMessageCB, onDisconnect, urlFn) {\r\n        this.onDisconnect = onDisconnect;\r\n        this.urlFn = urlFn;\r\n        //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\r\n        //problems in some browsers.\r\n        /**\r\n         * @type {CountedSet.<number, number>}\r\n         */\r\n        this.outstandingRequests = new CountedSet();\r\n        //A queue of the pending segments waiting for transmission to the server.\r\n        this.pendingSegs = [];\r\n        //A serial number. We use this for two things:\r\n        // 1) A way to ensure the browser doesn't cache responses to polls\r\n        // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\r\n        //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\r\n        //    JSONP code in the order it was added to the iframe.\r\n        this.currentSerial = Math.floor(Math.random() * 100000000);\r\n        // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\r\n        // incoming data from the server that we're waiting for).\r\n        this.sendNewPolls = true;\r\n        if (!util.isNodeSdk()) {\r\n            //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\r\n            //iframes where we put the long-polling script tags. We have two callbacks:\r\n            //   1) Command Callback - Triggered for control issues, like starting a connection.\r\n            //   2) Message Callback - Triggered when new data arrives.\r\n            this.uniqueCallbackIdentifier = LUIDGenerator();\r\n            window[FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier] = commandCB;\r\n            window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] = onMessageCB;\r\n            //Create an iframe for us to add script tags to.\r\n            this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\r\n            // Set the iframe's contents.\r\n            var script = '';\r\n            // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\r\n            // for ie9, but ie8 needs to do it again in the document itself.\r\n            if (this.myIFrame.src &&\r\n                this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:') {\r\n                var currentDomain = document.domain;\r\n                script = '<script>document.domain=\"' + currentDomain + '\";</script>';\r\n            }\r\n            var iframeContents = '<html><body>' + script + '</body></html>';\r\n            try {\r\n                this.myIFrame.doc.open();\r\n                this.myIFrame.doc.write(iframeContents);\r\n                this.myIFrame.doc.close();\r\n            }\r\n            catch (e) {\r\n                log('frame writing exception');\r\n                if (e.stack) {\r\n                    log(e.stack);\r\n                }\r\n                log(e);\r\n            }\r\n        }\r\n        else {\r\n            this.commandCB = commandCB;\r\n            this.onMessageCB = onMessageCB;\r\n        }\r\n    }\r\n    /**\r\n     * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\r\n     * actually use.\r\n     * @private\r\n     * @return {Element}\r\n     */\r\n    FirebaseIFrameScriptHolder.createIFrame_ = function () {\r\n        var iframe = document.createElement('iframe');\r\n        iframe.style.display = 'none';\r\n        // This is necessary in order to initialize the document inside the iframe\r\n        if (document.body) {\r\n            document.body.appendChild(iframe);\r\n            try {\r\n                // If document.domain has been modified in IE, this will throw an error, and we need to set the\r\n                // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\r\n                // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\r\n                var a = iframe.contentWindow.document;\r\n                if (!a) {\r\n                    // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\r\n                    log('No IE domain setting required');\r\n                }\r\n            }\r\n            catch (e) {\r\n                var domain = document.domain;\r\n                iframe.src =\r\n                    \"javascript:void((function(){document.open();document.domain='\" +\r\n                        domain +\r\n                        \"';document.close();})())\";\r\n            }\r\n        }\r\n        else {\r\n            // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\r\n            // never gets hit.\r\n            throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\r\n        }\r\n        // Get the document of the iframe in a browser-specific way.\r\n        if (iframe.contentDocument) {\r\n            iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\r\n        }\r\n        else if (iframe.contentWindow) {\r\n            iframe.doc = iframe.contentWindow.document; // Internet Explorer\r\n        }\r\n        else if (iframe.document) {\r\n            iframe.doc = iframe.document; //others?\r\n        }\r\n        return iframe;\r\n    };\r\n    /**\r\n     * Cancel all outstanding queries and remove the frame.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.close = function () {\r\n        var _this = this;\r\n        //Mark this iframe as dead, so no new requests are sent.\r\n        this.alive = false;\r\n        if (this.myIFrame) {\r\n            //We have to actually remove all of the html inside this iframe before removing it from the\r\n            //window, or IE will continue loading and executing the script tags we've already added, which\r\n            //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\r\n            this.myIFrame.doc.body.innerHTML = '';\r\n            setTimeout(function () {\r\n                if (_this.myIFrame !== null) {\r\n                    document.body.removeChild(_this.myIFrame);\r\n                    _this.myIFrame = null;\r\n                }\r\n            }, Math.floor(0));\r\n        }\r\n        if (util.isNodeSdk() && this.myID) {\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM] = 't';\r\n            urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\r\n            urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\r\n            var theURL = this.urlFn(urlParams);\r\n            FirebaseIFrameScriptHolder.nodeRestRequest(theURL);\r\n        }\r\n        // Protect from being called recursively.\r\n        var onDisconnect = this.onDisconnect;\r\n        if (onDisconnect) {\r\n            this.onDisconnect = null;\r\n            onDisconnect();\r\n        }\r\n    };\r\n    /**\r\n     * Actually start the long-polling session by adding the first script tag(s) to the iframe.\r\n     * @param {!string} id - The ID of this connection\r\n     * @param {!string} pw - The password for this connection\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.startLongPoll = function (id, pw) {\r\n        this.myID = id;\r\n        this.myPW = pw;\r\n        this.alive = true;\r\n        //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\r\n        while (this.newRequest_()) { }\r\n    };\r\n    /**\r\n     * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\r\n     * too many outstanding requests and we are still alive.\r\n     *\r\n     * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\r\n     * needed.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.newRequest_ = function () {\r\n        // We keep one outstanding request open all the time to receive data, but if we need to send data\r\n        // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\r\n        // close the old request.\r\n        if (this.alive &&\r\n            this.sendNewPolls &&\r\n            this.outstandingRequests.count() < (this.pendingSegs.length > 0 ? 2 : 1)) {\r\n            //construct our url\r\n            this.currentSerial++;\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\r\n            urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\r\n            var theURL = this.urlFn(urlParams);\r\n            //Now add as much data as we can.\r\n            var curDataString = '';\r\n            var i = 0;\r\n            while (this.pendingSegs.length > 0) {\r\n                //first, lets see if the next segment will fit.\r\n                var nextSeg = this.pendingSegs[0];\r\n                if (nextSeg.d.length + SEG_HEADER_SIZE + curDataString.length <=\r\n                    MAX_URL_DATA_SIZE) {\r\n                    //great, the segment will fit. Lets append it.\r\n                    var theSeg = this.pendingSegs.shift();\r\n                    curDataString =\r\n                        curDataString +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.seg +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.ts +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_DATA_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.d;\r\n                    i++;\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n            theURL = theURL + curDataString;\r\n            this.addLongPollTag_(theURL, this.currentSerial);\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Queue a packet for transmission to the server.\r\n     * @param segnum - A sequential id for this packet segment used for reassembly\r\n     * @param totalsegs - The total number of segments in this packet\r\n     * @param data - The data for this segment.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.enqueueSegment = function (segnum, totalsegs, data) {\r\n        //add this to the queue of segments to send.\r\n        this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\r\n        //send the data immediately if there isn't already data being transmitted, unless\r\n        //startLongPoll hasn't been called yet.\r\n        if (this.alive) {\r\n            this.newRequest_();\r\n        }\r\n    };\r\n    /**\r\n     * Add a script tag for a regular long-poll request.\r\n     * @param {!string} url - The URL of the script tag.\r\n     * @param {!number} serial - The serial number of the request.\r\n     * @private\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addLongPollTag_ = function (url, serial) {\r\n        var _this = this;\r\n        //remember that we sent this request.\r\n        this.outstandingRequests.add(serial, 1);\r\n        var doNewRequest = function () {\r\n            _this.outstandingRequests.remove(serial);\r\n            _this.newRequest_();\r\n        };\r\n        // If this request doesn't return on its own accord (by the server sending us some data), we'll\r\n        // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\r\n        var keepaliveTimeout = setTimeout(doNewRequest, Math.floor(KEEPALIVE_REQUEST_INTERVAL));\r\n        var readyStateCB = function () {\r\n            // Request completed.  Cancel the keepalive.\r\n            clearTimeout(keepaliveTimeout);\r\n            // Trigger a new request so we can continue receiving data.\r\n            doNewRequest();\r\n        };\r\n        this.addTag(url, readyStateCB);\r\n    };\r\n    /**\r\n     * Add an arbitrary script tag to the iframe.\r\n     * @param {!string} url - The URL for the script tag source.\r\n     * @param {!function()} loadCB - A callback to be triggered once the script has loaded.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addTag = function (url, loadCB) {\r\n        var _this = this;\r\n        if (util.isNodeSdk()) {\r\n            this.doNodeLongPoll(url, loadCB);\r\n        }\r\n        else {\r\n            setTimeout(function () {\r\n                try {\r\n                    // if we're already closed, don't add this poll\r\n                    if (!_this.sendNewPolls)\r\n                        return;\r\n                    var newScript_1 = _this.myIFrame.doc.createElement('script');\r\n                    newScript_1.type = 'text/javascript';\r\n                    newScript_1.async = true;\r\n                    newScript_1.src = url;\r\n                    newScript_1.onload = newScript_1.onreadystatechange = function () {\r\n                        var rstate = newScript_1.readyState;\r\n                        if (!rstate || rstate === 'loaded' || rstate === 'complete') {\r\n                            newScript_1.onload = newScript_1.onreadystatechange = null;\r\n                            if (newScript_1.parentNode) {\r\n                                newScript_1.parentNode.removeChild(newScript_1);\r\n                            }\r\n                            loadCB();\r\n                        }\r\n                    };\r\n                    newScript_1.onerror = function () {\r\n                        log('Long-poll script failed to load: ' + url);\r\n                        _this.sendNewPolls = false;\r\n                        _this.close();\r\n                    };\r\n                    _this.myIFrame.doc.body.appendChild(newScript_1);\r\n                }\r\n                catch (e) {\r\n                    // TODO: we should make this error visible somehow\r\n                }\r\n            }, Math.floor(1));\r\n        }\r\n    };\r\n    return FirebaseIFrameScriptHolder;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar WEBSOCKET_MAX_FRAME_SIZE = 16384;\r\nvar WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\r\nvar WebSocketImpl = null;\r\nif (typeof MozWebSocket !== 'undefined') {\r\n    WebSocketImpl = MozWebSocket;\r\n}\r\nelse if (typeof WebSocket !== 'undefined') {\r\n    WebSocketImpl = WebSocket;\r\n}\r\n/**\r\n * Create a new websocket connection with the given callbacks.\r\n * @constructor\r\n * @implements {Transport}\r\n */\r\nvar WebSocketConnection = /** @class */ (function () {\r\n    /**\r\n     * @param {string} connId identifier for this transport\r\n     * @param {RepoInfo} repoInfo The info for the websocket endpoint.\r\n     * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\r\n     */\r\n    function WebSocketConnection(connId, repoInfo, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.keepaliveTimer = null;\r\n        this.frames = null;\r\n        this.totalFrames = 0;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.log_ = logWrapper(this.connId);\r\n        this.stats_ = StatsManager.getCollection(repoInfo);\r\n        this.connURL = WebSocketConnection.connectionURL_(repoInfo, transportSessionId, lastSessionId);\r\n    }\r\n    /**\r\n     * @param {RepoInfo} repoInfo The info for the websocket endpoint.\r\n     * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\r\n     * @return {string} connection url\r\n     * @private\r\n     */\r\n    WebSocketConnection.connectionURL_ = function (repoInfo, transportSessionId, lastSessionId) {\r\n        var urlParams = {};\r\n        urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n        if (!util.isNodeSdk() &&\r\n            typeof location !== 'undefined' &&\r\n            location.href &&\r\n            location.href.indexOf(FORGE_DOMAIN) !== -1) {\r\n            urlParams[REFERER_PARAM] = FORGE_REF;\r\n        }\r\n        if (transportSessionId) {\r\n            urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\r\n        }\r\n        if (lastSessionId) {\r\n            urlParams[LAST_SESSION_PARAM] = lastSessionId;\r\n        }\r\n        return repoInfo.connectionURL(WEBSOCKET, urlParams);\r\n    };\r\n    /**\r\n     *\r\n     * @param onMessage Callback when messages arrive\r\n     * @param onDisconnect Callback with connection lost.\r\n     */\r\n    WebSocketConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.onDisconnect = onDisconnect;\r\n        this.onMessage = onMessage;\r\n        this.log_('Websocket connecting to ' + this.connURL);\r\n        this.everConnected_ = false;\r\n        // Assume failure until proven otherwise.\r\n        PersistentStorage.set('previous_websocket_failure', true);\r\n        try {\r\n            if (util.isNodeSdk()) {\r\n                var device = util.CONSTANTS.NODE_ADMIN ? 'AdminNode' : 'Node';\r\n                // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\r\n                var options = {\r\n                    headers: {\r\n                        'User-Agent': \"Firebase/\" + PROTOCOL_VERSION + \"/\" + firebase.SDK_VERSION + \"/\" + process.platform + \"/\" + device\r\n                    }\r\n                };\r\n                // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\r\n                var env = Object({\"NODE_ENV\":\"production\",\"PUBLIC_URL\":\"\"});\r\n                var proxy = this.connURL.indexOf('wss://') == 0\r\n                    ? env['HTTPS_PROXY'] || env['https_proxy']\r\n                    : env['HTTP_PROXY'] || env['http_proxy'];\r\n                if (proxy) {\r\n                    options['proxy'] = { origin: proxy };\r\n                }\r\n                this.mySock = new WebSocketImpl(this.connURL, [], options);\r\n            }\r\n            else {\r\n                this.mySock = new WebSocketImpl(this.connURL);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this.log_('Error instantiating WebSocket.');\r\n            var error$$1 = e.message || e.data;\r\n            if (error$$1) {\r\n                this.log_(error$$1);\r\n            }\r\n            this.onClosed_();\r\n            return;\r\n        }\r\n        this.mySock.onopen = function () {\r\n            _this.log_('Websocket connected.');\r\n            _this.everConnected_ = true;\r\n        };\r\n        this.mySock.onclose = function () {\r\n            _this.log_('Websocket connection was disconnected.');\r\n            _this.mySock = null;\r\n            _this.onClosed_();\r\n        };\r\n        this.mySock.onmessage = function (m) {\r\n            _this.handleIncomingFrame(m);\r\n        };\r\n        this.mySock.onerror = function (e) {\r\n            _this.log_('WebSocket error.  Closing connection.');\r\n            var error$$1 = e.message || e.data;\r\n            if (error$$1) {\r\n                _this.log_(error$$1);\r\n            }\r\n            _this.onClosed_();\r\n        };\r\n    };\r\n    /**\r\n     * No-op for websockets, we don't need to do anything once the connection is confirmed as open\r\n     */\r\n    WebSocketConnection.prototype.start = function () { };\r\n    WebSocketConnection.forceDisallow = function () {\r\n        WebSocketConnection.forceDisallow_ = true;\r\n    };\r\n    WebSocketConnection.isAvailable = function () {\r\n        var isOldAndroid = false;\r\n        if (typeof navigator !== 'undefined' && navigator.userAgent) {\r\n            var oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\r\n            var oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\r\n            if (oldAndroidMatch && oldAndroidMatch.length > 1) {\r\n                if (parseFloat(oldAndroidMatch[1]) < 4.4) {\r\n                    isOldAndroid = true;\r\n                }\r\n            }\r\n        }\r\n        return (!isOldAndroid &&\r\n            WebSocketImpl !== null &&\r\n            !WebSocketConnection.forceDisallow_);\r\n    };\r\n    /**\r\n     * Returns true if we previously failed to connect with this transport.\r\n     * @return {boolean}\r\n     */\r\n    WebSocketConnection.previouslyFailed = function () {\r\n        // If our persistent storage is actually only in-memory storage,\r\n        // we default to assuming that it previously failed to be safe.\r\n        return (PersistentStorage.isInMemoryStorage ||\r\n            PersistentStorage.get('previous_websocket_failure') === true);\r\n    };\r\n    WebSocketConnection.prototype.markConnectionHealthy = function () {\r\n        PersistentStorage.remove('previous_websocket_failure');\r\n    };\r\n    WebSocketConnection.prototype.appendFrame_ = function (data) {\r\n        this.frames.push(data);\r\n        if (this.frames.length == this.totalFrames) {\r\n            var fullMess = this.frames.join('');\r\n            this.frames = null;\r\n            var jsonMess = util.jsonEval(fullMess);\r\n            //handle the message\r\n            this.onMessage(jsonMess);\r\n        }\r\n    };\r\n    /**\r\n     * @param {number} frameCount The number of frames we are expecting from the server\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.handleNewFrameCount_ = function (frameCount) {\r\n        this.totalFrames = frameCount;\r\n        this.frames = [];\r\n    };\r\n    /**\r\n     * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\r\n     * @param {!String} data\r\n     * @return {?String} Any remaining data to be process, or null if there is none\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.extractFrameCount_ = function (data) {\r\n        util.assert(this.frames === null, 'We already have a frame buffer');\r\n        // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\r\n        // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\r\n        if (data.length <= 6) {\r\n            var frameCount = Number(data);\r\n            if (!isNaN(frameCount)) {\r\n                this.handleNewFrameCount_(frameCount);\r\n                return null;\r\n            }\r\n        }\r\n        this.handleNewFrameCount_(1);\r\n        return data;\r\n    };\r\n    /**\r\n     * Process a websocket frame that has arrived from the server.\r\n     * @param mess The frame data\r\n     */\r\n    WebSocketConnection.prototype.handleIncomingFrame = function (mess) {\r\n        if (this.mySock === null)\r\n            return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\r\n        var data = mess['data'];\r\n        this.bytesReceived += data.length;\r\n        this.stats_.incrementCounter('bytes_received', data.length);\r\n        this.resetKeepAlive();\r\n        if (this.frames !== null) {\r\n            // we're buffering\r\n            this.appendFrame_(data);\r\n        }\r\n        else {\r\n            // try to parse out a frame count, otherwise, assume 1 and process it\r\n            var remainingData = this.extractFrameCount_(data);\r\n            if (remainingData !== null) {\r\n                this.appendFrame_(remainingData);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Send a message to the server\r\n     * @param {Object} data The JSON object to transmit\r\n     */\r\n    WebSocketConnection.prototype.send = function (data) {\r\n        this.resetKeepAlive();\r\n        var dataStr = util.stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //We can only fit a certain amount in each websocket frame, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\r\n        //Send the length header\r\n        if (dataSegs.length > 1) {\r\n            this.sendString_(String(dataSegs.length));\r\n        }\r\n        //Send the actual data in segments.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.sendString_(dataSegs[i]);\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.keepaliveTimer) {\r\n            clearInterval(this.keepaliveTimer);\r\n            this.keepaliveTimer = null;\r\n        }\r\n        if (this.mySock) {\r\n            this.mySock.close();\r\n            this.mySock = null;\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is closing itself');\r\n            this.shutdown_();\r\n            // since this is an internal close, trigger the close listener\r\n            if (this.onDisconnect) {\r\n                this.onDisconnect(this.everConnected_);\r\n                this.onDisconnect = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler.\r\n     * Close the websocket and kill the connection.\r\n     */\r\n    WebSocketConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is being closed');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\r\n     * the last activity.\r\n     */\r\n    WebSocketConnection.prototype.resetKeepAlive = function () {\r\n        var _this = this;\r\n        clearInterval(this.keepaliveTimer);\r\n        this.keepaliveTimer = setInterval(function () {\r\n            //If there has been no websocket activity for a while, send a no-op\r\n            if (_this.mySock) {\r\n                _this.sendString_('0');\r\n            }\r\n            _this.resetKeepAlive();\r\n        }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));\r\n    };\r\n    /**\r\n     * Send a string over the websocket.\r\n     *\r\n     * @param {string} str String to send.\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.sendString_ = function (str) {\r\n        // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\r\n        // calls for some unknown reason.  We treat these as an error and disconnect.\r\n        // See https://app.asana.com/0/58926111402292/68021340250410\r\n        try {\r\n            this.mySock.send(str);\r\n        }\r\n        catch (e) {\r\n            this.log_('Exception thrown from WebSocket.send():', e.message || e.data, 'Closing connection.');\r\n            setTimeout(this.onClosed_.bind(this), 0);\r\n        }\r\n    };\r\n    /**\r\n     * Number of response before we consider the connection \"healthy.\"\r\n     * @type {number}\r\n     */\r\n    WebSocketConnection.responsesRequiredToBeHealthy = 2;\r\n    /**\r\n     * Time to wait for the connection te become healthy before giving up.\r\n     * @type {number}\r\n     */\r\n    WebSocketConnection.healthyTimeout = 30000;\r\n    return WebSocketConnection;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\r\n * lifecycle.\r\n *\r\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\r\n * they are available.\r\n * @constructor\r\n */\r\nvar TransportManager = /** @class */ (function () {\r\n    /**\r\n     * @param {!RepoInfo} repoInfo Metadata around the namespace we're connecting to\r\n     */\r\n    function TransportManager(repoInfo) {\r\n        this.initTransports_(repoInfo);\r\n    }\r\n    Object.defineProperty(TransportManager, \"ALL_TRANSPORTS\", {\r\n        /**\r\n         * @const\r\n         * @type {!Array.<function(new:Transport, string, RepoInfo, string=)>}\r\n         */\r\n        get: function () {\r\n            return [BrowserPollConnection, WebSocketConnection];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @param {!RepoInfo} repoInfo\r\n     * @private\r\n     */\r\n    TransportManager.prototype.initTransports_ = function (repoInfo) {\r\n        var isWebSocketsAvailable = WebSocketConnection && WebSocketConnection['isAvailable']();\r\n        var isSkipPollConnection = isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\r\n        if (repoInfo.webSocketOnly) {\r\n            if (!isWebSocketsAvailable)\r\n                warn(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\");\r\n            isSkipPollConnection = true;\r\n        }\r\n        if (isSkipPollConnection) {\r\n            this.transports_ = [WebSocketConnection];\r\n        }\r\n        else {\r\n            var transports_1 = (this.transports_ = []);\r\n            each(TransportManager.ALL_TRANSPORTS, function (i, transport) {\r\n                if (transport && transport['isAvailable']()) {\r\n                    transports_1.push(transport);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @return {function(new:Transport, !string, !RepoInfo, string=, string=)} The constructor for the\r\n     * initial transport to use\r\n     */\r\n    TransportManager.prototype.initialTransport = function () {\r\n        if (this.transports_.length > 0) {\r\n            return this.transports_[0];\r\n        }\r\n        else {\r\n            throw new Error('No transports available');\r\n        }\r\n    };\r\n    /**\r\n     * @return {?function(new:Transport, function(),function(), string=)} The constructor for the next\r\n     * transport, or null\r\n     */\r\n    TransportManager.prototype.upgradeTransport = function () {\r\n        if (this.transports_.length > 1) {\r\n            return this.transports_[1];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    return TransportManager;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Abort upgrade attempt if it takes longer than 60s.\r\nvar UPGRADE_TIMEOUT = 60000;\r\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\r\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\r\nvar DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\r\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\r\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\r\n// but we've sent/received enough bytes, we don't cancel the connection.\r\nvar BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\r\nvar BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\r\nvar MESSAGE_TYPE = 't';\r\nvar MESSAGE_DATA = 'd';\r\nvar CONTROL_SHUTDOWN = 's';\r\nvar CONTROL_RESET = 'r';\r\nvar CONTROL_ERROR = 'e';\r\nvar CONTROL_PONG = 'o';\r\nvar SWITCH_ACK = 'a';\r\nvar END_TRANSMISSION = 'n';\r\nvar PING = 'p';\r\nvar SERVER_HELLO = 'h';\r\n/**\r\n * Creates a new real-time connection to the server using whichever method works\r\n * best in the current browser.\r\n *\r\n * @constructor\r\n */\r\nvar Connection = /** @class */ (function () {\r\n    /**\r\n     * @param {!string} id - an id for this connection\r\n     * @param {!RepoInfo} repoInfo_ - the info for the endpoint to connect to\r\n     * @param {function(Object)} onMessage_ - the callback to be triggered when a server-push message arrives\r\n     * @param {function(number, string)} onReady_ - the callback to be triggered when this connection is ready to send messages.\r\n     * @param {function()} onDisconnect_ - the callback to be triggered when a connection was lost\r\n     * @param {function(string)} onKill_ - the callback to be triggered when this connection has permanently shut down.\r\n     * @param {string=} lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\r\n     */\r\n    function Connection(id, repoInfo_, onMessage_, onReady_, onDisconnect_, onKill_, lastSessionId) {\r\n        this.id = id;\r\n        this.repoInfo_ = repoInfo_;\r\n        this.onMessage_ = onMessage_;\r\n        this.onReady_ = onReady_;\r\n        this.onDisconnect_ = onDisconnect_;\r\n        this.onKill_ = onKill_;\r\n        this.lastSessionId = lastSessionId;\r\n        this.connectionCount = 0;\r\n        this.pendingDataMessages = [];\r\n        this.state_ = 0 /* CONNECTING */;\r\n        this.log_ = logWrapper('c:' + this.id + ':');\r\n        this.transportManager_ = new TransportManager(repoInfo_);\r\n        this.log_('Connection created');\r\n        this.start_();\r\n    }\r\n    /**\r\n     * Starts a connection attempt\r\n     * @private\r\n     */\r\n    Connection.prototype.start_ = function () {\r\n        var _this = this;\r\n        var conn = this.transportManager_.initialTransport();\r\n        this.conn_ = new conn(this.nextTransportId_(), this.repoInfo_, undefined, this.lastSessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessageReceived = this.connReceiver_(this.conn_);\r\n        var onConnectionLost = this.disconnReceiver_(this.conn_);\r\n        this.tx_ = this.conn_;\r\n        this.rx_ = this.conn_;\r\n        this.secondaryConn_ = null;\r\n        this.isHealthy_ = false;\r\n        /*\r\n         * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\r\n         * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\r\n         * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\r\n         * still have the context of your originating frame.\r\n         */\r\n        setTimeout(function () {\r\n            // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\r\n            _this.conn_ && _this.conn_.open(onMessageReceived, onConnectionLost);\r\n        }, Math.floor(0));\r\n        var healthyTimeout_ms = conn['healthyTimeout'] || 0;\r\n        if (healthyTimeout_ms > 0) {\r\n            this.healthyTimeout_ = setTimeoutNonBlocking(function () {\r\n                _this.healthyTimeout_ = null;\r\n                if (!_this.isHealthy_) {\r\n                    if (_this.conn_ &&\r\n                        _this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has received ' +\r\n                            _this.conn_.bytesReceived +\r\n                            ' bytes.  Marking connection healthy.');\r\n                        _this.isHealthy_ = true;\r\n                        _this.conn_.markConnectionHealthy();\r\n                    }\r\n                    else if (_this.conn_ &&\r\n                        _this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has sent ' +\r\n                            _this.conn_.bytesSent +\r\n                            ' bytes.  Leaving connection alive.');\r\n                        // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\r\n                        // the server.\r\n                    }\r\n                    else {\r\n                        _this.log_('Closing unhealthy connection after timeout.');\r\n                        _this.close();\r\n                    }\r\n                }\r\n            }, Math.floor(healthyTimeout_ms));\r\n        }\r\n    };\r\n    /**\r\n     * @return {!string}\r\n     * @private\r\n     */\r\n    Connection.prototype.nextTransportId_ = function () {\r\n        return 'c:' + this.id + ':' + this.connectionCount++;\r\n    };\r\n    Connection.prototype.disconnReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (everConnected) {\r\n            if (conn === _this.conn_) {\r\n                _this.onConnectionLost_(everConnected);\r\n            }\r\n            else if (conn === _this.secondaryConn_) {\r\n                _this.log_('Secondary connection lost.');\r\n                _this.onSecondaryConnectionLost_();\r\n            }\r\n            else {\r\n                _this.log_('closing an old connection');\r\n            }\r\n        };\r\n    };\r\n    Connection.prototype.connReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (message) {\r\n            if (_this.state_ != 2 /* DISCONNECTED */) {\r\n                if (conn === _this.rx_) {\r\n                    _this.onPrimaryMessageReceived_(message);\r\n                }\r\n                else if (conn === _this.secondaryConn_) {\r\n                    _this.onSecondaryMessageReceived_(message);\r\n                }\r\n                else {\r\n                    _this.log_('message on old connection');\r\n                }\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     *\r\n     * @param {Object} dataMsg An arbitrary data message to be sent to the server\r\n     */\r\n    Connection.prototype.sendRequest = function (dataMsg) {\r\n        // wrap in a data message envelope and send it on\r\n        var msg = { t: 'd', d: dataMsg };\r\n        this.sendData_(msg);\r\n    };\r\n    Connection.prototype.tryCleanupConnection = function () {\r\n        if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\r\n            this.log_('cleaning up and promoting a connection: ' + this.secondaryConn_.connId);\r\n            this.conn_ = this.secondaryConn_;\r\n            this.secondaryConn_ = null;\r\n            // the server will shutdown the old connection\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryControl_ = function (controlData) {\r\n        if (MESSAGE_TYPE in controlData) {\r\n            var cmd = controlData[MESSAGE_TYPE];\r\n            if (cmd === SWITCH_ACK) {\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // Most likely the session wasn't valid. Abandon the switch attempt\r\n                this.log_('Got a reset on secondary, closing it');\r\n                this.secondaryConn_.close();\r\n                // If we were already using this connection for something, than we need to fully close\r\n                if (this.tx_ === this.secondaryConn_ ||\r\n                    this.rx_ === this.secondaryConn_) {\r\n                    this.close();\r\n                }\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on secondary.');\r\n                this.secondaryResponsesRequired_--;\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryMessageReceived_ = function (parsedData) {\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer == 'c') {\r\n            this.onSecondaryControl_(data);\r\n        }\r\n        else if (layer == 'd') {\r\n            // got a data message, but we're still second connection. Need to buffer it up\r\n            this.pendingDataMessages.push(data);\r\n        }\r\n        else {\r\n            throw new Error('Unknown protocol layer: ' + layer);\r\n        }\r\n    };\r\n    Connection.prototype.upgradeIfSecondaryHealthy_ = function () {\r\n        if (this.secondaryResponsesRequired_ <= 0) {\r\n            this.log_('Secondary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n            this.secondaryConn_.markConnectionHealthy();\r\n            this.proceedWithUpgrade_();\r\n        }\r\n        else {\r\n            // Send a ping to make sure the connection is healthy.\r\n            this.log_('sending ping on secondary.');\r\n            this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.proceedWithUpgrade_ = function () {\r\n        // tell this connection to consider itself open\r\n        this.secondaryConn_.start();\r\n        // send ack\r\n        this.log_('sending client ack on secondary');\r\n        this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\r\n        // send end packet on primary transport, switch to sending on this one\r\n        // can receive on this one, buffer responses until end received on primary transport\r\n        this.log_('Ending transmission on primary');\r\n        this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\r\n        this.tx_ = this.secondaryConn_;\r\n        this.tryCleanupConnection();\r\n    };\r\n    Connection.prototype.onPrimaryMessageReceived_ = function (parsedData) {\r\n        // Must refer to parsedData properties in quotes, so closure doesn't touch them.\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer == 'c') {\r\n            this.onControl_(data);\r\n        }\r\n        else if (layer == 'd') {\r\n            this.onDataMessage_(data);\r\n        }\r\n    };\r\n    Connection.prototype.onDataMessage_ = function (message) {\r\n        this.onPrimaryResponse_();\r\n        // We don't do anything with data messages, just kick them up a level\r\n        this.onMessage_(message);\r\n    };\r\n    Connection.prototype.onPrimaryResponse_ = function () {\r\n        if (!this.isHealthy_) {\r\n            this.primaryResponsesRequired_--;\r\n            if (this.primaryResponsesRequired_ <= 0) {\r\n                this.log_('Primary connection is healthy.');\r\n                this.isHealthy_ = true;\r\n                this.conn_.markConnectionHealthy();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onControl_ = function (controlData) {\r\n        var cmd = requireKey(MESSAGE_TYPE, controlData);\r\n        if (MESSAGE_DATA in controlData) {\r\n            var payload = controlData[MESSAGE_DATA];\r\n            if (cmd === SERVER_HELLO) {\r\n                this.onHandshake_(payload);\r\n            }\r\n            else if (cmd === END_TRANSMISSION) {\r\n                this.log_('recvd end transmission on primary');\r\n                this.rx_ = this.secondaryConn_;\r\n                for (var i = 0; i < this.pendingDataMessages.length; ++i) {\r\n                    this.onDataMessage_(this.pendingDataMessages[i]);\r\n                }\r\n                this.pendingDataMessages = [];\r\n                this.tryCleanupConnection();\r\n            }\r\n            else if (cmd === CONTROL_SHUTDOWN) {\r\n                // This was previously the 'onKill' callback passed to the lower-level connection\r\n                // payload in this case is the reason for the shutdown. Generally a human-readable error\r\n                this.onConnectionShutdown_(payload);\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // payload in this case is the host we should contact\r\n                this.onReset_(payload);\r\n            }\r\n            else if (cmd === CONTROL_ERROR) {\r\n                error('Server Error: ' + payload);\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on primary.');\r\n                this.onPrimaryResponse_();\r\n                this.sendPingOnPrimaryIfNecessary_();\r\n            }\r\n            else {\r\n                error('Unknown control packet command: ' + cmd);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {Object} handshake The handshake data returned from the server\r\n     * @private\r\n     */\r\n    Connection.prototype.onHandshake_ = function (handshake) {\r\n        var timestamp = handshake.ts;\r\n        var version = handshake.v;\r\n        var host = handshake.h;\r\n        this.sessionId = handshake.s;\r\n        this.repoInfo_.updateHost(host);\r\n        // if we've already closed the connection, then don't bother trying to progress further\r\n        if (this.state_ == 0 /* CONNECTING */) {\r\n            this.conn_.start();\r\n            this.onConnectionEstablished_(this.conn_, timestamp);\r\n            if (PROTOCOL_VERSION !== version) {\r\n                warn('Protocol version mismatch detected');\r\n            }\r\n            // TODO: do we want to upgrade? when? maybe a delay?\r\n            this.tryStartUpgrade_();\r\n        }\r\n    };\r\n    Connection.prototype.tryStartUpgrade_ = function () {\r\n        var conn = this.transportManager_.upgradeTransport();\r\n        if (conn) {\r\n            this.startUpgrade_(conn);\r\n        }\r\n    };\r\n    Connection.prototype.startUpgrade_ = function (conn) {\r\n        var _this = this;\r\n        this.secondaryConn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.sessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.secondaryResponsesRequired_ =\r\n            conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessage = this.connReceiver_(this.secondaryConn_);\r\n        var onDisconnect = this.disconnReceiver_(this.secondaryConn_);\r\n        this.secondaryConn_.open(onMessage, onDisconnect);\r\n        // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\r\n        setTimeoutNonBlocking(function () {\r\n            if (_this.secondaryConn_) {\r\n                _this.log_('Timed out trying to upgrade.');\r\n                _this.secondaryConn_.close();\r\n            }\r\n        }, Math.floor(UPGRADE_TIMEOUT));\r\n    };\r\n    Connection.prototype.onReset_ = function (host) {\r\n        this.log_('Reset packet received.  New host: ' + host);\r\n        this.repoInfo_.updateHost(host);\r\n        // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\r\n        // We don't currently support resets after the connection has already been established\r\n        if (this.state_ === 1 /* CONNECTED */) {\r\n            this.close();\r\n        }\r\n        else {\r\n            // Close whatever connections we have open and start again.\r\n            this.closeConnections_();\r\n            this.start_();\r\n        }\r\n    };\r\n    Connection.prototype.onConnectionEstablished_ = function (conn, timestamp) {\r\n        var _this = this;\r\n        this.log_('Realtime connection established.');\r\n        this.conn_ = conn;\r\n        this.state_ = 1 /* CONNECTED */;\r\n        if (this.onReady_) {\r\n            this.onReady_(timestamp, this.sessionId);\r\n            this.onReady_ = null;\r\n        }\r\n        // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\r\n        // send some pings.\r\n        if (this.primaryResponsesRequired_ === 0) {\r\n            this.log_('Primary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n        }\r\n        else {\r\n            setTimeoutNonBlocking(function () {\r\n                _this.sendPingOnPrimaryIfNecessary_();\r\n            }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\r\n        }\r\n    };\r\n    Connection.prototype.sendPingOnPrimaryIfNecessary_ = function () {\r\n        // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\r\n        if (!this.isHealthy_ && this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('sending ping on primary.');\r\n            this.sendData_({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryConnectionLost_ = function () {\r\n        var conn = this.secondaryConn_;\r\n        this.secondaryConn_ = null;\r\n        if (this.tx_ === conn || this.rx_ === conn) {\r\n            // we are relying on this connection already in some capacity. Therefore, a failure is real\r\n            this.close();\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {boolean} everConnected Whether or not the connection ever reached a server. Used to determine if\r\n     * we should flush the host cache\r\n     * @private\r\n     */\r\n    Connection.prototype.onConnectionLost_ = function (everConnected) {\r\n        this.conn_ = null;\r\n        // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\r\n        // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\r\n        if (!everConnected && this.state_ === 0 /* CONNECTING */) {\r\n            this.log_('Realtime connection failed.');\r\n            // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\r\n            if (this.repoInfo_.isCacheableHost()) {\r\n                PersistentStorage.remove('host:' + this.repoInfo_.host);\r\n                // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\r\n                this.repoInfo_.internalHost = this.repoInfo_.host;\r\n            }\r\n        }\r\n        else if (this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('Realtime connection lost.');\r\n        }\r\n        this.close();\r\n    };\r\n    /**\r\n     *\r\n     * @param {string} reason\r\n     * @private\r\n     */\r\n    Connection.prototype.onConnectionShutdown_ = function (reason) {\r\n        this.log_('Connection shutdown command received. Shutting down...');\r\n        if (this.onKill_) {\r\n            this.onKill_(reason);\r\n            this.onKill_ = null;\r\n        }\r\n        // We intentionally don't want to fire onDisconnect (kill is a different case),\r\n        // so clear the callback.\r\n        this.onDisconnect_ = null;\r\n        this.close();\r\n    };\r\n    Connection.prototype.sendData_ = function (data) {\r\n        if (this.state_ !== 1 /* CONNECTED */) {\r\n            throw 'Connection is not connected';\r\n        }\r\n        else {\r\n            this.tx_.send(data);\r\n        }\r\n    };\r\n    /**\r\n     * Cleans up this connection, calling the appropriate callbacks\r\n     */\r\n    Connection.prototype.close = function () {\r\n        if (this.state_ !== 2 /* DISCONNECTED */) {\r\n            this.log_('Closing realtime connection.');\r\n            this.state_ = 2 /* DISCONNECTED */;\r\n            this.closeConnections_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_();\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    Connection.prototype.closeConnections_ = function () {\r\n        this.log_('Shutting down all connections');\r\n        if (this.conn_) {\r\n            this.conn_.close();\r\n            this.conn_ = null;\r\n        }\r\n        if (this.secondaryConn_) {\r\n            this.secondaryConn_.close();\r\n            this.secondaryConn_ = null;\r\n        }\r\n        if (this.healthyTimeout_) {\r\n            clearTimeout(this.healthyTimeout_);\r\n            this.healthyTimeout_ = null;\r\n        }\r\n    };\r\n    return Connection;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Interface defining the set of actions that can be performed against the Firebase server\r\n * (basically corresponds to our wire protocol).\r\n *\r\n * @interface\r\n */\r\nvar ServerActions = /** @class */ (function () {\r\n    function ServerActions() {\r\n    }\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     * @param {string=} hash\r\n     */\r\n    ServerActions.prototype.put = function (pathString, data, onComplete, hash) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, ?string)} onComplete\r\n     * @param {string=} hash\r\n     */\r\n    ServerActions.prototype.merge = function (pathString, data, onComplete, hash) { };\r\n    /**\r\n     * Refreshes the auth token for the current connection.\r\n     * @param {string} token The authentication token\r\n     */\r\n    ServerActions.prototype.refreshAuthToken = function (token) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectPut = function (pathString, data, onComplete) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectMerge = function (pathString, data, onComplete) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectCancel = function (pathString, onComplete) { };\r\n    /**\r\n     * @param {Object.<string, *>} stats\r\n     */\r\n    ServerActions.prototype.reportStats = function (stats) { };\r\n    return ServerActions;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar RECONNECT_MIN_DELAY = 1000;\r\nvar RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\r\nvar RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\r\nvar RECONNECT_DELAY_MULTIPLIER = 1.3;\r\nvar RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\r\nvar SERVER_KILL_INTERRUPT_REASON = 'server_kill';\r\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\r\nvar INVALID_AUTH_TOKEN_THRESHOLD = 3;\r\n/**\r\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\r\n *\r\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\r\n * in quotes to make sure the closure compiler does not minify them.\r\n */\r\nvar PersistentConnection = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PersistentConnection, _super);\r\n    /**\r\n     * @implements {ServerActions}\r\n     * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to\r\n     * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server\r\n     * @param onConnectStatus_\r\n     * @param onServerInfoUpdate_\r\n     * @param authTokenProvider_\r\n     * @param authOverride_\r\n     */\r\n    function PersistentConnection(repoInfo_, onDataUpdate_, onConnectStatus_, onServerInfoUpdate_, authTokenProvider_, authOverride_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.onConnectStatus_ = onConnectStatus_;\r\n        _this.onServerInfoUpdate_ = onServerInfoUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        _this.authOverride_ = authOverride_;\r\n        // Used for diagnostic logging.\r\n        _this.id = PersistentConnection.nextPersistentConnectionId_++;\r\n        _this.log_ = logWrapper('p:' + _this.id + ':');\r\n        /** @private {Object} */\r\n        _this.interruptReasons_ = {};\r\n        _this.listens_ = {};\r\n        _this.outstandingPuts_ = [];\r\n        _this.outstandingPutCount_ = 0;\r\n        _this.onDisconnectRequestQueue_ = [];\r\n        _this.connected_ = false;\r\n        _this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n        _this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\r\n        _this.securityDebugCallback_ = null;\r\n        _this.lastSessionId = null;\r\n        /** @private {number|null} */\r\n        _this.establishConnectionTimer_ = null;\r\n        /** @private {boolean} */\r\n        _this.visible_ = false;\r\n        // Before we get connected, we keep a queue of pending messages to send.\r\n        _this.requestCBHash_ = {};\r\n        _this.requestNumber_ = 0;\r\n        /** @private {?{\r\n         *   sendRequest(Object),\r\n         *   close()\r\n         * }} */\r\n        _this.realtime_ = null;\r\n        /** @private {string|null} */\r\n        _this.authToken_ = null;\r\n        _this.forceTokenRefresh_ = false;\r\n        _this.invalidAuthTokenCount_ = 0;\r\n        _this.firstConnection_ = true;\r\n        _this.lastConnectionAttemptTime_ = null;\r\n        _this.lastConnectionEstablishedTime_ = null;\r\n        if (authOverride_ && !util.isNodeSdk()) {\r\n            throw new Error('Auth override specified in options, but not supported on non Node.js platforms');\r\n        }\r\n        _this.scheduleConnect_(0);\r\n        VisibilityMonitor.getInstance().on('visible', _this.onVisible_, _this);\r\n        if (repoInfo_.host.indexOf('fblocal') === -1) {\r\n            OnlineMonitor.getInstance().on('online', _this.onOnline_, _this);\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {!string} action\r\n     * @param {*} body\r\n     * @param {function(*)=} onResponse\r\n     * @protected\r\n     */\r\n    PersistentConnection.prototype.sendRequest = function (action, body, onResponse) {\r\n        var curReqNum = ++this.requestNumber_;\r\n        var msg = { r: curReqNum, a: action, b: body };\r\n        this.log_(util.stringify(msg));\r\n        util.assert(this.connected_, \"sendRequest call when we're not connected not allowed.\");\r\n        this.realtime_.sendRequest(msg);\r\n        if (onResponse) {\r\n            this.requestCBHash_[curReqNum] = onResponse;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        var queryId = query.queryIdentifier();\r\n        var pathString = query.path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + queryId);\r\n        this.listens_[pathString] = this.listens_[pathString] || {};\r\n        util.assert(query.getQueryParams().isDefault() ||\r\n            !query.getQueryParams().loadsAllData(), 'listen() called for non-default but complete query');\r\n        util.assert(!this.listens_[pathString][queryId], 'listen() called twice for same path/queryId.');\r\n        var listenSpec = {\r\n            onComplete: onComplete,\r\n            hashFn: currentHashFn,\r\n            query: query,\r\n            tag: tag\r\n        };\r\n        this.listens_[pathString][queryId] = listenSpec;\r\n        if (this.connected_) {\r\n            this.sendListen_(listenSpec);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!{onComplete(),\r\n     *           hashFn():!string,\r\n     *           query: !Query,\r\n     *           tag: ?number}} listenSpec\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.sendListen_ = function (listenSpec) {\r\n        var _this = this;\r\n        var query = listenSpec.query;\r\n        var pathString = query.path.toString();\r\n        var queryId = query.queryIdentifier();\r\n        this.log_('Listen on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'q';\r\n        // Only bother to send query if it's non-default.\r\n        if (listenSpec.tag) {\r\n            req['q'] = query.queryObject();\r\n            req['t'] = listenSpec.tag;\r\n        }\r\n        req[ /*hash*/'h'] = listenSpec.hashFn();\r\n        this.sendRequest(action, req, function (message) {\r\n            var payload = message[ /*data*/'d'];\r\n            var status = message[ /*status*/'s'];\r\n            // print warnings in any case...\r\n            PersistentConnection.warnOnListenWarnings_(payload, query);\r\n            var currentListenSpec = _this.listens_[pathString] && _this.listens_[pathString][queryId];\r\n            // only trigger actions if the listen hasn't been removed and readded\r\n            if (currentListenSpec === listenSpec) {\r\n                _this.log_('listen response', message);\r\n                if (status !== 'ok') {\r\n                    _this.removeListen_(pathString, queryId);\r\n                }\r\n                if (listenSpec.onComplete) {\r\n                    listenSpec.onComplete(status, payload);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @param {*} payload\r\n     * @param {!Query} query\r\n     * @private\r\n     */\r\n    PersistentConnection.warnOnListenWarnings_ = function (payload, query) {\r\n        if (payload && typeof payload === 'object' && util.contains(payload, 'w')) {\r\n            var warnings = util.safeGet(payload, 'w');\r\n            if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\r\n                var indexSpec = '\".indexOn\": \"' +\r\n                    query\r\n                        .getQueryParams()\r\n                        .getIndex()\r\n                        .toString() +\r\n                    '\"';\r\n                var indexPath = query.path.toString();\r\n                warn(\"Using an unspecified index. Your data will be downloaded and \" +\r\n                    (\"filtered on the client. Consider adding \" + indexSpec + \" at \") +\r\n                    (indexPath + \" to your security rules for better performance.\"));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.refreshAuthToken = function (token) {\r\n        this.authToken_ = token;\r\n        this.log_('Auth token refreshed');\r\n        if (this.authToken_) {\r\n            this.tryAuth();\r\n        }\r\n        else {\r\n            //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\r\n            //the credential so we dont become authenticated next time we connect.\r\n            if (this.connected_) {\r\n                this.sendRequest('unauth', {}, function () { });\r\n            }\r\n        }\r\n        this.reduceReconnectDelayIfAdminCredential_(token);\r\n    };\r\n    /**\r\n     * @param {!string} credential\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.reduceReconnectDelayIfAdminCredential_ = function (credential) {\r\n        // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\r\n        // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\r\n        var isFirebaseSecret = credential && credential.length === 40;\r\n        if (isFirebaseSecret || util.isAdmin(credential)) {\r\n            this.log_('Admin auth credential detected.  Reducing max reconnect time.');\r\n            this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n        }\r\n    };\r\n    /**\r\n     * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\r\n     * a auth revoked (the connection is closed).\r\n     */\r\n    PersistentConnection.prototype.tryAuth = function () {\r\n        var _this = this;\r\n        if (this.connected_ && this.authToken_) {\r\n            var token_1 = this.authToken_;\r\n            var authMethod = util.isValidFormat(token_1) ? 'auth' : 'gauth';\r\n            var requestData = { cred: token_1 };\r\n            if (this.authOverride_ === null) {\r\n                requestData['noauth'] = true;\r\n            }\r\n            else if (typeof this.authOverride_ === 'object') {\r\n                requestData['authvar'] = this.authOverride_;\r\n            }\r\n            this.sendRequest(authMethod, requestData, function (res) {\r\n                var status = res[ /*status*/'s'];\r\n                var data = res[ /*data*/'d'] || 'error';\r\n                if (_this.authToken_ === token_1) {\r\n                    if (status === 'ok') {\r\n                        _this.invalidAuthTokenCount_ = 0;\r\n                    }\r\n                    else {\r\n                        // Triggers reconnect and force refresh for auth token\r\n                        _this.onAuthRevoked_(status, data);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.unlisten = function (query, tag) {\r\n        var pathString = query.path.toString();\r\n        var queryId = query.queryIdentifier();\r\n        this.log_('Unlisten called for ' + pathString + ' ' + queryId);\r\n        util.assert(query.getQueryParams().isDefault() ||\r\n            !query.getQueryParams().loadsAllData(), 'unlisten() called for non-default but complete query');\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && this.connected_) {\r\n            this.sendUnlisten_(pathString, queryId, query.queryObject(), tag);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendUnlisten_ = function (pathString, queryId, queryObj, tag) {\r\n        this.log_('Unlisten on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'n';\r\n        // Only bother sending queryId if it's non-default.\r\n        if (tag) {\r\n            req['q'] = queryObj;\r\n            req['t'] = tag;\r\n        }\r\n        this.sendRequest(action, req);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectPut = function (pathString, data, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('o', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'o',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectMerge = function (pathString, data, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('om', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'om',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectCancel = function (pathString, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('oc', pathString, null, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'oc',\r\n                data: null,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendOnDisconnect_ = function (action, pathString, data, onComplete) {\r\n        var request = { /*path*/ p: pathString, /*data*/ d: data };\r\n        this.log_('onDisconnect ' + action, request);\r\n        this.sendRequest(action, request, function (response) {\r\n            if (onComplete) {\r\n                setTimeout(function () {\r\n                    onComplete(response[ /*status*/'s'], response[ /* data */'d']);\r\n                }, Math.floor(0));\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('p', pathString, data, onComplete, hash);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.merge = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('m', pathString, data, onComplete, hash);\r\n    };\r\n    PersistentConnection.prototype.putInternal = function (action, pathString, data, onComplete, hash) {\r\n        var request = {\r\n            /*path*/ p: pathString,\r\n            /*data*/ d: data\r\n        };\r\n        if (hash !== undefined)\r\n            request[ /*hash*/'h'] = hash;\r\n        // TODO: Only keep track of the most recent put for a given path?\r\n        this.outstandingPuts_.push({\r\n            action: action,\r\n            request: request,\r\n            onComplete: onComplete\r\n        });\r\n        this.outstandingPutCount_++;\r\n        var index = this.outstandingPuts_.length - 1;\r\n        if (this.connected_) {\r\n            this.sendPut_(index);\r\n        }\r\n        else {\r\n            this.log_('Buffering put: ' + pathString);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendPut_ = function (index) {\r\n        var _this = this;\r\n        var action = this.outstandingPuts_[index].action;\r\n        var request = this.outstandingPuts_[index].request;\r\n        var onComplete = this.outstandingPuts_[index].onComplete;\r\n        this.outstandingPuts_[index].queued = this.connected_;\r\n        this.sendRequest(action, request, function (message) {\r\n            _this.log_(action + ' response', message);\r\n            delete _this.outstandingPuts_[index];\r\n            _this.outstandingPutCount_--;\r\n            // Clean up array occasionally.\r\n            if (_this.outstandingPutCount_ === 0) {\r\n                _this.outstandingPuts_ = [];\r\n            }\r\n            if (onComplete)\r\n                onComplete(message[ /*status*/'s'], message[ /* data */'d']);\r\n        });\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.reportStats = function (stats) {\r\n        var _this = this;\r\n        // If we're not connected, we just drop the stats.\r\n        if (this.connected_) {\r\n            var request = { /*counters*/ c: stats };\r\n            this.log_('reportStats', request);\r\n            this.sendRequest(/*stats*/ 's', request, function (result) {\r\n                var status = result[ /*status*/'s'];\r\n                if (status !== 'ok') {\r\n                    var errorReason = result[ /* data */'d'];\r\n                    _this.log_('reportStats', 'Error sending stats: ' + errorReason);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @param {*} message\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.onDataMessage_ = function (message) {\r\n        if ('r' in message) {\r\n            // this is a response\r\n            this.log_('from server: ' + util.stringify(message));\r\n            var reqNum = message['r'];\r\n            var onResponse = this.requestCBHash_[reqNum];\r\n            if (onResponse) {\r\n                delete this.requestCBHash_[reqNum];\r\n                onResponse(message[ /*body*/'b']);\r\n            }\r\n        }\r\n        else if ('error' in message) {\r\n            throw 'A server-side error has occurred: ' + message['error'];\r\n        }\r\n        else if ('a' in message) {\r\n            // a and b are action and body, respectively\r\n            this.onDataPush_(message['a'], message['b']);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDataPush_ = function (action, body) {\r\n        this.log_('handleServerMessage', action, body);\r\n        if (action === 'd')\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge*/ false, body['t']);\r\n        else if (action === 'm')\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge=*/ true, body['t']);\r\n        else if (action === 'c')\r\n            this.onListenRevoked_(body[ /*path*/'p'], body[ /*query*/'q']);\r\n        else if (action === 'ac')\r\n            this.onAuthRevoked_(body[ /*status code*/'s'], body[ /* explanation */'d']);\r\n        else if (action === 'sd')\r\n            this.onSecurityDebugPacket_(body);\r\n        else\r\n            error('Unrecognized action received from server: ' +\r\n                util.stringify(action) +\r\n                '\\nAre you using the latest client?');\r\n    };\r\n    PersistentConnection.prototype.onReady_ = function (timestamp, sessionId) {\r\n        this.log_('connection ready');\r\n        this.connected_ = true;\r\n        this.lastConnectionEstablishedTime_ = new Date().getTime();\r\n        this.handleTimestamp_(timestamp);\r\n        this.lastSessionId = sessionId;\r\n        if (this.firstConnection_) {\r\n            this.sendConnectStats_();\r\n        }\r\n        this.restoreState_();\r\n        this.firstConnection_ = false;\r\n        this.onConnectStatus_(true);\r\n    };\r\n    PersistentConnection.prototype.scheduleConnect_ = function (timeout) {\r\n        var _this = this;\r\n        util.assert(!this.realtime_, \"Scheduling a connect when we're already connected/ing?\");\r\n        if (this.establishConnectionTimer_) {\r\n            clearTimeout(this.establishConnectionTimer_);\r\n        }\r\n        // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\r\n        // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\r\n        this.establishConnectionTimer_ = setTimeout(function () {\r\n            _this.establishConnectionTimer_ = null;\r\n            _this.establishConnection_();\r\n        }, Math.floor(timeout));\r\n    };\r\n    /**\r\n     * @param {boolean} visible\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.onVisible_ = function (visible) {\r\n        // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\r\n        if (visible &&\r\n            !this.visible_ &&\r\n            this.reconnectDelay_ === this.maxReconnectDelay_) {\r\n            this.log_('Window became visible.  Reducing delay.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        this.visible_ = visible;\r\n    };\r\n    PersistentConnection.prototype.onOnline_ = function (online) {\r\n        if (online) {\r\n            this.log_('Browser went online.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        else {\r\n            this.log_('Browser went offline.  Killing connection.');\r\n            if (this.realtime_) {\r\n                this.realtime_.close();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onRealtimeDisconnect_ = function () {\r\n        this.log_('data client disconnected');\r\n        this.connected_ = false;\r\n        this.realtime_ = null;\r\n        // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\r\n        this.cancelSentTransactions_();\r\n        // Clear out the pending requests.\r\n        this.requestCBHash_ = {};\r\n        if (this.shouldReconnect_()) {\r\n            if (!this.visible_) {\r\n                this.log_(\"Window isn't visible.  Delaying reconnect.\");\r\n                this.reconnectDelay_ = this.maxReconnectDelay_;\r\n                this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            }\r\n            else if (this.lastConnectionEstablishedTime_) {\r\n                // If we've been connected long enough, reset reconnect delay to minimum.\r\n                var timeSinceLastConnectSucceeded = new Date().getTime() - this.lastConnectionEstablishedTime_;\r\n                if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT)\r\n                    this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n                this.lastConnectionEstablishedTime_ = null;\r\n            }\r\n            var timeSinceLastConnectAttempt = new Date().getTime() - this.lastConnectionAttemptTime_;\r\n            var reconnectDelay = Math.max(0, this.reconnectDelay_ - timeSinceLastConnectAttempt);\r\n            reconnectDelay = Math.random() * reconnectDelay;\r\n            this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\r\n            this.scheduleConnect_(reconnectDelay);\r\n            // Adjust reconnect delay for next time.\r\n            this.reconnectDelay_ = Math.min(this.maxReconnectDelay_, this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER);\r\n        }\r\n        this.onConnectStatus_(false);\r\n    };\r\n    PersistentConnection.prototype.establishConnection_ = function () {\r\n        if (this.shouldReconnect_()) {\r\n            this.log_('Making a connection attempt');\r\n            this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            this.lastConnectionEstablishedTime_ = null;\r\n            var onDataMessage_1 = this.onDataMessage_.bind(this);\r\n            var onReady_1 = this.onReady_.bind(this);\r\n            var onDisconnect_1 = this.onRealtimeDisconnect_.bind(this);\r\n            var connId_1 = this.id + ':' + PersistentConnection.nextConnectionId_++;\r\n            var self_1 = this;\r\n            var lastSessionId_1 = this.lastSessionId;\r\n            var canceled_1 = false;\r\n            var connection_1 = null;\r\n            var closeFn_1 = function () {\r\n                if (connection_1) {\r\n                    connection_1.close();\r\n                }\r\n                else {\r\n                    canceled_1 = true;\r\n                    onDisconnect_1();\r\n                }\r\n            };\r\n            var sendRequestFn = function (msg) {\r\n                util.assert(connection_1, \"sendRequest call when we're not connected not allowed.\");\r\n                connection_1.sendRequest(msg);\r\n            };\r\n            this.realtime_ = {\r\n                close: closeFn_1,\r\n                sendRequest: sendRequestFn\r\n            };\r\n            var forceRefresh = this.forceTokenRefresh_;\r\n            this.forceTokenRefresh_ = false;\r\n            // First fetch auth token, and establish connection after fetching the token was successful\r\n            this.authTokenProvider_\r\n                .getToken(forceRefresh)\r\n                .then(function (result) {\r\n                if (!canceled_1) {\r\n                    log('getToken() completed. Creating connection.');\r\n                    self_1.authToken_ = result && result.accessToken;\r\n                    connection_1 = new Connection(connId_1, self_1.repoInfo_, onDataMessage_1, onReady_1, onDisconnect_1, \r\n                    /* onKill= */ function (reason) {\r\n                        warn(reason + ' (' + self_1.repoInfo_.toString() + ')');\r\n                        self_1.interrupt(SERVER_KILL_INTERRUPT_REASON);\r\n                    }, lastSessionId_1);\r\n                }\r\n                else {\r\n                    log('getToken() completed but was canceled');\r\n                }\r\n            })\r\n                .then(null, function (error$$1) {\r\n                self_1.log_('Failed to get token: ' + error$$1);\r\n                if (!canceled_1) {\r\n                    if (util.CONSTANTS.NODE_ADMIN) {\r\n                        // This may be a critical error for the Admin Node.js SDK, so log a warning.\r\n                        // But getToken() may also just have temporarily failed, so we still want to\r\n                        // continue retrying.\r\n                        warn(error$$1);\r\n                    }\r\n                    closeFn_1();\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} reason\r\n     */\r\n    PersistentConnection.prototype.interrupt = function (reason) {\r\n        log('Interrupting connection for reason: ' + reason);\r\n        this.interruptReasons_[reason] = true;\r\n        if (this.realtime_) {\r\n            this.realtime_.close();\r\n        }\r\n        else {\r\n            if (this.establishConnectionTimer_) {\r\n                clearTimeout(this.establishConnectionTimer_);\r\n                this.establishConnectionTimer_ = null;\r\n            }\r\n            if (this.connected_) {\r\n                this.onRealtimeDisconnect_();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} reason\r\n     */\r\n    PersistentConnection.prototype.resume = function (reason) {\r\n        log('Resuming connection for reason: ' + reason);\r\n        delete this.interruptReasons_[reason];\r\n        if (util.isEmpty(this.interruptReasons_)) {\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.handleTimestamp_ = function (timestamp) {\r\n        var delta = timestamp - new Date().getTime();\r\n        this.onServerInfoUpdate_({ serverTimeOffset: delta });\r\n    };\r\n    PersistentConnection.prototype.cancelSentTransactions_ = function () {\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            var put = this.outstandingPuts_[i];\r\n            if (put && /*hash*/ 'h' in put.request && put.queued) {\r\n                if (put.onComplete)\r\n                    put.onComplete('disconnect');\r\n                delete this.outstandingPuts_[i];\r\n                this.outstandingPutCount_--;\r\n            }\r\n        }\r\n        // Clean up array occasionally.\r\n        if (this.outstandingPutCount_ === 0)\r\n            this.outstandingPuts_ = [];\r\n    };\r\n    /**\r\n     * @param {!string} pathString\r\n     * @param {Array.<*>=} query\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.onListenRevoked_ = function (pathString, query) {\r\n        // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\r\n        var queryId;\r\n        if (!query) {\r\n            queryId = 'default';\r\n        }\r\n        else {\r\n            queryId = query.map(function (q) { return ObjectToUniqueKey(q); }).join('$');\r\n        }\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && listen.onComplete)\r\n            listen.onComplete('permission_denied');\r\n    };\r\n    /**\r\n     * @param {!string} pathString\r\n     * @param {!string} queryId\r\n     * @return {{queries:Array.<Query>, onComplete:function(string)}}\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.removeListen_ = function (pathString, queryId) {\r\n        var normalizedPathString = new Path(pathString).toString(); // normalize path.\r\n        var listen;\r\n        if (this.listens_[normalizedPathString] !== undefined) {\r\n            listen = this.listens_[normalizedPathString][queryId];\r\n            delete this.listens_[normalizedPathString][queryId];\r\n            if (util.getCount(this.listens_[normalizedPathString]) === 0) {\r\n                delete this.listens_[normalizedPathString];\r\n            }\r\n        }\r\n        else {\r\n            // all listens for this path has already been removed\r\n            listen = undefined;\r\n        }\r\n        return listen;\r\n    };\r\n    PersistentConnection.prototype.onAuthRevoked_ = function (statusCode, explanation) {\r\n        log('Auth token revoked: ' + statusCode + '/' + explanation);\r\n        this.authToken_ = null;\r\n        this.forceTokenRefresh_ = true;\r\n        this.realtime_.close();\r\n        if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\r\n            // We'll wait a couple times before logging the warning / increasing the\r\n            // retry period since oauth tokens will report as \"invalid\" if they're\r\n            // just expired. Plus there may be transient issues that resolve themselves.\r\n            this.invalidAuthTokenCount_++;\r\n            if (this.invalidAuthTokenCount_ >= INVALID_AUTH_TOKEN_THRESHOLD) {\r\n                // Set a long reconnect delay because recovery is unlikely\r\n                this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n                // Notify the auth token provider that the token is invalid, which will log\r\n                // a warning\r\n                this.authTokenProvider_.notifyForInvalidToken();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onSecurityDebugPacket_ = function (body) {\r\n        if (this.securityDebugCallback_) {\r\n            this.securityDebugCallback_(body);\r\n        }\r\n        else {\r\n            if ('msg' in body) {\r\n                console.log('FIREBASE: ' + body['msg'].replace('\\n', '\\nFIREBASE: '));\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.restoreState_ = function () {\r\n        var _this = this;\r\n        //Re-authenticate ourselves if we have a credential stored.\r\n        this.tryAuth();\r\n        // Puts depend on having received the corresponding data update from the server before they complete, so we must\r\n        // make sure to send listens before puts.\r\n        util.forEach(this.listens_, function (pathString, queries) {\r\n            util.forEach(queries, function (key, listenSpec) {\r\n                _this.sendListen_(listenSpec);\r\n            });\r\n        });\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            if (this.outstandingPuts_[i])\r\n                this.sendPut_(i);\r\n        }\r\n        while (this.onDisconnectRequestQueue_.length) {\r\n            var request = this.onDisconnectRequestQueue_.shift();\r\n            this.sendOnDisconnect_(request.action, request.pathString, request.data, request.onComplete);\r\n        }\r\n    };\r\n    /**\r\n     * Sends client stats for first connection\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.sendConnectStats_ = function () {\r\n        var stats = {};\r\n        var clientName = 'js';\r\n        if (util.CONSTANTS.NODE_ADMIN) {\r\n            clientName = 'admin_node';\r\n        }\r\n        else if (util.CONSTANTS.NODE_CLIENT) {\r\n            clientName = 'node';\r\n        }\r\n        stats['sdk.' + clientName + '.' + firebase.SDK_VERSION.replace(/\\./g, '-')] = 1;\r\n        if (util.isMobileCordova()) {\r\n            stats['framework.cordova'] = 1;\r\n        }\r\n        else if (util.isReactNative()) {\r\n            stats['framework.reactnative'] = 1;\r\n        }\r\n        this.reportStats(stats);\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.shouldReconnect_ = function () {\r\n        var online = OnlineMonitor.getInstance().currentlyOnline();\r\n        return util.isEmpty(this.interruptReasons_) && online;\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    PersistentConnection.nextPersistentConnectionId_ = 0;\r\n    /**\r\n     * Counter for number of connections created. Mainly used for tagging in the logs\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    PersistentConnection.nextConnectionId_ = 0;\r\n    return PersistentConnection;\r\n}(ServerActions));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of ServerActions that communicates with the server via REST requests.\r\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\r\n * persistent connection (using WebSockets or long-polling)\r\n */\r\nvar ReadonlyRestClient = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ReadonlyRestClient, _super);\r\n    /**\r\n     * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to\r\n     * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server\r\n     * @param {AuthTokenProvider} authTokenProvider_\r\n     * @implements {ServerActions}\r\n     */\r\n    function ReadonlyRestClient(repoInfo_, onDataUpdate_, authTokenProvider_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        /** @private {function(...[*])} */\r\n        _this.log_ = logWrapper('p:rest:');\r\n        /**\r\n         * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\r\n         * that's been removed. :-/\r\n         *\r\n         * @private {!Object.<string, !Object>}\r\n         */\r\n        _this.listens_ = {};\r\n        return _this;\r\n    }\r\n    ReadonlyRestClient.prototype.reportStats = function (stats) {\r\n        throw new Error('Method not implemented.');\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @param {?number=} tag\r\n     * @return {string}\r\n     * @private\r\n     */\r\n    ReadonlyRestClient.getListenId_ = function (query, tag) {\r\n        if (tag !== undefined) {\r\n            return 'tag$' + tag;\r\n        }\r\n        else {\r\n            util.assert(query.getQueryParams().isDefault(), \"should have a tag if it's not a default query.\");\r\n            return query.path.toString();\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        var _this = this;\r\n        var pathString = query.path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + query.queryIdentifier());\r\n        // Mark this listener so we can tell if it's removed.\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        var thisListen = {};\r\n        this.listens_[listenId] = thisListen;\r\n        var queryStringParamaters = query\r\n            .getQueryParams()\r\n            .toRestQueryStringParameters();\r\n        this.restRequest_(pathString + '.json', queryStringParamaters, function (error$$1, result) {\r\n            var data = result;\r\n            if (error$$1 === 404) {\r\n                data = null;\r\n                error$$1 = null;\r\n            }\r\n            if (error$$1 === null) {\r\n                _this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\r\n            }\r\n            if (util.safeGet(_this.listens_, listenId) === thisListen) {\r\n                var status_1;\r\n                if (!error$$1) {\r\n                    status_1 = 'ok';\r\n                }\r\n                else if (error$$1 == 401) {\r\n                    status_1 = 'permission_denied';\r\n                }\r\n                else {\r\n                    status_1 = 'rest_error:' + error$$1;\r\n                }\r\n                onComplete(status_1, null);\r\n            }\r\n        });\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.unlisten = function (query, tag) {\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        delete this.listens_[listenId];\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.refreshAuthToken = function (token) {\r\n        // no-op since we just always call getToken.\r\n    };\r\n    /**\r\n     * Performs a REST request to the given path, with the provided query string parameters,\r\n     * and any auth credentials we have.\r\n     *\r\n     * @param {!string} pathString\r\n     * @param {!Object.<string, *>} queryStringParameters\r\n     * @param {?function(?number, *=)} callback\r\n     * @private\r\n     */\r\n    ReadonlyRestClient.prototype.restRequest_ = function (pathString, queryStringParameters, callback) {\r\n        var _this = this;\r\n        if (queryStringParameters === void 0) { queryStringParameters = {}; }\r\n        queryStringParameters['format'] = 'export';\r\n        this.authTokenProvider_\r\n            .getToken(/*forceRefresh=*/ false)\r\n            .then(function (authTokenData) {\r\n            var authToken = authTokenData && authTokenData.accessToken;\r\n            if (authToken) {\r\n                queryStringParameters['auth'] = authToken;\r\n            }\r\n            var url = (_this.repoInfo_.secure ? 'https://' : 'http://') +\r\n                _this.repoInfo_.host +\r\n                pathString +\r\n                '?' +\r\n                util.querystring(queryStringParameters);\r\n            _this.log_('Sending REST request for ' + url);\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.onreadystatechange = function () {\r\n                if (callback && xhr.readyState === 4) {\r\n                    _this.log_('REST Response for ' + url + ' received. status:', xhr.status, 'response:', xhr.responseText);\r\n                    var res = null;\r\n                    if (xhr.status >= 200 && xhr.status < 300) {\r\n                        try {\r\n                            res = util.jsonEval(xhr.responseText);\r\n                        }\r\n                        catch (e) {\r\n                            warn('Failed to parse JSON response for ' +\r\n                                url +\r\n                                ': ' +\r\n                                xhr.responseText);\r\n                        }\r\n                        callback(null, res);\r\n                    }\r\n                    else {\r\n                        // 401 and 404 are expected.\r\n                        if (xhr.status !== 401 && xhr.status !== 404) {\r\n                            warn('Got unsuccessful REST response for ' +\r\n                                url +\r\n                                ' Status: ' +\r\n                                xhr.status);\r\n                        }\r\n                        callback(xhr.status);\r\n                    }\r\n                    callback = null;\r\n                }\r\n            };\r\n            xhr.open('GET', url, /*asynchronous=*/ true);\r\n            xhr.send();\r\n        });\r\n    };\r\n    return ReadonlyRestClient;\r\n}(ServerActions));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar INTERRUPT_REASON = 'repo_interrupt';\r\n/**\r\n * A connection to a single data repository.\r\n */\r\nvar Repo = /** @class */ (function () {\r\n    /**\r\n     * @param {!RepoInfo} repoInfo_\r\n     * @param {boolean} forceRestClient\r\n     * @param {!FirebaseApp} app\r\n     */\r\n    function Repo(repoInfo_, forceRestClient, app) {\r\n        var _this = this;\r\n        this.repoInfo_ = repoInfo_;\r\n        this.app = app;\r\n        this.dataUpdateCount = 0;\r\n        this.statsListener_ = null;\r\n        this.eventQueue_ = new EventQueue();\r\n        this.nextWriteId_ = 1;\r\n        this.interceptServerDataCallback_ = null;\r\n        // A list of data pieces and paths to be set when this client disconnects.\r\n        this.onDisconnect_ = new SparseSnapshotTree();\r\n        /**\r\n         * TODO: This should be @private but it's used by test_access.js and internal.js\r\n         * @type {?PersistentConnection}\r\n         */\r\n        this.persistentConnection_ = null;\r\n        /** @type {!AuthTokenProvider} */\r\n        var authTokenProvider = new AuthTokenProvider(app);\r\n        this.stats_ = StatsManager.getCollection(repoInfo_);\r\n        if (forceRestClient || beingCrawled()) {\r\n            this.server_ = new ReadonlyRestClient(this.repoInfo_, this.onDataUpdate_.bind(this), authTokenProvider);\r\n            // Minor hack: Fire onConnect immediately, since there's no actual connection.\r\n            setTimeout(this.onConnectStatus_.bind(this, true), 0);\r\n        }\r\n        else {\r\n            var authOverride = app.options['databaseAuthVariableOverride'];\r\n            // Validate authOverride\r\n            if (typeof authOverride !== 'undefined' && authOverride !== null) {\r\n                if (typeof authOverride !== 'object') {\r\n                    throw new Error('Only objects are supported for option databaseAuthVariableOverride');\r\n                }\r\n                try {\r\n                    util.stringify(authOverride);\r\n                }\r\n                catch (e) {\r\n                    throw new Error('Invalid authOverride provided: ' + e);\r\n                }\r\n            }\r\n            this.persistentConnection_ = new PersistentConnection(this.repoInfo_, this.onDataUpdate_.bind(this), this.onConnectStatus_.bind(this), this.onServerInfoUpdate_.bind(this), authTokenProvider, authOverride);\r\n            this.server_ = this.persistentConnection_;\r\n        }\r\n        authTokenProvider.addTokenChangeListener(function (token) {\r\n            _this.server_.refreshAuthToken(token);\r\n        });\r\n        // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\r\n        // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\r\n        this.statsReporter_ = StatsManager.getOrCreateReporter(repoInfo_, function () { return new StatsReporter(_this.stats_, _this.server_); });\r\n        this.transactions_init_();\r\n        // Used for .info.\r\n        this.infoData_ = new SnapshotHolder();\r\n        this.infoSyncTree_ = new SyncTree({\r\n            startListening: function (query, tag, currentHashFn, onComplete) {\r\n                var infoEvents = [];\r\n                var node = _this.infoData_.getNode(query.path);\r\n                // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\r\n                // on initial data...\r\n                if (!node.isEmpty()) {\r\n                    infoEvents = _this.infoSyncTree_.applyServerOverwrite(query.path, node);\r\n                    setTimeout(function () {\r\n                        onComplete('ok');\r\n                    }, 0);\r\n                }\r\n                return infoEvents;\r\n            },\r\n            stopListening: function () { }\r\n        });\r\n        this.updateInfo_('connected', false);\r\n        this.serverSyncTree_ = new SyncTree({\r\n            startListening: function (query, tag, currentHashFn, onComplete) {\r\n                _this.server_.listen(query, currentHashFn, tag, function (status, data) {\r\n                    var events = onComplete(status, data);\r\n                    _this.eventQueue_.raiseEventsForChangedPath(query.path, events);\r\n                });\r\n                // No synchronous events for network-backed sync trees\r\n                return [];\r\n            },\r\n            stopListening: function (query, tag) {\r\n                _this.server_.unlisten(query, tag);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @return {string}  The URL corresponding to the root of this Firebase.\r\n     */\r\n    Repo.prototype.toString = function () {\r\n        return ((this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host);\r\n    };\r\n    /**\r\n     * @return {!string} The namespace represented by the repo.\r\n     */\r\n    Repo.prototype.name = function () {\r\n        return this.repoInfo_.namespace;\r\n    };\r\n    /**\r\n     * @return {!number} The time in milliseconds, taking the server offset into account if we have one.\r\n     */\r\n    Repo.prototype.serverTime = function () {\r\n        var offsetNode = this.infoData_.getNode(new Path('.info/serverTimeOffset'));\r\n        var offset = offsetNode.val() || 0;\r\n        return new Date().getTime() + offset;\r\n    };\r\n    /**\r\n     * Generate ServerValues using some variables from the repo object.\r\n     * @return {!Object}\r\n     */\r\n    Repo.prototype.generateServerValues = function () {\r\n        return generateWithValues({\r\n            timestamp: this.serverTime()\r\n        });\r\n    };\r\n    /**\r\n     * Called by realtime when we get new messages from the server.\r\n     *\r\n     * @private\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {boolean} isMerge\r\n     * @param {?number} tag\r\n     */\r\n    Repo.prototype.onDataUpdate_ = function (pathString, data, isMerge, tag) {\r\n        // For testing.\r\n        this.dataUpdateCount++;\r\n        var path = new Path(pathString);\r\n        data = this.interceptServerDataCallback_\r\n            ? this.interceptServerDataCallback_(pathString, data)\r\n            : data;\r\n        var events = [];\r\n        if (tag) {\r\n            if (isMerge) {\r\n                var taggedChildren = util.map(data, function (raw) {\r\n                    return nodeFromJSON$1(raw);\r\n                });\r\n                events = this.serverSyncTree_.applyTaggedQueryMerge(path, taggedChildren, tag);\r\n            }\r\n            else {\r\n                var taggedSnap = nodeFromJSON$1(data);\r\n                events = this.serverSyncTree_.applyTaggedQueryOverwrite(path, taggedSnap, tag);\r\n            }\r\n        }\r\n        else if (isMerge) {\r\n            var changedChildren = util.map(data, function (raw) {\r\n                return nodeFromJSON$1(raw);\r\n            });\r\n            events = this.serverSyncTree_.applyServerMerge(path, changedChildren);\r\n        }\r\n        else {\r\n            var snap = nodeFromJSON$1(data);\r\n            events = this.serverSyncTree_.applyServerOverwrite(path, snap);\r\n        }\r\n        var affectedPath = path;\r\n        if (events.length > 0) {\r\n            // Since we have a listener outstanding for each transaction, receiving any events\r\n            // is a proxy for some change having occurred.\r\n            affectedPath = this.rerunTransactions_(path);\r\n        }\r\n        this.eventQueue_.raiseEventsForChangedPath(affectedPath, events);\r\n    };\r\n    /**\r\n     * TODO: This should be @private but it's used by test_access.js and internal.js\r\n     * @param {?function(!string, *):*} callback\r\n     * @private\r\n     */\r\n    Repo.prototype.interceptServerData_ = function (callback) {\r\n        this.interceptServerDataCallback_ = callback;\r\n    };\r\n    /**\r\n     * @param {!boolean} connectStatus\r\n     * @private\r\n     */\r\n    Repo.prototype.onConnectStatus_ = function (connectStatus) {\r\n        this.updateInfo_('connected', connectStatus);\r\n        if (connectStatus === false) {\r\n            this.runOnDisconnectEvents_();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Object} updates\r\n     * @private\r\n     */\r\n    Repo.prototype.onServerInfoUpdate_ = function (updates) {\r\n        var _this = this;\r\n        each(updates, function (value, key) {\r\n            _this.updateInfo_(key, value);\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @param {!string} pathString\r\n     * @param {*} value\r\n     * @private\r\n     */\r\n    Repo.prototype.updateInfo_ = function (pathString, value) {\r\n        var path = new Path('/.info/' + pathString);\r\n        var newNode = nodeFromJSON$1(value);\r\n        this.infoData_.updateSnapshot(path, newNode);\r\n        var events = this.infoSyncTree_.applyServerOverwrite(path, newNode);\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n    };\r\n    /**\r\n     * @return {!number}\r\n     * @private\r\n     */\r\n    Repo.prototype.getNextWriteId_ = function () {\r\n        return this.nextWriteId_++;\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {*} newVal\r\n     * @param {number|string|null} newPriority\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.setWithPriority = function (path, newVal, newPriority, onComplete) {\r\n        var _this = this;\r\n        this.log_('set', {\r\n            path: path.toString(),\r\n            value: newVal,\r\n            priority: newPriority\r\n        });\r\n        // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\r\n        // (b) store unresolved paths on JSON parse\r\n        var serverValues = this.generateServerValues();\r\n        var newNodeUnresolved = nodeFromJSON$1(newVal, newPriority);\r\n        var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\r\n        var writeId = this.getNextWriteId_();\r\n        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, writeId, true);\r\n        this.eventQueue_.queueEvents(events);\r\n        this.server_.put(path.toString(), newNodeUnresolved.val(/*export=*/ true), function (status, errorReason) {\r\n            var success = status === 'ok';\r\n            if (!success) {\r\n                warn('set at ' + path + ' failed: ' + status);\r\n            }\r\n            var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId, !success);\r\n            _this.eventQueue_.raiseEventsForChangedPath(path, clearEvents);\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n        var affectedPath = this.abortTransactions_(path);\r\n        this.rerunTransactions_(affectedPath);\r\n        // We queued the events above, so just flush the queue here\r\n        this.eventQueue_.raiseEventsForChangedPath(affectedPath, []);\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!Object} childrenToMerge\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.update = function (path, childrenToMerge, onComplete) {\r\n        var _this = this;\r\n        this.log_('update', { path: path.toString(), value: childrenToMerge });\r\n        // Start with our existing data and merge each child into it.\r\n        var empty = true;\r\n        var serverValues = this.generateServerValues();\r\n        var changedChildren = {};\r\n        util.forEach(childrenToMerge, function (changedKey, changedValue) {\r\n            empty = false;\r\n            var newNodeUnresolved = nodeFromJSON$1(changedValue);\r\n            changedChildren[changedKey] = resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\r\n        });\r\n        if (!empty) {\r\n            var writeId_1 = this.getNextWriteId_();\r\n            var events = this.serverSyncTree_.applyUserMerge(path, changedChildren, writeId_1);\r\n            this.eventQueue_.queueEvents(events);\r\n            this.server_.merge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n                var success = status === 'ok';\r\n                if (!success) {\r\n                    warn('update at ' + path + ' failed: ' + status);\r\n                }\r\n                var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId_1, !success);\r\n                var affectedPath = clearEvents.length > 0 ? _this.rerunTransactions_(path) : path;\r\n                _this.eventQueue_.raiseEventsForChangedPath(affectedPath, clearEvents);\r\n                _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n            });\r\n            util.forEach(childrenToMerge, function (changedPath) {\r\n                var affectedPath = _this.abortTransactions_(path.child(changedPath));\r\n                _this.rerunTransactions_(affectedPath);\r\n            });\r\n            // We queued the events above, so just flush the queue here\r\n            this.eventQueue_.raiseEventsForChangedPath(path, []);\r\n        }\r\n        else {\r\n            log(\"update() called with empty data.  Don't do anything.\");\r\n            this.callOnCompleteCallback(onComplete, 'ok');\r\n        }\r\n    };\r\n    /**\r\n     * Applies all of the changes stored up in the onDisconnect_ tree.\r\n     * @private\r\n     */\r\n    Repo.prototype.runOnDisconnectEvents_ = function () {\r\n        var _this = this;\r\n        this.log_('onDisconnectEvents');\r\n        var serverValues = this.generateServerValues();\r\n        var resolvedOnDisconnectTree = resolveDeferredValueTree(this.onDisconnect_, serverValues);\r\n        var events = [];\r\n        resolvedOnDisconnectTree.forEachTree(Path.Empty, function (path, snap) {\r\n            events = events.concat(_this.serverSyncTree_.applyServerOverwrite(path, snap));\r\n            var affectedPath = _this.abortTransactions_(path);\r\n            _this.rerunTransactions_(affectedPath);\r\n        });\r\n        this.onDisconnect_ = new SparseSnapshotTree();\r\n        this.eventQueue_.raiseEventsForChangedPath(Path.Empty, events);\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.onDisconnectCancel = function (path, onComplete) {\r\n        var _this = this;\r\n        this.server_.onDisconnectCancel(path.toString(), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.forget(path);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {*} value\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.onDisconnectSet = function (path, value, onComplete) {\r\n        var _this = this;\r\n        var newNode = nodeFromJSON$1(value);\r\n        this.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.remember(path, newNode);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {*} value\r\n     * @param {*} priority\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.onDisconnectSetWithPriority = function (path, value, priority, onComplete) {\r\n        var _this = this;\r\n        var newNode = nodeFromJSON$1(value, priority);\r\n        this.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.remember(path, newNode);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {*} childrenToMerge\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.onDisconnectUpdate = function (path, childrenToMerge, onComplete) {\r\n        var _this = this;\r\n        if (util.isEmpty(childrenToMerge)) {\r\n            log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\r\n            this.callOnCompleteCallback(onComplete, 'ok');\r\n            return;\r\n        }\r\n        this.server_.onDisconnectMerge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                util.forEach(childrenToMerge, function (childName, childNode) {\r\n                    var newChildNode = nodeFromJSON$1(childNode);\r\n                    _this.onDisconnect_.remember(path.child(childName), newChildNode);\r\n                });\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @param {!EventRegistration} eventRegistration\r\n     */\r\n    Repo.prototype.addEventCallbackForQuery = function (query, eventRegistration) {\r\n        var events;\r\n        if (query.path.getFront() === '.info') {\r\n            events = this.infoSyncTree_.addEventRegistration(query, eventRegistration);\r\n        }\r\n        else {\r\n            events = this.serverSyncTree_.addEventRegistration(query, eventRegistration);\r\n        }\r\n        this.eventQueue_.raiseEventsAtPath(query.path, events);\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @param {?EventRegistration} eventRegistration\r\n     */\r\n    Repo.prototype.removeEventCallbackForQuery = function (query, eventRegistration) {\r\n        // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\r\n        // a little bit by handling the return values anyways.\r\n        var events;\r\n        if (query.path.getFront() === '.info') {\r\n            events = this.infoSyncTree_.removeEventRegistration(query, eventRegistration);\r\n        }\r\n        else {\r\n            events = this.serverSyncTree_.removeEventRegistration(query, eventRegistration);\r\n        }\r\n        this.eventQueue_.raiseEventsAtPath(query.path, events);\r\n    };\r\n    Repo.prototype.interrupt = function () {\r\n        if (this.persistentConnection_) {\r\n            this.persistentConnection_.interrupt(INTERRUPT_REASON);\r\n        }\r\n    };\r\n    Repo.prototype.resume = function () {\r\n        if (this.persistentConnection_) {\r\n            this.persistentConnection_.resume(INTERRUPT_REASON);\r\n        }\r\n    };\r\n    Repo.prototype.stats = function (showDelta) {\r\n        if (showDelta === void 0) { showDelta = false; }\r\n        if (typeof console === 'undefined')\r\n            return;\r\n        var stats;\r\n        if (showDelta) {\r\n            if (!this.statsListener_)\r\n                this.statsListener_ = new StatsListener(this.stats_);\r\n            stats = this.statsListener_.get();\r\n        }\r\n        else {\r\n            stats = this.stats_.get();\r\n        }\r\n        var longestName = Object.keys(stats).reduce(function (previousValue, currentValue) {\r\n            return Math.max(currentValue.length, previousValue);\r\n        }, 0);\r\n        util.forEach(stats, function (stat, value) {\r\n            // pad stat names to be the same length (plus 2 extra spaces).\r\n            for (var i = stat.length; i < longestName + 2; i++)\r\n                stat += ' ';\r\n            console.log(stat + value);\r\n        });\r\n    };\r\n    Repo.prototype.statsIncrementCounter = function (metric) {\r\n        this.stats_.incrementCounter(metric);\r\n        this.statsReporter_.includeStat(metric);\r\n    };\r\n    /**\r\n     * @param {...*} var_args\r\n     * @private\r\n     */\r\n    Repo.prototype.log_ = function () {\r\n        var var_args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            var_args[_i] = arguments[_i];\r\n        }\r\n        var prefix = '';\r\n        if (this.persistentConnection_) {\r\n            prefix = this.persistentConnection_.id + ':';\r\n        }\r\n        log.apply(void 0, [prefix].concat(var_args));\r\n    };\r\n    /**\r\n     * @param {?function(?Error, *=)} callback\r\n     * @param {!string} status\r\n     * @param {?string=} errorReason\r\n     */\r\n    Repo.prototype.callOnCompleteCallback = function (callback, status, errorReason) {\r\n        if (callback) {\r\n            exceptionGuard(function () {\r\n                if (status == 'ok') {\r\n                    callback(null);\r\n                }\r\n                else {\r\n                    var code = (status || 'error').toUpperCase();\r\n                    var message = code;\r\n                    if (errorReason)\r\n                        message += ': ' + errorReason;\r\n                    var error$$1 = new Error(message);\r\n                    error$$1.code = code;\r\n                    callback(error$$1);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    Object.defineProperty(Repo.prototype, \"database\", {\r\n        get: function () {\r\n            return this.__database || (this.__database = new Database(this));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Repo;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */\r\nvar RangedFilter = /** @class */ (function () {\r\n    /**\r\n     * @param {!QueryParams} params\r\n     */\r\n    function RangedFilter(params) {\r\n        this.indexedFilter_ = new IndexedFilter(params.getIndex());\r\n        this.index_ = params.getIndex();\r\n        this.startPost_ = RangedFilter.getStartPost_(params);\r\n        this.endPost_ = RangedFilter.getEndPost_(params);\r\n    }\r\n    /**\r\n     * @return {!NamedNode}\r\n     */\r\n    RangedFilter.prototype.getStartPost = function () {\r\n        return this.startPost_;\r\n    };\r\n    /**\r\n     * @return {!NamedNode}\r\n     */\r\n    RangedFilter.prototype.getEndPost = function () {\r\n        return this.endPost_;\r\n    };\r\n    /**\r\n     * @param {!NamedNode} node\r\n     * @return {boolean}\r\n     */\r\n    RangedFilter.prototype.matches = function (node) {\r\n        return (this.index_.compare(this.getStartPost(), node) <= 0 &&\r\n            this.index_.compare(node, this.getEndPost()) <= 0);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        return this.indexedFilter_.updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (newSnap.isLeafNode()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            newSnap = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var filtered = newSnap.withIndex(this.index_);\r\n        // Don't support priorities on queries\r\n        filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n        var self = this;\r\n        newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            if (!self.matches(new NamedNode(key, childNode))) {\r\n                filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\r\n            }\r\n        });\r\n        return this.indexedFilter_.updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.getIndexedFilter = function () {\r\n        return this.indexedFilter_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @param {!QueryParams} params\r\n     * @return {!NamedNode}\r\n     * @private\r\n     */\r\n    RangedFilter.getStartPost_ = function (params) {\r\n        if (params.hasStart()) {\r\n            var startName = params.getIndexStartName();\r\n            return params.getIndex().makePost(params.getIndexStartValue(), startName);\r\n        }\r\n        else {\r\n            return params.getIndex().minPost();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!QueryParams} params\r\n     * @return {!NamedNode}\r\n     * @private\r\n     */\r\n    RangedFilter.getEndPost_ = function (params) {\r\n        if (params.hasEnd()) {\r\n            var endName = params.getIndexEndName();\r\n            return params.getIndex().makePost(params.getIndexEndValue(), endName);\r\n        }\r\n        else {\r\n            return params.getIndex().maxPost();\r\n        }\r\n    };\r\n    return RangedFilter;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */\r\nvar LimitedFilter = /** @class */ (function () {\r\n    /**\r\n     * @param {!QueryParams} params\r\n     */\r\n    function LimitedFilter(params) {\r\n        this.rangedFilter_ = new RangedFilter(params);\r\n        this.index_ = params.getIndex();\r\n        this.limit_ = params.getLimit();\r\n        this.reverse_ = !params.isViewFromLeft();\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        if (snap.getImmediateChild(key).equals(newChild)) {\r\n            // No change\r\n            return snap;\r\n        }\r\n        else if (snap.numChildren() < this.limit_) {\r\n            return this.rangedFilter_\r\n                .getIndexedFilter()\r\n                .updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n        }\r\n        else {\r\n            return this.fullLimitUpdateChild_(snap, key, newChild, source, optChangeAccumulator);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        var filtered;\r\n        if (newSnap.isLeafNode() || newSnap.isEmpty()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n        }\r\n        else {\r\n            if (this.limit_ * 2 < newSnap.numChildren() &&\r\n                newSnap.isIndexed(this.index_)) {\r\n                // Easier to build up a snapshot, since what we're given has more than twice the elements we want\r\n                filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n                // anchor to the startPost, endPost, or last element as appropriate\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(), this.index_);\r\n                }\r\n                else {\r\n                    iterator = newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(), this.index_);\r\n                }\r\n                var count = 0;\r\n                while (iterator.hasNext() && count < this.limit_) {\r\n                    var next = iterator.getNext();\r\n                    var inRange = void 0;\r\n                    if (this.reverse_) {\r\n                        inRange =\r\n                            this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;\r\n                    }\r\n                    else {\r\n                        inRange =\r\n                            this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;\r\n                    }\r\n                    if (inRange) {\r\n                        filtered = filtered.updateImmediateChild(next.name, next.node);\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        // if we have reached the end post, we cannot keep adding elemments\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\r\n                filtered = newSnap.withIndex(this.index_);\r\n                // Don't support priorities on queries\r\n                filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n                var startPost = void 0;\r\n                var endPost = void 0;\r\n                var cmp = void 0;\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = filtered.getReverseIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getEndPost();\r\n                    endPost = this.rangedFilter_.getStartPost();\r\n                    var indexCompare_1 = this.index_.getCompare();\r\n                    cmp = function (a, b) { return indexCompare_1(b, a); };\r\n                }\r\n                else {\r\n                    iterator = filtered.getIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getStartPost();\r\n                    endPost = this.rangedFilter_.getEndPost();\r\n                    cmp = this.index_.getCompare();\r\n                }\r\n                var count = 0;\r\n                var foundStartPost = false;\r\n                while (iterator.hasNext()) {\r\n                    var next = iterator.getNext();\r\n                    if (!foundStartPost && cmp(startPost, next) <= 0) {\r\n                        // start adding\r\n                        foundStartPost = true;\r\n                    }\r\n                    var inRange = foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;\r\n                    if (inRange) {\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        filtered = filtered.updateImmediateChild(next.name, ChildrenNode.EMPTY_NODE);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return this.rangedFilter_\r\n            .getIndexedFilter()\r\n            .updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.getIndexedFilter = function () {\r\n        return this.rangedFilter_.getIndexedFilter();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @param {!Node} snap\r\n     * @param {string} childKey\r\n     * @param {!Node} childSnap\r\n     * @param {!CompleteChildSource} source\r\n     * @param {?ChildChangeAccumulator} changeAccumulator\r\n     * @return {!Node}\r\n     * @private\r\n     */\r\n    LimitedFilter.prototype.fullLimitUpdateChild_ = function (snap, childKey, childSnap, source, changeAccumulator) {\r\n        // TODO: rename all cache stuff etc to general snap terminology\r\n        var cmp;\r\n        if (this.reverse_) {\r\n            var indexCmp_1 = this.index_.getCompare();\r\n            cmp = function (a, b) { return indexCmp_1(b, a); };\r\n        }\r\n        else {\r\n            cmp = this.index_.getCompare();\r\n        }\r\n        var oldEventCache = snap;\r\n        util.assert(oldEventCache.numChildren() == this.limit_, '');\r\n        var newChildNamedNode = new NamedNode(childKey, childSnap);\r\n        var windowBoundary = this.reverse_\r\n            ? oldEventCache.getFirstChild(this.index_)\r\n            : oldEventCache.getLastChild(this.index_);\r\n        var inRange = this.rangedFilter_.matches(newChildNamedNode);\r\n        if (oldEventCache.hasChild(childKey)) {\r\n            var oldChildSnap = oldEventCache.getImmediateChild(childKey);\r\n            var nextChild = source.getChildAfterChild(this.index_, windowBoundary, this.reverse_);\r\n            while (nextChild != null &&\r\n                (nextChild.name == childKey || oldEventCache.hasChild(nextChild.name))) {\r\n                // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\r\n                // been applied to the limited filter yet. Ignore this next child which will be updated later in\r\n                // the limited filter...\r\n                nextChild = source.getChildAfterChild(this.index_, nextChild, this.reverse_);\r\n            }\r\n            var compareNext = nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\r\n            var remainsInWindow = inRange && !childSnap.isEmpty() && compareNext >= 0;\r\n            if (remainsInWindow) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childChangedChange(childKey, childSnap, oldChildSnap));\r\n                }\r\n                return oldEventCache.updateImmediateChild(childKey, childSnap);\r\n            }\r\n            else {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childRemovedChange(childKey, oldChildSnap));\r\n                }\r\n                var newEventCache = oldEventCache.updateImmediateChild(childKey, ChildrenNode.EMPTY_NODE);\r\n                var nextChildInRange = nextChild != null && this.rangedFilter_.matches(nextChild);\r\n                if (nextChildInRange) {\r\n                    if (changeAccumulator != null) {\r\n                        changeAccumulator.trackChildChange(Change.childAddedChange(nextChild.name, nextChild.node));\r\n                    }\r\n                    return newEventCache.updateImmediateChild(nextChild.name, nextChild.node);\r\n                }\r\n                else {\r\n                    return newEventCache;\r\n                }\r\n            }\r\n        }\r\n        else if (childSnap.isEmpty()) {\r\n            // we're deleting a node, but it was not in the window, so ignore it\r\n            return snap;\r\n        }\r\n        else if (inRange) {\r\n            if (cmp(windowBoundary, newChildNamedNode) >= 0) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childRemovedChange(windowBoundary.name, windowBoundary.node));\r\n                    changeAccumulator.trackChildChange(Change.childAddedChange(childKey, childSnap));\r\n                }\r\n                return oldEventCache\r\n                    .updateImmediateChild(childKey, childSnap)\r\n                    .updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\r\n            }\r\n            else {\r\n                return snap;\r\n            }\r\n        }\r\n        else {\r\n            return snap;\r\n        }\r\n    };\r\n    return LimitedFilter;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\r\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\r\n * user-facing API level, so it is not done here.\r\n * @constructor\r\n */\r\nvar QueryParams = /** @class */ (function () {\r\n    function QueryParams() {\r\n        this.limitSet_ = false;\r\n        this.startSet_ = false;\r\n        this.startNameSet_ = false;\r\n        this.endSet_ = false;\r\n        this.endNameSet_ = false;\r\n        this.limit_ = 0;\r\n        this.viewFrom_ = '';\r\n        this.indexStartValue_ = null;\r\n        this.indexStartName_ = '';\r\n        this.indexEndValue_ = null;\r\n        this.indexEndName_ = '';\r\n        this.index_ = PRIORITY_INDEX;\r\n    }\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasStart = function () {\r\n        return this.startSet_;\r\n    };\r\n    /**\r\n     * @return {boolean} True if it would return from left.\r\n     */\r\n    QueryParams.prototype.isViewFromLeft = function () {\r\n        if (this.viewFrom_ === '') {\r\n            // limit(), rather than limitToFirst or limitToLast was called.\r\n            // This means that only one of startSet_ and endSet_ is true. Use them\r\n            // to calculate which side of the view to anchor to. If neither is set,\r\n            // anchor to the end.\r\n            return this.startSet_;\r\n        }\r\n        else {\r\n            return (this.viewFrom_ === QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT);\r\n        }\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true\r\n     * @return {*}\r\n     */\r\n    QueryParams.prototype.getIndexStartValue = function () {\r\n        util.assert(this.startSet_, 'Only valid if start has been set');\r\n        return this.indexStartValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true.\r\n     * Returns the starting key name for the range defined by these query parameters\r\n     * @return {!string}\r\n     */\r\n    QueryParams.prototype.getIndexStartName = function () {\r\n        util.assert(this.startSet_, 'Only valid if start has been set');\r\n        if (this.startNameSet_) {\r\n            return this.indexStartName_;\r\n        }\r\n        else {\r\n            return MIN_NAME;\r\n        }\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasEnd = function () {\r\n        return this.endSet_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * @return {*}\r\n     */\r\n    QueryParams.prototype.getIndexEndValue = function () {\r\n        util.assert(this.endSet_, 'Only valid if end has been set');\r\n        return this.indexEndValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * Returns the end key name for the range defined by these query parameters\r\n     * @return {!string}\r\n     */\r\n    QueryParams.prototype.getIndexEndName = function () {\r\n        util.assert(this.endSet_, 'Only valid if end has been set');\r\n        if (this.endNameSet_) {\r\n            return this.indexEndName_;\r\n        }\r\n        else {\r\n            return MAX_NAME;\r\n        }\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasLimit = function () {\r\n        return this.limitSet_;\r\n    };\r\n    /**\r\n     * @return {boolean} True if a limit has been set and it has been explicitly anchored\r\n     */\r\n    QueryParams.prototype.hasAnchoredLimit = function () {\r\n        return this.limitSet_ && this.viewFrom_ !== '';\r\n    };\r\n    /**\r\n     * Only valid to call if hasLimit() returns true\r\n     * @return {!number}\r\n     */\r\n    QueryParams.prototype.getLimit = function () {\r\n        util.assert(this.limitSet_, 'Only valid if limit has been set');\r\n        return this.limit_;\r\n    };\r\n    /**\r\n     * @return {!Index}\r\n     */\r\n    QueryParams.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @return {!QueryParams}\r\n     * @private\r\n     */\r\n    QueryParams.prototype.copy_ = function () {\r\n        var copy = new QueryParams();\r\n        copy.limitSet_ = this.limitSet_;\r\n        copy.limit_ = this.limit_;\r\n        copy.startSet_ = this.startSet_;\r\n        copy.indexStartValue_ = this.indexStartValue_;\r\n        copy.startNameSet_ = this.startNameSet_;\r\n        copy.indexStartName_ = this.indexStartName_;\r\n        copy.endSet_ = this.endSet_;\r\n        copy.indexEndValue_ = this.indexEndValue_;\r\n        copy.endNameSet_ = this.endNameSet_;\r\n        copy.indexEndName_ = this.indexEndName_;\r\n        copy.index_ = this.index_;\r\n        copy.viewFrom_ = this.viewFrom_;\r\n        return copy;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limit = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = '';\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limitToFirst = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limitToLast = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_RIGHT;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {?string=} key\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.startAt = function (indexValue, key) {\r\n        var newParams = this.copy_();\r\n        newParams.startSet_ = true;\r\n        if (!(indexValue !== undefined)) {\r\n            indexValue = null;\r\n        }\r\n        newParams.indexStartValue_ = indexValue;\r\n        if (key != null) {\r\n            newParams.startNameSet_ = true;\r\n            newParams.indexStartName_ = key;\r\n        }\r\n        else {\r\n            newParams.startNameSet_ = false;\r\n            newParams.indexStartName_ = '';\r\n        }\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {?string=} key\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.endAt = function (indexValue, key) {\r\n        var newParams = this.copy_();\r\n        newParams.endSet_ = true;\r\n        if (!(indexValue !== undefined)) {\r\n            indexValue = null;\r\n        }\r\n        newParams.indexEndValue_ = indexValue;\r\n        if (key !== undefined) {\r\n            newParams.endNameSet_ = true;\r\n            newParams.indexEndName_ = key;\r\n        }\r\n        else {\r\n            newParams.endNameSet_ = false;\r\n            newParams.indexEndName_ = '';\r\n        }\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!Index} index\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.orderBy = function (index) {\r\n        var newParams = this.copy_();\r\n        newParams.index_ = index;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @return {!Object}\r\n     */\r\n    QueryParams.prototype.getQueryObject = function () {\r\n        var WIRE_PROTOCOL_CONSTANTS = QueryParams.WIRE_PROTOCOL_CONSTANTS_;\r\n        var obj = {};\r\n        if (this.startSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE] = this.indexStartValue_;\r\n            if (this.startNameSet_) {\r\n                obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME] = this.indexStartName_;\r\n            }\r\n        }\r\n        if (this.endSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE] = this.indexEndValue_;\r\n            if (this.endNameSet_) {\r\n                obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME] = this.indexEndName_;\r\n            }\r\n        }\r\n        if (this.limitSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.LIMIT] = this.limit_;\r\n            var viewFrom = this.viewFrom_;\r\n            if (viewFrom === '') {\r\n                if (this.isViewFromLeft()) {\r\n                    viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\r\n                }\r\n                else {\r\n                    viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\r\n                }\r\n            }\r\n            obj[WIRE_PROTOCOL_CONSTANTS.VIEW_FROM] = viewFrom;\r\n        }\r\n        // For now, priority index is the default, so we only specify if it's some other index\r\n        if (this.index_ !== PRIORITY_INDEX) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX] = this.index_.toString();\r\n        }\r\n        return obj;\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.loadsAllData = function () {\r\n        return !(this.startSet_ || this.endSet_ || this.limitSet_);\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.isDefault = function () {\r\n        return this.loadsAllData() && this.index_ == PRIORITY_INDEX;\r\n    };\r\n    /**\r\n     * @return {!NodeFilter}\r\n     */\r\n    QueryParams.prototype.getNodeFilter = function () {\r\n        if (this.loadsAllData()) {\r\n            return new IndexedFilter(this.getIndex());\r\n        }\r\n        else if (this.hasLimit()) {\r\n            return new LimitedFilter(this);\r\n        }\r\n        else {\r\n            return new RangedFilter(this);\r\n        }\r\n    };\r\n    /**\r\n     * Returns a set of REST query string parameters representing this query.\r\n     *\r\n     * @return {!Object.<string,*>} query string parameters\r\n     */\r\n    QueryParams.prototype.toRestQueryStringParameters = function () {\r\n        var REST_CONSTANTS = QueryParams.REST_QUERY_CONSTANTS_;\r\n        var qs = {};\r\n        if (this.isDefault()) {\r\n            return qs;\r\n        }\r\n        var orderBy;\r\n        if (this.index_ === PRIORITY_INDEX) {\r\n            orderBy = REST_CONSTANTS.PRIORITY_INDEX;\r\n        }\r\n        else if (this.index_ === VALUE_INDEX) {\r\n            orderBy = REST_CONSTANTS.VALUE_INDEX;\r\n        }\r\n        else if (this.index_ === KEY_INDEX) {\r\n            orderBy = REST_CONSTANTS.KEY_INDEX;\r\n        }\r\n        else {\r\n            util.assert(this.index_ instanceof PathIndex, 'Unrecognized index type!');\r\n            orderBy = this.index_.toString();\r\n        }\r\n        qs[REST_CONSTANTS.ORDER_BY] = util.stringify(orderBy);\r\n        if (this.startSet_) {\r\n            qs[REST_CONSTANTS.START_AT] = util.stringify(this.indexStartValue_);\r\n            if (this.startNameSet_) {\r\n                qs[REST_CONSTANTS.START_AT] += ',' + util.stringify(this.indexStartName_);\r\n            }\r\n        }\r\n        if (this.endSet_) {\r\n            qs[REST_CONSTANTS.END_AT] = util.stringify(this.indexEndValue_);\r\n            if (this.endNameSet_) {\r\n                qs[REST_CONSTANTS.END_AT] += ',' + util.stringify(this.indexEndName_);\r\n            }\r\n        }\r\n        if (this.limitSet_) {\r\n            if (this.isViewFromLeft()) {\r\n                qs[REST_CONSTANTS.LIMIT_TO_FIRST] = this.limit_;\r\n            }\r\n            else {\r\n                qs[REST_CONSTANTS.LIMIT_TO_LAST] = this.limit_;\r\n            }\r\n        }\r\n        return qs;\r\n    };\r\n    /**\r\n     * Wire Protocol Constants\r\n     * @const\r\n     * @enum {string}\r\n     * @private\r\n     */\r\n    QueryParams.WIRE_PROTOCOL_CONSTANTS_ = {\r\n        INDEX_START_VALUE: 'sp',\r\n        INDEX_START_NAME: 'sn',\r\n        INDEX_END_VALUE: 'ep',\r\n        INDEX_END_NAME: 'en',\r\n        LIMIT: 'l',\r\n        VIEW_FROM: 'vf',\r\n        VIEW_FROM_LEFT: 'l',\r\n        VIEW_FROM_RIGHT: 'r',\r\n        INDEX: 'i'\r\n    };\r\n    /**\r\n     * REST Query Constants\r\n     * @const\r\n     * @enum {string}\r\n     * @private\r\n     */\r\n    QueryParams.REST_QUERY_CONSTANTS_ = {\r\n        ORDER_BY: 'orderBy',\r\n        PRIORITY_INDEX: '$priority',\r\n        VALUE_INDEX: '$value',\r\n        KEY_INDEX: '$key',\r\n        START_AT: 'startAt',\r\n        END_AT: 'endAt',\r\n        LIMIT_TO_FIRST: 'limitToFirst',\r\n        LIMIT_TO_LAST: 'limitToLast'\r\n    };\r\n    /**\r\n     * Default, empty query parameters\r\n     * @type {!QueryParams}\r\n     * @const\r\n     */\r\n    QueryParams.DEFAULT = new QueryParams();\r\n    return QueryParams;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Reference = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Reference, _super);\r\n    /**\r\n     * Call options:\r\n     *   new Reference(Repo, Path) or\r\n     *   new Reference(url: string, string|RepoManager)\r\n     *\r\n     * Externally - this is the firebase.database.Reference type.\r\n     *\r\n     * @param {!Repo} repo\r\n     * @param {(!Path)} path\r\n     * @extends {Query}\r\n     */\r\n    function Reference(repo, path) {\r\n        var _this = this;\r\n        if (!(repo instanceof Repo)) {\r\n            throw new Error('new Reference() no longer supported - use app.database().');\r\n        }\r\n        // call Query's constructor, passing in the repo and path.\r\n        _this = _super.call(this, repo, path, QueryParams.DEFAULT, false) || this;\r\n        return _this;\r\n    }\r\n    /** @return {?string} */\r\n    Reference.prototype.getKey = function () {\r\n        util.validateArgCount('Reference.key', 0, 0, arguments.length);\r\n        if (this.path.isEmpty())\r\n            return null;\r\n        else\r\n            return this.path.getBack();\r\n    };\r\n    /**\r\n     * @param {!(string|Path)} pathString\r\n     * @return {!Reference}\r\n     */\r\n    Reference.prototype.child = function (pathString) {\r\n        util.validateArgCount('Reference.child', 1, 1, arguments.length);\r\n        if (typeof pathString === 'number') {\r\n            pathString = String(pathString);\r\n        }\r\n        else if (!(pathString instanceof Path)) {\r\n            if (this.path.getFront() === null)\r\n                validateRootPathString('Reference.child', 1, pathString, false);\r\n            else\r\n                validatePathString('Reference.child', 1, pathString, false);\r\n        }\r\n        return new Reference(this.repo, this.path.child(pathString));\r\n    };\r\n    /** @return {?Reference} */\r\n    Reference.prototype.getParent = function () {\r\n        util.validateArgCount('Reference.parent', 0, 0, arguments.length);\r\n        var parentPath = this.path.parent();\r\n        return parentPath === null ? null : new Reference(this.repo, parentPath);\r\n    };\r\n    /** @return {!Reference} */\r\n    Reference.prototype.getRoot = function () {\r\n        util.validateArgCount('Reference.root', 0, 0, arguments.length);\r\n        var ref = this;\r\n        while (ref.getParent() !== null) {\r\n            ref = ref.getParent();\r\n        }\r\n        return ref;\r\n    };\r\n    /** @return {!Database} */\r\n    Reference.prototype.databaseProp = function () {\r\n        return this.repo.database;\r\n    };\r\n    /**\r\n     * @param {*} newVal\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.set = function (newVal, onComplete) {\r\n        util.validateArgCount('Reference.set', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.set', this.path);\r\n        validateFirebaseDataArg('Reference.set', 1, newVal, this.path, false);\r\n        util.validateCallback('Reference.set', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path, newVal, \r\n        /*priority=*/ null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {!Object} objectToMerge\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.update = function (objectToMerge, onComplete) {\r\n        util.validateArgCount('Reference.update', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.update', this.path);\r\n        if (Array.isArray(objectToMerge)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < objectToMerge.length; ++i) {\r\n                newObjectToMerge['' + i] = objectToMerge[i];\r\n            }\r\n            objectToMerge = newObjectToMerge;\r\n            warn('Passing an Array to Firebase.update() is deprecated. ' +\r\n                'Use set() if you want to overwrite the existing data, or ' +\r\n                'an Object with integer keys if you really do want to ' +\r\n                'only update some of the children.');\r\n        }\r\n        validateFirebaseMergeDataArg('Reference.update', 1, objectToMerge, this.path, false);\r\n        util.validateCallback('Reference.update', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.update(this.path, objectToMerge, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} newVal\r\n     * @param {string|number|null} newPriority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.setWithPriority = function (newVal, newPriority, onComplete) {\r\n        util.validateArgCount('Reference.setWithPriority', 2, 3, arguments.length);\r\n        validateWritablePath('Reference.setWithPriority', this.path);\r\n        validateFirebaseDataArg('Reference.setWithPriority', 1, newVal, this.path, false);\r\n        validatePriority('Reference.setWithPriority', 2, newPriority, false);\r\n        util.validateCallback('Reference.setWithPriority', 3, onComplete, true);\r\n        if (this.getKey() === '.length' || this.getKey() === '.keys')\r\n            throw 'Reference.setWithPriority failed: ' +\r\n                this.getKey() +\r\n                ' is a read-only object.';\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path, newVal, newPriority, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.remove = function (onComplete) {\r\n        util.validateArgCount('Reference.remove', 0, 1, arguments.length);\r\n        validateWritablePath('Reference.remove', this.path);\r\n        util.validateCallback('Reference.remove', 1, onComplete, true);\r\n        return this.set(null, onComplete);\r\n    };\r\n    /**\r\n     * @param {function(*):*} transactionUpdate\r\n     * @param {(function(?Error, boolean, ?DataSnapshot))=} onComplete\r\n     * @param {boolean=} applyLocally\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.transaction = function (transactionUpdate, onComplete, applyLocally) {\r\n        util.validateArgCount('Reference.transaction', 1, 3, arguments.length);\r\n        validateWritablePath('Reference.transaction', this.path);\r\n        util.validateCallback('Reference.transaction', 1, transactionUpdate, false);\r\n        util.validateCallback('Reference.transaction', 2, onComplete, true);\r\n        // NOTE: applyLocally is an internal-only option for now.  We need to decide if we want to keep it and how\r\n        // to expose it.\r\n        validateBoolean('Reference.transaction', 3, applyLocally, true);\r\n        if (this.getKey() === '.length' || this.getKey() === '.keys')\r\n            throw 'Reference.transaction failed: ' +\r\n                this.getKey() +\r\n                ' is a read-only object.';\r\n        if (applyLocally === undefined)\r\n            applyLocally = true;\r\n        var deferred = new util.Deferred();\r\n        if (typeof onComplete === 'function') {\r\n            deferred.promise.catch(function () { });\r\n        }\r\n        var promiseComplete = function (error$$1, committed, snapshot) {\r\n            if (error$$1) {\r\n                deferred.reject(error$$1);\r\n            }\r\n            else {\r\n                deferred.resolve(new TransactionResult(committed, snapshot));\r\n            }\r\n            if (typeof onComplete === 'function') {\r\n                onComplete(error$$1, committed, snapshot);\r\n            }\r\n        };\r\n        this.repo.startTransaction(this.path, transactionUpdate, promiseComplete, applyLocally);\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {string|number|null} priority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.setPriority = function (priority, onComplete) {\r\n        util.validateArgCount('Reference.setPriority', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.setPriority', this.path);\r\n        validatePriority('Reference.setPriority', 1, priority, false);\r\n        util.validateCallback('Reference.setPriority', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path.child('.priority'), priority, null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*=} value\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Reference}\r\n     */\r\n    Reference.prototype.push = function (value, onComplete) {\r\n        util.validateArgCount('Reference.push', 0, 2, arguments.length);\r\n        validateWritablePath('Reference.push', this.path);\r\n        validateFirebaseDataArg('Reference.push', 1, value, this.path, true);\r\n        util.validateCallback('Reference.push', 2, onComplete, true);\r\n        var now = this.repo.serverTime();\r\n        var name = nextPushId(now);\r\n        // push() returns a ThennableReference whose promise is fulfilled with a regular Reference.\r\n        // We use child() to create handles to two different references. The first is turned into a\r\n        // ThennableReference below by adding then() and catch() methods and is used as the\r\n        // return value of push(). The second remains a regular Reference and is used as the fulfilled\r\n        // value of the first ThennableReference.\r\n        var thennablePushRef = this.child(name);\r\n        var pushRef = this.child(name);\r\n        var promise;\r\n        if (value != null) {\r\n            promise = thennablePushRef.set(value, onComplete).then(function () { return pushRef; });\r\n        }\r\n        else {\r\n            promise = Promise.resolve(pushRef);\r\n        }\r\n        thennablePushRef.then = promise.then.bind(promise);\r\n        thennablePushRef.catch = promise.then.bind(promise, undefined);\r\n        if (typeof onComplete === 'function') {\r\n            promise.catch(function () { });\r\n        }\r\n        return thennablePushRef;\r\n    };\r\n    /**\r\n     * @return {!OnDisconnect}\r\n     */\r\n    Reference.prototype.onDisconnect = function () {\r\n        validateWritablePath('Reference.onDisconnect', this.path);\r\n        return new OnDisconnect(this.repo, this.path);\r\n    };\r\n    Object.defineProperty(Reference.prototype, \"database\", {\r\n        get: function () {\r\n            return this.databaseProp();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"key\", {\r\n        get: function () {\r\n            return this.getKey();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"parent\", {\r\n        get: function () {\r\n            return this.getParent();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"root\", {\r\n        get: function () {\r\n            return this.getRoot();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Reference;\r\n}(Query));\r\n/**\r\n * Define reference constructor in various modules\r\n *\r\n * We are doing this here to avoid several circular\r\n * dependency issues\r\n */\r\nQuery.__referenceConstructor = Reference;\r\nSyncPoint.__referenceConstructor = Reference;\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Node in a Tree.\r\n */\r\nvar TreeNode = /** @class */ (function () {\r\n    function TreeNode() {\r\n        // TODO: Consider making accessors that create children and value lazily or\r\n        // separate Internal / Leaf 'types'.\r\n        this.children = {};\r\n        this.childCount = 0;\r\n        this.value = null;\r\n    }\r\n    return TreeNode;\r\n}());\r\n/**\r\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\r\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\r\n * children.\r\n */\r\nvar Tree = /** @class */ (function () {\r\n    /**\r\n     * @template T\r\n     * @param {string=} name_ Optional name of the node.\r\n     * @param {Tree=} parent_ Optional parent node.\r\n     * @param {TreeNode=} node_ Optional node to wrap.\r\n     */\r\n    function Tree(name_, parent_, node_) {\r\n        if (name_ === void 0) { name_ = ''; }\r\n        if (parent_ === void 0) { parent_ = null; }\r\n        if (node_ === void 0) { node_ = new TreeNode(); }\r\n        this.name_ = name_;\r\n        this.parent_ = parent_;\r\n        this.node_ = node_;\r\n    }\r\n    /**\r\n     * Returns a sub-Tree for the given path.\r\n     *\r\n     * @param {!(string|Path)} pathObj Path to look up.\r\n     * @return {!Tree.<T>} Tree for path.\r\n     */\r\n    Tree.prototype.subTree = function (pathObj) {\r\n        // TODO: Require pathObj to be Path?\r\n        var path = pathObj instanceof Path ? pathObj : new Path(pathObj);\r\n        var child = this, next;\r\n        while ((next = path.getFront()) !== null) {\r\n            var childNode = util.safeGet(child.node_.children, next) || new TreeNode();\r\n            child = new Tree(next, child, childNode);\r\n            path = path.popFront();\r\n        }\r\n        return child;\r\n    };\r\n    /**\r\n     * Returns the data associated with this tree node.\r\n     *\r\n     * @return {?T} The data or null if no data exists.\r\n     */\r\n    Tree.prototype.getValue = function () {\r\n        return this.node_.value;\r\n    };\r\n    /**\r\n     * Sets data to this tree node.\r\n     *\r\n     * @param {!T} value Value to set.\r\n     */\r\n    Tree.prototype.setValue = function (value) {\r\n        util.assert(typeof value !== 'undefined', 'Cannot set value to undefined');\r\n        this.node_.value = value;\r\n        this.updateParents_();\r\n    };\r\n    /**\r\n     * Clears the contents of the tree node (its value and all children).\r\n     */\r\n    Tree.prototype.clear = function () {\r\n        this.node_.value = null;\r\n        this.node_.children = {};\r\n        this.node_.childCount = 0;\r\n        this.updateParents_();\r\n    };\r\n    /**\r\n     * @return {boolean} Whether the tree has any children.\r\n     */\r\n    Tree.prototype.hasChildren = function () {\r\n        return this.node_.childCount > 0;\r\n    };\r\n    /**\r\n     * @return {boolean} Whether the tree is empty (no value or children).\r\n     */\r\n    Tree.prototype.isEmpty = function () {\r\n        return this.getValue() === null && !this.hasChildren();\r\n    };\r\n    /**\r\n     * Calls action for each child of this tree node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     */\r\n    Tree.prototype.forEachChild = function (action) {\r\n        var _this = this;\r\n        util.forEach(this.node_.children, function (child, childTree) {\r\n            action(new Tree(child, _this, childTree));\r\n        });\r\n    };\r\n    /**\r\n     * Does a depth-first traversal of this node's descendants, calling action for each one.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     * @param {boolean=} includeSelf Whether to call action on this node as well. Defaults to\r\n     *   false.\r\n     * @param {boolean=} childrenFirst Whether to call action on children before calling it on\r\n     *   parent.\r\n     */\r\n    Tree.prototype.forEachDescendant = function (action, includeSelf, childrenFirst) {\r\n        if (includeSelf && !childrenFirst)\r\n            action(this);\r\n        this.forEachChild(function (child) {\r\n            child.forEachDescendant(action, /*includeSelf=*/ true, childrenFirst);\r\n        });\r\n        if (includeSelf && childrenFirst)\r\n            action(this);\r\n    };\r\n    /**\r\n     * Calls action on each ancestor node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called on each parent; return\r\n     *   true to abort.\r\n     * @param {boolean=} includeSelf Whether to call action on this node as well.\r\n     * @return {boolean} true if the action callback returned true.\r\n     */\r\n    Tree.prototype.forEachAncestor = function (action, includeSelf) {\r\n        var node = includeSelf ? this : this.parent();\r\n        while (node !== null) {\r\n            if (action(node)) {\r\n                return true;\r\n            }\r\n            node = node.parent();\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Does a depth-first traversal of this node's descendants.  When a descendant with a value\r\n     * is found, action is called on it and traversal does not continue inside the node.\r\n     * Action is *not* called on this node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     */\r\n    Tree.prototype.forEachImmediateDescendantWithValue = function (action) {\r\n        this.forEachChild(function (child) {\r\n            if (child.getValue() !== null)\r\n                action(child);\r\n            else\r\n                child.forEachImmediateDescendantWithValue(action);\r\n        });\r\n    };\r\n    /**\r\n     * @return {!Path} The path of this tree node, as a Path.\r\n     */\r\n    Tree.prototype.path = function () {\r\n        return new Path(this.parent_ === null\r\n            ? this.name_\r\n            : this.parent_.path() + '/' + this.name_);\r\n    };\r\n    /**\r\n     * @return {string} The name of the tree node.\r\n     */\r\n    Tree.prototype.name = function () {\r\n        return this.name_;\r\n    };\r\n    /**\r\n     * @return {?Tree} The parent tree node, or null if this is the root of the tree.\r\n     */\r\n    Tree.prototype.parent = function () {\r\n        return this.parent_;\r\n    };\r\n    /**\r\n     * Adds or removes this child from its parent based on whether it's empty or not.\r\n     *\r\n     * @private\r\n     */\r\n    Tree.prototype.updateParents_ = function () {\r\n        if (this.parent_ !== null)\r\n            this.parent_.updateChild_(this.name_, this);\r\n    };\r\n    /**\r\n     * Adds or removes the passed child to this tree node, depending on whether it's empty.\r\n     *\r\n     * @param {string} childName The name of the child to update.\r\n     * @param {!Tree.<T>} child The child to update.\r\n     * @private\r\n     */\r\n    Tree.prototype.updateChild_ = function (childName, child) {\r\n        var childEmpty = child.isEmpty();\r\n        var childExists = util.contains(this.node_.children, childName);\r\n        if (childEmpty && childExists) {\r\n            delete this.node_.children[childName];\r\n            this.node_.childCount--;\r\n            this.updateParents_();\r\n        }\r\n        else if (!childEmpty && !childExists) {\r\n            this.node_.children[childName] = child.node_;\r\n            this.node_.childCount++;\r\n            this.updateParents_();\r\n        }\r\n    };\r\n    return Tree;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// TODO: This is pretty messy.  Ideally, a lot of this would move into FirebaseData, or a transaction-specific\r\n// component used by FirebaseData, but it has ties to user callbacks (transaction update and onComplete) as well\r\n// as the realtime connection (to send transactions to the server).  So that all needs to be decoupled first.\r\n// For now it's part of Repo, but in its own file.\r\n/**\r\n * @enum {number}\r\n */\r\nvar TransactionStatus;\r\n(function (TransactionStatus) {\r\n    // We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the\r\n    // server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to\r\n    // mismatched hash.\r\n    TransactionStatus[TransactionStatus[\"RUN\"] = 0] = \"RUN\";\r\n    // We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted\r\n    // or rejected yet).\r\n    TransactionStatus[TransactionStatus[\"SENT\"] = 1] = \"SENT\";\r\n    // Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be\r\n    // removed when we get a chance to prune completed ones.\r\n    TransactionStatus[TransactionStatus[\"COMPLETED\"] = 2] = \"COMPLETED\";\r\n    // Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).\r\n    // If it comes back as unsuccessful, we'll abort it.\r\n    TransactionStatus[TransactionStatus[\"SENT_NEEDS_ABORT\"] = 3] = \"SENT_NEEDS_ABORT\";\r\n    // Temporary state used to mark transactions that need to be aborted.\r\n    TransactionStatus[TransactionStatus[\"NEEDS_ABORT\"] = 4] = \"NEEDS_ABORT\";\r\n})(TransactionStatus || (TransactionStatus = {}));\r\n/**\r\n * If a transaction does not succeed after 25 retries, we abort it.  Among other things this ensure that if there's\r\n * ever a bug causing a mismatch between client / server hashes for some data, we won't retry indefinitely.\r\n * @type {number}\r\n * @const\r\n * @private\r\n */\r\nRepo.MAX_TRANSACTION_RETRIES_ = 25;\r\n/**\r\n * Setup the transaction data structures\r\n * @private\r\n */\r\nRepo.prototype.transactions_init_ = function () {\r\n    /**\r\n     * Stores queues of outstanding transactions for Firebase locations.\r\n     *\r\n     * @type {!Tree.<Array.<!Transaction>>}\r\n     * @private\r\n     */\r\n    this.transactionQueueTree_ = new Tree();\r\n};\r\n/**\r\n * Creates a new transaction, adds it to the transactions we're tracking, and sends it to the server if possible.\r\n *\r\n * @param {!Path} path Path at which to do transaction.\r\n * @param {function(*):*} transactionUpdate Update callback.\r\n * @param {?function(?Error, boolean, ?DataSnapshot)} onComplete Completion callback.\r\n * @param {boolean} applyLocally Whether or not to make intermediate results visible\r\n */\r\nRepo.prototype.startTransaction = function (path, transactionUpdate, onComplete, applyLocally) {\r\n    this.log_('transaction on ' + path);\r\n    // Add a watch to make sure we get server updates.\r\n    var valueCallback = function () { };\r\n    var watchRef = new Reference(this, path);\r\n    watchRef.on('value', valueCallback);\r\n    var unwatcher = function () {\r\n        watchRef.off('value', valueCallback);\r\n    };\r\n    // Initialize transaction.\r\n    var transaction = {\r\n        path: path,\r\n        update: transactionUpdate,\r\n        onComplete: onComplete,\r\n        // One of TransactionStatus enums.\r\n        status: null,\r\n        // Used when combining transactions at different locations to figure out which one goes first.\r\n        order: LUIDGenerator(),\r\n        // Whether to raise local events for this transaction.\r\n        applyLocally: applyLocally,\r\n        // Count of how many times we've retried the transaction.\r\n        retryCount: 0,\r\n        // Function to call to clean up our .on() listener.\r\n        unwatcher: unwatcher,\r\n        // Stores why a transaction was aborted.\r\n        abortReason: null,\r\n        currentWriteId: null,\r\n        currentInputSnapshot: null,\r\n        currentOutputSnapshotRaw: null,\r\n        currentOutputSnapshotResolved: null\r\n    };\r\n    // Run transaction initially.\r\n    var currentState = this.getLatestState_(path);\r\n    transaction.currentInputSnapshot = currentState;\r\n    var newVal = transaction.update(currentState.val());\r\n    if (newVal === undefined) {\r\n        // Abort transaction.\r\n        transaction.unwatcher();\r\n        transaction.currentOutputSnapshotRaw = null;\r\n        transaction.currentOutputSnapshotResolved = null;\r\n        if (transaction.onComplete) {\r\n            // We just set the input snapshot, so this cast should be safe\r\n            var snapshot = new DataSnapshot(transaction.currentInputSnapshot, new Reference(this, transaction.path), PRIORITY_INDEX);\r\n            transaction.onComplete(null, false, snapshot);\r\n        }\r\n    }\r\n    else {\r\n        validateFirebaseData('transaction failed: Data returned ', newVal, transaction.path);\r\n        // Mark as run and add to our queue.\r\n        transaction.status = TransactionStatus.RUN;\r\n        var queueNode = this.transactionQueueTree_.subTree(path);\r\n        var nodeQueue = queueNode.getValue() || [];\r\n        nodeQueue.push(transaction);\r\n        queueNode.setValue(nodeQueue);\r\n        // Update visibleData and raise events\r\n        // Note: We intentionally raise events after updating all of our transaction state, since the user could\r\n        // start new transactions from the event callbacks.\r\n        var priorityForNode = void 0;\r\n        if (typeof newVal === 'object' &&\r\n            newVal !== null &&\r\n            util.contains(newVal, '.priority')) {\r\n            priorityForNode = util.safeGet(newVal, '.priority');\r\n            util.assert(isValidPriority(priorityForNode), 'Invalid priority returned by transaction. ' +\r\n                'Priority must be a valid string, finite number, server value, or null.');\r\n        }\r\n        else {\r\n            var currentNode = this.serverSyncTree_.calcCompleteEventCache(path) ||\r\n                ChildrenNode.EMPTY_NODE;\r\n            priorityForNode = currentNode.getPriority().val();\r\n        }\r\n        priorityForNode /** @type {null|number|string} */ = priorityForNode;\r\n        var serverValues = this.generateServerValues();\r\n        var newNodeUnresolved = nodeFromJSON$1(newVal, priorityForNode);\r\n        var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\r\n        transaction.currentOutputSnapshotRaw = newNodeUnresolved;\r\n        transaction.currentOutputSnapshotResolved = newNode;\r\n        transaction.currentWriteId = this.getNextWriteId_();\r\n        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, transaction.currentWriteId, transaction.applyLocally);\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n        this.sendReadyTransactions_();\r\n    }\r\n};\r\n/**\r\n * @param {!Path} path\r\n * @param {Array.<number>=} excludeSets A specific set to exclude\r\n * @return {Node}\r\n * @private\r\n */\r\nRepo.prototype.getLatestState_ = function (path, excludeSets) {\r\n    return (this.serverSyncTree_.calcCompleteEventCache(path, excludeSets) ||\r\n        ChildrenNode.EMPTY_NODE);\r\n};\r\n/**\r\n * Sends any already-run transactions that aren't waiting for outstanding transactions to\r\n * complete.\r\n *\r\n * Externally it's called with no arguments, but it calls itself recursively with a particular\r\n * transactionQueueTree node to recurse through the tree.\r\n *\r\n * @param {Tree.<Array.<Transaction>>=} node  transactionQueueTree node to start at.\r\n * @private\r\n */\r\nRepo.prototype.sendReadyTransactions_ = function (node) {\r\n    var _this = this;\r\n    if (node === void 0) { node = this.transactionQueueTree_; }\r\n    // Before recursing, make sure any completed transactions are removed.\r\n    if (!node) {\r\n        this.pruneCompletedTransactionsBelowNode_(node);\r\n    }\r\n    if (node.getValue() !== null) {\r\n        var queue = this.buildTransactionQueue_(node);\r\n        util.assert(queue.length > 0, 'Sending zero length transaction queue');\r\n        var allRun = queue.every(function (transaction) { return transaction.status === TransactionStatus.RUN; });\r\n        // If they're all run (and not sent), we can send them.  Else, we must wait.\r\n        if (allRun) {\r\n            this.sendTransactionQueue_(node.path(), queue);\r\n        }\r\n    }\r\n    else if (node.hasChildren()) {\r\n        node.forEachChild(function (childNode) {\r\n            _this.sendReadyTransactions_(childNode);\r\n        });\r\n    }\r\n};\r\n/**\r\n * Given a list of run transactions, send them to the server and then handle the result (success or failure).\r\n *\r\n * @param {!Path} path The location of the queue.\r\n * @param {!Array.<Transaction>} queue Queue of transactions under the specified location.\r\n * @private\r\n */\r\nRepo.prototype.sendTransactionQueue_ = function (path, queue) {\r\n    var _this = this;\r\n    // Mark transactions as sent and increment retry count!\r\n    var setsToIgnore = queue.map(function (txn) {\r\n        return txn.currentWriteId;\r\n    });\r\n    var latestState = this.getLatestState_(path, setsToIgnore);\r\n    var snapToSend = latestState;\r\n    var latestHash = latestState.hash();\r\n    for (var i = 0; i < queue.length; i++) {\r\n        var txn = queue[i];\r\n        util.assert(txn.status === TransactionStatus.RUN, 'tryToSendTransactionQueue_: items in queue should all be run.');\r\n        txn.status = TransactionStatus.SENT;\r\n        txn.retryCount++;\r\n        var relativePath = Path.relativePath(path, txn.path);\r\n        // If we've gotten to this point, the output snapshot must be defined.\r\n        snapToSend = snapToSend.updateChild(relativePath /**@type {!Node} */, txn.currentOutputSnapshotRaw);\r\n    }\r\n    var dataToSend = snapToSend.val(true);\r\n    var pathToSend = path;\r\n    // Send the put.\r\n    this.server_.put(pathToSend.toString(), dataToSend, function (status) {\r\n        _this.log_('transaction put response', {\r\n            path: pathToSend.toString(),\r\n            status: status\r\n        });\r\n        var events = [];\r\n        if (status === 'ok') {\r\n            // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n            // the callback could trigger more transactions or sets.\r\n            var callbacks = [];\r\n            for (var i = 0; i < queue.length; i++) {\r\n                queue[i].status = TransactionStatus.COMPLETED;\r\n                events = events.concat(_this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId));\r\n                if (queue[i].onComplete) {\r\n                    // We never unset the output snapshot, and given that this transaction is complete, it should be set\r\n                    var node = queue[i].currentOutputSnapshotResolved;\r\n                    var ref = new Reference(_this, queue[i].path);\r\n                    var snapshot = new DataSnapshot(node, ref, PRIORITY_INDEX);\r\n                    callbacks.push(queue[i].onComplete.bind(null, null, true, snapshot));\r\n                }\r\n                queue[i].unwatcher();\r\n            }\r\n            // Now remove the completed transactions.\r\n            _this.pruneCompletedTransactionsBelowNode_(_this.transactionQueueTree_.subTree(path));\r\n            // There may be pending transactions that we can now send.\r\n            _this.sendReadyTransactions_();\r\n            _this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n            // Finally, trigger onComplete callbacks.\r\n            for (var i = 0; i < callbacks.length; i++) {\r\n                exceptionGuard(callbacks[i]);\r\n            }\r\n        }\r\n        else {\r\n            // transactions are no longer sent.  Update their status appropriately.\r\n            if (status === 'datastale') {\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT)\r\n                        queue[i].status = TransactionStatus.NEEDS_ABORT;\r\n                    else\r\n                        queue[i].status = TransactionStatus.RUN;\r\n                }\r\n            }\r\n            else {\r\n                warn('transaction at ' + pathToSend.toString() + ' failed: ' + status);\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    queue[i].status = TransactionStatus.NEEDS_ABORT;\r\n                    queue[i].abortReason = status;\r\n                }\r\n            }\r\n            _this.rerunTransactions_(path);\r\n        }\r\n    }, latestHash);\r\n};\r\n/**\r\n * Finds all transactions dependent on the data at changedPath and reruns them.\r\n *\r\n * Should be called any time cached data changes.\r\n *\r\n * Return the highest path that was affected by rerunning transactions.  This is the path at which events need to\r\n * be raised for.\r\n *\r\n * @param {!Path} changedPath The path in mergedData that changed.\r\n * @return {!Path} The rootmost path that was affected by rerunning transactions.\r\n * @private\r\n */\r\nRepo.prototype.rerunTransactions_ = function (changedPath) {\r\n    var rootMostTransactionNode = this.getAncestorTransactionNode_(changedPath);\r\n    var path = rootMostTransactionNode.path();\r\n    var queue = this.buildTransactionQueue_(rootMostTransactionNode);\r\n    this.rerunTransactionQueue_(queue, path);\r\n    return path;\r\n};\r\n/**\r\n * Does all the work of rerunning transactions (as well as cleans up aborted transactions and whatnot).\r\n *\r\n * @param {Array.<Transaction>} queue The queue of transactions to run.\r\n * @param {!Path} path The path the queue is for.\r\n * @private\r\n */\r\nRepo.prototype.rerunTransactionQueue_ = function (queue, path) {\r\n    if (queue.length === 0) {\r\n        return; // Nothing to do!\r\n    }\r\n    // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n    // the callback could trigger more transactions or sets.\r\n    var callbacks = [];\r\n    var events = [];\r\n    // Ignore all of the sets we're going to re-run.\r\n    var txnsToRerun = queue.filter(function (q) {\r\n        return q.status === TransactionStatus.RUN;\r\n    });\r\n    var setsToIgnore = txnsToRerun.map(function (q) {\r\n        return q.currentWriteId;\r\n    });\r\n    for (var i = 0; i < queue.length; i++) {\r\n        var transaction = queue[i];\r\n        var relativePath = Path.relativePath(path, transaction.path);\r\n        var abortTransaction = false, abortReason = void 0;\r\n        util.assert(relativePath !== null, 'rerunTransactionsUnderNode_: relativePath should not be null.');\r\n        if (transaction.status === TransactionStatus.NEEDS_ABORT) {\r\n            abortTransaction = true;\r\n            abortReason = transaction.abortReason;\r\n            events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n        }\r\n        else if (transaction.status === TransactionStatus.RUN) {\r\n            if (transaction.retryCount >= Repo.MAX_TRANSACTION_RETRIES_) {\r\n                abortTransaction = true;\r\n                abortReason = 'maxretry';\r\n                events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n            }\r\n            else {\r\n                // This code reruns a transaction\r\n                var currentNode = this.getLatestState_(transaction.path, setsToIgnore);\r\n                transaction.currentInputSnapshot = currentNode;\r\n                var newData = queue[i].update(currentNode.val());\r\n                if (newData !== undefined) {\r\n                    validateFirebaseData('transaction failed: Data returned ', newData, transaction.path);\r\n                    var newDataNode = nodeFromJSON$1(newData);\r\n                    var hasExplicitPriority = typeof newData === 'object' &&\r\n                        newData != null &&\r\n                        util.contains(newData, '.priority');\r\n                    if (!hasExplicitPriority) {\r\n                        // Keep the old priority if there wasn't a priority explicitly specified.\r\n                        newDataNode = newDataNode.updatePriority(currentNode.getPriority());\r\n                    }\r\n                    var oldWriteId = transaction.currentWriteId;\r\n                    var serverValues = this.generateServerValues();\r\n                    var newNodeResolved = resolveDeferredValueSnapshot(newDataNode, serverValues);\r\n                    transaction.currentOutputSnapshotRaw = newDataNode;\r\n                    transaction.currentOutputSnapshotResolved = newNodeResolved;\r\n                    transaction.currentWriteId = this.getNextWriteId_();\r\n                    // Mutates setsToIgnore in place\r\n                    setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\r\n                    events = events.concat(this.serverSyncTree_.applyUserOverwrite(transaction.path, newNodeResolved, transaction.currentWriteId, transaction.applyLocally));\r\n                    events = events.concat(this.serverSyncTree_.ackUserWrite(oldWriteId, true));\r\n                }\r\n                else {\r\n                    abortTransaction = true;\r\n                    abortReason = 'nodata';\r\n                    events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n                }\r\n            }\r\n        }\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n        events = [];\r\n        if (abortTransaction) {\r\n            // Abort.\r\n            queue[i].status = TransactionStatus.COMPLETED;\r\n            // Removing a listener can trigger pruning which can muck with mergedData/visibleData (as it prunes data).\r\n            // So defer the unwatcher until we're done.\r\n            (function (unwatcher) {\r\n                setTimeout(unwatcher, Math.floor(0));\r\n            })(queue[i].unwatcher);\r\n            if (queue[i].onComplete) {\r\n                if (abortReason === 'nodata') {\r\n                    var ref = new Reference(this, queue[i].path);\r\n                    // We set this field immediately, so it's safe to cast to an actual snapshot\r\n                    var lastInput /** @type {!Node} */ = queue[i].currentInputSnapshot;\r\n                    var snapshot = new DataSnapshot(lastInput, ref, PRIORITY_INDEX);\r\n                    callbacks.push(queue[i].onComplete.bind(null, null, false, snapshot));\r\n                }\r\n                else {\r\n                    callbacks.push(queue[i].onComplete.bind(null, new Error(abortReason), false, null));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // Clean up completed transactions.\r\n    this.pruneCompletedTransactionsBelowNode_(this.transactionQueueTree_);\r\n    // Now fire callbacks, now that we're in a good, known state.\r\n    for (var i = 0; i < callbacks.length; i++) {\r\n        exceptionGuard(callbacks[i]);\r\n    }\r\n    // Try to send the transaction result to the server.\r\n    this.sendReadyTransactions_();\r\n};\r\n/**\r\n * Returns the rootmost ancestor node of the specified path that has a pending transaction on it, or just returns\r\n * the node for the given path if there are no pending transactions on any ancestor.\r\n *\r\n * @param {!Path} path The location to start at.\r\n * @return {!Tree.<Array.<!Transaction>>} The rootmost node with a transaction.\r\n * @private\r\n */\r\nRepo.prototype.getAncestorTransactionNode_ = function (path) {\r\n    var front;\r\n    // Start at the root and walk deeper into the tree towards path until we find a node with pending transactions.\r\n    var transactionNode = this.transactionQueueTree_;\r\n    while ((front = path.getFront()) !== null &&\r\n        transactionNode.getValue() === null) {\r\n        transactionNode = transactionNode.subTree(front);\r\n        path = path.popFront();\r\n    }\r\n    return transactionNode;\r\n};\r\n/**\r\n * Builds the queue of all transactions at or below the specified transactionNode.\r\n *\r\n * @param {!Tree.<Array.<Transaction>>} transactionNode\r\n * @return {Array.<Transaction>} The generated queue.\r\n * @private\r\n */\r\nRepo.prototype.buildTransactionQueue_ = function (transactionNode) {\r\n    // Walk any child transaction queues and aggregate them into a single queue.\r\n    var transactionQueue = [];\r\n    this.aggregateTransactionQueuesForNode_(transactionNode, transactionQueue);\r\n    // Sort them by the order the transactions were created.\r\n    transactionQueue.sort(function (a, b) {\r\n        return a.order - b.order;\r\n    });\r\n    return transactionQueue;\r\n};\r\n/**\r\n * @param {!Tree.<Array.<Transaction>>} node\r\n * @param {Array.<Transaction>} queue\r\n * @private\r\n */\r\nRepo.prototype.aggregateTransactionQueuesForNode_ = function (node, queue) {\r\n    var _this = this;\r\n    var nodeQueue = node.getValue();\r\n    if (nodeQueue !== null) {\r\n        for (var i = 0; i < nodeQueue.length; i++) {\r\n            queue.push(nodeQueue[i]);\r\n        }\r\n    }\r\n    node.forEachChild(function (child) {\r\n        _this.aggregateTransactionQueuesForNode_(child, queue);\r\n    });\r\n};\r\n/**\r\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\r\n *\r\n * @param {!Tree.<Array.<!Transaction>>} node\r\n * @private\r\n */\r\nRepo.prototype.pruneCompletedTransactionsBelowNode_ = function (node) {\r\n    var _this = this;\r\n    var queue = node.getValue();\r\n    if (queue) {\r\n        var to = 0;\r\n        for (var from = 0; from < queue.length; from++) {\r\n            if (queue[from].status !== TransactionStatus.COMPLETED) {\r\n                queue[to] = queue[from];\r\n                to++;\r\n            }\r\n        }\r\n        queue.length = to;\r\n        node.setValue(queue.length > 0 ? queue : null);\r\n    }\r\n    node.forEachChild(function (childNode) {\r\n        _this.pruneCompletedTransactionsBelowNode_(childNode);\r\n    });\r\n};\r\n/**\r\n * Aborts all transactions on ancestors or descendants of the specified path.  Called when doing a set() or update()\r\n * since we consider them incompatible with transactions.\r\n *\r\n * @param {!Path} path Path for which we want to abort related transactions.\r\n * @return {!Path}\r\n * @private\r\n */\r\nRepo.prototype.abortTransactions_ = function (path) {\r\n    var _this = this;\r\n    var affectedPath = this.getAncestorTransactionNode_(path).path();\r\n    var transactionNode = this.transactionQueueTree_.subTree(path);\r\n    transactionNode.forEachAncestor(function (node) {\r\n        _this.abortTransactionsOnNode_(node);\r\n    });\r\n    this.abortTransactionsOnNode_(transactionNode);\r\n    transactionNode.forEachDescendant(function (node) {\r\n        _this.abortTransactionsOnNode_(node);\r\n    });\r\n    return affectedPath;\r\n};\r\n/**\r\n * Abort transactions stored in this transaction queue node.\r\n *\r\n * @param {!Tree.<Array.<Transaction>>} node Node to abort transactions for.\r\n * @private\r\n */\r\nRepo.prototype.abortTransactionsOnNode_ = function (node) {\r\n    var queue = node.getValue();\r\n    if (queue !== null) {\r\n        // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n        // the callback could trigger more transactions or sets.\r\n        var callbacks = [];\r\n        // Go through queue.  Any already-sent transactions must be marked for abort, while the unsent ones\r\n        // can be immediately aborted and removed.\r\n        var events = [];\r\n        var lastSent = -1;\r\n        for (var i = 0; i < queue.length; i++) {\r\n            if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\r\n                // Already marked.  No action needed.\r\n            }\r\n            else if (queue[i].status === TransactionStatus.SENT) {\r\n                util.assert(lastSent === i - 1, 'All SENT items should be at beginning of queue.');\r\n                lastSent = i;\r\n                // Mark transaction for abort when it comes back.\r\n                queue[i].status = TransactionStatus.SENT_NEEDS_ABORT;\r\n                queue[i].abortReason = 'set';\r\n            }\r\n            else {\r\n                util.assert(queue[i].status === TransactionStatus.RUN, 'Unexpected transaction status in abort');\r\n                // We can abort it immediately.\r\n                queue[i].unwatcher();\r\n                events = events.concat(this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId, true));\r\n                if (queue[i].onComplete) {\r\n                    var snapshot = null;\r\n                    callbacks.push(queue[i].onComplete.bind(null, new Error('set'), false, snapshot));\r\n                }\r\n            }\r\n        }\r\n        if (lastSent === -1) {\r\n            // We're not waiting for any sent transactions.  We can clear the queue.\r\n            node.setValue(null);\r\n        }\r\n        else {\r\n            // Remove the transactions we aborted.\r\n            queue.length = lastSent + 1;\r\n        }\r\n        // Now fire the callbacks.\r\n        this.eventQueue_.raiseEventsForChangedPath(node.path(), events);\r\n        for (var i = 0; i < callbacks.length; i++) {\r\n            exceptionGuard(callbacks[i]);\r\n        }\r\n    }\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** @const {string} */\r\nvar DATABASE_URL_OPTION = 'databaseURL';\r\nvar _staticInstance;\r\n/**\r\n * Creates and caches Repo instances.\r\n */\r\nvar RepoManager = /** @class */ (function () {\r\n    function RepoManager() {\r\n        /**\r\n         * @private {!Object.<string, Object<string, !fb.core.Repo>>}\r\n         */\r\n        this.repos_ = {};\r\n        /**\r\n         * If true, new Repos will be created to use ReadonlyRestClient (for testing purposes).\r\n         * @private {boolean}\r\n         */\r\n        this.useRestClient_ = false;\r\n    }\r\n    RepoManager.getInstance = function () {\r\n        if (!_staticInstance) {\r\n            _staticInstance = new RepoManager();\r\n        }\r\n        return _staticInstance;\r\n    };\r\n    // TODO(koss): Remove these functions unless used in tests?\r\n    RepoManager.prototype.interrupt = function () {\r\n        for (var appName in this.repos_) {\r\n            for (var dbUrl in this.repos_[appName]) {\r\n                this.repos_[appName][dbUrl].interrupt();\r\n            }\r\n        }\r\n    };\r\n    RepoManager.prototype.resume = function () {\r\n        for (var appName in this.repos_) {\r\n            for (var dbUrl in this.repos_[appName]) {\r\n                this.repos_[appName][dbUrl].resume();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * This function should only ever be called to CREATE a new database instance.\r\n     *\r\n     * @param {!FirebaseApp} app\r\n     * @return {!Database}\r\n     */\r\n    RepoManager.prototype.databaseFromApp = function (app, url) {\r\n        var dbUrl = url || app.options[DATABASE_URL_OPTION];\r\n        if (dbUrl === undefined) {\r\n            fatal(\"Can't determine Firebase Database URL.  Be sure to include \" +\r\n                DATABASE_URL_OPTION +\r\n                ' option when calling firebase.initializeApp().');\r\n        }\r\n        var parsedUrl = parseRepoInfo(dbUrl);\r\n        var repoInfo = parsedUrl.repoInfo;\r\n        validateUrl('Invalid Firebase Database URL', 1, parsedUrl);\r\n        if (!parsedUrl.path.isEmpty()) {\r\n            fatal('Database URL must point to the root of a Firebase Database ' +\r\n                '(not including a child path).');\r\n        }\r\n        var repo = this.createRepo(repoInfo, app);\r\n        return repo.database;\r\n    };\r\n    /**\r\n     * Remove the repo and make sure it is disconnected.\r\n     *\r\n     * @param {!Repo} repo\r\n     */\r\n    RepoManager.prototype.deleteRepo = function (repo) {\r\n        var appRepos = util.safeGet(this.repos_, repo.app.name);\r\n        // This should never happen...\r\n        if (!appRepos || util.safeGet(appRepos, repo.repoInfo_.toURLString()) !== repo) {\r\n            fatal(\"Database \" + repo.app.name + \"(\" + repo.repoInfo_ + \") has already been deleted.\");\r\n        }\r\n        repo.interrupt();\r\n        delete appRepos[repo.repoInfo_.toURLString()];\r\n    };\r\n    /**\r\n     * Ensures a repo doesn't already exist and then creates one using the\r\n     * provided app.\r\n     *\r\n     * @param {!RepoInfo} repoInfo The metadata about the Repo\r\n     * @param {!FirebaseApp} app\r\n     * @return {!Repo} The Repo object for the specified server / repoName.\r\n     */\r\n    RepoManager.prototype.createRepo = function (repoInfo, app) {\r\n        var appRepos = util.safeGet(this.repos_, app.name);\r\n        if (!appRepos) {\r\n            appRepos = {};\r\n            this.repos_[app.name] = appRepos;\r\n        }\r\n        var repo = util.safeGet(appRepos, repoInfo.toURLString());\r\n        if (repo) {\r\n            fatal('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');\r\n        }\r\n        repo = new Repo(repoInfo, this.useRestClient_, app);\r\n        appRepos[repoInfo.toURLString()] = repo;\r\n        return repo;\r\n    };\r\n    /**\r\n     * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\r\n     * @param {boolean} forceRestClient\r\n     */\r\n    RepoManager.prototype.forceRestClient = function (forceRestClient) {\r\n        this.useRestClient_ = forceRestClient;\r\n    };\r\n    return RepoManager;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase database.\r\n * @implements {FirebaseService}\r\n */\r\nvar Database = /** @class */ (function () {\r\n    /**\r\n     * The constructor should not be called by users of our public API.\r\n     * @param {!Repo} repo_\r\n     */\r\n    function Database(repo_) {\r\n        this.repo_ = repo_;\r\n        if (!(repo_ instanceof Repo)) {\r\n            fatal(\"Don't call new Database() directly - please use firebase.database().\");\r\n        }\r\n        /** @type {Reference} */\r\n        this.root_ = new Reference(repo_, Path.Empty);\r\n        this.INTERNAL = new DatabaseInternals(this);\r\n    }\r\n    Object.defineProperty(Database.prototype, \"app\", {\r\n        get: function () {\r\n            return this.repo_.app;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Database.prototype.ref = function (path) {\r\n        this.checkDeleted_('ref');\r\n        util.validateArgCount('database.ref', 0, 1, arguments.length);\r\n        if (path instanceof Reference) {\r\n            return this.refFromURL(path.toString());\r\n        }\r\n        return path !== undefined ? this.root_.child(path) : this.root_;\r\n    };\r\n    /**\r\n     * Returns a reference to the root or the path specified in url.\r\n     * We throw a exception if the url is not in the same domain as the\r\n     * current repo.\r\n     * @param {string} url\r\n     * @return {!Reference} Firebase reference.\r\n     */\r\n    Database.prototype.refFromURL = function (url) {\r\n        /** @const {string} */\r\n        var apiName = 'database.refFromURL';\r\n        this.checkDeleted_(apiName);\r\n        util.validateArgCount(apiName, 1, 1, arguments.length);\r\n        var parsedURL = parseRepoInfo(url);\r\n        validateUrl(apiName, 1, parsedURL);\r\n        var repoInfo = parsedURL.repoInfo;\r\n        if (repoInfo.host !== this.repo_.repoInfo_.host) {\r\n            fatal(apiName +\r\n                ': Host name does not match the current database: ' +\r\n                '(found ' +\r\n                repoInfo.host +\r\n                ' but expected ' +\r\n                this.repo_.repoInfo_.host +\r\n                ')');\r\n        }\r\n        return this.ref(parsedURL.path.toString());\r\n    };\r\n    /**\r\n     * @param {string} apiName\r\n     */\r\n    Database.prototype.checkDeleted_ = function (apiName) {\r\n        if (this.repo_ === null) {\r\n            fatal('Cannot call ' + apiName + ' on a deleted database.');\r\n        }\r\n    };\r\n    // Make individual repo go offline.\r\n    Database.prototype.goOffline = function () {\r\n        util.validateArgCount('database.goOffline', 0, 0, arguments.length);\r\n        this.checkDeleted_('goOffline');\r\n        this.repo_.interrupt();\r\n    };\r\n    Database.prototype.goOnline = function () {\r\n        util.validateArgCount('database.goOnline', 0, 0, arguments.length);\r\n        this.checkDeleted_('goOnline');\r\n        this.repo_.resume();\r\n    };\r\n    Database.ServerValue = {\r\n        TIMESTAMP: {\r\n            '.sv': 'timestamp'\r\n        }\r\n    };\r\n    return Database;\r\n}());\r\nvar DatabaseInternals = /** @class */ (function () {\r\n    /** @param {!Database} database */\r\n    function DatabaseInternals(database) {\r\n        this.database = database;\r\n    }\r\n    /** @return {Promise<void>} */\r\n    DatabaseInternals.prototype.delete = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                this.database.checkDeleted_('delete');\r\n                RepoManager.getInstance().deleteRepo(this.database.repo_);\r\n                this.database.repo_ = null;\r\n                this.database.root_ = null;\r\n                this.database.INTERNAL = null;\r\n                this.database = null;\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    return DatabaseInternals;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * INTERNAL methods for internal-use only (tests, etc.).\r\n *\r\n * Customers shouldn't use these or else should be aware that they could break at any time.\r\n *\r\n * @const\r\n */\r\nvar forceLongPolling = function () {\r\n    WebSocketConnection.forceDisallow();\r\n    BrowserPollConnection.forceAllow();\r\n};\r\nvar forceWebSockets = function () {\r\n    BrowserPollConnection.forceDisallow();\r\n};\r\n/* Used by App Manager */\r\nvar isWebSocketsAvailable = function () {\r\n    return WebSocketConnection['isAvailable']();\r\n};\r\nvar setSecurityDebugCallback = function (ref, callback) {\r\n    ref.repo.persistentConnection_.securityDebugCallback_ = callback;\r\n};\r\nvar stats = function (ref, showDelta) {\r\n    ref.repo.stats(showDelta);\r\n};\r\nvar statsIncrementCounter = function (ref, metric) {\r\n    ref.repo.statsIncrementCounter(metric);\r\n};\r\nvar dataUpdateCount = function (ref) {\r\n    return ref.repo.dataUpdateCount;\r\n};\r\nvar interceptServerData = function (ref, callback) {\r\n    return ref.repo.interceptServerData_(callback);\r\n};\n\nvar INTERNAL = /*#__PURE__*/Object.freeze({\n  forceLongPolling: forceLongPolling,\n  forceWebSockets: forceWebSockets,\n  isWebSocketsAvailable: isWebSocketsAvailable,\n  setSecurityDebugCallback: setSecurityDebugCallback,\n  stats: stats,\n  statsIncrementCounter: statsIncrementCounter,\n  dataUpdateCount: dataUpdateCount,\n  interceptServerData: interceptServerData\n});\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DataConnection = PersistentConnection;\r\n/**\r\n * @param {!string} pathString\r\n * @param {function(*)} onComplete\r\n */\r\nPersistentConnection.prototype.simpleListen = function (pathString, onComplete) {\r\n    this.sendRequest('q', { p: pathString }, onComplete);\r\n};\r\n/**\r\n * @param {*} data\r\n * @param {function(*)} onEcho\r\n */\r\nPersistentConnection.prototype.echo = function (data, onEcho) {\r\n    this.sendRequest('echo', { d: data }, onEcho);\r\n};\r\n// RealTimeConnection properties that we use in tests.\r\nvar RealTimeConnection = Connection;\r\n/**\r\n * @param {function(): string} newHash\r\n * @return {function()}\r\n */\r\nvar hijackHash = function (newHash) {\r\n    var oldPut = PersistentConnection.prototype.put;\r\n    PersistentConnection.prototype.put = function (pathString, data, opt_onComplete, opt_hash) {\r\n        if (opt_hash !== undefined) {\r\n            opt_hash = newHash();\r\n        }\r\n        oldPut.call(this, pathString, data, opt_onComplete, opt_hash);\r\n    };\r\n    return function () {\r\n        PersistentConnection.prototype.put = oldPut;\r\n    };\r\n};\r\n/**\r\n * @type {function(new:RepoInfo, !string, boolean, !string, boolean): undefined}\r\n */\r\nvar ConnectionTarget = RepoInfo;\r\n/**\r\n * @param {!Query} query\r\n * @return {!string}\r\n */\r\nvar queryIdentifier = function (query) {\r\n    return query.queryIdentifier();\r\n};\r\n/**\r\n * @param {!Query} firebaseRef\r\n * @return {!Object}\r\n */\r\nvar listens = function (firebaseRef) {\r\n    return firebaseRef.repo.persistentConnection_.listens_;\r\n};\r\n/**\r\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\r\n *\r\n * @param {boolean} forceRestClient\r\n */\r\nvar forceRestClient = function (forceRestClient) {\r\n    RepoManager.getInstance().forceRestClient(forceRestClient);\r\n};\n\nvar TEST_ACCESS = /*#__PURE__*/Object.freeze({\n  DataConnection: DataConnection,\n  RealTimeConnection: RealTimeConnection,\n  hijackHash: hijackHash,\n  ConnectionTarget: ConnectionTarget,\n  queryIdentifier: queryIdentifier,\n  listens: listens,\n  forceRestClient: forceRestClient\n});\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ServerValue = Database.ServerValue;\r\nfunction registerDatabase(instance) {\r\n    // Register the Database Service with the 'firebase' namespace.\r\n    var namespace = instance.INTERNAL.registerService('database', function (app, unused, url) { return RepoManager.getInstance().databaseFromApp(app, url); }, \r\n    // firebase.database namespace properties\r\n    {\r\n        Reference: Reference,\r\n        Query: Query,\r\n        Database: Database,\r\n        enableLogging: enableLogging,\r\n        INTERNAL: INTERNAL,\r\n        ServerValue: ServerValue,\r\n        TEST_ACCESS: TEST_ACCESS\r\n    }, null, true);\r\n    if (util.isNodeSdk()) {\r\n        module.exports = namespace;\r\n    }\r\n}\r\nregisterDatabase(firebase);\n\nexports.registerDatabase = registerDatabase;\nexports.Database = Database;\nexports.Query = Query;\nexports.Reference = Reference;\nexports.enableLogging = enableLogging;\nexports.ServerValue = ServerValue;\nexports.DataSnapshot = DataSnapshot;\nexports.OnDisconnect = OnDisconnect;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(12)))\n\n/***/ }),\n/* 43 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setLogLevel\", function() { return setLogLevel; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Logger\", function() { return Logger; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LogLevel\", function() { return LogLevel; });\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A container for all of the Logger instances\r\n */\r\nvar instances = [];\r\n/**\r\n * The JS SDK supports 5 log levels and also allows a user the ability to\r\n * silence the logs altogether.\r\n *\r\n * The order is a follows:\r\n * DEBUG < VERBOSE < INFO < WARN < ERROR\r\n *\r\n * All of the log types above the current log level will be captured (i.e. if\r\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\r\n * `VERBOSE` logs will not)\r\n */\r\nvar LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"DEBUG\"] = 0] = \"DEBUG\";\r\n    LogLevel[LogLevel[\"VERBOSE\"] = 1] = \"VERBOSE\";\r\n    LogLevel[LogLevel[\"INFO\"] = 2] = \"INFO\";\r\n    LogLevel[LogLevel[\"WARN\"] = 3] = \"WARN\";\r\n    LogLevel[LogLevel[\"ERROR\"] = 4] = \"ERROR\";\r\n    LogLevel[LogLevel[\"SILENT\"] = 5] = \"SILENT\";\r\n})(LogLevel || (LogLevel = {}));\r\n/**\r\n * The default log level\r\n */\r\nvar defaultLogLevel = LogLevel.INFO;\r\n/**\r\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\r\n * messages on to their corresponding console counterparts (if the log method\r\n * is supported by the current log level)\r\n */\r\nvar defaultLogHandler = function (instance, logType) {\r\n    var args = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        args[_i - 2] = arguments[_i];\r\n    }\r\n    if (logType < instance.logLevel)\r\n        return;\r\n    var now = new Date().toISOString();\r\n    switch (logType) {\r\n        /**\r\n         * By default, `console.debug` is not displayed in the developer console (in\r\n         * chrome). To avoid forcing users to have to opt-in to these logs twice\r\n         * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\r\n         * logs to the `console.log` function.\r\n         */\r\n        case LogLevel.DEBUG:\r\n            console.log.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\r\n            break;\r\n        case LogLevel.VERBOSE:\r\n            console.log.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\r\n            break;\r\n        case LogLevel.INFO:\r\n            console.info.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\r\n            break;\r\n        case LogLevel.WARN:\r\n            console.warn.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\r\n            break;\r\n        case LogLevel.ERROR:\r\n            console.error.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\r\n            break;\r\n        default:\r\n            throw new Error(\"Attempted to log a message with an invalid logType (value: \" + logType + \")\");\r\n    }\r\n};\r\nvar Logger = /** @class */ (function () {\r\n    /**\r\n     * Gives you an instance of a Logger to capture messages according to\r\n     * Firebase's logging scheme.\r\n     *\r\n     * @param name The name that the logs will be associated with\r\n     */\r\n    function Logger(name) {\r\n        this.name = name;\r\n        /**\r\n         * The log level of the given Logger instance.\r\n         */\r\n        this._logLevel = defaultLogLevel;\r\n        /**\r\n         * The log handler for the Logger instance.\r\n         */\r\n        this._logHandler = defaultLogHandler;\r\n        /**\r\n         * Capture the current instance for later use\r\n         */\r\n        instances.push(this);\r\n    }\r\n    Object.defineProperty(Logger.prototype, \"logLevel\", {\r\n        get: function () {\r\n            return this._logLevel;\r\n        },\r\n        set: function (val) {\r\n            if (!(val in LogLevel)) {\r\n                throw new TypeError('Invalid value assigned to `logLevel`');\r\n            }\r\n            this._logLevel = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Logger.prototype, \"logHandler\", {\r\n        get: function () {\r\n            return this._logHandler;\r\n        },\r\n        set: function (val) {\r\n            if (typeof val !== 'function') {\r\n                throw new TypeError('Value assigned to `logHandler` must be a function');\r\n            }\r\n            this._logHandler = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * The functions below are all based on the `console` interface\r\n     */\r\n    Logger.prototype.debug = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._logHandler.apply(this, [this, LogLevel.DEBUG].concat(args));\r\n    };\r\n    Logger.prototype.log = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._logHandler.apply(this, [this, LogLevel.VERBOSE].concat(args));\r\n    };\r\n    Logger.prototype.info = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._logHandler.apply(this, [this, LogLevel.INFO].concat(args));\r\n    };\r\n    Logger.prototype.warn = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._logHandler.apply(this, [this, LogLevel.WARN].concat(args));\r\n    };\r\n    Logger.prototype.error = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._logHandler.apply(this, [this, LogLevel.ERROR].concat(args));\r\n    };\r\n    return Logger;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction setLogLevel(level) {\r\n    instances.forEach(function (inst) {\r\n        inst.logLevel = level;\r\n    });\r\n}\n\n\n\n\n/***/ }),\n/* 44 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Portfolio; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_spring_dist_react_spring__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_spring_dist_react_spring___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react_spring_dist_react_spring__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__index_css__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__index_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__index_css__);\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var Portfolio=function(_React$Component){_inherits(Portfolio,_React$Component);function Portfolio(){_classCallCheck(this,Portfolio);return _possibleConstructorReturn(this,(Portfolio.__proto__||Object.getPrototypeOf(Portfolio)).apply(this,arguments));}_createClass(Portfolio,[{key:'render',value:function render(){return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_react_spring_dist_react_spring__[\"Parallax\"].Layer,{offset:1.135,speed:0.25,style:{display:'flex',alignItems:'flex-start',justifyContent:'center',flexWrap:'wrap',padding:' 0 5%'}},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'flip-container'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'flipper'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'front work1 work'},' '),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'back'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('p',null,'Mobile-First PWA using React :',__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('br',null),'Does your child look more like mom or dad? Find out w/facial recognition',__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('br',null),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('span',null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('a',{href:'https://github.com/tomkim825/which-parent',target:'_blank',rel:'noopener noreferrer'},'Github Repo')),' ',__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('span',null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('a',{href:'https://tomkim825.github.io/which-parent/',target:'_blank',rel:'noopener noreferrer',style:{color:'red'}},'Demo')))))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'flip-container'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'flipper'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'front work2 work'},' '),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'back'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('p',null,'Web App w/Azure',__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('br',null),'Face Recognition APIs:',__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('br',null),'Find your MCU doppleganger',__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('br',null),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('span',null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('a',{href:'https://github.com/tomkim825/Project1-FaceAPI',target:'_blank',rel:'noopener noreferrer'},'Github Repo')),' ',__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('span',null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('a',{href:'https://tomkim825.github.io/Project1-FaceAPI/',target:'_blank',rel:'noopener noreferrer',style:{color:'red'}},'Demo')))))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'flip-container'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'flipper'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'front work3 work'},' '),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'back'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('p',null,'React Native App using EXPO:',__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('br',null),'Digital Business cards',__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('br',null),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('span',null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('a',{href:'https://github.com/tomkim825/meishi',target:'_blank',rel:'noopener noreferrer'},'Github Repo')))))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'flip-container'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'flipper'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'front work4 work bottom'},' '),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'back'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('p',null,'Full-Stack app showing full CRUD functionality:',__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('br',null),' MySQL, Node, Express, Heroku',__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('br',null),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('span',null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('a',{href:'https://github.com/tomkim825/burger',target:'_blank',rel:'noopener noreferrer'},'Github Repo')),' ',__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('span',null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('a',{href:'https://eat-da-burger--.herokuapp.com/',target:'_blank',rel:'noopener noreferrer',style:{color:'red'}},'Demo')))))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'flip-container'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'flipper'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'front work5 work bottom'},' '),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'back bottom'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('p',null,'Web App using Giphy API to search GIFs',__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('br',null),'built with AJAX and Bootstrap',__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('br',null),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('span',null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('a',{href:'https://github.com/tomkim825/GifGetter/',target:'_blank',rel:'noopener noreferrer'},'Github Repo')),' ',__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('span',null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('a',{href:'https://tomkim825.github.io/GifGetter/',target:'_blank',rel:'noopener noreferrer',style:{color:'red'}},'Demo')))))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'flip-container'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'flipper'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'front work6 work bottom'},' '),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'back bottom'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('p',null,'Web app using Realtime database - Firebase',__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('br',null),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('span',null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('a',{href:'https://github.com/tomkim825/TrainTime/',target:'_blank',rel:'noopener noreferrer'},'Github Repo')),' ',__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('span',null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('a',{href:'https://tomkim825.github.io/TrainTime/',target:'_blank',rel:'noopener noreferrer',style:{color:'red'}},'Demo'))))))));}}]);return Portfolio;}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);\n\n/***/ }),\n/* 45 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Skills; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_spring__ = __webpack_require__(46);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__index_css__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__index_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__index_css__);\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var Skills=function(_React$Component){_inherits(Skills,_React$Component);function Skills(){_classCallCheck(this,Skills);return _possibleConstructorReturn(this,(Skills.__proto__||Object.getPrototypeOf(Skills)).apply(this,arguments));}_createClass(Skills,[{key:'render',value:function render(){return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{style:{display:'flex',flexDirection:\"row\",alignItems:'flex-start',justifyContent:'start',width:'100vw',padding:' 0 5%'}},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_react_spring__[\"a\" /* Parallax */].Layer,{offset:2.15,speed:0.2,style:{display:'flex',flexDirection:\"column\",alignItems:'flex-start',justifyContent:'start',zIndex:2}},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('p',{style:{color:'orangered',fontWeight:600,textDecoration:'underline'}},' Front End '),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('ul',{className:'list-inline list-icons'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('li',{className:'list-inline-item'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i',{className:'devicon-html5-plain-wordmark'})),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('li',{className:'list-inline-item'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i',{className:'devicon-css3-plain-wordmark'})),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('li',{className:'list-inline-item'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i',{className:'devicon-javascript-plain'})),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('li',{className:'list-inline-item'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i',{className:'devicon-jquery-plain-wordmark'})),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('li',{className:'list-inline-item'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i',{className:'devicon-bootstrap-plain-wordmark'})),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('li',{className:'list-inline-item'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i',{className:'devicon-react-original-wordmark'})))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_react_spring__[\"a\" /* Parallax */].Layer,{offset:2.3,speed:0.6,style:{display:'flex',flexDirection:\"column\",alignItems:'flex-start',justifyContent:'start',zIndex:2}},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('p',{style:{color:'orangered',fontWeight:600,textDecoration:'underline'}},' Server Side '),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('ul',{className:'list-inline list-icons'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('li',{className:'list-inline-item'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i',{className:'devicon-mysql-plain-wordmark'})),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('li',{className:'list-inline-item'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i',{className:'devicon-mongodb-plain-wordmark'})),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('li',{className:'list-inline-item'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i',{className:'devicon-express-original-wordmark'})),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('li',{className:'list-inline-item'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i',{className:'devicon-nodejs-plain-wordmark'})),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('li',{className:'list-inline-item'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i',{className:'devicon-heroku-original-wordmark'})),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('li',{className:'list-inline-item'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i',{className:'devicon-sequelize-plain-wordmark'})))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_react_spring__[\"a\" /* Parallax */].Layer,{offset:2.45,speed:1,style:{display:'flex',flexDirection:\"column\",alignItems:'flex-start',justifyContent:'start',zIndex:2}},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('p',{style:{color:'orangered',fontWeight:600,textDecoration:'underline'}},'Dev Tools '),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('ul',{className:'list-inline list-icons'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('li',{className:'list-inline-item'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i',{className:'devicon-visualstudio-plain-wordmark'})),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('li',{className:'list-inline-item'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i',{className:'devicon-firefox-plain-wordmark'})),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('li',{className:'list-inline-item'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i',{className:'devicon-chrome-plain-wordmark'})),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('li',{className:'list-inline-item'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i',{className:'devicon-github-plain-wordmark'})),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('li',{className:'list-inline-item'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i',{className:'devicon-git-plain-wordmark'})),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('li',{className:'list-inline-item'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i',{className:'devicon-slack-plain-wordmark'})))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_react_spring__[\"a\" /* Parallax */].Layer,{offset:2.6,speed:1.5,style:{display:'flex',flexDirection:\"column\",alignItems:'flex-start',justifyContent:'start',zIndex:4}},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('p',{style:{color:'orangered',fontWeight:600,textDecoration:'underline'}},'Resume '),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('a',{href:'https://github.com/tomkim825/tomkim825.github.io/raw/master/ThomasKimResume.pdf',style:{border:'1px solid white',padding:'5px',margin:'0 5px',color:'white'}},'       Click here to download   '))));}}]);return Skills;}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);\n\n/***/ }),\n/* 46 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {/* unused harmony export Spring */\n/* unused harmony export Transition */\n/* unused harmony export Trail */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Parallax; });\n/* unused harmony export config */\n/* unused harmony export template */\n/* unused harmony export animated */\n/* unused harmony export interpolate */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_normalize_css_color__ = __webpack_require__(10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_normalize_css_color___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_normalize_css_color__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_prop_types__);\nfunction _extends(){return(_extends=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(t[i]=n[i])}return t}).apply(this,arguments)}function _inheritsLoose(t,e){t.prototype=Object.create(e.prototype),t.prototype.constructor=t,t.__proto__=e}function _objectWithoutProperties(t,e){if(null==t)return{};var n,i,r={},a=Object.keys(t);for(i=0;i<a.length;i++)n=a[i],e.indexOf(n)>=0||(r[n]=t[n]);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(i=0;i<o.length;i++)n=o[i],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}function _assertThisInitialized(t){if(void 0===t)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return t}var Animated=function(){function t(){}var e=t.prototype;return e.__attach=function(){},e.__detach=function(){},e.__getValue=function(){},e.__getAnimatedValue=function(){return this.__getValue()},e.__addChild=function(t){},e.__removeChild=function(t){},e.__getChildren=function(){return[]},t}(),AnimatedTracking=function(t){function e(e,n,i,r,a){var o;return(o=t.call(this)||this)._value=e,o._parent=n,o._animationClass=i,o._animationConfig=r,o._callback=a,o.__attach(),o._hey=1,o}_inheritsLoose(e,t);var n=e.prototype;return n.__getValue=function(){return this._parent.__getValue()},n.__attach=function(){this._parent.__addChild(this)},n.__detach=function(){this._parent.__removeChild(this)},n.update=function(){this._value.animate(new this._animationClass(_extends({},this._animationConfig,{toValue:this._animationConfig.toValue.__getValue()})),this._callback)},e}(Animated),AnimatedWithChildren=function(t){function e(){var e;return(e=t.call(this)||this)._children=[],e}_inheritsLoose(e,t);var n=e.prototype;return n.__addChild=function(t){t instanceof AnimatedTracking&&(this._tracked=!0),0===this._children.length&&this.__attach(),this._children.push(t)},n.__removeChild=function(t){var e=this._children.indexOf(t);-1!==e?(this._children.splice(e,1),0===this._children.length&&this.__detach()):console.warn(\"Trying to remove a child that doesn't exist\")},n.__getChildren=function(){return this._children},e}(Animated),linear=function(t){return t},Interpolation=function(){function t(){}return t.create=function(t){if(\"function\"==typeof t)return function(e){return t(e)};if(t.outputRange&&\"string\"==typeof t.outputRange[0])return createInterpolationFromStringOutputRange(t);var e=t.outputRange,n=t.inputRange,i=t.easing||linear,r=\"extend\";void 0!==t.extrapolateLeft?r=t.extrapolateLeft:void 0!==t.extrapolate&&(r=t.extrapolate);var a=\"extend\";return void 0!==t.extrapolateRight?a=t.extrapolateRight:void 0!==t.extrapolate&&(a=t.extrapolate),function(t){var o=findRange(t,n);return interpolate(t,n[o],n[o+1],e[o],e[o+1],i,r,a)}},t}();function interpolate(t,e,n,i,r,a,o,s){var l=t;if(l<e){if(\"identity\"===o)return l;\"clamp\"===o&&(l=e)}if(l>n){if(\"identity\"===s)return l;\"clamp\"===s&&(l=n)}return i===r?i:e===n?t<=e?i:r:(e===-1/0?l=-l:n===1/0?l-=e:l=(l-e)/(n-e),l=a(l),i===-1/0?l=-l:r===1/0?l+=i:l=l*(r-i)+i,l)}function colorToRgba(t){var e=__WEBPACK_IMPORTED_MODULE_0_normalize_css_color___default()(t);return null===e?t:\"rgba(\"+((4278190080&(e=e||0))>>>24)+\", \"+((16711680&e)>>>16)+\", \"+((65280&e)>>>8)+\", \"+(255&e)/255+\")\"}var stringShapeRegex=/[0-9\\.-]+/g;function createInterpolationFromStringOutputRange(t){var e=t.outputRange,n=(e=e.map(colorToRgba))[0].match(stringShapeRegex).map(function(){return[]});e.forEach(function(t){t.match(stringShapeRegex).forEach(function(t,e){n[e].push(+t)})});var i=e[0].match(stringShapeRegex).map(function(e,i){return Interpolation.create(_extends({},t,{outputRange:n[i]}))}),r=/^rgb/.test(e[0]);return function(t){var n=0;return e[0].replace(stringShapeRegex,function(){var e=i[n++](t);return String(r&&n<4?Math.round(e):e)})}}function findRange(t,e){for(var n=1;n<e.length-1&&!(e[n]>=t);++n);return n-1}var AnimatedInterpolation=function(t){function e(e,n){var i;return(i=t.call(this)||this)._parents=Array.isArray(e)?e:[e],i._interpolation=Interpolation.create(n),i}_inheritsLoose(e,t);var n=e.prototype;return n.__getValue=function(){return this._interpolation.apply(this,this._parents.map(function(t){return t.__getValue()}))},n.__attach=function(){for(var t=0;t<this._parents.length;++t)this._parents[t]instanceof Animated&&this._parents[t].__addChild(this)},n.__detach=function(){for(var t=0;t<this._parents.length;++t)this._parents[t]instanceof Animated&&this._parents[t].__removeChild(this)},n.interpolate=function(t){return new e(this,t)},e}(AnimatedWithChildren),Animation=function(){function t(){}var e=t.prototype;return e.start=function(t,e,n,i){},e.stop=function(){},e.__debouncedOnEnd=function(t){var e=this.__onEnd;this.__onEnd=null,e&&e(t)},t}(),_uniqueId=0;function findAnimatedStyles(t,e){\"function\"==typeof t.update?e.add(t):t.__getChildren().forEach(function(t){return findAnimatedStyles(t,e)})}var AnimatedValue=function(t){function e(e){var n;return(n=t.call(this)||this)._value=e,n._animation=null,n._animatedStyles=new Set,n._listeners={},n}_inheritsLoose(e,t);var n=e.prototype;return n.__detach=function(){this.stopAnimation()},n.__getValue=function(){return this._value},n._flush=function(){(0===this._animatedStyles.size||this._tracked)&&findAnimatedStyles(this,this._animatedStyles),this._animatedStyles.forEach(function(t){return t.update()})},n._updateValue=function(t){for(var e in this._value=t,this._flush(),this._listeners)this._listeners[e]({value:this.__getValue()})},n.setValue=function(t){this._animation&&(this._animation.stop(),this._animation=null),this._animatedStyles.clear(),this._updateValue(t)},n.stopAnimation=function(t){this.stopTracking(),this._animation&&this._animation.stop(),this._animation=null,t&&t(this.__getValue())},n.interpolate=function(t){return new AnimatedInterpolation(this,t)},n.animate=function(t,e){var n=this,i=this._animation;this._animation&&this._animation.stop(),this._animation=t,this._animatedStyles.clear(),t.start(this._value,function(t){return n._updateValue(t)},function(t){n._animation=null,e&&e(t)},i)},n.addListener=function(t){var e=String(_uniqueId++);return this._listeners[e]=t,e},n.removeListener=function(t){delete this._listeners[t]},n.removeAllListeners=function(){this._listeners={}},n.stopTracking=function(){this._tracking&&this._tracking.__detach(),this._tracking=null},n.track=function(t){this.stopTracking(),this._tracking=t},e}(AnimatedWithChildren),AnimatedArray=function(t){function e(e){var n;return(n=t.call(this)||this)._values=e.map(function(t){return new AnimatedValue(t)}),n}_inheritsLoose(e,t);var n=e.prototype;return n.setValue=function(t){var e=this;t.forEach(function(t,n){return e._values[n].setValue(t)})},n.__getValue=function(){return this._values.map(function(t){return t.__getValue()})},n.stopAnimation=function(t){this._values.forEach(function(t){return t.stopAnimation()}),t&&t(this.__getValue())},n.__attach=function(){for(var t=0;t<this._values.length;++t)this._values[t]instanceof Animated&&this._values[t].__addChild(this)},n.__detach=function(){for(var t=0;t<this._values.length;++t)this._values[t]instanceof Animated&&this._values[t].__removeChild(this)},e}(AnimatedWithChildren),AnimatedTemplate=function(t){function e(e,n){var i;return(i=t.call(this)||this)._strings=e,i._values=n,i}_inheritsLoose(e,t);var n=e.prototype;return n.__transformValue=function(t){return t instanceof Animated?t.__getValue():t},n.__getValue=function(){for(var t=this._strings[0],e=0;e<this._values.length;++e)t+=this.__transformValue(this._values[e])+this._strings[1+e];return t},n.__attach=function(){for(var t=0;t<this._values.length;++t)this._values[t]instanceof Animated&&this._values[t].__addChild(this)},n.__detach=function(){for(var t=0;t<this._values.length;++t)this._values[t]instanceof Animated&&this._values[t].__removeChild(this)},e}(AnimatedWithChildren),RequestAnimationFrame={current:function(t){return global.requestAnimationFrame(t)},inject:function(t){RequestAnimationFrame.current=t}},CancelAnimationFrame={current:function(t){return global.cancelAnimationFrame(t)},inject:function(t){CancelAnimationFrame.current=t}};function tensionFromOrigamiValue(t){return 3.62*(t-30)+194}function frictionFromOrigamiValue(t){return 3*(t-8)+25}function fromOrigamiTensionAndFriction(t,e){return{tension:tensionFromOrigamiValue(t),friction:frictionFromOrigamiValue(e)}}var SpringConfig={fromOrigamiTensionAndFriction:fromOrigamiTensionAndFriction},withDefault=function(t,e){return void 0===t||null===t?e:t},SpringAnimation=function(t){function e(e){var n;(n=t.call(this)||this)._overshootClamping=withDefault(e.overshootClamping,!1),n._restDisplacementThreshold=withDefault(e.restDisplacementThreshold,.001),n._restSpeedThreshold=withDefault(e.restSpeedThreshold,.001),n._initialVelocity=e.velocity,n._lastVelocity=withDefault(e.velocity,0),n._toValue=e.toValue,n.__isInteraction=void 0===e.isInteraction||e.isInteraction;var i=SpringConfig.fromOrigamiTensionAndFriction(withDefault(e.tension,40),withDefault(e.friction,7));return n._tension=i.tension,n._friction=i.friction,n}_inheritsLoose(e,t);var n=e.prototype;return n.start=function(t,n,i,r){if(this.__active=!0,this._startPosition=t,this._lastPosition=this._startPosition,this._onUpdate=n,this.__onEnd=i,this._lastTime=Date.now(),r instanceof e){var a=r.getInternalState();this._lastPosition=a.lastPosition,this._lastVelocity=a.lastVelocity,this._lastTime=a.lastTime}void 0!==this._initialVelocity&&null!==this._initialVelocity&&(this._lastVelocity=this._initialVelocity),this.onUpdate()},n.getInternalState=function(){return{lastPosition:this._lastPosition,lastVelocity:this._lastVelocity,lastTime:this._lastTime}},n.onUpdate=function(){var t=this._lastPosition,e=this._lastVelocity,n=this._lastPosition,i=this._lastVelocity,r=Date.now();r>this._lastTime+64&&(r=this._lastTime+64);for(var a=Math.floor((r-this._lastTime)/1),o=0;o<a;++o){var s=e,l=this._tension*(this._toValue-n)-this._friction*i,u=(n=t+.001*s/2,i=e+.001*l/2),c=this._tension*(this._toValue-n)-this._friction*i;n=t+.001*u/2;var h=i=e+.001*c/2,p=this._tension*(this._toValue-n)-this._friction*i;n=t+.001*h/2;var f=i=e+.001*p/2,d=this._tension*(this._toValue-n)-this._friction*i;n=t+.001*h/2,i=e+.001*p/2,t+=.001*((s+2*(u+h)+f)/6),e+=.001*((l+2*(c+p)+d)/6)}if(this._lastTime=r,this._lastPosition=t,this._lastVelocity=e,this._onUpdate(t),this.__active){var m=!1;this._overshootClamping&&0!==this._tension&&(m=this._startPosition<this._toValue?t>this._toValue:t<this._toValue);var _=Math.abs(e)<=this._restSpeedThreshold,v=!0;if(0!==this._tension&&(v=Math.abs(this._toValue-t)<=this._restDisplacementThreshold),m||_&&v)return 0!==this._tension&&this._onUpdate(this._toValue),void this.__debouncedOnEnd({finished:!0});this._animationFrame=RequestAnimationFrame.current(this.onUpdate.bind(this))}},n.stop=function(){this.__active=!1,CancelAnimationFrame.current(this._animationFrame),this.__debouncedOnEnd({finished:!1})},e}(Animation),FlattenStyle={current:function(t){return t},inject:function(t){FlattenStyle.current=t}},AnimatedStyle=function(t){function e(e){var n;return n=t.call(this)||this,e=FlattenStyle.current(e)||{},n._style=e,n}_inheritsLoose(e,t);var n=e.prototype;return n.__getValue=function(){var t={};for(var e in this._style){var n=this._style[e];t[e]=n instanceof Animated?n.__getValue():n}return t},n.__getAnimatedValue=function(){var t={};for(var e in this._style){var n=this._style[e];n instanceof Animated&&(t[e]=n.__getAnimatedValue())}return t},n.__attach=function(){for(var t in this._style){var e=this._style[t];e instanceof Animated&&e.__addChild(this)}},n.__detach=function(){for(var t in this._style){var e=this._style[t];e instanceof Animated&&e.__removeChild(this)}},e}(AnimatedWithChildren),AnimatedProps=function(t){function e(e,n){var i;return i=t.call(this)||this,e.style&&(e=_extends({},e,{style:new AnimatedStyle(e.style)})),i._props=e,i._callback=n,i.__attach(),i}_inheritsLoose(e,t);var n=e.prototype;return n.__getValue=function(){var t={};for(var e in this._props){var n=this._props[e];t[e]=n instanceof Animated?n.__getValue():n}return t},n.__getAnimatedValue=function(){var t={};for(var e in this._props){var n=this._props[e];n instanceof Animated&&(t[e]=n.__getAnimatedValue())}return t},n.__attach=function(){for(var t in this._props){var e=this._props[t];e instanceof Animated&&e.__addChild(this)}},n.__detach=function(){for(var t in this._props){var e=this._props[t];e instanceof Animated&&e.__removeChild(this)}},n.update=function(){this._callback()},e}(Animated),ApplyAnimatedValues={current:function(t,e){if(!t.setNativeProps)return!1;t.setNativeProps(e)},transformStyles:function(t){return t},inject:function(t,e){ApplyAnimatedValues.current=t,ApplyAnimatedValues.transformStyles=e}};function createAnimatedComponent(t){return function(e){function n(){return e.apply(this,arguments)||this}_inheritsLoose(n,e);var i=n.prototype;return i.componentWillUnmount=function(){this._propsAnimated&&this._propsAnimated.__detach()},i.setNativeProps=function(t){!1===ApplyAnimatedValues.current(this.refs.node,t,this)&&this.forceUpdate()},i.componentWillMount=function(){this.attachProps(this.props)},i.attachProps=function(t){var e=this,n=this._propsAnimated;this._propsAnimated=new AnimatedProps(t,function(){!1===ApplyAnimatedValues.current(e.refs.node,e._propsAnimated.__getAnimatedValue(),e)&&e.forceUpdate()}),n&&n.__detach()},i.componentWillReceiveProps=function(t){this.attachProps(t)},i.render=function(){var e=this._propsAnimated.__getValue(),n=e.style,i=_objectWithoutProperties(e,[\"style\"]);return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(t,_extends({},i,{style:ApplyAnimatedValues.transformStyles(n),ref:\"node\"}))},n}(__WEBPACK_IMPORTED_MODULE_1_react___default.a.Component)}var maybeVectorAnim=function(t,e,n){var i=e.tension,r=e.friction,a=e.toValue;return t instanceof AnimatedArray?parallel(t._values.map(function(t,e){return n(t,{tension:i,friction:r,toValue:a[e]})}),{stopTogether:!1}):null},spring=function t(e,n){return maybeVectorAnim(e,n,t)||{start:function(t){var i=e,r=n;i.stopTracking(),n.toValue instanceof Animated?i.track(new AnimatedTracking(i,n.toValue,SpringAnimation,r,t)):i.animate(new SpringAnimation(r),t)},stop:function(){e.stopAnimation()}}},parallel=function(t,e){var n=0,i={},r=!(e&&!1===e.stopTogether),a={start:function(e){if(n===t.length)return e&&e({finished:!0});t.forEach(function(o,s){var l=function(o){if(i[s]=!0,++n===t.length)return n=0,e&&e(o);!o.finished&&r&&a.stop()};o?o.start(l):l({finished:!0})})},stop:function(){t.forEach(function(t,e){!i[e]&&t.stop(),i[e]=!0})}};return a},exports$1={Value:AnimatedValue,Array:AnimatedArray,spring:spring,template:function(t){for(var e=arguments.length,n=new Array(e>1?e-1:0),i=1;i<e;i++)n[i-1]=arguments[i];return new AnimatedTemplate(t,n)},interpolate:function(t,e){return new AnimatedInterpolation(values,e)},createAnimatedComponent:createAnimatedComponent,inject:{ApplyAnimatedValues:ApplyAnimatedValues.inject,FlattenStyle:FlattenStyle.inject,RequestAnimationFrame:RequestAnimationFrame.inject,CancelAnimationFrame:CancelAnimationFrame.inject},ApplyAnimatedValues:ApplyAnimatedValues,AnimatedProps:AnimatedProps},isUnitlessNumber={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0};function prefixKey(t,e){return t+e.charAt(0).toUpperCase()+e.substring(1)}var prefixes=[\"Webkit\",\"ms\",\"Moz\",\"O\"];function mapStyle(t){return t}function dangerousStyleValue(t,e,n){return null==e||\"boolean\"==typeof e||\"\"===e?\"\":n||\"number\"!=typeof e||0===e||isUnitlessNumber.hasOwnProperty(t)&&isUnitlessNumber[t]?(\"\"+e).trim():e+\"px\"}function setValueForStyles(t,e){var n=t.style;for(var i in e)if(e.hasOwnProperty(i)){var r=0===i.indexOf(\"--\"),a=dangerousStyleValue(i,e[i],r);\"float\"===i&&(i=\"cssFloat\"),r?n.setProperty(i,a):n[i]=a}}function setValueForAttributes(t,e){var n;for(var i in e)\"style\"!==i&&(n=e[i],t.getAttribute(i)&&t.setAttribute(i,n))}function ApplyAnimatedValues$1(t,e){if(t.setNativeProps)t.setNativeProps(e);else{if(!t.nodeType||void 0===t.setAttribute)return!1;setValueForStyles(t,e.style),setValueForAttributes(t,e)}}Object.keys(isUnitlessNumber).forEach(function(t){prefixes.forEach(function(e){isUnitlessNumber[prefixKey(e,t)]=isUnitlessNumber[t]})}),exports$1.inject.ApplyAnimatedValues(ApplyAnimatedValues$1,mapStyle);var elements=[\"a\",\"abbr\",\"address\",\"area\",\"article\",\"aside\",\"audio\",\"b\",\"base\",\"bdi\",\"bdo\",\"big\",\"blockquote\",\"body\",\"br\",\"button\",\"canvas\",\"caption\",\"cite\",\"code\",\"col\",\"colgroup\",\"data\",\"datalist\",\"dd\",\"del\",\"details\",\"dfn\",\"dialog\",\"div\",\"dl\",\"dt\",\"em\",\"embed\",\"fieldset\",\"figcaption\",\"figure\",\"footer\",\"form\",\"h1\",\"h2\",\"h3\",\"h4\",\"h5\",\"h6\",\"head\",\"header\",\"hgroup\",\"hr\",\"html\",\"i\",\"iframe\",\"img\",\"input\",\"ins\",\"kbd\",\"keygen\",\"label\",\"legend\",\"li\",\"link\",\"main\",\"map\",\"mark\",\"marquee\",\"menu\",\"menuitem\",\"meta\",\"meter\",\"nav\",\"noscript\",\"object\",\"ol\",\"optgroup\",\"option\",\"output\",\"p\",\"param\",\"picture\",\"pre\",\"progress\",\"q\",\"rp\",\"rt\",\"ruby\",\"s\",\"samp\",\"script\",\"section\",\"select\",\"small\",\"source\",\"span\",\"strong\",\"style\",\"sub\",\"summary\",\"sup\",\"table\",\"tbody\",\"td\",\"textarea\",\"tfoot\",\"th\",\"thead\",\"time\",\"title\",\"tr\",\"track\",\"u\",\"ul\",\"var\",\"video\",\"wbr\",\"circle\",\"clipPath\",\"defs\",\"ellipse\",\"foreignObject\",\"g\",\"image\",\"line\",\"linearGradient\",\"mask\",\"path\",\"pattern\",\"polygon\",\"polyline\",\"radialGradient\",\"rect\",\"stop\",\"svg\",\"text\",\"tspan\"].reduce(function(t,e){var n;return _extends({},t,((n={})[e]=exports$1.createAnimatedComponent(e),n))},{}),exports$2=_extends({},exports$1,{elements:elements}),animated=exports$2.elements,template=exports$2.template,interpolate$1=exports$2.interpolate,config={default:{tension:170,friction:26},gentle:{tension:120,friction:14},wobbly:{tension:180,friction:12},stiff:{tension:210,friction:20},slow:{tension:280,friction:60}},Spring=function(t){function e(e){var n;return n=t.call(this)||this,_initialiseProps.call(_assertThisInitialized(n)),n.defaultAnimation=new exports$2.Value(0),n.animations={},n.update(e,!1),n}_inheritsLoose(e,t);var n=e.prototype;return n.update=function(t,e){var n=this,i=t.from,r=t.to,a=t.config,o=t.attach,s=t.immediate,l=t.reset;t.onFrame;void 0===e&&(e=!1);var u=Object.entries(_extends({},i,r)),c=this.defaultAnimation._value;this.interpolators={},this.defaultAnimation.setValue(0),this.animations=u.reduce(function(t,r,u){var h,p=r[0],f=r[1],d=!1===l&&n.animations[p]||(n.animations[p]={}),m=\"number\"==typeof f,_=!m&&Array.isArray(f),v=void 0!==i[p]?i[p]:f,g=m||_?f:1;if(m&&o){var y=o(n),A=y&&y.animations[p];A&&(g=A.animation)}if(m)d.animation=d.interpolation=d.animation||new exports$2.Value(v);else if(_)d.animation=d.interpolation=d.animation||new exports$2.Array(v);else{var x=d.interpolation&&d.interpolation._interpolation(c);d.animation=n.defaultAnimation,d.interpolation=n.defaultAnimation.interpolate({inputRange:[0,1],outputRange:[void 0!==x?x:v,f]})}return!s||!0!==s&&-1===s.indexOf(p)||d.animation.setValue(g),d.start=function(){return exports$2.spring(d.animation,_extends({toValue:g},a)).start(0===u&&n.onRest)},d.stop=function(){return d.animation.stopAnimation()},e&&d.start(),n.interpolators[p]=d.interpolation,_extends({},t,((h={})[p]=d,h))},{});var h=this.propsAnimated;this.propsAnimated=new exports$2.AnimatedProps(this.interpolators,this.callback),h&&h.__detach()},n.componentWillReceiveProps=function(t){this.update(t,!0)},n.componentDidMount=function(){Object.values(this.animations).forEach(function(t){return(0,t.start)()})},n.componentWillUnmount=function(){Object.values(this.animations).forEach(function(t){return(0,t.stop)()})},n.render=function(){var t=this.props,e=t.children,n=t.render,i=(t.from,t.to,t.config,t.native),r=_objectWithoutProperties(t,[\"children\",\"render\",\"from\",\"to\",\"config\",\"native\"]),a=i?this.interpolators:this.propsAnimated.__getValue();return n?n(_extends({},a,r,{children:e})):e(_extends({},a,r))},e}(__WEBPACK_IMPORTED_MODULE_1_react___default.a.PureComponent);Spring.defaultProps={from:{},to:{},config:config.default,native:!1,immediate:!1,reset:!1};var _initialiseProps=function(){var t=this;this.callback=function(){t.props.onFrame&&t.props.onFrame(t.propsAnimated.__getValue()),!t.props.native&&t.forceUpdate()},this.onRest=function(e){return e.finished&&t.props.onRest&&t.props.onRest()}},ref=function(t,e){return\"function\"==typeof t?t(e):t},Transition=function(t){function e(e){var n;n=t.call(this)||this;var i=e.children,r=e.render,a=e.keys,o=e.items,s=e.from,l=e.enter,u=(e.leave,e.update);return i=r||i,\"function\"==typeof a&&(a=o.map(a)),Array.isArray(i)||(i=[i],a=a?[a]:i),n.state={transitionKeys:a,transitions:i.map(function(t,e){var n=o?o[e]:a[e];return{children:t,key:a[e],item:n,to:ref(l,n),from:ref(s,n),update:ref(u,n)}})},n}_inheritsLoose(e,t);var n=e.prototype;return n.componentWillReceiveProps=function(t){var e=this,n=this.state,i=n.transitions,r=n.transitionKeys,a=t.children,o=t.render,s=t.keys,l=t.items,u=t.from,c=t.enter,h=t.leave,p=t.update;a=o||a,\"function\"==typeof s&&(s=l.map(s)),Array.isArray(a)||(a=[a],s=s?[s]:a);var f=new Set(s),d=new Set(r),m=s.filter(function(t){return!d.has(t)}),_=r.filter(function(t){return!f.has(t)}),v=s.filter(function(t){return d.has(t)});i=i.map(function(t){if(void 0===t.destroy){var e=s.indexOf(t.key),n=a[e];n&&(t.children=n),p&&-1!==v.indexOf(t.key)&&(t.to=ref(p,l?l[e]:s[e])||t.to)}return t}),m.length&&m.forEach(function(t){var e=s.indexOf(t),n=a[e],r=l?l[e]:s[e],o={children:n,key:s[e],item:r,to:ref(c,r),from:ref(u,r)};i=i.slice(0,e).concat([o],i.slice(e))}),_.length&&_.forEach(function(t){var n=i.find(function(e){return e.key===t});if(n){var r={destroy:!0,children:n.children,key:n.key,to:ref(h,n.item),from:ref(u,n.item),onRest:function(){return e.setState(function(t){return{transitions:t.transitions.filter(function(t){return t!==r})}})}};i=i.map(function(t){return t===n?r:t})}}),r=i.filter(function(t){return void 0===t.destroy}).map(function(t){return t.key});var g=s.map(function(t){return i.find(function(e){return e.key===t})});_.forEach(function(t){var e=i.findIndex(function(e){return e.key===t}),n=i.find(function(e){return e.key===t});n&&(g=g.slice(0,e).concat([n],g.slice(e)))}),this.setState({transitions:g,transitionKeys:r})},n.render=function(){var t=this,e=this.props,n=e.render,i=(e.from,e.enter,e.leave,e.native),r=e.config,a=(e.keys,e.items,e.onFrame),o=_extends({native:i,config:r},_objectWithoutProperties(e,[\"render\",\"from\",\"enter\",\"leave\",\"native\",\"config\",\"keys\",\"items\",\"onFrame\"]));return this.state.transitions.map(function(e){var i=e.key,r=e.item,s=e.children,l=_objectWithoutProperties(e,[\"key\",\"item\",\"children\"]);return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(Spring,_extends({key:i},l,o,{onFrame:a&&function(t){return a(r,t)},render:n&&s,children:n?t.props.children:s}))})},e}(__WEBPACK_IMPORTED_MODULE_1_react___default.a.PureComponent);Transition.defaultProps={from:{},enter:{},leave:{},native:!1,config:config.default};var _class,_temp,Trail=function(t){function e(){return t.apply(this,arguments)||this}return _inheritsLoose(e,t),e.prototype.render=function(){var t=this.props,e=t.children,n=t.render,i=t.from,r=t.to,a=t.native,o=t.config,s=t.keys,l=_objectWithoutProperties(t,[\"children\",\"render\",\"from\",\"to\",\"native\",\"config\",\"keys\"]),u=new Set,c=_extends({},l,{native:a,config:o,from:i,to:r});return(n||e).map(function(t,i){return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(Spring,_extends({key:s[i]},c,{attach:function(t){return function(t,e){return u.add(e),0===t?void 0:Array.from(u)[t-1]}(i,t)},render:n&&t,children:n?e:t}))})},e}(__WEBPACK_IMPORTED_MODULE_1_react___default.a.PureComponent);Trail.defaultProps={from:{},to:{},native:!1,config:config.default};var Parallax=function(t){function e(e){var n;return n=t.call(this,e)||this,_initialiseProps$1.call(_assertThisInitialized(n)),n.state={ready:!1},n.layers=[],n.space=0,n.current=0,n.offset=0,n.busy=!1,n}_inheritsLoose(e,t);var n=e.prototype;return n.scrollTo=function(t){var e=this.props,n=e.horizontal,i=e.config;this.scrollStop(),this.offset=t;var r=this.refs.container;this.animatedScroll=new exports$2.Value(r[n?\"scrollLeft\":\"scrollTop\"]),this.animatedScroll.addListener(function(t){var e=t.value;return r[n?\"scrollLeft\":\"scrollTop\"]=e}),exports$2.spring(this.animatedScroll,_extends({toValue:t*this.space},i)).start()},n.getChildContext=function(){return{parallax:this}},n.componentDidMount=function(){window.addEventListener(\"resize\",this.updateRaf,!1),this.update(),this.setState({ready:!0})},n.componentWillUnmount=function(){window.removeEventListener(\"resize\",this.updateRaf,!1)},n.componentDidUpdate=function(){this.update()},n.render=function(){var t,e=this.props,n=e.style,i=e.innerStyle,r=e.pages,a=e.className,o=e.scrolling,s=e.children,l=e.horizontal,u=o?\"scroll\":\"hidden\";return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(\"div\",{ref:\"container\",onScroll:this.onScroll,onWheel:o?this.scrollStop:null,onTouchStart:o?this.scrollStop:null,style:_extends({position:\"absolute\",width:\"100%\",height:\"100%\",overflow:u,overflowY:l?\"hidden\":u,overflowX:l?u:\"hidden\",WebkitOverflowScrolling:\"touch\",WebkitTransform:\"translate(0,0)\",MsTransform:\"translate(0,0)\",transform:\"translate3d(0,0,0)\"},n),className:a},this.state.ready&&__WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(\"div\",{ref:\"content\",style:_extends((t={position:\"absolute\"},t[l?\"height\":\"width\"]=\"100%\",t.WebkitTransform=\"translate(0,0)\",t.MsTransform=\"translate(0,0)\",t.transform=\"translate3d(0,0,0)\",t.overflow=\"hidden\",t[l?\"width\":\"height\"]=this.space*r,t),i)},s))},e}(__WEBPACK_IMPORTED_MODULE_1_react___default.a.PureComponent);Parallax.defaultProps={config:config.slow,scrolling:!0,horizontal:!1},Parallax.childContextTypes={parallax:__WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.object},Parallax.Layer=(_temp=_class=function(t){function e(e,n){var i;i=t.call(this,e,n)||this;var r=n.parallax,a=Math.floor(e.offset)*r.space,o=r.space*e.offset+a*e.speed,s=parseFloat(-r.current*e.speed+o);return i.animatedTranslate=new exports$2.Value(s),i.animatedSpace=new exports$2.Value(r.space*e.factor),i}_inheritsLoose(e,t);var n=e.prototype;return n.componentDidMount=function(){var t=this.context.parallax;t&&(t.layers=t.layers.concat(this),t.update())},n.componentWillUnmount=function(){var t=this,e=this.context.parallax;e&&(e.layers=e.layers.filter(function(e){return e!==t}),e.update())},n.setPosition=function(t,e,n){void 0===n&&(n=!1);var i=this.context.parallax.props.config,r=Math.floor(this.props.offset)*t,a=t*this.props.offset+r*this.props.speed,o=parseFloat(-e*this.props.speed+a);n?this.animatedTranslate.setValue(o):exports$2.spring(this.animatedTranslate,_extends({toValue:o},i)).start()},n.setHeight=function(t,e){void 0===e&&(e=!1);var n=this.context.parallax.props.config,i=parseFloat(t*this.props.factor);e?this.animatedSpace.setValue(i):exports$2.spring(this.animatedSpace,_extends({toValue:i},n)).start()},n.render=function(){var t,e=this.props,n=e.style,i=e.children,r=(e.offset,e.speed,e.factor,e.className),a=_objectWithoutProperties(e,[\"style\",\"children\",\"offset\",\"speed\",\"factor\",\"className\"]),o=this.context.parallax.props.horizontal,s=this.animatedTranslate.interpolate({inputRange:[0,1],outputRange:o?[\"translate3d(0px,0,0)\",\"translate3d(1px,0,0)\"]:[\"translate3d(0,0px,0)\",\"translate3d(0,1px,0)\"]});return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(animated.div,_extends({},a,{ref:\"layer\",className:r,style:_extends((t={position:\"absolute\",backgroundSize:\"auto\",backgroundRepeat:\"no-repeat\",willChange:\"transform\"},t[o?\"height\":\"width\"]=\"100%\",t[o?\"width\":\"height\"]=this.animatedSpace,t.WebkitTransform=s,t.MsTransform=s,t.transform=s,t),n)}),i)},e}(__WEBPACK_IMPORTED_MODULE_1_react___default.a.PureComponent),_class.contextTypes={parallax:__WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.object},_class.defaultProps={factor:1,offset:0,speed:0},_temp);var _initialiseProps$1=function(){var t=this;this.moveItems=function(){t.layers.forEach(function(e){return e.setPosition(t.space,t.current)}),t.busy=!1},this.scrollerRaf=function(){return requestAnimationFrame(t.moveItems)},this.onScroll=function(e){var n=t.props.horizontal;t.busy||(t.busy=!0,t.scrollerRaf(),t.current=e.target[n?\"scrollLeft\":\"scrollTop\"])},this.update=function(){var e=t.props,n=e.scrolling,i=e.horizontal;t.refs.container&&(t.space=t.refs.container[i?\"clientWidth\":\"clientHeight\"],n?t.current=t.refs.container[i?\"scrollLeft\":\"scrollTop\"]:t.refs.container[i?\"scrollLeft\":\"scrollTop\"]=t.current=t.offset*t.space,t.refs.content&&(t.refs.content.style[i?\"width\":\"height\"]=t.space*t.props.pages+\"px\"),t.layers.forEach(function(e){e.setHeight(t.space,!0),e.setPosition(t.space,t.current,!0)}))},this.updateRaf=function(){requestAnimationFrame(t.update),setTimeout(t.update,150)},this.scrollStop=function(e){return t.animatedScroll&&t.animatedScroll.stopAnimation()}};\n\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)))\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// static/js/main.2079f396.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 16);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 3eadcff969973d20bda4","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react/index.js\n// module id = 0\n// module chunks = 0","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\n} catch(e) {\n\t// This works if the window reference is available\n\tif(typeof window === \"object\")\n\t\tg = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 1\n// module chunks = 0","\"use strict\";function _interopDefault(t){return t&&\"object\"==typeof t&&\"default\"in t?t.default:t}Object.defineProperty(exports,\"__esModule\",{value:!0});var normalizeColor=_interopDefault(require(\"normalize-css-color\")),React=_interopDefault(require(\"react\")),PropTypes=_interopDefault(require(\"prop-types\"));function _extends(){return(_extends=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(t[i]=n[i])}return t}).apply(this,arguments)}function _inheritsLoose(t,e){t.prototype=Object.create(e.prototype),t.prototype.constructor=t,t.__proto__=e}function _objectWithoutProperties(t,e){if(null==t)return{};var n,i,r={},a=Object.keys(t);for(i=0;i<a.length;i++)n=a[i],e.indexOf(n)>=0||(r[n]=t[n]);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(i=0;i<o.length;i++)n=o[i],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}function _assertThisInitialized(t){if(void 0===t)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return t}var Animated=function(){function t(){}var e=t.prototype;return e.__attach=function(){},e.__detach=function(){},e.__getValue=function(){},e.__getAnimatedValue=function(){return this.__getValue()},e.__addChild=function(t){},e.__removeChild=function(t){},e.__getChildren=function(){return[]},t}(),AnimatedTracking=function(t){function e(e,n,i,r,a){var o;return(o=t.call(this)||this)._value=e,o._parent=n,o._animationClass=i,o._animationConfig=r,o._callback=a,o.__attach(),o._hey=1,o}_inheritsLoose(e,t);var n=e.prototype;return n.__getValue=function(){return this._parent.__getValue()},n.__attach=function(){this._parent.__addChild(this)},n.__detach=function(){this._parent.__removeChild(this)},n.update=function(){this._value.animate(new this._animationClass(_extends({},this._animationConfig,{toValue:this._animationConfig.toValue.__getValue()})),this._callback)},e}(Animated),AnimatedWithChildren=function(t){function e(){var e;return(e=t.call(this)||this)._children=[],e}_inheritsLoose(e,t);var n=e.prototype;return n.__addChild=function(t){t instanceof AnimatedTracking&&(this._tracked=!0),0===this._children.length&&this.__attach(),this._children.push(t)},n.__removeChild=function(t){var e=this._children.indexOf(t);-1!==e?(this._children.splice(e,1),0===this._children.length&&this.__detach()):console.warn(\"Trying to remove a child that doesn't exist\")},n.__getChildren=function(){return this._children},e}(Animated),linear=function(t){return t},Interpolation=function(){function t(){}return t.create=function(t){if(\"function\"==typeof t)return function(e){return t(e)};if(t.outputRange&&\"string\"==typeof t.outputRange[0])return createInterpolationFromStringOutputRange(t);var e=t.outputRange,n=t.inputRange,i=t.easing||linear,r=\"extend\";void 0!==t.extrapolateLeft?r=t.extrapolateLeft:void 0!==t.extrapolate&&(r=t.extrapolate);var a=\"extend\";return void 0!==t.extrapolateRight?a=t.extrapolateRight:void 0!==t.extrapolate&&(a=t.extrapolate),function(t){var o=findRange(t,n);return interpolate(t,n[o],n[o+1],e[o],e[o+1],i,r,a)}},t}();function interpolate(t,e,n,i,r,a,o,s){var l=t;if(l<e){if(\"identity\"===o)return l;\"clamp\"===o&&(l=e)}if(l>n){if(\"identity\"===s)return l;\"clamp\"===s&&(l=n)}return i===r?i:e===n?t<=e?i:r:(e===-1/0?l=-l:n===1/0?l-=e:l=(l-e)/(n-e),l=a(l),i===-1/0?l=-l:r===1/0?l+=i:l=l*(r-i)+i,l)}function colorToRgba(t){var e=normalizeColor(t);return null===e?t:\"rgba(\"+((4278190080&(e=e||0))>>>24)+\", \"+((16711680&e)>>>16)+\", \"+((65280&e)>>>8)+\", \"+(255&e)/255+\")\"}var stringShapeRegex=/[0-9\\.-]+/g;function createInterpolationFromStringOutputRange(t){var e=t.outputRange,n=(e=e.map(colorToRgba))[0].match(stringShapeRegex).map(function(){return[]});e.forEach(function(t){t.match(stringShapeRegex).forEach(function(t,e){n[e].push(+t)})});var i=e[0].match(stringShapeRegex).map(function(e,i){return Interpolation.create(_extends({},t,{outputRange:n[i]}))}),r=/^rgb/.test(e[0]);return function(t){var n=0;return e[0].replace(stringShapeRegex,function(){var e=i[n++](t);return String(r&&n<4?Math.round(e):e)})}}function findRange(t,e){for(var n=1;n<e.length-1&&!(e[n]>=t);++n);return n-1}var AnimatedInterpolation=function(t){function e(e,n){var i;return(i=t.call(this)||this)._parents=Array.isArray(e)?e:[e],i._interpolation=Interpolation.create(n),i}_inheritsLoose(e,t);var n=e.prototype;return n.__getValue=function(){return this._interpolation.apply(this,this._parents.map(function(t){return t.__getValue()}))},n.__attach=function(){for(var t=0;t<this._parents.length;++t)this._parents[t]instanceof Animated&&this._parents[t].__addChild(this)},n.__detach=function(){for(var t=0;t<this._parents.length;++t)this._parents[t]instanceof Animated&&this._parents[t].__removeChild(this)},n.interpolate=function(t){return new e(this,t)},e}(AnimatedWithChildren),Animation=function(){function t(){}var e=t.prototype;return e.start=function(t,e,n,i){},e.stop=function(){},e.__debouncedOnEnd=function(t){var e=this.__onEnd;this.__onEnd=null,e&&e(t)},t}(),_uniqueId=0;function findAnimatedStyles(t,e){\"function\"==typeof t.update?e.add(t):t.__getChildren().forEach(function(t){return findAnimatedStyles(t,e)})}var AnimatedValue=function(t){function e(e){var n;return(n=t.call(this)||this)._value=e,n._animation=null,n._animatedStyles=new Set,n._listeners={},n}_inheritsLoose(e,t);var n=e.prototype;return n.__detach=function(){this.stopAnimation()},n.__getValue=function(){return this._value},n._flush=function(){(0===this._animatedStyles.size||this._tracked)&&findAnimatedStyles(this,this._animatedStyles),this._animatedStyles.forEach(function(t){return t.update()})},n._updateValue=function(t){for(var e in this._value=t,this._flush(),this._listeners)this._listeners[e]({value:this.__getValue()})},n.setValue=function(t){this._animation&&(this._animation.stop(),this._animation=null),this._animatedStyles.clear(),this._updateValue(t)},n.stopAnimation=function(t){this.stopTracking(),this._animation&&this._animation.stop(),this._animation=null,t&&t(this.__getValue())},n.interpolate=function(t){return new AnimatedInterpolation(this,t)},n.animate=function(t,e){var n=this,i=this._animation;this._animation&&this._animation.stop(),this._animation=t,this._animatedStyles.clear(),t.start(this._value,function(t){return n._updateValue(t)},function(t){n._animation=null,e&&e(t)},i)},n.addListener=function(t){var e=String(_uniqueId++);return this._listeners[e]=t,e},n.removeListener=function(t){delete this._listeners[t]},n.removeAllListeners=function(){this._listeners={}},n.stopTracking=function(){this._tracking&&this._tracking.__detach(),this._tracking=null},n.track=function(t){this.stopTracking(),this._tracking=t},e}(AnimatedWithChildren),AnimatedArray=function(t){function e(e){var n;return(n=t.call(this)||this)._values=e.map(function(t){return new AnimatedValue(t)}),n}_inheritsLoose(e,t);var n=e.prototype;return n.setValue=function(t){var e=this;t.forEach(function(t,n){return e._values[n].setValue(t)})},n.__getValue=function(){return this._values.map(function(t){return t.__getValue()})},n.stopAnimation=function(t){this._values.forEach(function(t){return t.stopAnimation()}),t&&t(this.__getValue())},n.__attach=function(){for(var t=0;t<this._values.length;++t)this._values[t]instanceof Animated&&this._values[t].__addChild(this)},n.__detach=function(){for(var t=0;t<this._values.length;++t)this._values[t]instanceof Animated&&this._values[t].__removeChild(this)},e}(AnimatedWithChildren),AnimatedTemplate=function(t){function e(e,n){var i;return(i=t.call(this)||this)._strings=e,i._values=n,i}_inheritsLoose(e,t);var n=e.prototype;return n.__transformValue=function(t){return t instanceof Animated?t.__getValue():t},n.__getValue=function(){for(var t=this._strings[0],e=0;e<this._values.length;++e)t+=this.__transformValue(this._values[e])+this._strings[1+e];return t},n.__attach=function(){for(var t=0;t<this._values.length;++t)this._values[t]instanceof Animated&&this._values[t].__addChild(this)},n.__detach=function(){for(var t=0;t<this._values.length;++t)this._values[t]instanceof Animated&&this._values[t].__removeChild(this)},e}(AnimatedWithChildren),RequestAnimationFrame={current:function(t){return global.requestAnimationFrame(t)},inject:function(t){RequestAnimationFrame.current=t}},CancelAnimationFrame={current:function(t){return global.cancelAnimationFrame(t)},inject:function(t){CancelAnimationFrame.current=t}};function tensionFromOrigamiValue(t){return 3.62*(t-30)+194}function frictionFromOrigamiValue(t){return 3*(t-8)+25}function fromOrigamiTensionAndFriction(t,e){return{tension:tensionFromOrigamiValue(t),friction:frictionFromOrigamiValue(e)}}var SpringConfig={fromOrigamiTensionAndFriction:fromOrigamiTensionAndFriction},withDefault=function(t,e){return void 0===t||null===t?e:t},SpringAnimation=function(t){function e(e){var n;(n=t.call(this)||this)._overshootClamping=withDefault(e.overshootClamping,!1),n._restDisplacementThreshold=withDefault(e.restDisplacementThreshold,.001),n._restSpeedThreshold=withDefault(e.restSpeedThreshold,.001),n._initialVelocity=e.velocity,n._lastVelocity=withDefault(e.velocity,0),n._toValue=e.toValue,n.__isInteraction=void 0===e.isInteraction||e.isInteraction;var i=SpringConfig.fromOrigamiTensionAndFriction(withDefault(e.tension,40),withDefault(e.friction,7));return n._tension=i.tension,n._friction=i.friction,n}_inheritsLoose(e,t);var n=e.prototype;return n.start=function(t,n,i,r){if(this.__active=!0,this._startPosition=t,this._lastPosition=this._startPosition,this._onUpdate=n,this.__onEnd=i,this._lastTime=Date.now(),r instanceof e){var a=r.getInternalState();this._lastPosition=a.lastPosition,this._lastVelocity=a.lastVelocity,this._lastTime=a.lastTime}void 0!==this._initialVelocity&&null!==this._initialVelocity&&(this._lastVelocity=this._initialVelocity),this.onUpdate()},n.getInternalState=function(){return{lastPosition:this._lastPosition,lastVelocity:this._lastVelocity,lastTime:this._lastTime}},n.onUpdate=function(){var t=this._lastPosition,e=this._lastVelocity,n=this._lastPosition,i=this._lastVelocity,r=Date.now();r>this._lastTime+64&&(r=this._lastTime+64);for(var a=Math.floor((r-this._lastTime)/1),o=0;o<a;++o){var s=e,l=this._tension*(this._toValue-n)-this._friction*i,u=(n=t+.001*s/2,i=e+.001*l/2),c=this._tension*(this._toValue-n)-this._friction*i;n=t+.001*u/2;var p=i=e+.001*c/2,f=this._tension*(this._toValue-n)-this._friction*i;n=t+.001*p/2;var h=i=e+.001*f/2,d=this._tension*(this._toValue-n)-this._friction*i;n=t+.001*p/2,i=e+.001*f/2,t+=.001*((s+2*(u+p)+h)/6),e+=.001*((l+2*(c+f)+d)/6)}if(this._lastTime=r,this._lastPosition=t,this._lastVelocity=e,this._onUpdate(t),this.__active){var m=!1;this._overshootClamping&&0!==this._tension&&(m=this._startPosition<this._toValue?t>this._toValue:t<this._toValue);var _=Math.abs(e)<=this._restSpeedThreshold,v=!0;if(0!==this._tension&&(v=Math.abs(this._toValue-t)<=this._restDisplacementThreshold),m||_&&v)return 0!==this._tension&&this._onUpdate(this._toValue),void this.__debouncedOnEnd({finished:!0});this._animationFrame=RequestAnimationFrame.current(this.onUpdate.bind(this))}},n.stop=function(){this.__active=!1,CancelAnimationFrame.current(this._animationFrame),this.__debouncedOnEnd({finished:!1})},e}(Animation),FlattenStyle={current:function(t){return t},inject:function(t){FlattenStyle.current=t}},AnimatedStyle=function(t){function e(e){var n;return n=t.call(this)||this,e=FlattenStyle.current(e)||{},n._style=e,n}_inheritsLoose(e,t);var n=e.prototype;return n.__getValue=function(){var t={};for(var e in this._style){var n=this._style[e];t[e]=n instanceof Animated?n.__getValue():n}return t},n.__getAnimatedValue=function(){var t={};for(var e in this._style){var n=this._style[e];n instanceof Animated&&(t[e]=n.__getAnimatedValue())}return t},n.__attach=function(){for(var t in this._style){var e=this._style[t];e instanceof Animated&&e.__addChild(this)}},n.__detach=function(){for(var t in this._style){var e=this._style[t];e instanceof Animated&&e.__removeChild(this)}},e}(AnimatedWithChildren),AnimatedProps=function(t){function e(e,n){var i;return i=t.call(this)||this,e.style&&(e=_extends({},e,{style:new AnimatedStyle(e.style)})),i._props=e,i._callback=n,i.__attach(),i}_inheritsLoose(e,t);var n=e.prototype;return n.__getValue=function(){var t={};for(var e in this._props){var n=this._props[e];t[e]=n instanceof Animated?n.__getValue():n}return t},n.__getAnimatedValue=function(){var t={};for(var e in this._props){var n=this._props[e];n instanceof Animated&&(t[e]=n.__getAnimatedValue())}return t},n.__attach=function(){for(var t in this._props){var e=this._props[t];e instanceof Animated&&e.__addChild(this)}},n.__detach=function(){for(var t in this._props){var e=this._props[t];e instanceof Animated&&e.__removeChild(this)}},n.update=function(){this._callback()},e}(Animated),ApplyAnimatedValues={current:function(t,e){if(!t.setNativeProps)return!1;t.setNativeProps(e)},transformStyles:function(t){return t},inject:function(t,e){ApplyAnimatedValues.current=t,ApplyAnimatedValues.transformStyles=e}};function createAnimatedComponent(t){return function(e){function n(){return e.apply(this,arguments)||this}_inheritsLoose(n,e);var i=n.prototype;return i.componentWillUnmount=function(){this._propsAnimated&&this._propsAnimated.__detach()},i.setNativeProps=function(t){!1===ApplyAnimatedValues.current(this.refs.node,t,this)&&this.forceUpdate()},i.componentWillMount=function(){this.attachProps(this.props)},i.attachProps=function(t){var e=this,n=this._propsAnimated;this._propsAnimated=new AnimatedProps(t,function(){!1===ApplyAnimatedValues.current(e.refs.node,e._propsAnimated.__getAnimatedValue(),e)&&e.forceUpdate()}),n&&n.__detach()},i.componentWillReceiveProps=function(t){this.attachProps(t)},i.render=function(){var e=this._propsAnimated.__getValue(),n=e.style,i=_objectWithoutProperties(e,[\"style\"]);return React.createElement(t,_extends({},i,{style:ApplyAnimatedValues.transformStyles(n),ref:\"node\"}))},n}(React.Component)}var maybeVectorAnim=function(t,e,n){var i=e.tension,r=e.friction,a=e.toValue;return t instanceof AnimatedArray?parallel(t._values.map(function(t,e){return n(t,{tension:i,friction:r,toValue:a[e]})}),{stopTogether:!1}):null},spring=function t(e,n){return maybeVectorAnim(e,n,t)||{start:function(t){var i=e,r=n;i.stopTracking(),n.toValue instanceof Animated?i.track(new AnimatedTracking(i,n.toValue,SpringAnimation,r,t)):i.animate(new SpringAnimation(r),t)},stop:function(){e.stopAnimation()}}},parallel=function(t,e){var n=0,i={},r=!(e&&!1===e.stopTogether),a={start:function(e){if(n===t.length)return e&&e({finished:!0});t.forEach(function(o,s){var l=function(o){if(i[s]=!0,++n===t.length)return n=0,e&&e(o);!o.finished&&r&&a.stop()};o?o.start(l):l({finished:!0})})},stop:function(){t.forEach(function(t,e){!i[e]&&t.stop(),i[e]=!0})}};return a},exports$1={Value:AnimatedValue,Array:AnimatedArray,spring:spring,template:function(t){for(var e=arguments.length,n=new Array(e>1?e-1:0),i=1;i<e;i++)n[i-1]=arguments[i];return new AnimatedTemplate(t,n)},interpolate:function(t,e){return new AnimatedInterpolation(values,e)},createAnimatedComponent:createAnimatedComponent,inject:{ApplyAnimatedValues:ApplyAnimatedValues.inject,FlattenStyle:FlattenStyle.inject,RequestAnimationFrame:RequestAnimationFrame.inject,CancelAnimationFrame:CancelAnimationFrame.inject},ApplyAnimatedValues:ApplyAnimatedValues,AnimatedProps:AnimatedProps},isUnitlessNumber={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0};function prefixKey(t,e){return t+e.charAt(0).toUpperCase()+e.substring(1)}var prefixes=[\"Webkit\",\"ms\",\"Moz\",\"O\"];function mapStyle(t){return t}function dangerousStyleValue(t,e,n){return null==e||\"boolean\"==typeof e||\"\"===e?\"\":n||\"number\"!=typeof e||0===e||isUnitlessNumber.hasOwnProperty(t)&&isUnitlessNumber[t]?(\"\"+e).trim():e+\"px\"}function setValueForStyles(t,e){var n=t.style;for(var i in e)if(e.hasOwnProperty(i)){var r=0===i.indexOf(\"--\"),a=dangerousStyleValue(i,e[i],r);\"float\"===i&&(i=\"cssFloat\"),r?n.setProperty(i,a):n[i]=a}}function setValueForAttributes(t,e){var n;for(var i in e)\"style\"!==i&&(n=e[i],t.getAttribute(i)&&t.setAttribute(i,n))}function ApplyAnimatedValues$1(t,e){if(t.setNativeProps)t.setNativeProps(e);else{if(!t.nodeType||void 0===t.setAttribute)return!1;setValueForStyles(t,e.style),setValueForAttributes(t,e)}}Object.keys(isUnitlessNumber).forEach(function(t){prefixes.forEach(function(e){isUnitlessNumber[prefixKey(e,t)]=isUnitlessNumber[t]})}),exports$1.inject.ApplyAnimatedValues(ApplyAnimatedValues$1,mapStyle);var elements=[\"a\",\"abbr\",\"address\",\"area\",\"article\",\"aside\",\"audio\",\"b\",\"base\",\"bdi\",\"bdo\",\"big\",\"blockquote\",\"body\",\"br\",\"button\",\"canvas\",\"caption\",\"cite\",\"code\",\"col\",\"colgroup\",\"data\",\"datalist\",\"dd\",\"del\",\"details\",\"dfn\",\"dialog\",\"div\",\"dl\",\"dt\",\"em\",\"embed\",\"fieldset\",\"figcaption\",\"figure\",\"footer\",\"form\",\"h1\",\"h2\",\"h3\",\"h4\",\"h5\",\"h6\",\"head\",\"header\",\"hgroup\",\"hr\",\"html\",\"i\",\"iframe\",\"img\",\"input\",\"ins\",\"kbd\",\"keygen\",\"label\",\"legend\",\"li\",\"link\",\"main\",\"map\",\"mark\",\"marquee\",\"menu\",\"menuitem\",\"meta\",\"meter\",\"nav\",\"noscript\",\"object\",\"ol\",\"optgroup\",\"option\",\"output\",\"p\",\"param\",\"picture\",\"pre\",\"progress\",\"q\",\"rp\",\"rt\",\"ruby\",\"s\",\"samp\",\"script\",\"section\",\"select\",\"small\",\"source\",\"span\",\"strong\",\"style\",\"sub\",\"summary\",\"sup\",\"table\",\"tbody\",\"td\",\"textarea\",\"tfoot\",\"th\",\"thead\",\"time\",\"title\",\"tr\",\"track\",\"u\",\"ul\",\"var\",\"video\",\"wbr\",\"circle\",\"clipPath\",\"defs\",\"ellipse\",\"foreignObject\",\"g\",\"image\",\"line\",\"linearGradient\",\"mask\",\"path\",\"pattern\",\"polygon\",\"polyline\",\"radialGradient\",\"rect\",\"stop\",\"svg\",\"text\",\"tspan\"].reduce(function(t,e){var n;return _extends({},t,((n={})[e]=exports$1.createAnimatedComponent(e),n))},{}),exports$2=_extends({},exports$1,{elements:elements}),animated=exports$2.elements,template=exports$2.template,interpolate$1=exports$2.interpolate,config={default:{tension:170,friction:26},gentle:{tension:120,friction:14},wobbly:{tension:180,friction:12},stiff:{tension:210,friction:20},slow:{tension:280,friction:60}},Spring=function(t){function e(e){var n;return n=t.call(this)||this,_initialiseProps.call(_assertThisInitialized(n)),n.defaultAnimation=new exports$2.Value(0),n.animations={},n.update(e,!1),n}_inheritsLoose(e,t);var n=e.prototype;return n.update=function(t,e){var n=this,i=t.from,r=t.to,a=t.config,o=t.attach,s=t.immediate,l=t.reset;t.onFrame;void 0===e&&(e=!1);var u=Object.entries(_extends({},i,r)),c=this.defaultAnimation._value;this.interpolators={},this.defaultAnimation.setValue(0),this.animations=u.reduce(function(t,r,u){var p,f=r[0],h=r[1],d=!1===l&&n.animations[f]||(n.animations[f]={}),m=\"number\"==typeof h,_=!m&&Array.isArray(h),v=void 0!==i[f]?i[f]:h,g=m||_?h:1;if(m&&o){var y=o(n),A=y&&y.animations[f];A&&(g=A.animation)}if(m)d.animation=d.interpolation=d.animation||new exports$2.Value(v);else if(_)d.animation=d.interpolation=d.animation||new exports$2.Array(v);else{var x=d.interpolation&&d.interpolation._interpolation(c);d.animation=n.defaultAnimation,d.interpolation=n.defaultAnimation.interpolate({inputRange:[0,1],outputRange:[void 0!==x?x:v,h]})}return!s||!0!==s&&-1===s.indexOf(f)||d.animation.setValue(g),d.start=function(){return exports$2.spring(d.animation,_extends({toValue:g},a)).start(0===u&&n.onRest)},d.stop=function(){return d.animation.stopAnimation()},e&&d.start(),n.interpolators[f]=d.interpolation,_extends({},t,((p={})[f]=d,p))},{});var p=this.propsAnimated;this.propsAnimated=new exports$2.AnimatedProps(this.interpolators,this.callback),p&&p.__detach()},n.componentWillReceiveProps=function(t){this.update(t,!0)},n.componentDidMount=function(){Object.values(this.animations).forEach(function(t){return(0,t.start)()})},n.componentWillUnmount=function(){Object.values(this.animations).forEach(function(t){return(0,t.stop)()})},n.render=function(){var t=this.props,e=t.children,n=t.render,i=(t.from,t.to,t.config,t.native),r=_objectWithoutProperties(t,[\"children\",\"render\",\"from\",\"to\",\"config\",\"native\"]),a=i?this.interpolators:this.propsAnimated.__getValue();return n?n(_extends({},a,r,{children:e})):e(_extends({},a,r))},e}(React.PureComponent);Spring.defaultProps={from:{},to:{},config:config.default,native:!1,immediate:!1,reset:!1};var _initialiseProps=function(){var t=this;this.callback=function(){t.props.onFrame&&t.props.onFrame(t.propsAnimated.__getValue()),!t.props.native&&t.forceUpdate()},this.onRest=function(e){return e.finished&&t.props.onRest&&t.props.onRest()}},ref=function(t,e){return\"function\"==typeof t?t(e):t},Transition=function(t){function e(e){var n;n=t.call(this)||this;var i=e.children,r=e.render,a=e.keys,o=e.items,s=e.from,l=e.enter,u=(e.leave,e.update);return i=r||i,\"function\"==typeof a&&(a=o.map(a)),Array.isArray(i)||(i=[i],a=a?[a]:i),n.state={transitionKeys:a,transitions:i.map(function(t,e){var n=o?o[e]:a[e];return{children:t,key:a[e],item:n,to:ref(l,n),from:ref(s,n),update:ref(u,n)}})},n}_inheritsLoose(e,t);var n=e.prototype;return n.componentWillReceiveProps=function(t){var e=this,n=this.state,i=n.transitions,r=n.transitionKeys,a=t.children,o=t.render,s=t.keys,l=t.items,u=t.from,c=t.enter,p=t.leave,f=t.update;a=o||a,\"function\"==typeof s&&(s=l.map(s)),Array.isArray(a)||(a=[a],s=s?[s]:a);var h=new Set(s),d=new Set(r),m=s.filter(function(t){return!d.has(t)}),_=r.filter(function(t){return!h.has(t)}),v=s.filter(function(t){return d.has(t)});i=i.map(function(t){if(void 0===t.destroy){var e=s.indexOf(t.key),n=a[e];n&&(t.children=n),f&&-1!==v.indexOf(t.key)&&(t.to=ref(f,l?l[e]:s[e])||t.to)}return t}),m.length&&m.forEach(function(t){var e=s.indexOf(t),n=a[e],r=l?l[e]:s[e],o={children:n,key:s[e],item:r,to:ref(c,r),from:ref(u,r)};i=i.slice(0,e).concat([o],i.slice(e))}),_.length&&_.forEach(function(t){var n=i.find(function(e){return e.key===t});if(n){var r={destroy:!0,children:n.children,key:n.key,to:ref(p,n.item),from:ref(u,n.item),onRest:function(){return e.setState(function(t){return{transitions:t.transitions.filter(function(t){return t!==r})}})}};i=i.map(function(t){return t===n?r:t})}}),r=i.filter(function(t){return void 0===t.destroy}).map(function(t){return t.key});var g=s.map(function(t){return i.find(function(e){return e.key===t})});_.forEach(function(t){var e=i.findIndex(function(e){return e.key===t}),n=i.find(function(e){return e.key===t});n&&(g=g.slice(0,e).concat([n],g.slice(e)))}),this.setState({transitions:g,transitionKeys:r})},n.render=function(){var t=this,e=this.props,n=e.render,i=(e.from,e.enter,e.leave,e.native),r=e.config,a=(e.keys,e.items,e.onFrame),o=_extends({native:i,config:r},_objectWithoutProperties(e,[\"render\",\"from\",\"enter\",\"leave\",\"native\",\"config\",\"keys\",\"items\",\"onFrame\"]));return this.state.transitions.map(function(e){var i=e.key,r=e.item,s=e.children,l=_objectWithoutProperties(e,[\"key\",\"item\",\"children\"]);return React.createElement(Spring,_extends({key:i},l,o,{onFrame:a&&function(t){return a(r,t)},render:n&&s,children:n?t.props.children:s}))})},e}(React.PureComponent);Transition.defaultProps={from:{},enter:{},leave:{},native:!1,config:config.default};var _class,_temp,Trail=function(t){function e(){return t.apply(this,arguments)||this}return _inheritsLoose(e,t),e.prototype.render=function(){var t=this.props,e=t.children,n=t.render,i=t.from,r=t.to,a=t.native,o=t.config,s=t.keys,l=_objectWithoutProperties(t,[\"children\",\"render\",\"from\",\"to\",\"native\",\"config\",\"keys\"]),u=new Set,c=_extends({},l,{native:a,config:o,from:i,to:r});return(n||e).map(function(t,i){return React.createElement(Spring,_extends({key:s[i]},c,{attach:function(t){return function(t,e){return u.add(e),0===t?void 0:Array.from(u)[t-1]}(i,t)},render:n&&t,children:n?e:t}))})},e}(React.PureComponent);Trail.defaultProps={from:{},to:{},native:!1,config:config.default};var Parallax=function(t){function e(e){var n;return n=t.call(this,e)||this,_initialiseProps$1.call(_assertThisInitialized(n)),n.state={ready:!1},n.layers=[],n.space=0,n.current=0,n.offset=0,n.busy=!1,n}_inheritsLoose(e,t);var n=e.prototype;return n.scrollTo=function(t){var e=this.props,n=e.horizontal,i=e.config;this.scrollStop(),this.offset=t;var r=this.refs.container;this.animatedScroll=new exports$2.Value(r[n?\"scrollLeft\":\"scrollTop\"]),this.animatedScroll.addListener(function(t){var e=t.value;return r[n?\"scrollLeft\":\"scrollTop\"]=e}),exports$2.spring(this.animatedScroll,_extends({toValue:t*this.space},i)).start()},n.getChildContext=function(){return{parallax:this}},n.componentDidMount=function(){window.addEventListener(\"resize\",this.updateRaf,!1),this.update(),this.setState({ready:!0})},n.componentWillUnmount=function(){window.removeEventListener(\"resize\",this.updateRaf,!1)},n.componentDidUpdate=function(){this.update()},n.render=function(){var t,e=this.props,n=e.style,i=e.innerStyle,r=e.pages,a=e.className,o=e.scrolling,s=e.children,l=e.horizontal,u=o?\"scroll\":\"hidden\";return React.createElement(\"div\",{ref:\"container\",onScroll:this.onScroll,onWheel:o?this.scrollStop:null,onTouchStart:o?this.scrollStop:null,style:_extends({position:\"absolute\",width:\"100%\",height:\"100%\",overflow:u,overflowY:l?\"hidden\":u,overflowX:l?u:\"hidden\",WebkitOverflowScrolling:\"touch\",WebkitTransform:\"translate(0,0)\",MsTransform:\"translate(0,0)\",transform:\"translate3d(0,0,0)\"},n),className:a},this.state.ready&&React.createElement(\"div\",{ref:\"content\",style:_extends((t={position:\"absolute\"},t[l?\"height\":\"width\"]=\"100%\",t.WebkitTransform=\"translate(0,0)\",t.MsTransform=\"translate(0,0)\",t.transform=\"translate3d(0,0,0)\",t.overflow=\"hidden\",t[l?\"width\":\"height\"]=this.space*r,t),i)},s))},e}(React.PureComponent);Parallax.defaultProps={config:config.slow,scrolling:!0,horizontal:!1},Parallax.childContextTypes={parallax:PropTypes.object},Parallax.Layer=(_temp=_class=function(t){function e(e,n){var i;i=t.call(this,e,n)||this;var r=n.parallax,a=Math.floor(e.offset)*r.space,o=r.space*e.offset+a*e.speed,s=parseFloat(-r.current*e.speed+o);return i.animatedTranslate=new exports$2.Value(s),i.animatedSpace=new exports$2.Value(r.space*e.factor),i}_inheritsLoose(e,t);var n=e.prototype;return n.componentDidMount=function(){var t=this.context.parallax;t&&(t.layers=t.layers.concat(this),t.update())},n.componentWillUnmount=function(){var t=this,e=this.context.parallax;e&&(e.layers=e.layers.filter(function(e){return e!==t}),e.update())},n.setPosition=function(t,e,n){void 0===n&&(n=!1);var i=this.context.parallax.props.config,r=Math.floor(this.props.offset)*t,a=t*this.props.offset+r*this.props.speed,o=parseFloat(-e*this.props.speed+a);n?this.animatedTranslate.setValue(o):exports$2.spring(this.animatedTranslate,_extends({toValue:o},i)).start()},n.setHeight=function(t,e){void 0===e&&(e=!1);var n=this.context.parallax.props.config,i=parseFloat(t*this.props.factor);e?this.animatedSpace.setValue(i):exports$2.spring(this.animatedSpace,_extends({toValue:i},n)).start()},n.render=function(){var t,e=this.props,n=e.style,i=e.children,r=(e.offset,e.speed,e.factor,e.className),a=_objectWithoutProperties(e,[\"style\",\"children\",\"offset\",\"speed\",\"factor\",\"className\"]),o=this.context.parallax.props.horizontal,s=this.animatedTranslate.interpolate({inputRange:[0,1],outputRange:o?[\"translate3d(0px,0,0)\",\"translate3d(1px,0,0)\"]:[\"translate3d(0,0px,0)\",\"translate3d(0,1px,0)\"]});return React.createElement(animated.div,_extends({},a,{ref:\"layer\",className:r,style:_extends((t={position:\"absolute\",backgroundSize:\"auto\",backgroundRepeat:\"no-repeat\",willChange:\"transform\"},t[o?\"height\":\"width\"]=\"100%\",t[o?\"width\":\"height\"]=this.animatedSpace,t.WebkitTransform=s,t.MsTransform=s,t.transform=s,t),n)}),i)},e}(React.PureComponent),_class.contextTypes={parallax:PropTypes.object},_class.defaultProps={factor:1,offset:0,speed:0},_temp);var _initialiseProps$1=function(){var t=this;this.moveItems=function(){t.layers.forEach(function(e){return e.setPosition(t.space,t.current)}),t.busy=!1},this.scrollerRaf=function(){return requestAnimationFrame(t.moveItems)},this.onScroll=function(e){var n=t.props.horizontal;t.busy||(t.busy=!0,t.scrollerRaf(),t.current=e.target[n?\"scrollLeft\":\"scrollTop\"])},this.update=function(){var e=t.props,n=e.scrolling,i=e.horizontal;t.refs.container&&(t.space=t.refs.container[i?\"clientWidth\":\"clientHeight\"],n?t.current=t.refs.container[i?\"scrollLeft\":\"scrollTop\"]:t.refs.container[i?\"scrollLeft\":\"scrollTop\"]=t.current=t.offset*t.space,t.refs.content&&(t.refs.content.style[i?\"width\":\"height\"]=t.space*t.props.pages+\"px\"),t.layers.forEach(function(e){e.setHeight(t.space,!0),e.setPosition(t.space,t.current,!0)}))},this.updateRaf=function(){requestAnimationFrame(t.update),setTimeout(t.update,150)},this.scrollStop=function(e){return t.animatedScroll&&t.animatedScroll.stopAnimation()}};exports.Spring=Spring,exports.Transition=Transition,exports.Trail=Trail,exports.Parallax=Parallax,exports.config=config,exports.template=template,exports.animated=animated,exports.interpolate=interpolate$1;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-spring/dist/react-spring.js\n// module id = 3\n// module chunks = 0","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/object-assign/index.js\n// module id = 4\n// module chunks = 0","'use strict';\n\nvar asap = require('asap/raw');\n\nfunction noop() {}\n\n// States:\n//\n// 0 - pending\n// 1 - fulfilled with _value\n// 2 - rejected with _value\n// 3 - adopted the state of another promise, _value\n//\n// once the state is no longer pending (0) it is immutable\n\n// All `_` prefixed properties will be reduced to `_{random number}`\n// at build time to obfuscate them and discourage their use.\n// We don't use symbols or Object.defineProperty to fully hide them\n// because the performance isn't good enough.\n\n\n// to avoid using try/catch inside critical functions, we\n// extract them to here.\nvar LAST_ERROR = null;\nvar IS_ERROR = {};\nfunction getThen(obj) {\n  try {\n    return obj.then;\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nfunction tryCallOne(fn, a) {\n  try {\n    return fn(a);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\nfunction tryCallTwo(fn, a, b) {\n  try {\n    fn(a, b);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nmodule.exports = Promise;\n\nfunction Promise(fn) {\n  if (typeof this !== 'object') {\n    throw new TypeError('Promises must be constructed via new');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('Promise constructor\\'s argument is not a function');\n  }\n  this._75 = 0;\n  this._83 = 0;\n  this._18 = null;\n  this._38 = null;\n  if (fn === noop) return;\n  doResolve(fn, this);\n}\nPromise._47 = null;\nPromise._71 = null;\nPromise._44 = noop;\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  if (this.constructor !== Promise) {\n    return safeThen(this, onFulfilled, onRejected);\n  }\n  var res = new Promise(noop);\n  handle(this, new Handler(onFulfilled, onRejected, res));\n  return res;\n};\n\nfunction safeThen(self, onFulfilled, onRejected) {\n  return new self.constructor(function (resolve, reject) {\n    var res = new Promise(noop);\n    res.then(resolve, reject);\n    handle(self, new Handler(onFulfilled, onRejected, res));\n  });\n}\nfunction handle(self, deferred) {\n  while (self._83 === 3) {\n    self = self._18;\n  }\n  if (Promise._47) {\n    Promise._47(self);\n  }\n  if (self._83 === 0) {\n    if (self._75 === 0) {\n      self._75 = 1;\n      self._38 = deferred;\n      return;\n    }\n    if (self._75 === 1) {\n      self._75 = 2;\n      self._38 = [self._38, deferred];\n      return;\n    }\n    self._38.push(deferred);\n    return;\n  }\n  handleResolved(self, deferred);\n}\n\nfunction handleResolved(self, deferred) {\n  asap(function() {\n    var cb = self._83 === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      if (self._83 === 1) {\n        resolve(deferred.promise, self._18);\n      } else {\n        reject(deferred.promise, self._18);\n      }\n      return;\n    }\n    var ret = tryCallOne(cb, self._18);\n    if (ret === IS_ERROR) {\n      reject(deferred.promise, LAST_ERROR);\n    } else {\n      resolve(deferred.promise, ret);\n    }\n  });\n}\nfunction resolve(self, newValue) {\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n  if (newValue === self) {\n    return reject(\n      self,\n      new TypeError('A promise cannot be resolved with itself.')\n    );\n  }\n  if (\n    newValue &&\n    (typeof newValue === 'object' || typeof newValue === 'function')\n  ) {\n    var then = getThen(newValue);\n    if (then === IS_ERROR) {\n      return reject(self, LAST_ERROR);\n    }\n    if (\n      then === self.then &&\n      newValue instanceof Promise\n    ) {\n      self._83 = 3;\n      self._18 = newValue;\n      finale(self);\n      return;\n    } else if (typeof then === 'function') {\n      doResolve(then.bind(newValue), self);\n      return;\n    }\n  }\n  self._83 = 1;\n  self._18 = newValue;\n  finale(self);\n}\n\nfunction reject(self, newValue) {\n  self._83 = 2;\n  self._18 = newValue;\n  if (Promise._71) {\n    Promise._71(self, newValue);\n  }\n  finale(self);\n}\nfunction finale(self) {\n  if (self._75 === 1) {\n    handle(self, self._38);\n    self._38 = null;\n  }\n  if (self._75 === 2) {\n    for (var i = 0; i < self._38.length; i++) {\n      handle(self, self._38[i]);\n    }\n    self._38 = null;\n  }\n}\n\nfunction Handler(onFulfilled, onRejected, promise){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, promise) {\n  var done = false;\n  var res = tryCallTwo(fn, function (value) {\n    if (done) return;\n    done = true;\n    resolve(promise, value);\n  }, function (reason) {\n    if (done) return;\n    done = true;\n    reject(promise, reason);\n  });\n  if (!done && res === IS_ERROR) {\n    done = true;\n    reject(promise, LAST_ERROR);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/promise/lib/core.js\n// module id = 5\n// module chunks = 0","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ')\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = options.status === undefined ? 200 : options.status\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/whatwg-fetch/fetch.js\n// module id = 6\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function validateFormat(format) {};\n\nif (process.env.NODE_ENV !== 'production') {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/invariant.js\n// module id = 7\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar emptyObject = {};\n\nif (process.env.NODE_ENV !== 'production') {\n  Object.freeze(emptyObject);\n}\n\nmodule.exports = emptyObject;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/emptyObject.js\n// module id = 8\n// module chunks = 0","\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/emptyFunction.js\n// module id = 9\n// module chunks = 0","/*\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\nfunction normalizeColor(color) {\n  var match;\n\n  if (typeof color === 'number') {\n    if (color >>> 0 === color && color >= 0 && color <= 0xffffffff) {\n      return color;\n    }\n    return null;\n  }\n\n  // Ordered based on occurrences on Facebook codebase\n  if ((match = matchers.hex6.exec(color))) {\n    return parseInt(match[1] + 'ff', 16) >>> 0;\n  }\n\n  if (names.hasOwnProperty(color)) {\n    return names[color];\n  }\n\n  if ((match = matchers.rgb.exec(color))) {\n    return (\n        parse255(match[1]) << 24 | // r\n        parse255(match[2]) << 16 | // g\n        parse255(match[3]) << 8 | // b\n        0x000000ff // a\n      ) >>> 0;\n  }\n\n  if ((match = matchers.rgba.exec(color))) {\n    return (\n        parse255(match[1]) << 24 | // r\n        parse255(match[2]) << 16 | // g\n        parse255(match[3]) << 8 | // b\n        parse1(match[4]) // a\n      ) >>> 0;\n  }\n\n  if ((match = matchers.hex3.exec(color))) {\n    return parseInt(\n        match[1] + match[1] + // r\n        match[2] + match[2] + // g\n        match[3] + match[3] + // b\n        'ff', // a\n        16\n      ) >>> 0;\n  }\n\n  // https://drafts.csswg.org/css-color-4/#hex-notation\n  if ((match = matchers.hex8.exec(color))) {\n    return parseInt(match[1], 16) >>> 0;\n  }\n\n  if ((match = matchers.hex4.exec(color))) {\n    return parseInt(\n        match[1] + match[1] + // r\n        match[2] + match[2] + // g\n        match[3] + match[3] + // b\n        match[4] + match[4], // a\n        16\n      ) >>> 0;\n  }\n\n  if ((match = matchers.hsl.exec(color))) {\n    return (\n        hslToRgb(\n          parse360(match[1]), // h\n          parsePercentage(match[2]), // s\n          parsePercentage(match[3]) // l\n        ) |\n        0x000000ff // a\n      ) >>> 0;\n  }\n\n  if ((match = matchers.hsla.exec(color))) {\n    return (\n        hslToRgb(\n          parse360(match[1]), // h\n          parsePercentage(match[2]), // s\n          parsePercentage(match[3]) // l\n        ) |\n        parse1(match[4]) // a\n      ) >>> 0;\n  }\n\n  return null;\n}\n\nfunction hue2rgb(p, q, t) {\n  if (t < 0) {\n    t += 1;\n  }\n  if (t > 1) {\n    t -= 1;\n  }\n  if (t < 1 / 6) {\n    return p + (q - p) * 6 * t;\n  }\n  if (t < 1 / 2) {\n    return q;\n  }\n  if (t < 2 / 3) {\n    return p + (q - p) * (2 / 3 - t) * 6;\n  }\n  return p;\n}\n\nfunction hslToRgb(h, s, l) {\n  var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n  var p = 2 * l - q;\n  var r = hue2rgb(p, q, h + 1 / 3);\n  var g = hue2rgb(p, q, h);\n  var b = hue2rgb(p, q, h - 1 / 3);\n\n  return (\n    Math.round(r * 255) << 24 |\n    Math.round(g * 255) << 16 |\n    Math.round(b * 255) << 8\n  );\n}\n\n// var INTEGER = '[-+]?\\\\d+';\nvar NUMBER = '[-+]?\\\\d*\\\\.?\\\\d+';\nvar PERCENTAGE = NUMBER + '%';\n\nfunction toArray(arrayLike) {\n  return Array.prototype.slice.call(arrayLike, 0);\n}\n\nfunction call() {\n  return '\\\\(\\\\s*(' + toArray(arguments).join(')\\\\s*,\\\\s*(') + ')\\\\s*\\\\)';\n}\n\nvar matchers = {\n  rgb: new RegExp('rgb' + call(NUMBER, NUMBER, NUMBER)),\n  rgba: new RegExp('rgba' + call(NUMBER, NUMBER, NUMBER, NUMBER)),\n  hsl: new RegExp('hsl' + call(NUMBER, PERCENTAGE, PERCENTAGE)),\n  hsla: new RegExp('hsla' + call(NUMBER, PERCENTAGE, PERCENTAGE, NUMBER)),\n  hex3: /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n  hex4: /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n  hex6: /^#([0-9a-fA-F]{6})$/,\n  hex8: /^#([0-9a-fA-F]{8})$/,\n};\n\nfunction parse255(str) {\n  var int = parseInt(str, 10);\n  if (int < 0) {\n    return 0;\n  }\n  if (int > 255) {\n    return 255;\n  }\n  return int;\n}\n\nfunction parse360(str) {\n  var int = parseFloat(str);\n  return (((int % 360) + 360) % 360) / 360;\n}\n\nfunction parse1(str) {\n  var num = parseFloat(str);\n  if (num < 0) {\n    return 0;\n  }\n  if (num > 1) {\n    return 255;\n  }\n  return Math.round(num * 255);\n}\n\nfunction parsePercentage(str) {\n  // parseFloat conveniently ignores the final %\n  var int = parseFloat(str, 10);\n  if (int < 0) {\n    return 0;\n  }\n  if (int > 100) {\n    return 1;\n  }\n  return int / 100;\n}\n\nvar names = {\n  transparent: 0x00000000,\n\n  // http://www.w3.org/TR/css3-color/#svg-color\n  aliceblue: 0xf0f8ffff,\n  antiquewhite: 0xfaebd7ff,\n  aqua: 0x00ffffff,\n  aquamarine: 0x7fffd4ff,\n  azure: 0xf0ffffff,\n  beige: 0xf5f5dcff,\n  bisque: 0xffe4c4ff,\n  black: 0x000000ff,\n  blanchedalmond: 0xffebcdff,\n  blue: 0x0000ffff,\n  blueviolet: 0x8a2be2ff,\n  brown: 0xa52a2aff,\n  burlywood: 0xdeb887ff,\n  burntsienna: 0xea7e5dff,\n  cadetblue: 0x5f9ea0ff,\n  chartreuse: 0x7fff00ff,\n  chocolate: 0xd2691eff,\n  coral: 0xff7f50ff,\n  cornflowerblue: 0x6495edff,\n  cornsilk: 0xfff8dcff,\n  crimson: 0xdc143cff,\n  cyan: 0x00ffffff,\n  darkblue: 0x00008bff,\n  darkcyan: 0x008b8bff,\n  darkgoldenrod: 0xb8860bff,\n  darkgray: 0xa9a9a9ff,\n  darkgreen: 0x006400ff,\n  darkgrey: 0xa9a9a9ff,\n  darkkhaki: 0xbdb76bff,\n  darkmagenta: 0x8b008bff,\n  darkolivegreen: 0x556b2fff,\n  darkorange: 0xff8c00ff,\n  darkorchid: 0x9932ccff,\n  darkred: 0x8b0000ff,\n  darksalmon: 0xe9967aff,\n  darkseagreen: 0x8fbc8fff,\n  darkslateblue: 0x483d8bff,\n  darkslategray: 0x2f4f4fff,\n  darkslategrey: 0x2f4f4fff,\n  darkturquoise: 0x00ced1ff,\n  darkviolet: 0x9400d3ff,\n  deeppink: 0xff1493ff,\n  deepskyblue: 0x00bfffff,\n  dimgray: 0x696969ff,\n  dimgrey: 0x696969ff,\n  dodgerblue: 0x1e90ffff,\n  firebrick: 0xb22222ff,\n  floralwhite: 0xfffaf0ff,\n  forestgreen: 0x228b22ff,\n  fuchsia: 0xff00ffff,\n  gainsboro: 0xdcdcdcff,\n  ghostwhite: 0xf8f8ffff,\n  gold: 0xffd700ff,\n  goldenrod: 0xdaa520ff,\n  gray: 0x808080ff,\n  green: 0x008000ff,\n  greenyellow: 0xadff2fff,\n  grey: 0x808080ff,\n  honeydew: 0xf0fff0ff,\n  hotpink: 0xff69b4ff,\n  indianred: 0xcd5c5cff,\n  indigo: 0x4b0082ff,\n  ivory: 0xfffff0ff,\n  khaki: 0xf0e68cff,\n  lavender: 0xe6e6faff,\n  lavenderblush: 0xfff0f5ff,\n  lawngreen: 0x7cfc00ff,\n  lemonchiffon: 0xfffacdff,\n  lightblue: 0xadd8e6ff,\n  lightcoral: 0xf08080ff,\n  lightcyan: 0xe0ffffff,\n  lightgoldenrodyellow: 0xfafad2ff,\n  lightgray: 0xd3d3d3ff,\n  lightgreen: 0x90ee90ff,\n  lightgrey: 0xd3d3d3ff,\n  lightpink: 0xffb6c1ff,\n  lightsalmon: 0xffa07aff,\n  lightseagreen: 0x20b2aaff,\n  lightskyblue: 0x87cefaff,\n  lightslategray: 0x778899ff,\n  lightslategrey: 0x778899ff,\n  lightsteelblue: 0xb0c4deff,\n  lightyellow: 0xffffe0ff,\n  lime: 0x00ff00ff,\n  limegreen: 0x32cd32ff,\n  linen: 0xfaf0e6ff,\n  magenta: 0xff00ffff,\n  maroon: 0x800000ff,\n  mediumaquamarine: 0x66cdaaff,\n  mediumblue: 0x0000cdff,\n  mediumorchid: 0xba55d3ff,\n  mediumpurple: 0x9370dbff,\n  mediumseagreen: 0x3cb371ff,\n  mediumslateblue: 0x7b68eeff,\n  mediumspringgreen: 0x00fa9aff,\n  mediumturquoise: 0x48d1ccff,\n  mediumvioletred: 0xc71585ff,\n  midnightblue: 0x191970ff,\n  mintcream: 0xf5fffaff,\n  mistyrose: 0xffe4e1ff,\n  moccasin: 0xffe4b5ff,\n  navajowhite: 0xffdeadff,\n  navy: 0x000080ff,\n  oldlace: 0xfdf5e6ff,\n  olive: 0x808000ff,\n  olivedrab: 0x6b8e23ff,\n  orange: 0xffa500ff,\n  orangered: 0xff4500ff,\n  orchid: 0xda70d6ff,\n  palegoldenrod: 0xeee8aaff,\n  palegreen: 0x98fb98ff,\n  paleturquoise: 0xafeeeeff,\n  palevioletred: 0xdb7093ff,\n  papayawhip: 0xffefd5ff,\n  peachpuff: 0xffdab9ff,\n  peru: 0xcd853fff,\n  pink: 0xffc0cbff,\n  plum: 0xdda0ddff,\n  powderblue: 0xb0e0e6ff,\n  purple: 0x800080ff,\n  rebeccapurple: 0x663399ff,\n  red: 0xff0000ff,\n  rosybrown: 0xbc8f8fff,\n  royalblue: 0x4169e1ff,\n  saddlebrown: 0x8b4513ff,\n  salmon: 0xfa8072ff,\n  sandybrown: 0xf4a460ff,\n  seagreen: 0x2e8b57ff,\n  seashell: 0xfff5eeff,\n  sienna: 0xa0522dff,\n  silver: 0xc0c0c0ff,\n  skyblue: 0x87ceebff,\n  slateblue: 0x6a5acdff,\n  slategray: 0x708090ff,\n  slategrey: 0x708090ff,\n  snow: 0xfffafaff,\n  springgreen: 0x00ff7fff,\n  steelblue: 0x4682b4ff,\n  tan: 0xd2b48cff,\n  teal: 0x008080ff,\n  thistle: 0xd8bfd8ff,\n  tomato: 0xff6347ff,\n  turquoise: 0x40e0d0ff,\n  violet: 0xee82eeff,\n  wheat: 0xf5deb3ff,\n  white: 0xffffffff,\n  whitesmoke: 0xf5f5f5ff,\n  yellow: 0xffff00ff,\n  yellowgreen: 0x9acd32ff,\n};\n\nfunction rgba(colorInt) {\n  var r = Math.round(((colorInt & 0xff000000) >>> 24));\n  var g = Math.round(((colorInt & 0x00ff0000) >>> 16));\n  var b = Math.round(((colorInt & 0x0000ff00) >>> 8));\n  var a = ((colorInt & 0x000000ff) >>> 0) / 255;\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a,\n  };\n};\n\nnormalizeColor.rgba = rgba;\n\nmodule.exports = normalizeColor;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/normalize-css-color/index.js\n// module id = 10\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/prop-types/index.js\n// module id = 11\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/process/browser.js\n// module id = 12\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar util = require('@firebase/util');\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar contains = function (obj, key) {\r\n    return Object.prototype.hasOwnProperty.call(obj, key);\r\n};\r\nvar DEFAULT_ENTRY_NAME = '[DEFAULT]';\r\n// An array to capture listeners before the true auth functions\r\n// exist\r\nvar tokenListeners = [];\r\n/**\r\n * Global context object for a collection of services using\r\n * a shared authentication state.\r\n */\r\nvar FirebaseAppImpl = /** @class */ (function () {\r\n    function FirebaseAppImpl(options, config, firebase_) {\r\n        this.firebase_ = firebase_;\r\n        this.isDeleted_ = false;\r\n        this.services_ = {};\r\n        this.name_ = config.name;\r\n        this._automaticDataCollectionEnabled =\r\n            config.automaticDataCollectionEnabled || false;\r\n        this.options_ = util.deepCopy(options);\r\n        this.INTERNAL = {\r\n            getUid: function () { return null; },\r\n            getToken: function () { return Promise.resolve(null); },\r\n            addAuthTokenListener: function (callback) {\r\n                tokenListeners.push(callback);\r\n                // Make sure callback is called, asynchronously, in the absence of the auth module\r\n                setTimeout(function () { return callback(null); }, 0);\r\n            },\r\n            removeAuthTokenListener: function (callback) {\r\n                tokenListeners = tokenListeners.filter(function (listener) { return listener !== callback; });\r\n            }\r\n        };\r\n    }\r\n    Object.defineProperty(FirebaseAppImpl.prototype, \"automaticDataCollectionEnabled\", {\r\n        get: function () {\r\n            this.checkDestroyed_();\r\n            return this._automaticDataCollectionEnabled;\r\n        },\r\n        set: function (val) {\r\n            this.checkDestroyed_();\r\n            this._automaticDataCollectionEnabled = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseAppImpl.prototype, \"name\", {\r\n        get: function () {\r\n            this.checkDestroyed_();\r\n            return this.name_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseAppImpl.prototype, \"options\", {\r\n        get: function () {\r\n            this.checkDestroyed_();\r\n            return this.options_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FirebaseAppImpl.prototype.delete = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            _this.checkDestroyed_();\r\n            resolve();\r\n        })\r\n            .then(function () {\r\n            _this.firebase_.INTERNAL.removeApp(_this.name_);\r\n            var services = [];\r\n            Object.keys(_this.services_).forEach(function (serviceKey) {\r\n                Object.keys(_this.services_[serviceKey]).forEach(function (instanceKey) {\r\n                    services.push(_this.services_[serviceKey][instanceKey]);\r\n                });\r\n            });\r\n            return Promise.all(services.map(function (service) {\r\n                return service.INTERNAL.delete();\r\n            }));\r\n        })\r\n            .then(function () {\r\n            _this.isDeleted_ = true;\r\n            _this.services_ = {};\r\n        });\r\n    };\r\n    /**\r\n     * Return a service instance associated with this app (creating it\r\n     * on demand), identified by the passed instanceIdentifier.\r\n     *\r\n     * NOTE: Currently storage is the only one that is leveraging this\r\n     * functionality. They invoke it by calling:\r\n     *\r\n     * ```javascript\r\n     * firebase.app().storage('STORAGE BUCKET ID')\r\n     * ```\r\n     *\r\n     * The service name is passed to this already\r\n     * @internal\r\n     */\r\n    FirebaseAppImpl.prototype._getService = function (name, instanceIdentifier) {\r\n        if (instanceIdentifier === void 0) { instanceIdentifier = DEFAULT_ENTRY_NAME; }\r\n        this.checkDestroyed_();\r\n        if (!this.services_[name]) {\r\n            this.services_[name] = {};\r\n        }\r\n        if (!this.services_[name][instanceIdentifier]) {\r\n            /**\r\n             * If a custom instance has been defined (i.e. not '[DEFAULT]')\r\n             * then we will pass that instance on, otherwise we pass `null`\r\n             */\r\n            var instanceSpecifier = instanceIdentifier !== DEFAULT_ENTRY_NAME\r\n                ? instanceIdentifier\r\n                : undefined;\r\n            var service = this.firebase_.INTERNAL.factories[name](this, this.extendApp.bind(this), instanceSpecifier);\r\n            this.services_[name][instanceIdentifier] = service;\r\n        }\r\n        return this.services_[name][instanceIdentifier];\r\n    };\r\n    /**\r\n     * Callback function used to extend an App instance at the time\r\n     * of service instance creation.\r\n     */\r\n    FirebaseAppImpl.prototype.extendApp = function (props) {\r\n        var _this = this;\r\n        // Copy the object onto the FirebaseAppImpl prototype\r\n        util.deepExtend(this, props);\r\n        /**\r\n         * If the app has overwritten the addAuthTokenListener stub, forward\r\n         * the active token listeners on to the true fxn.\r\n         *\r\n         * TODO: This function is required due to our current module\r\n         * structure. Once we are able to rely strictly upon a single module\r\n         * implementation, this code should be refactored and Auth should\r\n         * provide these stubs and the upgrade logic\r\n         */\r\n        if (props.INTERNAL && props.INTERNAL.addAuthTokenListener) {\r\n            tokenListeners.forEach(function (listener) {\r\n                _this.INTERNAL.addAuthTokenListener(listener);\r\n            });\r\n            tokenListeners = [];\r\n        }\r\n    };\r\n    /**\r\n     * This function will throw an Error if the App has already been deleted -\r\n     * use before performing API actions on the App.\r\n     */\r\n    FirebaseAppImpl.prototype.checkDestroyed_ = function () {\r\n        if (this.isDeleted_) {\r\n            error('app-deleted', { name: this.name_ });\r\n        }\r\n    };\r\n    return FirebaseAppImpl;\r\n}());\r\n// Prevent dead-code elimination of these methods w/o invalid property\r\n// copying.\r\n(FirebaseAppImpl.prototype.name && FirebaseAppImpl.prototype.options) ||\r\n    FirebaseAppImpl.prototype.delete ||\r\n    console.log('dc');\r\n/**\r\n * Return a firebase namespace object.\r\n *\r\n * In production, this will be called exactly once and the result\r\n * assigned to the 'firebase' global.  It may be called multiple times\r\n * in unit tests.\r\n */\r\nfunction createFirebaseNamespace() {\r\n    var apps_ = {};\r\n    var factories = {};\r\n    var appHooks = {};\r\n    // A namespace is a plain JavaScript Object.\r\n    var namespace = {\r\n        // Hack to prevent Babel from modifying the object returned\r\n        // as the firebase namespace.\r\n        __esModule: true,\r\n        initializeApp: initializeApp,\r\n        app: app,\r\n        apps: null,\r\n        Promise: Promise,\r\n        SDK_VERSION: '5.0.4',\r\n        INTERNAL: {\r\n            registerService: registerService,\r\n            createFirebaseNamespace: createFirebaseNamespace,\r\n            extendNamespace: extendNamespace,\r\n            createSubscribe: util.createSubscribe,\r\n            ErrorFactory: util.ErrorFactory,\r\n            removeApp: removeApp,\r\n            factories: factories,\r\n            useAsService: useAsService,\r\n            Promise: Promise,\r\n            deepExtend: util.deepExtend\r\n        }\r\n    };\r\n    // Inject a circular default export to allow Babel users who were previously\r\n    // using:\r\n    //\r\n    //   import firebase from 'firebase';\r\n    //   which becomes: var firebase = require('firebase').default;\r\n    //\r\n    // instead of\r\n    //\r\n    //   import * as firebase from 'firebase';\r\n    //   which becomes: var firebase = require('firebase');\r\n    util.patchProperty(namespace, 'default', namespace);\r\n    // firebase.apps is a read-only getter.\r\n    Object.defineProperty(namespace, 'apps', {\r\n        get: getApps\r\n    });\r\n    /**\r\n     * Called by App.delete() - but before any services associated with the App\r\n     * are deleted.\r\n     */\r\n    function removeApp(name) {\r\n        var app = apps_[name];\r\n        callAppHooks(app, 'delete');\r\n        delete apps_[name];\r\n    }\r\n    /**\r\n     * Get the App object for a given name (or DEFAULT).\r\n     */\r\n    function app(name) {\r\n        name = name || DEFAULT_ENTRY_NAME;\r\n        if (!contains(apps_, name)) {\r\n            error('no-app', { name: name });\r\n        }\r\n        return apps_[name];\r\n    }\r\n    util.patchProperty(app, 'App', FirebaseAppImpl);\r\n    function initializeApp(options, rawConfig) {\r\n        if (rawConfig === void 0) { rawConfig = {}; }\r\n        if (typeof rawConfig !== 'object' || rawConfig === null) {\r\n            var name_1 = rawConfig;\r\n            rawConfig = { name: name_1 };\r\n        }\r\n        var config = rawConfig;\r\n        if (config.name === undefined) {\r\n            config.name = DEFAULT_ENTRY_NAME;\r\n        }\r\n        var name = config.name;\r\n        if (typeof name !== 'string' || !name) {\r\n            error('bad-app-name', { name: name + '' });\r\n        }\r\n        if (contains(apps_, name)) {\r\n            error('duplicate-app', { name: name });\r\n        }\r\n        var app = new FirebaseAppImpl(options, config, namespace);\r\n        apps_[name] = app;\r\n        callAppHooks(app, 'create');\r\n        return app;\r\n    }\r\n    /*\r\n     * Return an array of all the non-deleted FirebaseApps.\r\n     */\r\n    function getApps() {\r\n        // Make a copy so caller cannot mutate the apps list.\r\n        return Object.keys(apps_).map(function (name) { return apps_[name]; });\r\n    }\r\n    /*\r\n     * Register a Firebase Service.\r\n     *\r\n     * firebase.INTERNAL.registerService()\r\n     *\r\n     * TODO: Implement serviceProperties.\r\n     */\r\n    function registerService(name, createService, serviceProperties, appHook, allowMultipleInstances) {\r\n        // Cannot re-register a service that already exists\r\n        if (factories[name]) {\r\n            error('duplicate-service', { name: name });\r\n        }\r\n        // Capture the service factory for later service instantiation\r\n        factories[name] = createService;\r\n        // Capture the appHook, if passed\r\n        if (appHook) {\r\n            appHooks[name] = appHook;\r\n            // Run the **new** app hook on all existing apps\r\n            getApps().forEach(function (app) {\r\n                appHook('create', app);\r\n            });\r\n        }\r\n        // The Service namespace is an accessor function ...\r\n        var serviceNamespace = function (appArg) {\r\n            if (appArg === void 0) { appArg = app(); }\r\n            if (typeof appArg[name] !== 'function') {\r\n                // Invalid argument.\r\n                // This happens in the following case: firebase.storage('gs:/')\r\n                error('invalid-app-argument', { name: name });\r\n            }\r\n            // Forward service instance lookup to the FirebaseApp.\r\n            return appArg[name]();\r\n        };\r\n        // ... and a container for service-level properties.\r\n        if (serviceProperties !== undefined) {\r\n            util.deepExtend(serviceNamespace, serviceProperties);\r\n        }\r\n        // Monkey-patch the serviceNamespace onto the firebase namespace\r\n        namespace[name] = serviceNamespace;\r\n        // Patch the FirebaseAppImpl prototype\r\n        FirebaseAppImpl.prototype[name] = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            var serviceFxn = this._getService.bind(this, name);\r\n            return serviceFxn.apply(this, allowMultipleInstances ? args : []);\r\n        };\r\n        return serviceNamespace;\r\n    }\r\n    /**\r\n     * Patch the top-level firebase namespace with additional properties.\r\n     *\r\n     * firebase.INTERNAL.extendNamespace()\r\n     */\r\n    function extendNamespace(props) {\r\n        util.deepExtend(namespace, props);\r\n    }\r\n    function callAppHooks(app, eventName) {\r\n        Object.keys(factories).forEach(function (serviceName) {\r\n            // Ignore virtual services\r\n            var factoryName = useAsService(app, serviceName);\r\n            if (factoryName === null) {\r\n                return;\r\n            }\r\n            if (appHooks[factoryName]) {\r\n                appHooks[factoryName](eventName, app);\r\n            }\r\n        });\r\n    }\r\n    // Map the requested service to a registered service name\r\n    // (used to map auth to serverAuth service when needed).\r\n    function useAsService(app, name) {\r\n        if (name === 'serverAuth') {\r\n            return null;\r\n        }\r\n        var useService = name;\r\n        var options = app.options;\r\n        return useService;\r\n    }\r\n    return namespace;\r\n}\r\nfunction error(code, args) {\r\n    throw appErrors.create(code, args);\r\n}\r\n// TypeScript does not support non-string indexes!\r\n// let errors: {[code: AppError: string} = {\r\nvar errors = {\r\n    'no-app': \"No Firebase App '{$name}' has been created - \" +\r\n        'call Firebase App.initializeApp()',\r\n    'bad-app-name': \"Illegal App name: '{$name}\",\r\n    'duplicate-app': \"Firebase App named '{$name}' already exists\",\r\n    'app-deleted': \"Firebase App named '{$name}' already deleted\",\r\n    'duplicate-service': \"Firebase service named '{$name}' already registered\",\r\n    'sa-not-supported': 'Initializing the Firebase SDK with a service ' +\r\n        'account is only allowed in a Node.js environment. On client ' +\r\n        'devices, you should instead initialize the SDK with an api key and ' +\r\n        'auth domain',\r\n    'invalid-app-argument': 'firebase.{$name}() takes either no argument or a ' +\r\n        'Firebase App instance.'\r\n};\r\nvar appErrors = new util.ErrorFactory('app', 'Firebase', errors);\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar firebase = createFirebaseNamespace();\n\nexports.firebase = firebase;\nexports.default = firebase;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/app/dist/index.cjs.js\n// module id = 13\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar tslib_1 = require('tslib');\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\r\n */\r\nvar CONSTANTS = {\r\n    /**\r\n     * @define {boolean} Whether this is the client Node.js SDK.\r\n     */\r\n    NODE_CLIENT: false,\r\n    /**\r\n     * @define {boolean} Whether this is the Admin Node.js SDK.\r\n     */\r\n    NODE_ADMIN: false,\r\n    /**\r\n     * Firebase SDK Version\r\n     */\r\n    SDK_VERSION: '${JSCORE_VERSION}'\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Throws an error if the provided assertion is falsy\r\n * @param {*} assertion The assertion to be tested for falsiness\r\n * @param {!string} message The message to display if the check fails\r\n */\r\nvar assert = function (assertion, message) {\r\n    if (!assertion) {\r\n        throw assertionError(message);\r\n    }\r\n};\r\n/**\r\n * Returns an Error object suitable for throwing.\r\n * @param {string} message\r\n * @return {!Error}\r\n */\r\nvar assertionError = function (message) {\r\n    return new Error('Firebase Database (' +\r\n        CONSTANTS.SDK_VERSION +\r\n        ') INTERNAL ASSERT FAILED: ' +\r\n        message);\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar stringToByteArray = function (str) {\r\n    // TODO(user): Use native implementations if/when available\r\n    var out = [], p = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n        var c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if ((c & 0xfc00) == 0xd800 &&\r\n            i + 1 < str.length &&\r\n            (str.charCodeAt(i + 1) & 0xfc00) == 0xdc00) {\r\n            // Surrogate Pair\r\n            c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Turns an array of numbers into the string given by the concatenation of the\r\n * characters to which the numbers correspond.\r\n * @param {Array<number>} bytes Array of numbers representing characters.\r\n * @return {string} Stringification of the array.\r\n */\r\nvar byteArrayToString = function (bytes) {\r\n    // TODO(user): Use native implementations if/when available\r\n    var out = [], pos = 0, c = 0;\r\n    while (pos < bytes.length) {\r\n        var c1 = bytes[pos++];\r\n        if (c1 < 128) {\r\n            out[c++] = String.fromCharCode(c1);\r\n        }\r\n        else if (c1 > 191 && c1 < 224) {\r\n            var c2 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\r\n        }\r\n        else if (c1 > 239 && c1 < 365) {\r\n            // Surrogate Pair\r\n            var c2 = bytes[pos++];\r\n            var c3 = bytes[pos++];\r\n            var c4 = bytes[pos++];\r\n            var u = (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\r\n                0x10000;\r\n            out[c++] = String.fromCharCode(0xd800 + (u >> 10));\r\n            out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\r\n        }\r\n        else {\r\n            var c2 = bytes[pos++];\r\n            var c3 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\r\n        }\r\n    }\r\n    return out.join('');\r\n};\r\n// Static lookup maps, lazily populated by init_()\r\nvar base64 = {\r\n    /**\r\n     * Maps bytes to characters.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    byteToCharMap_: null,\r\n    /**\r\n     * Maps characters to bytes.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    charToByteMap_: null,\r\n    /**\r\n     * Maps bytes to websafe characters.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    byteToCharMapWebSafe_: null,\r\n    /**\r\n     * Maps websafe characters to bytes.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    charToByteMapWebSafe_: null,\r\n    /**\r\n     * Our default alphabet, shared between\r\n     * ENCODED_VALS and ENCODED_VALS_WEBSAFE\r\n     * @type {string}\r\n     */\r\n    ENCODED_VALS_BASE: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\r\n    /**\r\n     * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\r\n     * @type {string}\r\n     */\r\n    get ENCODED_VALS() {\r\n        return this.ENCODED_VALS_BASE + '+/=';\r\n    },\r\n    /**\r\n     * Our websafe alphabet.\r\n     * @type {string}\r\n     */\r\n    get ENCODED_VALS_WEBSAFE() {\r\n        return this.ENCODED_VALS_BASE + '-_.';\r\n    },\r\n    /**\r\n     * Whether this browser supports the atob and btoa functions. This extension\r\n     * started at Mozilla but is now implemented by many browsers. We use the\r\n     * ASSUME_* variables to avoid pulling in the full useragent detection library\r\n     * but still allowing the standard per-browser compilations.\r\n     *\r\n     * @type {boolean}\r\n     */\r\n    HAS_NATIVE_SUPPORT: typeof atob === 'function',\r\n    /**\r\n     * Base64-encode an array of bytes.\r\n     *\r\n     * @param {Array<number>|Uint8Array} input An array of bytes (numbers with\r\n     *     value in [0, 255]) to encode.\r\n     * @param {boolean=} opt_webSafe Boolean indicating we should use the\r\n     *     alternative alphabet.\r\n     * @return {string} The base64 encoded string.\r\n     */\r\n    encodeByteArray: function (input, opt_webSafe) {\r\n        if (!Array.isArray(input)) {\r\n            throw Error('encodeByteArray takes an array as a parameter');\r\n        }\r\n        this.init_();\r\n        var byteToCharMap = opt_webSafe\r\n            ? this.byteToCharMapWebSafe_\r\n            : this.byteToCharMap_;\r\n        var output = [];\r\n        for (var i = 0; i < input.length; i += 3) {\r\n            var byte1 = input[i];\r\n            var haveByte2 = i + 1 < input.length;\r\n            var byte2 = haveByte2 ? input[i + 1] : 0;\r\n            var haveByte3 = i + 2 < input.length;\r\n            var byte3 = haveByte3 ? input[i + 2] : 0;\r\n            var outByte1 = byte1 >> 2;\r\n            var outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\r\n            var outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\r\n            var outByte4 = byte3 & 0x3f;\r\n            if (!haveByte3) {\r\n                outByte4 = 64;\r\n                if (!haveByte2) {\r\n                    outByte3 = 64;\r\n                }\r\n            }\r\n            output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);\r\n        }\r\n        return output.join('');\r\n    },\r\n    /**\r\n     * Base64-encode a string.\r\n     *\r\n     * @param {string} input A string to encode.\r\n     * @param {boolean=} opt_webSafe If true, we should use the\r\n     *     alternative alphabet.\r\n     * @return {string} The base64 encoded string.\r\n     */\r\n    encodeString: function (input, opt_webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !opt_webSafe) {\r\n            return btoa(input);\r\n        }\r\n        return this.encodeByteArray(stringToByteArray(input), opt_webSafe);\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * @param {string} input to decode.\r\n     * @param {boolean=} opt_webSafe True if we should use the\r\n     *     alternative alphabet.\r\n     * @return {string} string representing the decoded value.\r\n     */\r\n    decodeString: function (input, opt_webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !opt_webSafe) {\r\n            return atob(input);\r\n        }\r\n        return byteArrayToString(this.decodeStringToByteArray(input, opt_webSafe));\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * In base-64 decoding, groups of four characters are converted into three\r\n     * bytes.  If the encoder did not apply padding, the input length may not\r\n     * be a multiple of 4.\r\n     *\r\n     * In this case, the last group will have fewer than 4 characters, and\r\n     * padding will be inferred.  If the group has one or two characters, it decodes\r\n     * to one byte.  If the group has three characters, it decodes to two bytes.\r\n     *\r\n     * @param {string} input Input to decode.\r\n     * @param {boolean=} opt_webSafe True if we should use the web-safe alphabet.\r\n     * @return {!Array<number>} bytes representing the decoded value.\r\n     */\r\n    decodeStringToByteArray: function (input, opt_webSafe) {\r\n        this.init_();\r\n        var charToByteMap = opt_webSafe\r\n            ? this.charToByteMapWebSafe_\r\n            : this.charToByteMap_;\r\n        var output = [];\r\n        for (var i = 0; i < input.length;) {\r\n            var byte1 = charToByteMap[input.charAt(i++)];\r\n            var haveByte2 = i < input.length;\r\n            var byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\r\n            ++i;\r\n            var haveByte3 = i < input.length;\r\n            var byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            var haveByte4 = i < input.length;\r\n            var byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\r\n                throw Error();\r\n            }\r\n            var outByte1 = (byte1 << 2) | (byte2 >> 4);\r\n            output.push(outByte1);\r\n            if (byte3 != 64) {\r\n                var outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\r\n                output.push(outByte2);\r\n                if (byte4 != 64) {\r\n                    var outByte3 = ((byte3 << 6) & 0xc0) | byte4;\r\n                    output.push(outByte3);\r\n                }\r\n            }\r\n        }\r\n        return output;\r\n    },\r\n    /**\r\n     * Lazy static initialization function. Called before\r\n     * accessing any of the static map variables.\r\n     * @private\r\n     */\r\n    init_: function () {\r\n        if (!this.byteToCharMap_) {\r\n            this.byteToCharMap_ = {};\r\n            this.charToByteMap_ = {};\r\n            this.byteToCharMapWebSafe_ = {};\r\n            this.charToByteMapWebSafe_ = {};\r\n            // We want quick mappings back and forth, so we precompute two maps.\r\n            for (var i = 0; i < this.ENCODED_VALS.length; i++) {\r\n                this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\r\n                this.charToByteMap_[this.byteToCharMap_[i]] = i;\r\n                this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\r\n                this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\r\n                // Be forgiving when decoding and correctly decode both encodings.\r\n                if (i >= this.ENCODED_VALS_BASE.length) {\r\n                    this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\r\n                    this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n/**\r\n * URL-safe base64 encoding\r\n * @param {!string} str\r\n * @return {!string}\r\n */\r\nvar base64Encode = function (str) {\r\n    var utf8Bytes = stringToByteArray(str);\r\n    return base64.encodeByteArray(utf8Bytes, true);\r\n};\r\n/**\r\n * URL-safe base64 decoding\r\n *\r\n * NOTE: DO NOT use the global atob() function - it does NOT support the\r\n * base64Url variant encoding.\r\n *\r\n * @param {string} str To be decoded\r\n * @return {?string} Decoded result, if possible\r\n */\r\nvar base64Decode = function (str) {\r\n    try {\r\n        return base64.decodeString(str, true);\r\n    }\r\n    catch (e) {\r\n        console.error('base64Decode failed: ', e);\r\n    }\r\n    return null;\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Do a deep-copy of basic JavaScript Objects or Arrays.\r\n */\r\nfunction deepCopy(value) {\r\n    return deepExtend(undefined, value);\r\n}\r\n/**\r\n * Copy properties from source to target (recursively allows extension\r\n * of Objects and Arrays).  Scalar values in the target are over-written.\r\n * If target is undefined, an object of the appropriate type will be created\r\n * (and returned).\r\n *\r\n * We recursively copy all child properties of plain Objects in the source- so\r\n * that namespace- like dictionaries are merged.\r\n *\r\n * Note that the target can be a function, in which case the properties in\r\n * the source Object are copied onto it as static properties of the Function.\r\n */\r\nfunction deepExtend(target, source) {\r\n    if (!(source instanceof Object)) {\r\n        return source;\r\n    }\r\n    switch (source.constructor) {\r\n        case Date:\r\n            // Treat Dates like scalars; if the target date object had any child\r\n            // properties - they will be lost!\r\n            var dateValue = source;\r\n            return new Date(dateValue.getTime());\r\n        case Object:\r\n            if (target === undefined) {\r\n                target = {};\r\n            }\r\n            break;\r\n        case Array:\r\n            // Always copy the array source and overwrite the target.\r\n            target = [];\r\n            break;\r\n        default:\r\n            // Not a plain Object - treat it as a scalar.\r\n            return source;\r\n    }\r\n    for (var prop in source) {\r\n        if (!source.hasOwnProperty(prop)) {\r\n            continue;\r\n        }\r\n        target[prop] = deepExtend(target[prop], source[prop]);\r\n    }\r\n    return target;\r\n}\r\n// TODO: Really needed (for JSCompiler type checking)?\r\nfunction patchProperty(obj, prop, value) {\r\n    obj[prop] = value;\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Deferred = /** @class */ (function () {\r\n    function Deferred() {\r\n        var _this = this;\r\n        this.promise = new Promise(function (resolve, reject) {\r\n            _this.resolve = resolve;\r\n            _this.reject = reject;\r\n        });\r\n    }\r\n    /**\r\n     * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\r\n     * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\r\n     * and returns a node-style callback which will resolve or reject the Deferred's promise.\r\n     * @param {((?function(?(Error)): (?|undefined))| (?function(?(Error),?=): (?|undefined)))=} callback\r\n     * @return {!function(?(Error), ?=)}\r\n     */\r\n    Deferred.prototype.wrapCallback = function (callback) {\r\n        var _this = this;\r\n        return function (error, value) {\r\n            if (error) {\r\n                _this.reject(error);\r\n            }\r\n            else {\r\n                _this.resolve(value);\r\n            }\r\n            if (typeof callback === 'function') {\r\n                // Attaching noop handler just in case developer wasn't expecting\r\n                // promises\r\n                _this.promise.catch(function () { });\r\n                // Some of our callbacks don't expect a value and our own tests\r\n                // assert that the parameter length is 1\r\n                if (callback.length === 1) {\r\n                    callback(error);\r\n                }\r\n                else {\r\n                    callback(error, value);\r\n                }\r\n            }\r\n        };\r\n    };\r\n    return Deferred;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns navigator.userAgent string or '' if it's not defined.\r\n * @return {string} user agent string\r\n */\r\nvar getUA = function () {\r\n    if (typeof navigator !== 'undefined' &&\r\n        typeof navigator['userAgent'] === 'string') {\r\n        return navigator['userAgent'];\r\n    }\r\n    else {\r\n        return '';\r\n    }\r\n};\r\n/**\r\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\r\n *\r\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap in the Ripple emulator) nor\r\n * Cordova `onDeviceReady`, which would normally wait for a callback.\r\n *\r\n * @return {boolean} isMobileCordova\r\n */\r\nvar isMobileCordova = function () {\r\n    return (typeof window !== 'undefined' &&\r\n        !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\r\n        /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA()));\r\n};\r\n/**\r\n * Detect React Native.\r\n *\r\n * @return {boolean} True if ReactNative environment is detected.\r\n */\r\nvar isReactNative = function () {\r\n    return (typeof navigator === 'object' && navigator['product'] === 'ReactNative');\r\n};\r\n/**\r\n * Detect Node.js.\r\n *\r\n * @return {boolean} True if Node.js environment is detected.\r\n */\r\nvar isNodeSdk = function () {\r\n    return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\r\n};\n\nvar ERROR_NAME = 'FirebaseError';\r\nvar captureStackTrace = Error\r\n    .captureStackTrace;\r\n// Export for faking in tests\r\nfunction patchCapture(captureFake) {\r\n    var result = captureStackTrace;\r\n    captureStackTrace = captureFake;\r\n    return result;\r\n}\r\nvar FirebaseError = /** @class */ (function () {\r\n    function FirebaseError(code, message) {\r\n        this.code = code;\r\n        this.message = message;\r\n        // We want the stack value, if implemented by Error\r\n        if (captureStackTrace) {\r\n            // Patches this.stack, omitted calls above ErrorFactory#create\r\n            captureStackTrace(this, ErrorFactory.prototype.create);\r\n        }\r\n        else {\r\n            try {\r\n                // In case of IE11, stack will be set only after error is raised.\r\n                // https://docs.microsoft.com/en-us/scripting/javascript/reference/stack-property-error-javascript\r\n                throw Error.apply(this, arguments);\r\n            }\r\n            catch (err) {\r\n                this.name = ERROR_NAME;\r\n                // Make non-enumerable getter for the property.\r\n                Object.defineProperty(this, 'stack', {\r\n                    get: function () {\r\n                        return err.stack;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n    return FirebaseError;\r\n}());\r\n// Back-door inheritance\r\nFirebaseError.prototype = Object.create(Error.prototype);\r\nFirebaseError.prototype.constructor = FirebaseError;\r\nFirebaseError.prototype.name = ERROR_NAME;\r\nvar ErrorFactory = /** @class */ (function () {\r\n    function ErrorFactory(service, serviceName, errors) {\r\n        this.service = service;\r\n        this.serviceName = serviceName;\r\n        this.errors = errors;\r\n        // Matches {$name}, by default.\r\n        this.pattern = /\\{\\$([^}]+)}/g;\r\n        // empty\r\n    }\r\n    ErrorFactory.prototype.create = function (code, data) {\r\n        if (data === undefined) {\r\n            data = {};\r\n        }\r\n        var template = this.errors[code];\r\n        var fullCode = this.service + '/' + code;\r\n        var message;\r\n        if (template === undefined) {\r\n            message = 'Error';\r\n        }\r\n        else {\r\n            message = template.replace(this.pattern, function (match, key) {\r\n                var value = data[key];\r\n                return value !== undefined ? value.toString() : '<' + key + '?>';\r\n            });\r\n        }\r\n        // Service: Error message (service/code).\r\n        message = this.serviceName + ': ' + message + ' (' + fullCode + ').';\r\n        var err = new FirebaseError(fullCode, message);\r\n        // Populate the Error object with message parts for programmatic\r\n        // accesses (e.g., e.file).\r\n        for (var prop in data) {\r\n            if (!data.hasOwnProperty(prop) || prop.slice(-1) === '_') {\r\n                continue;\r\n            }\r\n            err[prop] = data[prop];\r\n        }\r\n        return err;\r\n    };\r\n    return ErrorFactory;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Evaluates a JSON string into a javascript object.\r\n *\r\n * @param {string} str A string containing JSON.\r\n * @return {*} The javascript object representing the specified JSON.\r\n */\r\nfunction jsonEval(str) {\r\n    return JSON.parse(str);\r\n}\r\n/**\r\n * Returns JSON representing a javascript object.\r\n * @param {*} data Javascript object to be stringified.\r\n * @return {string} The JSON contents of the object.\r\n */\r\nfunction stringify(data) {\r\n    return JSON.stringify(data);\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Decodes a Firebase auth. token into constituent parts.\r\n *\r\n * Notes:\r\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {{header: *, claims: *, data: *, signature: string}}\r\n */\r\nvar decode = function (token) {\r\n    var header = {}, claims = {}, data = {}, signature = '';\r\n    try {\r\n        var parts = token.split('.');\r\n        header = jsonEval(base64Decode(parts[0]) || '');\r\n        claims = jsonEval(base64Decode(parts[1]) || '');\r\n        signature = parts[2];\r\n        data = claims['d'] || {};\r\n        delete claims['d'];\r\n    }\r\n    catch (e) { }\r\n    return {\r\n        header: header,\r\n        claims: claims,\r\n        data: data,\r\n        signature: signature\r\n    };\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\r\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {boolean}\r\n */\r\nvar isValidTimestamp = function (token) {\r\n    var claims = decode(token).claims, now = Math.floor(new Date().getTime() / 1000), validSince, validUntil;\r\n    if (typeof claims === 'object') {\r\n        if (claims.hasOwnProperty('nbf')) {\r\n            validSince = claims['nbf'];\r\n        }\r\n        else if (claims.hasOwnProperty('iat')) {\r\n            validSince = claims['iat'];\r\n        }\r\n        if (claims.hasOwnProperty('exp')) {\r\n            validUntil = claims['exp'];\r\n        }\r\n        else {\r\n            // token will expire after 24h by default\r\n            validUntil = validSince + 86400;\r\n        }\r\n    }\r\n    return (now && validSince && validUntil && now >= validSince && now <= validUntil);\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\r\n *\r\n * Notes:\r\n * - May return null if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {?number}\r\n */\r\nvar issuedAtTime = function (token) {\r\n    var claims = decode(token).claims;\r\n    if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\r\n        return claims['iat'];\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time and non-empty\r\n * signature.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {boolean}\r\n */\r\nvar isValidFormat = function (token) {\r\n    var decoded = decode(token), claims = decoded.claims;\r\n    return (!!decoded.signature &&\r\n        !!claims &&\r\n        typeof claims === 'object' &&\r\n        claims.hasOwnProperty('iat'));\r\n};\r\n/**\r\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {boolean}\r\n */\r\nvar isAdmin = function (token) {\r\n    var claims = decode(token).claims;\r\n    return typeof claims === 'object' && claims['admin'] === true;\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// See http://www.devthought.com/2012/01/18/an-object-is-not-a-hash/\r\nvar contains = function (obj, key) {\r\n    return Object.prototype.hasOwnProperty.call(obj, key);\r\n};\r\nvar safeGet = function (obj, key) {\r\n    if (Object.prototype.hasOwnProperty.call(obj, key))\r\n        return obj[key];\r\n    // else return undefined.\r\n};\r\n/**\r\n * Enumerates the keys/values in an object, excluding keys defined on the prototype.\r\n *\r\n * @param {?Object.<K,V>} obj Object to enumerate.\r\n * @param {!function(K, V)} fn Function to call for each key and value.\r\n * @template K,V\r\n */\r\nvar forEach = function (obj, fn) {\r\n    for (var key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            fn(key, obj[key]);\r\n        }\r\n    }\r\n};\r\n/**\r\n * Copies all the (own) properties from one object to another.\r\n * @param {!Object} objTo\r\n * @param {!Object} objFrom\r\n * @return {!Object} objTo\r\n */\r\nvar extend = function (objTo, objFrom) {\r\n    forEach(objFrom, function (key, value) {\r\n        objTo[key] = value;\r\n    });\r\n    return objTo;\r\n};\r\n/**\r\n * Returns a clone of the specified object.\r\n * @param {!Object} obj\r\n * @return {!Object} cloned obj.\r\n */\r\nvar clone = function (obj) {\r\n    return extend({}, obj);\r\n};\r\n/**\r\n * Returns true if obj has typeof \"object\" and is not null.  Unlike goog.isObject(), does not return true\r\n * for functions.\r\n *\r\n * @param obj {*} A potential object.\r\n * @returns {boolean} True if it's an object.\r\n */\r\nvar isNonNullObject = function (obj) {\r\n    return typeof obj === 'object' && obj !== null;\r\n};\r\nvar isEmpty = function (obj) {\r\n    for (var key in obj) {\r\n        return false;\r\n    }\r\n    return true;\r\n};\r\nvar getCount = function (obj) {\r\n    var rv = 0;\r\n    for (var key in obj) {\r\n        rv++;\r\n    }\r\n    return rv;\r\n};\r\nvar map = function (obj, f, opt_obj) {\r\n    var res = {};\r\n    for (var key in obj) {\r\n        res[key] = f.call(opt_obj, obj[key], key, obj);\r\n    }\r\n    return res;\r\n};\r\nvar findKey = function (obj, fn, opt_this) {\r\n    for (var key in obj) {\r\n        if (fn.call(opt_this, obj[key], key, obj)) {\r\n            return key;\r\n        }\r\n    }\r\n    return undefined;\r\n};\r\nvar findValue = function (obj, fn, opt_this) {\r\n    var key = findKey(obj, fn, opt_this);\r\n    return key && obj[key];\r\n};\r\nvar getAnyKey = function (obj) {\r\n    for (var key in obj) {\r\n        return key;\r\n    }\r\n};\r\nvar getValues = function (obj) {\r\n    var res = [];\r\n    var i = 0;\r\n    for (var key in obj) {\r\n        res[i++] = obj[key];\r\n    }\r\n    return res;\r\n};\r\n/**\r\n * Tests whether every key/value pair in an object pass the test implemented\r\n * by the provided function\r\n *\r\n * @param {?Object.<K,V>} obj Object to test.\r\n * @param {!function(K, V)} fn Function to call for each key and value.\r\n * @template K,V\r\n */\r\nvar every = function (obj, fn) {\r\n    for (var key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            if (!fn(key, obj[key])) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a params\r\n * object (e.g. {arg: 'val', arg2: 'val2'})\r\n * Note: You must prepend it with ? when adding it to a URL.\r\n *\r\n * @param {!Object} querystringParams\r\n * @return {string}\r\n */\r\nvar querystring = function (querystringParams) {\r\n    var params = [];\r\n    forEach(querystringParams, function (key, value) {\r\n        if (Array.isArray(value)) {\r\n            value.forEach(function (arrayVal) {\r\n                params.push(encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal));\r\n            });\r\n        }\r\n        else {\r\n            params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\r\n        }\r\n    });\r\n    return params.length ? '&' + params.join('&') : '';\r\n};\r\n/**\r\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object (e.g. {arg: 'val', arg2: 'val2'})\r\n *\r\n * @param {string} querystring\r\n * @return {!Object}\r\n */\r\nvar querystringDecode = function (querystring) {\r\n    var obj = {};\r\n    var tokens = querystring.replace(/^\\?/, '').split('&');\r\n    tokens.forEach(function (token) {\r\n        if (token) {\r\n            var key = token.split('=');\r\n            obj[key[0]] = key[1];\r\n        }\r\n    });\r\n    return obj;\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Copyright 2011 The Closure Library Authors. All Rights Reserved.\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//      http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n/**\r\n * @fileoverview Abstract cryptographic hash interface.\r\n *\r\n * See Sha1 and Md5 for sample implementations.\r\n *\r\n */\r\n/**\r\n * Create a cryptographic hash instance.\r\n *\r\n * @constructor\r\n * @struct\r\n */\r\nvar Hash = /** @class */ (function () {\r\n    function Hash() {\r\n        /**\r\n         * The block size for the hasher.\r\n         * @type {number}\r\n         */\r\n        this.blockSize = -1;\r\n    }\r\n    return Hash;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview SHA-1 cryptographic hash.\r\n * Variable names follow the notation in FIPS PUB 180-3:\r\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\r\n *\r\n * Usage:\r\n *   var sha1 = new sha1();\r\n *   sha1.update(bytes);\r\n *   var hash = sha1.digest();\r\n *\r\n * Performance:\r\n *   Chrome 23:   ~400 Mbit/s\r\n *   Firefox 16:  ~250 Mbit/s\r\n *\r\n */\r\n/**\r\n * SHA-1 cryptographic hash constructor.\r\n *\r\n * The properties declared here are discussed in the above algorithm document.\r\n * @constructor\r\n * @extends {Hash}\r\n * @final\r\n * @struct\r\n */\r\nvar Sha1 = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Sha1, _super);\r\n    function Sha1() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * Holds the previous values of accumulated variables a-e in the compress_\r\n         * function.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\r\n        _this.chain_ = [];\r\n        /**\r\n         * A buffer holding the partially computed hash result.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\r\n        _this.buf_ = [];\r\n        /**\r\n         * An array of 80 bytes, each a part of the message to be hashed.  Referred to\r\n         * as the message schedule in the docs.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\r\n        _this.W_ = [];\r\n        /**\r\n         * Contains data needed to pad messages less than 64 bytes.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\r\n        _this.pad_ = [];\r\n        /**\r\n         * @private {number}\r\n         */\r\n        _this.inbuf_ = 0;\r\n        /**\r\n         * @private {number}\r\n         */\r\n        _this.total_ = 0;\r\n        _this.blockSize = 512 / 8;\r\n        _this.pad_[0] = 128;\r\n        for (var i = 1; i < _this.blockSize; ++i) {\r\n            _this.pad_[i] = 0;\r\n        }\r\n        _this.reset();\r\n        return _this;\r\n    }\r\n    Sha1.prototype.reset = function () {\r\n        this.chain_[0] = 0x67452301;\r\n        this.chain_[1] = 0xefcdab89;\r\n        this.chain_[2] = 0x98badcfe;\r\n        this.chain_[3] = 0x10325476;\r\n        this.chain_[4] = 0xc3d2e1f0;\r\n        this.inbuf_ = 0;\r\n        this.total_ = 0;\r\n    };\r\n    /**\r\n     * Internal compress helper function.\r\n     * @param {!Array<number>|!Uint8Array|string} buf Block to compress.\r\n     * @param {number=} opt_offset Offset of the block in the buffer.\r\n     * @private\r\n     */\r\n    Sha1.prototype.compress_ = function (buf, opt_offset) {\r\n        if (!opt_offset) {\r\n            opt_offset = 0;\r\n        }\r\n        var W = this.W_;\r\n        // get 16 big endian words\r\n        if (typeof buf === 'string') {\r\n            for (var i = 0; i < 16; i++) {\r\n                // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\r\n                // have a bug that turns the post-increment ++ operator into pre-increment\r\n                // during JIT compilation.  We have code that depends heavily on SHA-1 for\r\n                // correctness and which is affected by this bug, so I've removed all uses\r\n                // of post-increment ++ in which the result value is used.  We can revert\r\n                // this change once the Safari bug\r\n                // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\r\n                // most clients have been updated.\r\n                W[i] =\r\n                    (buf.charCodeAt(opt_offset) << 24) |\r\n                        (buf.charCodeAt(opt_offset + 1) << 16) |\r\n                        (buf.charCodeAt(opt_offset + 2) << 8) |\r\n                        buf.charCodeAt(opt_offset + 3);\r\n                opt_offset += 4;\r\n            }\r\n        }\r\n        else {\r\n            for (var i = 0; i < 16; i++) {\r\n                W[i] =\r\n                    (buf[opt_offset] << 24) |\r\n                        (buf[opt_offset + 1] << 16) |\r\n                        (buf[opt_offset + 2] << 8) |\r\n                        buf[opt_offset + 3];\r\n                opt_offset += 4;\r\n            }\r\n        }\r\n        // expand to 80 words\r\n        for (var i = 16; i < 80; i++) {\r\n            var t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\r\n            W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\r\n        }\r\n        var a = this.chain_[0];\r\n        var b = this.chain_[1];\r\n        var c = this.chain_[2];\r\n        var d = this.chain_[3];\r\n        var e = this.chain_[4];\r\n        var f, k;\r\n        // TODO(user): Try to unroll this loop to speed up the computation.\r\n        for (var i = 0; i < 80; i++) {\r\n            if (i < 40) {\r\n                if (i < 20) {\r\n                    f = d ^ (b & (c ^ d));\r\n                    k = 0x5a827999;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0x6ed9eba1;\r\n                }\r\n            }\r\n            else {\r\n                if (i < 60) {\r\n                    f = (b & c) | (d & (b | c));\r\n                    k = 0x8f1bbcdc;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0xca62c1d6;\r\n                }\r\n            }\r\n            var t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\r\n            e = d;\r\n            d = c;\r\n            c = ((b << 30) | (b >>> 2)) & 0xffffffff;\r\n            b = a;\r\n            a = t;\r\n        }\r\n        this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\r\n        this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\r\n        this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\r\n        this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\r\n        this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\r\n    };\r\n    Sha1.prototype.update = function (bytes, opt_length) {\r\n        // TODO(johnlenz): tighten the function signature and remove this check\r\n        if (bytes == null) {\r\n            return;\r\n        }\r\n        if (opt_length === undefined) {\r\n            opt_length = bytes.length;\r\n        }\r\n        var lengthMinusBlock = opt_length - this.blockSize;\r\n        var n = 0;\r\n        // Using local instead of member variables gives ~5% speedup on Firefox 16.\r\n        var buf = this.buf_;\r\n        var inbuf = this.inbuf_;\r\n        // The outer while loop should execute at most twice.\r\n        while (n < opt_length) {\r\n            // When we have no data in the block to top up, we can directly process the\r\n            // input buffer (assuming it contains sufficient data). This gives ~25%\r\n            // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\r\n            // the data is provided in large chunks (or in multiples of 64 bytes).\r\n            if (inbuf == 0) {\r\n                while (n <= lengthMinusBlock) {\r\n                    this.compress_(bytes, n);\r\n                    n += this.blockSize;\r\n                }\r\n            }\r\n            if (typeof bytes === 'string') {\r\n                while (n < opt_length) {\r\n                    buf[inbuf] = bytes.charCodeAt(n);\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf == this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                while (n < opt_length) {\r\n                    buf[inbuf] = bytes[n];\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf == this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.inbuf_ = inbuf;\r\n        this.total_ += opt_length;\r\n    };\r\n    /** @override */\r\n    Sha1.prototype.digest = function () {\r\n        var digest = [];\r\n        var totalBits = this.total_ * 8;\r\n        // Add pad 0x80 0x00*.\r\n        if (this.inbuf_ < 56) {\r\n            this.update(this.pad_, 56 - this.inbuf_);\r\n        }\r\n        else {\r\n            this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\r\n        }\r\n        // Add # bits.\r\n        for (var i = this.blockSize - 1; i >= 56; i--) {\r\n            this.buf_[i] = totalBits & 255;\r\n            totalBits /= 256; // Don't use bit-shifting here!\r\n        }\r\n        this.compress_(this.buf_);\r\n        var n = 0;\r\n        for (var i = 0; i < 5; i++) {\r\n            for (var j = 24; j >= 0; j -= 8) {\r\n                digest[n] = (this.chain_[i] >> j) & 255;\r\n                ++n;\r\n            }\r\n        }\r\n        return digest;\r\n    };\r\n    return Sha1;\r\n}(Hash));\n\n/**\r\n * Helper to make a Subscribe function (just like Promise helps make a\r\n * Thenable).\r\n *\r\n * @param executor Function which can make calls to a single Observer\r\n *     as a proxy.\r\n * @param onNoObservers Callback when count of Observers goes to zero.\r\n */\r\nfunction createSubscribe(executor, onNoObservers) {\r\n    var proxy = new ObserverProxy(executor, onNoObservers);\r\n    return proxy.subscribe.bind(proxy);\r\n}\r\n/**\r\n * Implement fan-out for any number of Observers attached via a subscribe\r\n * function.\r\n */\r\nvar ObserverProxy = /** @class */ (function () {\r\n    /**\r\n     * @param executor Function which can make calls to a single Observer\r\n     *     as a proxy.\r\n     * @param onNoObservers Callback when count of Observers goes to zero.\r\n     */\r\n    function ObserverProxy(executor, onNoObservers) {\r\n        var _this = this;\r\n        this.observers = [];\r\n        this.unsubscribes = [];\r\n        this.observerCount = 0;\r\n        // Micro-task scheduling by calling task.then().\r\n        this.task = Promise.resolve();\r\n        this.finalized = false;\r\n        this.onNoObservers = onNoObservers;\r\n        // Call the executor asynchronously so subscribers that are called\r\n        // synchronously after the creation of the subscribe function\r\n        // can still receive the very first value generated in the executor.\r\n        this.task\r\n            .then(function () {\r\n            executor(_this);\r\n        })\r\n            .catch(function (e) {\r\n            _this.error(e);\r\n        });\r\n    }\r\n    ObserverProxy.prototype.next = function (value) {\r\n        this.forEachObserver(function (observer) {\r\n            observer.next(value);\r\n        });\r\n    };\r\n    ObserverProxy.prototype.error = function (error) {\r\n        this.forEachObserver(function (observer) {\r\n            observer.error(error);\r\n        });\r\n        this.close(error);\r\n    };\r\n    ObserverProxy.prototype.complete = function () {\r\n        this.forEachObserver(function (observer) {\r\n            observer.complete();\r\n        });\r\n        this.close();\r\n    };\r\n    /**\r\n     * Subscribe function that can be used to add an Observer to the fan-out list.\r\n     *\r\n     * - We require that no event is sent to a subscriber sychronously to their\r\n     *   call to subscribe().\r\n     */\r\n    ObserverProxy.prototype.subscribe = function (nextOrObserver, error, complete) {\r\n        var _this = this;\r\n        var observer;\r\n        if (nextOrObserver === undefined &&\r\n            error === undefined &&\r\n            complete === undefined) {\r\n            throw new Error('Missing Observer.');\r\n        }\r\n        // Assemble an Observer object when passed as callback functions.\r\n        if (implementsAnyMethods(nextOrObserver, ['next', 'error', 'complete'])) {\r\n            observer = nextOrObserver;\r\n        }\r\n        else {\r\n            observer = {\r\n                next: nextOrObserver,\r\n                error: error,\r\n                complete: complete\r\n            };\r\n        }\r\n        if (observer.next === undefined) {\r\n            observer.next = noop;\r\n        }\r\n        if (observer.error === undefined) {\r\n            observer.error = noop;\r\n        }\r\n        if (observer.complete === undefined) {\r\n            observer.complete = noop;\r\n        }\r\n        var unsub = this.unsubscribeOne.bind(this, this.observers.length);\r\n        // Attempt to subscribe to a terminated Observable - we\r\n        // just respond to the Observer with the final error or complete\r\n        // event.\r\n        if (this.finalized) {\r\n            this.task.then(function () {\r\n                try {\r\n                    if (_this.finalError) {\r\n                        observer.error(_this.finalError);\r\n                    }\r\n                    else {\r\n                        observer.complete();\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // nothing\r\n                }\r\n                return;\r\n            });\r\n        }\r\n        this.observers.push(observer);\r\n        return unsub;\r\n    };\r\n    // Unsubscribe is synchronous - we guarantee that no events are sent to\r\n    // any unsubscribed Observer.\r\n    ObserverProxy.prototype.unsubscribeOne = function (i) {\r\n        if (this.observers === undefined || this.observers[i] === undefined) {\r\n            return;\r\n        }\r\n        delete this.observers[i];\r\n        this.observerCount -= 1;\r\n        if (this.observerCount === 0 && this.onNoObservers !== undefined) {\r\n            this.onNoObservers(this);\r\n        }\r\n    };\r\n    ObserverProxy.prototype.forEachObserver = function (fn) {\r\n        if (this.finalized) {\r\n            // Already closed by previous event....just eat the additional values.\r\n            return;\r\n        }\r\n        // Since sendOne calls asynchronously - there is no chance that\r\n        // this.observers will become undefined.\r\n        for (var i = 0; i < this.observers.length; i++) {\r\n            this.sendOne(i, fn);\r\n        }\r\n    };\r\n    // Call the Observer via one of it's callback function. We are careful to\r\n    // confirm that the observe has not been unsubscribed since this asynchronous\r\n    // function had been queued.\r\n    ObserverProxy.prototype.sendOne = function (i, fn) {\r\n        var _this = this;\r\n        // Execute the callback asynchronously\r\n        this.task.then(function () {\r\n            if (_this.observers !== undefined && _this.observers[i] !== undefined) {\r\n                try {\r\n                    fn(_this.observers[i]);\r\n                }\r\n                catch (e) {\r\n                    // Ignore exceptions raised in Observers or missing methods of an\r\n                    // Observer.\r\n                    // Log error to console. b/31404806\r\n                    if (typeof console !== 'undefined' && console.error) {\r\n                        console.error(e);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    };\r\n    ObserverProxy.prototype.close = function (err) {\r\n        var _this = this;\r\n        if (this.finalized) {\r\n            return;\r\n        }\r\n        this.finalized = true;\r\n        if (err !== undefined) {\r\n            this.finalError = err;\r\n        }\r\n        // Proxy is no longer needed - garbage collect references\r\n        this.task.then(function () {\r\n            _this.observers = undefined;\r\n            _this.onNoObservers = undefined;\r\n        });\r\n    };\r\n    return ObserverProxy;\r\n}());\r\n/** Turn synchronous function into one called asynchronously. */\r\nfunction async(fn, onError) {\r\n    return function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        Promise.resolve(true)\r\n            .then(function () {\r\n            fn.apply(void 0, args);\r\n        })\r\n            .catch(function (error) {\r\n            if (onError) {\r\n                onError(error);\r\n            }\r\n        });\r\n    };\r\n}\r\n/**\r\n * Return true if the object passed in implements any of the named methods.\r\n */\r\nfunction implementsAnyMethods(obj, methods) {\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return false;\r\n    }\r\n    for (var _i = 0, methods_1 = methods; _i < methods_1.length; _i++) {\r\n        var method = methods_1[_i];\r\n        if (method in obj && typeof obj[method] === 'function') {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction noop() {\r\n    // do nothing\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Check to make sure the appropriate number of arguments are provided for a public function.\r\n * Throws an error if it fails.\r\n *\r\n * @param {!string} fnName The function name\r\n * @param {!number} minCount The minimum number of arguments to allow for the function call\r\n * @param {!number} maxCount The maximum number of argument to allow for the function call\r\n * @param {!number} argCount The actual number of arguments provided.\r\n */\r\nvar validateArgCount = function (fnName, minCount, maxCount, argCount) {\r\n    var argError;\r\n    if (argCount < minCount) {\r\n        argError = 'at least ' + minCount;\r\n    }\r\n    else if (argCount > maxCount) {\r\n        argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;\r\n    }\r\n    if (argError) {\r\n        var error = fnName +\r\n            ' failed: Was called with ' +\r\n            argCount +\r\n            (argCount === 1 ? ' argument.' : ' arguments.') +\r\n            ' Expects ' +\r\n            argError +\r\n            '.';\r\n        throw new Error(error);\r\n    }\r\n};\r\n/**\r\n * Generates a string to prefix an error message about failed argument validation\r\n *\r\n * @param {!string} fnName The function name\r\n * @param {!number} argumentNumber The index of the argument\r\n * @param {boolean} optional Whether or not the argument is optional\r\n * @return {!string} The prefix to add to the error thrown for validation.\r\n */\r\nfunction errorPrefix(fnName, argumentNumber, optional) {\r\n    var argName = '';\r\n    switch (argumentNumber) {\r\n        case 1:\r\n            argName = optional ? 'first' : 'First';\r\n            break;\r\n        case 2:\r\n            argName = optional ? 'second' : 'Second';\r\n            break;\r\n        case 3:\r\n            argName = optional ? 'third' : 'Third';\r\n            break;\r\n        case 4:\r\n            argName = optional ? 'fourth' : 'Fourth';\r\n            break;\r\n        default:\r\n            throw new Error('errorPrefix called with argumentNumber > 4.  Need to update it?');\r\n    }\r\n    var error = fnName + ' failed: ';\r\n    error += argName + ' argument ';\r\n    return error;\r\n}\r\n/**\r\n * @param {!string} fnName\r\n * @param {!number} argumentNumber\r\n * @param {!string} namespace\r\n * @param {boolean} optional\r\n */\r\nfunction validateNamespace(fnName, argumentNumber, namespace, optional) {\r\n    if (optional && !namespace)\r\n        return;\r\n    if (typeof namespace !== 'string') {\r\n        //TODO: I should do more validation here. We only allow certain chars in namespaces.\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid firebase namespace.');\r\n    }\r\n}\r\nfunction validateCallback(fnName, argumentNumber, callback, optional) {\r\n    if (optional && !callback)\r\n        return;\r\n    if (typeof callback !== 'function')\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid function.');\r\n}\r\nfunction validateContextObject(fnName, argumentNumber, context, optional) {\r\n    if (optional && !context)\r\n        return;\r\n    if (typeof context !== 'object' || context === null)\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid context object.');\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\r\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\r\n// so it's been modified.\r\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\r\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\r\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\r\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\r\n// pair).\r\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\r\n/**\r\n * @param {string} str\r\n * @return {Array}\r\n */\r\nvar stringToByteArray$1 = function (str) {\r\n    var out = [], p = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n        var c = str.charCodeAt(i);\r\n        // Is this the lead surrogate in a surrogate pair?\r\n        if (c >= 0xd800 && c <= 0xdbff) {\r\n            var high = c - 0xd800; // the high 10 bits.\r\n            i++;\r\n            assert(i < str.length, 'Surrogate pair missing trail surrogate.');\r\n            var low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\r\n            c = 0x10000 + (high << 10) + low;\r\n        }\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if (c < 65536) {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Calculate length without actually converting; useful for doing cheaper validation.\r\n * @param {string} str\r\n * @return {number}\r\n */\r\nvar stringLength = function (str) {\r\n    var p = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n        var c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            p++;\r\n        }\r\n        else if (c < 2048) {\r\n            p += 2;\r\n        }\r\n        else if (c >= 0xd800 && c <= 0xdbff) {\r\n            // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\r\n            p += 4;\r\n            i++; // skip trail surrogate.\r\n        }\r\n        else {\r\n            p += 3;\r\n        }\r\n    }\r\n    return p;\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nexports.assert = assert;\nexports.assertionError = assertionError;\nexports.base64 = base64;\nexports.base64Decode = base64Decode;\nexports.base64Encode = base64Encode;\nexports.CONSTANTS = CONSTANTS;\nexports.deepCopy = deepCopy;\nexports.deepExtend = deepExtend;\nexports.patchProperty = patchProperty;\nexports.Deferred = Deferred;\nexports.getUA = getUA;\nexports.isMobileCordova = isMobileCordova;\nexports.isNodeSdk = isNodeSdk;\nexports.isReactNative = isReactNative;\nexports.ErrorFactory = ErrorFactory;\nexports.FirebaseError = FirebaseError;\nexports.patchCapture = patchCapture;\nexports.jsonEval = jsonEval;\nexports.stringify = stringify;\nexports.decode = decode;\nexports.isAdmin = isAdmin;\nexports.issuedAtTime = issuedAtTime;\nexports.isValidFormat = isValidFormat;\nexports.isValidTimestamp = isValidTimestamp;\nexports.clone = clone;\nexports.contains = contains;\nexports.every = every;\nexports.extend = extend;\nexports.findKey = findKey;\nexports.findValue = findValue;\nexports.forEach = forEach;\nexports.getAnyKey = getAnyKey;\nexports.getCount = getCount;\nexports.getValues = getValues;\nexports.isEmpty = isEmpty;\nexports.isNonNullObject = isNonNullObject;\nexports.map = map;\nexports.safeGet = safeGet;\nexports.querystring = querystring;\nexports.querystringDecode = querystringDecode;\nexports.Sha1 = Sha1;\nexports.async = async;\nexports.createSubscribe = createSubscribe;\nexports.errorPrefix = errorPrefix;\nexports.validateArgCount = validateArgCount;\nexports.validateCallback = validateCallback;\nexports.validateContextObject = validateContextObject;\nexports.validateNamespace = validateNamespace;\nexports.stringLength = stringLength;\nexports.stringToByteArray = stringToByteArray$1;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/util/dist/index.cjs.js\n// module id = 14\n// module chunks = 0","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tslib/tslib.es6.js\n// module id = 15\n// module chunks = 0","// @remove-on-eject-begin\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// @remove-on-eject-end\n'use strict';\n\nif (typeof Promise === 'undefined') {\n  // Rejection tracking prevents a common issue where React gets into an\n  // inconsistent state due to an error, but it gets swallowed by a Promise,\n  // and the user has no idea what causes React's erratic future behavior.\n  require('promise/lib/rejection-tracking').enable();\n  window.Promise = require('promise/lib/es6-extensions.js');\n}\n\n// fetch() polyfill for making API calls.\nrequire('whatwg-fetch');\n\n// Object.assign() is commonly used with React.\n// It will use the native implementation if it's present and isn't buggy.\nObject.assign = require('object-assign');\n\n// In tests, polyfill requestAnimationFrame since jsdom doesn't provide it yet.\n// We don't polyfill it in the browser--this is user's responsibility.\nif (process.env.NODE_ENV === 'test') {\n  require('raf').polyfill(global);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-scripts/config/polyfills.js\n// module id = 17\n// module chunks = 0","'use strict';\n\nvar Promise = require('./core');\n\nvar DEFAULT_WHITELIST = [\n  ReferenceError,\n  TypeError,\n  RangeError\n];\n\nvar enabled = false;\nexports.disable = disable;\nfunction disable() {\n  enabled = false;\n  Promise._47 = null;\n  Promise._71 = null;\n}\n\nexports.enable = enable;\nfunction enable(options) {\n  options = options || {};\n  if (enabled) disable();\n  enabled = true;\n  var id = 0;\n  var displayId = 0;\n  var rejections = {};\n  Promise._47 = function (promise) {\n    if (\n      promise._83 === 2 && // IS REJECTED\n      rejections[promise._56]\n    ) {\n      if (rejections[promise._56].logged) {\n        onHandled(promise._56);\n      } else {\n        clearTimeout(rejections[promise._56].timeout);\n      }\n      delete rejections[promise._56];\n    }\n  };\n  Promise._71 = function (promise, err) {\n    if (promise._75 === 0) { // not yet handled\n      promise._56 = id++;\n      rejections[promise._56] = {\n        displayId: null,\n        error: err,\n        timeout: setTimeout(\n          onUnhandled.bind(null, promise._56),\n          // For reference errors and type errors, this almost always\n          // means the programmer made a mistake, so log them after just\n          // 100ms\n          // otherwise, wait 2 seconds to see if they get handled\n          matchWhitelist(err, DEFAULT_WHITELIST)\n            ? 100\n            : 2000\n        ),\n        logged: false\n      };\n    }\n  };\n  function onUnhandled(id) {\n    if (\n      options.allRejections ||\n      matchWhitelist(\n        rejections[id].error,\n        options.whitelist || DEFAULT_WHITELIST\n      )\n    ) {\n      rejections[id].displayId = displayId++;\n      if (options.onUnhandled) {\n        rejections[id].logged = true;\n        options.onUnhandled(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      } else {\n        rejections[id].logged = true;\n        logError(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      }\n    }\n  }\n  function onHandled(id) {\n    if (rejections[id].logged) {\n      if (options.onHandled) {\n        options.onHandled(rejections[id].displayId, rejections[id].error);\n      } else if (!rejections[id].onUnhandled) {\n        console.warn(\n          'Promise Rejection Handled (id: ' + rejections[id].displayId + '):'\n        );\n        console.warn(\n          '  This means you can ignore any previous messages of the form \"Possible Unhandled Promise Rejection\" with id ' +\n          rejections[id].displayId + '.'\n        );\n      }\n    }\n  }\n}\n\nfunction logError(id, error) {\n  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');\n  var errStr = (error && (error.stack || error)) + '';\n  errStr.split('\\n').forEach(function (line) {\n    console.warn('  ' + line);\n  });\n}\n\nfunction matchWhitelist(error, list) {\n  return list.some(function (cls) {\n    return error instanceof cls;\n  });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/promise/lib/rejection-tracking.js\n// module id = 18\n// module chunks = 0","\"use strict\";\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser's own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nvar scope = typeof global !== \"undefined\" ? global : self;\nvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js’s\n// `process.on(\"uncaughtException\")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/asap/browser-raw.js\n// module id = 19\n// module chunks = 0","'use strict';\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nvar TRUE = valuePromise(true);\nvar FALSE = valuePromise(false);\nvar NULL = valuePromise(null);\nvar UNDEFINED = valuePromise(undefined);\nvar ZERO = valuePromise(0);\nvar EMPTYSTRING = valuePromise('');\n\nfunction valuePromise(value) {\n  var p = new Promise(Promise._44);\n  p._83 = 1;\n  p._18 = value;\n  return p;\n}\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value;\n\n  if (value === null) return NULL;\n  if (value === undefined) return UNDEFINED;\n  if (value === true) return TRUE;\n  if (value === false) return FALSE;\n  if (value === 0) return ZERO;\n  if (value === '') return EMPTYSTRING;\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then;\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value));\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex);\n      });\n    }\n  }\n  return valuePromise(value);\n};\n\nPromise.all = function (arr) {\n  var args = Array.prototype.slice.call(arr);\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n    function res(i, val) {\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\n        if (val instanceof Promise && val.then === Promise.prototype.then) {\n          while (val._83 === 3) {\n            val = val._18;\n          }\n          if (val._83 === 1) return res(i, val._18);\n          if (val._83 === 2) reject(val._18);\n          val.then(function (val) {\n            res(i, val);\n          }, reject);\n          return;\n        } else {\n          var then = val.then;\n          if (typeof then === 'function') {\n            var p = new Promise(then.bind(val));\n            p.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n      }\n      args[i] = val;\n      if (--remaining === 0) {\n        resolve(args);\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    values.forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    });\n  });\n};\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/promise/lib/es6-extensions.js\n// module id = 20\n// module chunks = 0","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Parallax } from 'react-spring/dist/react-spring'\nimport './index.css';\nimport { SectionLabels } from './components/SectionLabels';\nimport { AboutMe } from './components/AboutMe';\nimport { Portfolio } from './components/Portfolio';\nimport { Skills } from './components/Skills';\n\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>                \n        <header className=\"header nav-bar fixed-top\" style={{display:'flex', justifyContent:'space-between', alignItems:'center', backgroundColor: 'rgba( 3,3,3,0.7)' }}>\n          <div> \n          <div><a href=\"https://github.com/tomkim825/\" target=\"_blank\" rel=\"noopener noreferrer\" style={{padding: '5px', margin: '0 5px', color:'#517fa4'}}><i className=\"fab icon fa-github\" ></i></a>\n          <a href=\"https://www.linkedin.com/in/thomas-c-kim/\" target=\"_blank\" rel=\"noopener noreferrer\" style={{ padding: '5px', margin: '0 5px', color:'#517fa4'}}><i className=\"fab icon fa-linkedin\"></i></a>\n          <a href=\"mailto:tomkim825@gmail.com\" style={{padding: '5px', margin: '0 5px', color:'#517fa4'}}><i className=\"fas icon  fa-envelope\"></i></a>\n            <span style={{fontWeight:600}}> Thomas Kim</span>\n          </div>\n          </div>\n          <span>\n            <span className = 'navButton' onClick={() => this.parallax.scrollTo(0)}>About</span> <span> | </span><span  className = 'navButton'  onClick={() => this.parallax.scrollTo(1)}> Portfolio </span><span> | </span><span  className = 'navButton'  onClick={() => this.parallax.scrollTo(2)}> Skills </span>\n          </span>\n      </header>\n\n      <Parallax ref={ref => (this.parallax = ref)} pages={3}>\n\n        <Parallax.Layer offset={0} speed={0} factor={3} style={{ background: 'linear-gradient(to top, #243949 0%, #517fa4 100%)'}} />\n\n        <SectionLabels/>\n        <AboutMe/>\n        <Portfolio/>\n        <Skills/>\n\n      </Parallax>\n    </div>\n    )\n  }\n}\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","/** @license React v16.4.1\n * react.production.min.js\n *\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var k=require(\"object-assign\"),n=require(\"fbjs/lib/invariant\"),p=require(\"fbjs/lib/emptyObject\"),q=require(\"fbjs/lib/emptyFunction\"),r=\"function\"===typeof Symbol&&Symbol.for,t=r?Symbol.for(\"react.element\"):60103,u=r?Symbol.for(\"react.portal\"):60106,v=r?Symbol.for(\"react.fragment\"):60107,w=r?Symbol.for(\"react.strict_mode\"):60108,x=r?Symbol.for(\"react.profiler\"):60114,y=r?Symbol.for(\"react.provider\"):60109,z=r?Symbol.for(\"react.context\"):60110,A=r?Symbol.for(\"react.async_mode\"):60111,B=\nr?Symbol.for(\"react.forward_ref\"):60112;r&&Symbol.for(\"react.timeout\");var C=\"function\"===typeof Symbol&&Symbol.iterator;function D(a){for(var b=arguments.length-1,e=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=0;c<b;c++)e+=\"&args[]=\"+encodeURIComponent(arguments[c+1]);n(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",e)}\nvar E={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}};function F(a,b,e){this.props=a;this.context=b;this.refs=p;this.updater=e||E}F.prototype.isReactComponent={};F.prototype.setState=function(a,b){\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a?D(\"85\"):void 0;this.updater.enqueueSetState(this,a,b,\"setState\")};F.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function G(){}\nG.prototype=F.prototype;function H(a,b,e){this.props=a;this.context=b;this.refs=p;this.updater=e||E}var I=H.prototype=new G;I.constructor=H;k(I,F.prototype);I.isPureReactComponent=!0;var J={current:null},K=Object.prototype.hasOwnProperty,L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,e){var c=void 0,d={},g=null,h=null;if(null!=b)for(c in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(g=\"\"+b.key),b)K.call(b,c)&&!L.hasOwnProperty(c)&&(d[c]=b[c]);var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){for(var l=Array(f),m=0;m<f;m++)l[m]=arguments[m+2];d.children=l}if(a&&a.defaultProps)for(c in f=a.defaultProps,f)void 0===d[c]&&(d[c]=f[c]);return{$$typeof:t,type:a,key:g,ref:h,props:d,_owner:J.current}}\nfunction N(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===t}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+(\"\"+a).replace(/[=:]/g,function(a){return b[a]})}var O=/\\/+/g,P=[];function Q(a,b,e,c){if(P.length){var d=P.pop();d.result=a;d.keyPrefix=b;d.func=e;d.context=c;d.count=0;return d}return{result:a,keyPrefix:b,func:e,context:c,count:0}}function R(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>P.length&&P.push(a)}\nfunction S(a,b,e,c){var d=typeof a;if(\"undefined\"===d||\"boolean\"===d)a=null;var g=!1;if(null===a)g=!0;else switch(d){case \"string\":case \"number\":g=!0;break;case \"object\":switch(a.$$typeof){case t:case u:g=!0}}if(g)return e(c,a,\"\"===b?\".\"+T(a,0):b),1;g=0;b=\"\"===b?\".\":b+\":\";if(Array.isArray(a))for(var h=0;h<a.length;h++){d=a[h];var f=b+T(d,h);g+=S(d,f,e,c)}else if(null===a||\"undefined\"===typeof a?f=null:(f=C&&a[C]||a[\"@@iterator\"],f=\"function\"===typeof f?f:null),\"function\"===typeof f)for(a=f.call(a),\nh=0;!(d=a.next()).done;)d=d.value,f=b+T(d,h++),g+=S(d,f,e,c);else\"object\"===d&&(e=\"\"+a,D(\"31\",\"[object Object]\"===e?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":e,\"\"));return g}function T(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function U(a,b){a.func.call(a.context,b,a.count++)}\nfunction V(a,b,e){var c=a.result,d=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?W(a,c,e,q.thatReturnsArgument):null!=a&&(N(a)&&(b=d+(!a.key||b&&b.key===a.key?\"\":(\"\"+a.key).replace(O,\"$&/\")+\"/\")+e,a={$$typeof:t,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}),c.push(a))}function W(a,b,e,c,d){var g=\"\";null!=e&&(g=(\"\"+e).replace(O,\"$&/\")+\"/\");b=Q(b,g,c,d);null==a||S(a,\"\",V,b);R(b)}\nvar X={Children:{map:function(a,b,e){if(null==a)return a;var c=[];W(a,c,null,b,e);return c},forEach:function(a,b,e){if(null==a)return a;b=Q(null,null,b,e);null==a||S(a,\"\",U,b);R(b)},count:function(a){return null==a?0:S(a,\"\",q.thatReturnsNull,null)},toArray:function(a){var b=[];W(a,b,null,q.thatReturnsArgument);return b},only:function(a){N(a)?void 0:D(\"143\");return a}},createRef:function(){return{current:null}},Component:F,PureComponent:H,createContext:function(a,b){void 0===b&&(b=null);a={$$typeof:z,\n_calculateChangedBits:b,_defaultValue:a,_currentValue:a,_currentValue2:a,_changedBits:0,_changedBits2:0,Provider:null,Consumer:null};a.Provider={$$typeof:y,_context:a};return a.Consumer=a},forwardRef:function(a){return{$$typeof:B,render:a}},Fragment:v,StrictMode:w,unstable_AsyncMode:A,unstable_Profiler:x,createElement:M,cloneElement:function(a,b,e){null===a||void 0===a?D(\"267\",a):void 0;var c=void 0,d=k({},a.props),g=a.key,h=a.ref,f=a._owner;if(null!=b){void 0!==b.ref&&(h=b.ref,f=J.current);void 0!==\nb.key&&(g=\"\"+b.key);var l=void 0;a.type&&a.type.defaultProps&&(l=a.type.defaultProps);for(c in b)K.call(b,c)&&!L.hasOwnProperty(c)&&(d[c]=void 0===b[c]&&void 0!==l?l[c]:b[c])}c=arguments.length-2;if(1===c)d.children=e;else if(1<c){l=Array(c);for(var m=0;m<c;m++)l[m]=arguments[m+2];d.children=l}return{$$typeof:t,type:a.type,key:g,ref:h,props:d,_owner:f}},createFactory:function(a){var b=M.bind(null,a);b.type=a;return b},isValidElement:N,version:\"16.4.1\",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:J,\nassign:k}},Y={default:X},Z=Y&&X||Y;module.exports=Z.default?Z.default:Z;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react/cjs/react.production.min.js\n// module id = 22\n// module chunks = 0","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-dom/index.js\n// module id = 23\n// module chunks = 0","/** @license React v16.4.1\n * react-dom.production.min.js\n *\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"fbjs/lib/invariant\"),ba=require(\"react\"),m=require(\"fbjs/lib/ExecutionEnvironment\"),p=require(\"object-assign\"),v=require(\"fbjs/lib/emptyFunction\"),da=require(\"fbjs/lib/getActiveElement\"),ea=require(\"fbjs/lib/shallowEqual\"),fa=require(\"fbjs/lib/containsNode\"),ha=require(\"fbjs/lib/emptyObject\");\nfunction A(a){for(var b=arguments.length-1,c=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,d=0;d<b;d++)c+=\"&args[]=\"+encodeURIComponent(arguments[d+1]);aa(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",c)}ba?void 0:A(\"227\");\nfunction ia(a,b,c,d,e,f,g,h,k){this._hasCaughtError=!1;this._caughtError=null;var n=Array.prototype.slice.call(arguments,3);try{b.apply(c,n)}catch(r){this._caughtError=r,this._hasCaughtError=!0}}\nvar B={_caughtError:null,_hasCaughtError:!1,_rethrowError:null,_hasRethrowError:!1,invokeGuardedCallback:function(a,b,c,d,e,f,g,h,k){ia.apply(B,arguments)},invokeGuardedCallbackAndCatchFirstError:function(a,b,c,d,e,f,g,h,k){B.invokeGuardedCallback.apply(this,arguments);if(B.hasCaughtError()){var n=B.clearCaughtError();B._hasRethrowError||(B._hasRethrowError=!0,B._rethrowError=n)}},rethrowCaughtError:function(){return ka.apply(B,arguments)},hasCaughtError:function(){return B._hasCaughtError},clearCaughtError:function(){if(B._hasCaughtError){var a=\nB._caughtError;B._caughtError=null;B._hasCaughtError=!1;return a}A(\"198\")}};function ka(){if(B._hasRethrowError){var a=B._rethrowError;B._rethrowError=null;B._hasRethrowError=!1;throw a;}}var la=null,ma={};\nfunction na(){if(la)for(var a in ma){var b=ma[a],c=la.indexOf(a);-1<c?void 0:A(\"96\",a);if(!oa[c]){b.extractEvents?void 0:A(\"97\",a);oa[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],g=b,h=d;pa.hasOwnProperty(h)?A(\"99\",h):void 0;pa[h]=f;var k=f.phasedRegistrationNames;if(k){for(e in k)k.hasOwnProperty(e)&&qa(k[e],g,h);e=!0}else f.registrationName?(qa(f.registrationName,g,h),e=!0):e=!1;e?void 0:A(\"98\",d,a)}}}}\nfunction qa(a,b,c){ra[a]?A(\"100\",a):void 0;ra[a]=b;sa[a]=b.eventTypes[c].dependencies}var oa=[],pa={},ra={},sa={};function ta(a){la?A(\"101\"):void 0;la=Array.prototype.slice.call(a);na()}function ua(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];ma.hasOwnProperty(c)&&ma[c]===d||(ma[c]?A(\"102\",c):void 0,ma[c]=d,b=!0)}b&&na()}\nvar va={plugins:oa,eventNameDispatchConfigs:pa,registrationNameModules:ra,registrationNameDependencies:sa,possibleRegistrationNames:null,injectEventPluginOrder:ta,injectEventPluginsByName:ua},wa=null,xa=null,ya=null;function za(a,b,c,d){b=a.type||\"unknown-event\";a.currentTarget=ya(d);B.invokeGuardedCallbackAndCatchFirstError(b,c,void 0,a);a.currentTarget=null}\nfunction Aa(a,b){null==b?A(\"30\"):void 0;if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}function Ba(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var Ca=null;\nfunction Da(a,b){if(a){var c=a._dispatchListeners,d=a._dispatchInstances;if(Array.isArray(c))for(var e=0;e<c.length&&!a.isPropagationStopped();e++)za(a,b,c[e],d[e]);else c&&za(a,b,c,d);a._dispatchListeners=null;a._dispatchInstances=null;a.isPersistent()||a.constructor.release(a)}}function Ea(a){return Da(a,!0)}function Fa(a){return Da(a,!1)}var Ga={injectEventPluginOrder:ta,injectEventPluginsByName:ua};\nfunction Ha(a,b){var c=a.stateNode;if(!c)return null;var d=wa(c);if(!d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;c&&\"function\"!==typeof c?A(\"231\",b,typeof c):void 0;\nreturn c}function Ia(a,b){null!==a&&(Ca=Aa(Ca,a));a=Ca;Ca=null;a&&(b?Ba(a,Ea):Ba(a,Fa),Ca?A(\"95\"):void 0,B.rethrowCaughtError())}function Ja(a,b,c,d){for(var e=null,f=0;f<oa.length;f++){var g=oa[f];g&&(g=g.extractEvents(a,b,c,d))&&(e=Aa(e,g))}Ia(e,!1)}var Ka={injection:Ga,getListener:Ha,runEventsInBatch:Ia,runExtractedEventsInBatch:Ja},La=Math.random().toString(36).slice(2),C=\"__reactInternalInstance$\"+La,Ma=\"__reactEventHandlers$\"+La;\nfunction Na(a){if(a[C])return a[C];for(;!a[C];)if(a.parentNode)a=a.parentNode;else return null;a=a[C];return 5===a.tag||6===a.tag?a:null}function Oa(a){if(5===a.tag||6===a.tag)return a.stateNode;A(\"33\")}function Pa(a){return a[Ma]||null}var Qa={precacheFiberNode:function(a,b){b[C]=a},getClosestInstanceFromNode:Na,getInstanceFromNode:function(a){a=a[C];return!a||5!==a.tag&&6!==a.tag?null:a},getNodeFromInstance:Oa,getFiberCurrentPropsFromNode:Pa,updateFiberProps:function(a,b){a[Ma]=b}};\nfunction F(a){do a=a.return;while(a&&5!==a.tag);return a?a:null}function Ra(a,b,c){for(var d=[];a;)d.push(a),a=F(a);for(a=d.length;0<a--;)b(d[a],\"captured\",c);for(a=0;a<d.length;a++)b(d[a],\"bubbled\",c)}function Sa(a,b,c){if(b=Ha(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=Aa(c._dispatchListeners,b),c._dispatchInstances=Aa(c._dispatchInstances,a)}function Ta(a){a&&a.dispatchConfig.phasedRegistrationNames&&Ra(a._targetInst,Sa,a)}\nfunction Ua(a){if(a&&a.dispatchConfig.phasedRegistrationNames){var b=a._targetInst;b=b?F(b):null;Ra(b,Sa,a)}}function Va(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=Ha(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=Aa(c._dispatchListeners,b),c._dispatchInstances=Aa(c._dispatchInstances,a))}function Xa(a){a&&a.dispatchConfig.registrationName&&Va(a._targetInst,null,a)}function Ya(a){Ba(a,Ta)}\nfunction Za(a,b,c,d){if(c&&d)a:{var e=c;for(var f=d,g=0,h=e;h;h=F(h))g++;h=0;for(var k=f;k;k=F(k))h++;for(;0<g-h;)e=F(e),g--;for(;0<h-g;)f=F(f),h--;for(;g--;){if(e===f||e===f.alternate)break a;e=F(e);f=F(f)}e=null}else e=null;f=e;for(e=[];c&&c!==f;){g=c.alternate;if(null!==g&&g===f)break;e.push(c);c=F(c)}for(c=[];d&&d!==f;){g=d.alternate;if(null!==g&&g===f)break;c.push(d);d=F(d)}for(d=0;d<e.length;d++)Va(e[d],\"bubbled\",a);for(a=c.length;0<a--;)Va(c[a],\"captured\",b)}\nvar $a={accumulateTwoPhaseDispatches:Ya,accumulateTwoPhaseDispatchesSkipTarget:function(a){Ba(a,Ua)},accumulateEnterLeaveDispatches:Za,accumulateDirectDispatches:function(a){Ba(a,Xa)}};function ab(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;c[\"ms\"+a]=\"MS\"+b;c[\"O\"+a]=\"o\"+b.toLowerCase();return c}\nvar bb={animationend:ab(\"Animation\",\"AnimationEnd\"),animationiteration:ab(\"Animation\",\"AnimationIteration\"),animationstart:ab(\"Animation\",\"AnimationStart\"),transitionend:ab(\"Transition\",\"TransitionEnd\")},cb={},db={};m.canUseDOM&&(db=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete bb.animationend.animation,delete bb.animationiteration.animation,delete bb.animationstart.animation),\"TransitionEvent\"in window||delete bb.transitionend.transition);\nfunction eb(a){if(cb[a])return cb[a];if(!bb[a])return a;var b=bb[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in db)return cb[a]=b[c];return a}var fb=eb(\"animationend\"),gb=eb(\"animationiteration\"),hb=eb(\"animationstart\"),ib=eb(\"transitionend\"),jb=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),kb=null;\nfunction lb(){!kb&&m.canUseDOM&&(kb=\"textContent\"in document.documentElement?\"textContent\":\"innerText\");return kb}var G={_root:null,_startText:null,_fallbackText:null};function mb(){if(G._fallbackText)return G._fallbackText;var a,b=G._startText,c=b.length,d,e=nb(),f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);G._fallbackText=e.slice(a,1<d?1-d:void 0);return G._fallbackText}function nb(){return\"value\"in G._root?G._root.value:G._root[lb()]}\nvar ob=\"dispatchConfig _targetInst nativeEvent isDefaultPrevented isPropagationStopped _dispatchListeners _dispatchInstances\".split(\" \"),pb={type:null,target:null,currentTarget:v.thatReturnsNull,eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};\nfunction H(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):\"target\"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?v.thatReturnsTrue:v.thatReturnsFalse;this.isPropagationStopped=v.thatReturnsFalse;return this}\np(H.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=v.thatReturnsTrue)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=v.thatReturnsTrue)},persist:function(){this.isPersistent=v.thatReturnsTrue},isPersistent:v.thatReturnsFalse,\ndestructor:function(){var a=this.constructor.Interface,b;for(b in a)this[b]=null;for(a=0;a<ob.length;a++)this[ob[a]]=null}});H.Interface=pb;H.extend=function(a){function b(){}function c(){return d.apply(this,arguments)}var d=this;b.prototype=d.prototype;var e=new b;p(e,c.prototype);c.prototype=e;c.prototype.constructor=c;c.Interface=p({},d.Interface,a);c.extend=d.extend;qb(c);return c};qb(H);\nfunction rb(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}function sb(a){a instanceof this?void 0:A(\"223\");a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}function qb(a){a.eventPool=[];a.getPooled=rb;a.release=sb}var tb=H.extend({data:null}),ub=H.extend({data:null}),vb=[9,13,27,32],wb=m.canUseDOM&&\"CompositionEvent\"in window,xb=null;m.canUseDOM&&\"documentMode\"in document&&(xb=document.documentMode);\nvar yb=m.canUseDOM&&\"TextEvent\"in window&&!xb,zb=m.canUseDOM&&(!wb||xb&&8<xb&&11>=xb),Ab=String.fromCharCode(32),Bb={beforeInput:{phasedRegistrationNames:{bubbled:\"onBeforeInput\",captured:\"onBeforeInputCapture\"},dependencies:[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]},compositionEnd:{phasedRegistrationNames:{bubbled:\"onCompositionEnd\",captured:\"onCompositionEndCapture\"},dependencies:\"blur compositionend keydown keypress keyup mousedown\".split(\" \")},compositionStart:{phasedRegistrationNames:{bubbled:\"onCompositionStart\",\ncaptured:\"onCompositionStartCapture\"},dependencies:\"blur compositionstart keydown keypress keyup mousedown\".split(\" \")},compositionUpdate:{phasedRegistrationNames:{bubbled:\"onCompositionUpdate\",captured:\"onCompositionUpdateCapture\"},dependencies:\"blur compositionupdate keydown keypress keyup mousedown\".split(\" \")}},Cb=!1;\nfunction Db(a,b){switch(a){case \"keyup\":return-1!==vb.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"blur\":return!0;default:return!1}}function Eb(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var Fb=!1;function Gb(a,b){switch(a){case \"compositionend\":return Eb(b);case \"keypress\":if(32!==b.which)return null;Cb=!0;return Ab;case \"textInput\":return a=b.data,a===Ab&&Cb?null:a;default:return null}}\nfunction Hb(a,b){if(Fb)return\"compositionend\"===a||!wb&&Db(a,b)?(a=mb(),G._root=null,G._startText=null,G._fallbackText=null,Fb=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return zb?null:b.data;default:return null}}\nvar Ib={eventTypes:Bb,extractEvents:function(a,b,c,d){var e=void 0;var f=void 0;if(wb)b:{switch(a){case \"compositionstart\":e=Bb.compositionStart;break b;case \"compositionend\":e=Bb.compositionEnd;break b;case \"compositionupdate\":e=Bb.compositionUpdate;break b}e=void 0}else Fb?Db(a,c)&&(e=Bb.compositionEnd):\"keydown\"===a&&229===c.keyCode&&(e=Bb.compositionStart);e?(zb&&(Fb||e!==Bb.compositionStart?e===Bb.compositionEnd&&Fb&&(f=mb()):(G._root=d,G._startText=nb(),Fb=!0)),e=tb.getPooled(e,b,c,d),f?e.data=\nf:(f=Eb(c),null!==f&&(e.data=f)),Ya(e),f=e):f=null;(a=yb?Gb(a,c):Hb(a,c))?(b=ub.getPooled(Bb.beforeInput,b,c,d),b.data=a,Ya(b)):b=null;return null===f?b:null===b?f:[f,b]}},Jb=null,Kb={injectFiberControlledHostComponent:function(a){Jb=a}},Lb=null,Mb=null;function Nb(a){if(a=xa(a)){Jb&&\"function\"===typeof Jb.restoreControlledState?void 0:A(\"194\");var b=wa(a.stateNode);Jb.restoreControlledState(a.stateNode,a.type,b)}}function Ob(a){Lb?Mb?Mb.push(a):Mb=[a]:Lb=a}\nfunction Pb(){return null!==Lb||null!==Mb}function Qb(){if(Lb){var a=Lb,b=Mb;Mb=Lb=null;Nb(a);if(b)for(a=0;a<b.length;a++)Nb(b[a])}}var Rb={injection:Kb,enqueueStateRestore:Ob,needsStateRestore:Pb,restoreStateIfNeeded:Qb};function Sb(a,b){return a(b)}function Tb(a,b,c){return a(b,c)}function Ub(){}var Vb=!1;function Wb(a,b){if(Vb)return a(b);Vb=!0;try{return Sb(a,b)}finally{Vb=!1,Pb()&&(Ub(),Qb())}}\nvar Xb={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Yb(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!Xb[a.type]:\"textarea\"===b?!0:!1}function Zb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}\nfunction $b(a,b){if(!m.canUseDOM||b&&!(\"addEventListener\"in document))return!1;a=\"on\"+a;b=a in document;b||(b=document.createElement(\"div\"),b.setAttribute(a,\"return;\"),b=\"function\"===typeof b[a]);return b}function ac(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction bc(a){var b=ac(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function cc(a){a._valueTracker||(a._valueTracker=bc(a))}function dc(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=ac(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}\nvar ec=ba.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,fc=\"function\"===typeof Symbol&&Symbol.for,gc=fc?Symbol.for(\"react.element\"):60103,hc=fc?Symbol.for(\"react.portal\"):60106,ic=fc?Symbol.for(\"react.fragment\"):60107,jc=fc?Symbol.for(\"react.strict_mode\"):60108,kc=fc?Symbol.for(\"react.profiler\"):60114,lc=fc?Symbol.for(\"react.provider\"):60109,mc=fc?Symbol.for(\"react.context\"):60110,pc=fc?Symbol.for(\"react.async_mode\"):60111,qc=fc?Symbol.for(\"react.forward_ref\"):60112,rc=fc?Symbol.for(\"react.timeout\"):\n60113,sc=\"function\"===typeof Symbol&&Symbol.iterator;function tc(a){if(null===a||\"undefined\"===typeof a)return null;a=sc&&a[sc]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nfunction uc(a){var b=a.type;if(\"function\"===typeof b)return b.displayName||b.name;if(\"string\"===typeof b)return b;switch(b){case pc:return\"AsyncMode\";case mc:return\"Context.Consumer\";case ic:return\"ReactFragment\";case hc:return\"ReactPortal\";case kc:return\"Profiler(\"+a.pendingProps.id+\")\";case lc:return\"Context.Provider\";case jc:return\"StrictMode\";case rc:return\"Timeout\"}if(\"object\"===typeof b&&null!==b)switch(b.$$typeof){case qc:return a=b.render.displayName||b.render.name||\"\",\"\"!==a?\"ForwardRef(\"+\na+\")\":\"ForwardRef\"}return null}function vc(a){var b=\"\";do{a:switch(a.tag){case 0:case 1:case 2:case 5:var c=a._debugOwner,d=a._debugSource;var e=uc(a);var f=null;c&&(f=uc(c));c=d;e=\"\\n    in \"+(e||\"Unknown\")+(c?\" (at \"+c.fileName.replace(/^.*[\\\\\\/]/,\"\")+\":\"+c.lineNumber+\")\":f?\" (created by \"+f+\")\":\"\");break a;default:e=\"\"}b+=e;a=a.return}while(a);return b}\nvar wc=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,xc={},zc={};function Ac(a){if(zc.hasOwnProperty(a))return!0;if(xc.hasOwnProperty(a))return!1;if(wc.test(a))return zc[a]=!0;xc[a]=!0;return!1}\nfunction Bc(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}function Cc(a,b,c,d){if(null===b||\"undefined\"===typeof b||Bc(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}\nfunction I(a,b,c,d,e){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b}var J={};\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){J[a]=new I(a,0,!1,a,null)});\n[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];J[b]=new I(b,1,!1,a[1],null)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){J[a]=new I(a,2,!1,a.toLowerCase(),null)});[\"autoReverse\",\"externalResourcesRequired\",\"preserveAlpha\"].forEach(function(a){J[a]=new I(a,2,!1,a,null)});\n\"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){J[a]=new I(a,3,!1,a.toLowerCase(),null)});[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){J[a]=new I(a,3,!0,a.toLowerCase(),null)});[\"capture\",\"download\"].forEach(function(a){J[a]=new I(a,4,!1,a.toLowerCase(),null)});\n[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){J[a]=new I(a,6,!1,a.toLowerCase(),null)});[\"rowSpan\",\"start\"].forEach(function(a){J[a]=new I(a,5,!1,a.toLowerCase(),null)});var Dc=/[\\-:]([a-z])/g;function Ec(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(Dc,\nEc);J[b]=new I(b,1,!1,a,null)});\"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(Dc,Ec);J[b]=new I(b,1,!1,a,\"http://www.w3.org/1999/xlink\")});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(Dc,Ec);J[b]=new I(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\")});J.tabIndex=new I(\"tabIndex\",1,!1,\"tabindex\",null);\nfunction Fc(a,b,c,d){var e=J.hasOwnProperty(b)?J[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1]?!1:!0;f||(Cc(b,c,e,d)&&(c=null),d||null===e?Ac(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}\nfunction Gc(a,b){var c=b.checked;return p({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Hc(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Ic(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function Jc(a,b){b=b.checked;null!=b&&Fc(a,\"checked\",b,!1)}\nfunction Kc(a,b){Jc(a,b);var c=Ic(b.value);if(null!=c)if(\"number\"===b.type){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);b.hasOwnProperty(\"value\")?Lc(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&Lc(a,b.type,Ic(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction Mc(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){b=\"\"+a._wrapperState.initialValue;var d=a.value;c||b===d||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!a.defaultChecked;a.defaultChecked=!a.defaultChecked;\"\"!==c&&(a.name=c)}function Lc(a,b,c){if(\"number\"!==b||a.ownerDocument.activeElement!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}\nfunction Ic(a){switch(typeof a){case \"boolean\":case \"number\":case \"object\":case \"string\":case \"undefined\":return a;default:return\"\"}}var Nc={change:{phasedRegistrationNames:{bubbled:\"onChange\",captured:\"onChangeCapture\"},dependencies:\"blur change click focus input keydown keyup selectionchange\".split(\" \")}};function Oc(a,b,c){a=H.getPooled(Nc.change,a,b,c);a.type=\"change\";Ob(c);Ya(a);return a}var Pc=null,Qc=null;function Rc(a){Ia(a,!1)}function Sc(a){var b=Oa(a);if(dc(b))return a}\nfunction Tc(a,b){if(\"change\"===a)return b}var Uc=!1;m.canUseDOM&&(Uc=$b(\"input\")&&(!document.documentMode||9<document.documentMode));function Vc(){Pc&&(Pc.detachEvent(\"onpropertychange\",Wc),Qc=Pc=null)}function Wc(a){\"value\"===a.propertyName&&Sc(Qc)&&(a=Oc(Qc,a,Zb(a)),Wb(Rc,a))}function Xc(a,b,c){\"focus\"===a?(Vc(),Pc=b,Qc=c,Pc.attachEvent(\"onpropertychange\",Wc)):\"blur\"===a&&Vc()}function Yc(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return Sc(Qc)}\nfunction Zc(a,b){if(\"click\"===a)return Sc(b)}function $c(a,b){if(\"input\"===a||\"change\"===a)return Sc(b)}\nvar ad={eventTypes:Nc,_isInputEventSupported:Uc,extractEvents:function(a,b,c,d){var e=b?Oa(b):window,f=void 0,g=void 0,h=e.nodeName&&e.nodeName.toLowerCase();\"select\"===h||\"input\"===h&&\"file\"===e.type?f=Tc:Yb(e)?Uc?f=$c:(f=Yc,g=Xc):(h=e.nodeName)&&\"input\"===h.toLowerCase()&&(\"checkbox\"===e.type||\"radio\"===e.type)&&(f=Zc);if(f&&(f=f(a,b)))return Oc(f,c,d);g&&g(a,e,b);\"blur\"===a&&(a=e._wrapperState)&&a.controlled&&\"number\"===e.type&&Lc(e,\"number\",e.value)}},bd=H.extend({view:null,detail:null}),cd={Alt:\"altKey\",\nControl:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function dd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=cd[a])?!!b[a]:!1}function ed(){return dd}\nvar fd=bd.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:ed,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)}}),gd=fd.extend({pointerId:null,width:null,height:null,pressure:null,tiltX:null,tiltY:null,pointerType:null,isPrimary:null}),hd={mouseEnter:{registrationName:\"onMouseEnter\",dependencies:[\"mouseout\",\"mouseover\"]},\nmouseLeave:{registrationName:\"onMouseLeave\",dependencies:[\"mouseout\",\"mouseover\"]},pointerEnter:{registrationName:\"onPointerEnter\",dependencies:[\"pointerout\",\"pointerover\"]},pointerLeave:{registrationName:\"onPointerLeave\",dependencies:[\"pointerout\",\"pointerover\"]}},id={eventTypes:hd,extractEvents:function(a,b,c,d){var e=\"mouseover\"===a||\"pointerover\"===a,f=\"mouseout\"===a||\"pointerout\"===a;if(e&&(c.relatedTarget||c.fromElement)||!f&&!e)return null;e=d.window===d?d:(e=d.ownerDocument)?e.defaultView||\ne.parentWindow:window;f?(f=b,b=(b=c.relatedTarget||c.toElement)?Na(b):null):f=null;if(f===b)return null;var g=void 0,h=void 0,k=void 0,n=void 0;if(\"mouseout\"===a||\"mouseover\"===a)g=fd,h=hd.mouseLeave,k=hd.mouseEnter,n=\"mouse\";else if(\"pointerout\"===a||\"pointerover\"===a)g=gd,h=hd.pointerLeave,k=hd.pointerEnter,n=\"pointer\";a=null==f?e:Oa(f);e=null==b?e:Oa(b);h=g.getPooled(h,f,c,d);h.type=n+\"leave\";h.target=a;h.relatedTarget=e;c=g.getPooled(k,b,c,d);c.type=n+\"enter\";c.target=e;c.relatedTarget=a;Za(h,\nc,f,b);return[h,c]}};function jd(a){var b=a;if(a.alternate)for(;b.return;)b=b.return;else{if(0!==(b.effectTag&2))return 1;for(;b.return;)if(b=b.return,0!==(b.effectTag&2))return 1}return 3===b.tag?2:3}function kd(a){2!==jd(a)?A(\"188\"):void 0}\nfunction ld(a){var b=a.alternate;if(!b)return b=jd(a),3===b?A(\"188\"):void 0,1===b?null:a;for(var c=a,d=b;;){var e=c.return,f=e?e.alternate:null;if(!e||!f)break;if(e.child===f.child){for(var g=e.child;g;){if(g===c)return kd(e),a;if(g===d)return kd(e),b;g=g.sibling}A(\"188\")}if(c.return!==d.return)c=e,d=f;else{g=!1;for(var h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===c){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}g?\nvoid 0:A(\"189\")}}c.alternate!==d?A(\"190\"):void 0}3!==c.tag?A(\"188\"):void 0;return c.stateNode.current===c?a:b}function md(a){a=ld(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}\nfunction nd(a){a=ld(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child&&4!==b.tag)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}var od=H.extend({animationName:null,elapsedTime:null,pseudoElement:null}),pd=H.extend({clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),qd=bd.extend({relatedTarget:null});\nfunction rd(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}\nvar sd={Esc:\"Escape\",Spacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},td={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",\n116:\"F5\",117:\"F6\",118:\"F7\",119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},ud=bd.extend({key:function(a){if(a.key){var b=sd[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=rd(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?td[a.keyCode]||\"Unidentified\":\"\"},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:ed,charCode:function(a){return\"keypress\"===\na.type?rd(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===a.type?rd(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),vd=fd.extend({dataTransfer:null}),wd=bd.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:ed}),xd=H.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),yd=fd.extend({deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in\na?-a.wheelDeltaX:0},deltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null}),zd=[[\"abort\",\"abort\"],[fb,\"animationEnd\"],[gb,\"animationIteration\"],[hb,\"animationStart\"],[\"canplay\",\"canPlay\"],[\"canplaythrough\",\"canPlayThrough\"],[\"drag\",\"drag\"],[\"dragenter\",\"dragEnter\"],[\"dragexit\",\"dragExit\"],[\"dragleave\",\"dragLeave\"],[\"dragover\",\"dragOver\"],[\"durationchange\",\"durationChange\"],[\"emptied\",\"emptied\"],[\"encrypted\",\"encrypted\"],\n[\"ended\",\"ended\"],[\"error\",\"error\"],[\"gotpointercapture\",\"gotPointerCapture\"],[\"load\",\"load\"],[\"loadeddata\",\"loadedData\"],[\"loadedmetadata\",\"loadedMetadata\"],[\"loadstart\",\"loadStart\"],[\"lostpointercapture\",\"lostPointerCapture\"],[\"mousemove\",\"mouseMove\"],[\"mouseout\",\"mouseOut\"],[\"mouseover\",\"mouseOver\"],[\"playing\",\"playing\"],[\"pointermove\",\"pointerMove\"],[\"pointerout\",\"pointerOut\"],[\"pointerover\",\"pointerOver\"],[\"progress\",\"progress\"],[\"scroll\",\"scroll\"],[\"seeking\",\"seeking\"],[\"stalled\",\"stalled\"],\n[\"suspend\",\"suspend\"],[\"timeupdate\",\"timeUpdate\"],[\"toggle\",\"toggle\"],[\"touchmove\",\"touchMove\"],[ib,\"transitionEnd\"],[\"waiting\",\"waiting\"],[\"wheel\",\"wheel\"]],Ad={},Bd={};function Cd(a,b){var c=a[0];a=a[1];var d=\"on\"+(a[0].toUpperCase()+a.slice(1));b={phasedRegistrationNames:{bubbled:d,captured:d+\"Capture\"},dependencies:[c],isInteractive:b};Ad[a]=b;Bd[c]=b}\n[[\"blur\",\"blur\"],[\"cancel\",\"cancel\"],[\"click\",\"click\"],[\"close\",\"close\"],[\"contextmenu\",\"contextMenu\"],[\"copy\",\"copy\"],[\"cut\",\"cut\"],[\"dblclick\",\"doubleClick\"],[\"dragend\",\"dragEnd\"],[\"dragstart\",\"dragStart\"],[\"drop\",\"drop\"],[\"focus\",\"focus\"],[\"input\",\"input\"],[\"invalid\",\"invalid\"],[\"keydown\",\"keyDown\"],[\"keypress\",\"keyPress\"],[\"keyup\",\"keyUp\"],[\"mousedown\",\"mouseDown\"],[\"mouseup\",\"mouseUp\"],[\"paste\",\"paste\"],[\"pause\",\"pause\"],[\"play\",\"play\"],[\"pointercancel\",\"pointerCancel\"],[\"pointerdown\",\"pointerDown\"],\n[\"pointerup\",\"pointerUp\"],[\"ratechange\",\"rateChange\"],[\"reset\",\"reset\"],[\"seeked\",\"seeked\"],[\"submit\",\"submit\"],[\"touchcancel\",\"touchCancel\"],[\"touchend\",\"touchEnd\"],[\"touchstart\",\"touchStart\"],[\"volumechange\",\"volumeChange\"]].forEach(function(a){Cd(a,!0)});zd.forEach(function(a){Cd(a,!1)});\nvar Dd={eventTypes:Ad,isInteractiveTopLevelEventType:function(a){a=Bd[a];return void 0!==a&&!0===a.isInteractive},extractEvents:function(a,b,c,d){var e=Bd[a];if(!e)return null;switch(a){case \"keypress\":if(0===rd(c))return null;case \"keydown\":case \"keyup\":a=ud;break;case \"blur\":case \"focus\":a=qd;break;case \"click\":if(2===c.button)return null;case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":a=fd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":a=\nvd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":a=wd;break;case fb:case gb:case hb:a=od;break;case ib:a=xd;break;case \"scroll\":a=bd;break;case \"wheel\":a=yd;break;case \"copy\":case \"cut\":case \"paste\":a=pd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":a=gd;break;default:a=H}b=a.getPooled(e,b,c,d);Ya(b);return b}},Ed=Dd.isInteractiveTopLevelEventType,\nFd=[];function Gd(a){var b=a.targetInst;do{if(!b){a.ancestors.push(b);break}var c;for(c=b;c.return;)c=c.return;c=3!==c.tag?null:c.stateNode.containerInfo;if(!c)break;a.ancestors.push(b);b=Na(c)}while(b);for(c=0;c<a.ancestors.length;c++)b=a.ancestors[c],Ja(a.topLevelType,b,a.nativeEvent,Zb(a.nativeEvent))}var Hd=!0;function Id(a){Hd=!!a}function K(a,b){if(!b)return null;var c=(Ed(a)?Kd:Ld).bind(null,a);b.addEventListener(a,c,!1)}\nfunction Md(a,b){if(!b)return null;var c=(Ed(a)?Kd:Ld).bind(null,a);b.addEventListener(a,c,!0)}function Kd(a,b){Tb(Ld,a,b)}function Ld(a,b){if(Hd){var c=Zb(b);c=Na(c);null===c||\"number\"!==typeof c.tag||2===jd(c)||(c=null);if(Fd.length){var d=Fd.pop();d.topLevelType=a;d.nativeEvent=b;d.targetInst=c;a=d}else a={topLevelType:a,nativeEvent:b,targetInst:c,ancestors:[]};try{Wb(Gd,a)}finally{a.topLevelType=null,a.nativeEvent=null,a.targetInst=null,a.ancestors.length=0,10>Fd.length&&Fd.push(a)}}}\nvar Nd={get _enabled(){return Hd},setEnabled:Id,isEnabled:function(){return Hd},trapBubbledEvent:K,trapCapturedEvent:Md,dispatchEvent:Ld},Od={},Pd=0,Qd=\"_reactListenersID\"+(\"\"+Math.random()).slice(2);function Rd(a){Object.prototype.hasOwnProperty.call(a,Qd)||(a[Qd]=Pd++,Od[a[Qd]]={});return Od[a[Qd]]}function Sd(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Td(a,b){var c=Sd(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Sd(c)}}function Ud(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nvar Vd=m.canUseDOM&&\"documentMode\"in document&&11>=document.documentMode,Wd={select:{phasedRegistrationNames:{bubbled:\"onSelect\",captured:\"onSelectCapture\"},dependencies:\"blur contextmenu focus keydown keyup mousedown mouseup selectionchange\".split(\" \")}},Xd=null,Yd=null,Zd=null,$d=!1;\nfunction ae(a,b){if($d||null==Xd||Xd!==da())return null;var c=Xd;\"selectionStart\"in c&&Ud(c)?c={start:c.selectionStart,end:c.selectionEnd}:window.getSelection?(c=window.getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset}):c=void 0;return Zd&&ea(Zd,c)?null:(Zd=c,a=H.getPooled(Wd.select,Yd,a,b),a.type=\"select\",a.target=Xd,Ya(a),a)}\nvar be={eventTypes:Wd,extractEvents:function(a,b,c,d){var e=d.window===d?d.document:9===d.nodeType?d:d.ownerDocument,f;if(!(f=!e)){a:{e=Rd(e);f=sa.onSelect;for(var g=0;g<f.length;g++){var h=f[g];if(!e.hasOwnProperty(h)||!e[h]){e=!1;break a}}e=!0}f=!e}if(f)return null;e=b?Oa(b):window;switch(a){case \"focus\":if(Yb(e)||\"true\"===e.contentEditable)Xd=e,Yd=b,Zd=null;break;case \"blur\":Zd=Yd=Xd=null;break;case \"mousedown\":$d=!0;break;case \"contextmenu\":case \"mouseup\":return $d=!1,ae(c,d);case \"selectionchange\":if(Vd)break;\ncase \"keydown\":case \"keyup\":return ae(c,d)}return null}};Ga.injectEventPluginOrder(\"ResponderEventPlugin SimpleEventPlugin TapEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin\".split(\" \"));wa=Qa.getFiberCurrentPropsFromNode;xa=Qa.getInstanceFromNode;ya=Qa.getNodeFromInstance;Ga.injectEventPluginsByName({SimpleEventPlugin:Dd,EnterLeaveEventPlugin:id,ChangeEventPlugin:ad,SelectEventPlugin:be,BeforeInputEventPlugin:Ib});\nvar ce=\"function\"===typeof requestAnimationFrame?requestAnimationFrame:void 0,de=Date,ee=setTimeout,fe=clearTimeout,ge=void 0;if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var he=performance;ge=function(){return he.now()}}else ge=function(){return de.now()};var ie=void 0,je=void 0;\nif(m.canUseDOM){var ke=\"function\"===typeof ce?ce:function(){A(\"276\")},L=null,le=null,me=-1,ne=!1,oe=!1,pe=0,qe=33,re=33,se={didTimeout:!1,timeRemaining:function(){var a=pe-ge();return 0<a?a:0}},ue=function(a,b){var c=a.scheduledCallback,d=!1;try{c(b),d=!0}finally{je(a),d||(ne=!0,window.postMessage(te,\"*\"))}},te=\"__reactIdleCallback$\"+Math.random().toString(36).slice(2);window.addEventListener(\"message\",function(a){if(a.source===window&&a.data===te&&(ne=!1,null!==L)){if(null!==L){var b=ge();if(!(-1===\nme||me>b)){a=-1;for(var c=[],d=L;null!==d;){var e=d.timeoutTime;-1!==e&&e<=b?c.push(d):-1!==e&&(-1===a||e<a)&&(a=e);d=d.next}if(0<c.length)for(se.didTimeout=!0,b=0,d=c.length;b<d;b++)ue(c[b],se);me=a}}for(a=ge();0<pe-a&&null!==L;)a=L,se.didTimeout=!1,ue(a,se),a=ge();null===L||oe||(oe=!0,ke(ve))}},!1);var ve=function(a){oe=!1;var b=a-pe+re;b<re&&qe<re?(8>b&&(b=8),re=b<qe?qe:b):qe=b;pe=a+re;ne||(ne=!0,window.postMessage(te,\"*\"))};ie=function(a,b){var c=-1;null!=b&&\"number\"===typeof b.timeout&&(c=ge()+\nb.timeout);if(-1===me||-1!==c&&c<me)me=c;a={scheduledCallback:a,timeoutTime:c,prev:null,next:null};null===L?L=a:(b=a.prev=le,null!==b&&(b.next=a));le=a;oe||(oe=!0,ke(ve));return a};je=function(a){if(null!==a.prev||L===a){var b=a.next,c=a.prev;a.next=null;a.prev=null;null!==b?null!==c?(c.next=b,b.prev=c):(b.prev=null,L=b):null!==c?(c.next=null,le=c):le=L=null}}}else{var we=new Map;ie=function(a){var b={scheduledCallback:a,timeoutTime:0,next:null,prev:null},c=ee(function(){a({timeRemaining:function(){return Infinity},\ndidTimeout:!1})});we.set(a,c);return b};je=function(a){var b=we.get(a.scheduledCallback);we.delete(a);fe(b)}}function xe(a){var b=\"\";ba.Children.forEach(a,function(a){null==a||\"string\"!==typeof a&&\"number\"!==typeof a||(b+=a)});return b}function ye(a,b){a=p({children:void 0},b);if(b=xe(b.children))a.children=b;return a}\nfunction ze(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+c;b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction Ae(a,b){var c=b.value;a._wrapperState={initialValue:null!=c?c:b.defaultValue,wasMultiple:!!b.multiple}}function Be(a,b){null!=b.dangerouslySetInnerHTML?A(\"91\"):void 0;return p({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function Ce(a,b){var c=b.value;null==c&&(c=b.defaultValue,b=b.children,null!=b&&(null!=c?A(\"92\"):void 0,Array.isArray(b)&&(1>=b.length?void 0:A(\"93\"),b=b[0]),c=\"\"+b),null==c&&(c=\"\"));a._wrapperState={initialValue:\"\"+c}}\nfunction De(a,b){var c=b.value;null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&(a.defaultValue=c));null!=b.defaultValue&&(a.defaultValue=b.defaultValue)}function Ee(a){var b=a.textContent;b===a._wrapperState.initialValue&&(a.value=b)}var Fe={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};\nfunction Ge(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function He(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?Ge(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar Ie=void 0,Je=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==Fe.svg||\"innerHTML\"in a)a.innerHTML=b;else{Ie=Ie||document.createElement(\"div\");Ie.innerHTML=\"<svg>\"+b+\"</svg>\";for(b=Ie.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction Ke(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar Le={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,\nstopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},Me=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(Le).forEach(function(a){Me.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);Le[b]=Le[a]})});\nfunction Ne(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\");var e=c;var f=b[c];e=null==f||\"boolean\"===typeof f||\"\"===f?\"\":d||\"number\"!==typeof f||0===f||Le.hasOwnProperty(e)&&Le[e]?(\"\"+f).trim():f+\"px\";\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var Oe=p({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction Pe(a,b,c){b&&(Oe[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML?A(\"137\",a,c()):void 0),null!=b.dangerouslySetInnerHTML&&(null!=b.children?A(\"60\"):void 0,\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML?void 0:A(\"61\")),null!=b.style&&\"object\"!==typeof b.style?A(\"62\",c()):void 0)}\nfunction Qe(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}var Re=v.thatReturns(\"\");\nfunction Se(a,b){a=9===a.nodeType||11===a.nodeType?a:a.ownerDocument;var c=Rd(a);b=sa[b];for(var d=0;d<b.length;d++){var e=b[d];if(!c.hasOwnProperty(e)||!c[e]){switch(e){case \"scroll\":Md(\"scroll\",a);break;case \"focus\":case \"blur\":Md(\"focus\",a);Md(\"blur\",a);c.blur=!0;c.focus=!0;break;case \"cancel\":case \"close\":$b(e,!0)&&Md(e,a);break;case \"invalid\":case \"submit\":case \"reset\":break;default:-1===jb.indexOf(e)&&K(e,a)}c[e]=!0}}}\nfunction Te(a,b,c,d){c=9===c.nodeType?c:c.ownerDocument;d===Fe.html&&(d=Ge(a));d===Fe.html?\"script\"===a?(a=c.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):a=\"string\"===typeof b.is?c.createElement(a,{is:b.is}):c.createElement(a):a=c.createElementNS(d,a);return a}function Ue(a,b){return(9===b.nodeType?b:b.ownerDocument).createTextNode(a)}\nfunction Ve(a,b,c,d){var e=Qe(b,c);switch(b){case \"iframe\":case \"object\":K(\"load\",a);var f=c;break;case \"video\":case \"audio\":for(f=0;f<jb.length;f++)K(jb[f],a);f=c;break;case \"source\":K(\"error\",a);f=c;break;case \"img\":case \"image\":case \"link\":K(\"error\",a);K(\"load\",a);f=c;break;case \"form\":K(\"reset\",a);K(\"submit\",a);f=c;break;case \"details\":K(\"toggle\",a);f=c;break;case \"input\":Hc(a,c);f=Gc(a,c);K(\"invalid\",a);Se(d,\"onChange\");break;case \"option\":f=ye(a,c);break;case \"select\":Ae(a,c);f=p({},c,{value:void 0});\nK(\"invalid\",a);Se(d,\"onChange\");break;case \"textarea\":Ce(a,c);f=Be(a,c);K(\"invalid\",a);Se(d,\"onChange\");break;default:f=c}Pe(b,f,Re);var g=f,h;for(h in g)if(g.hasOwnProperty(h)){var k=g[h];\"style\"===h?Ne(a,k,Re):\"dangerouslySetInnerHTML\"===h?(k=k?k.__html:void 0,null!=k&&Je(a,k)):\"children\"===h?\"string\"===typeof k?(\"textarea\"!==b||\"\"!==k)&&Ke(a,k):\"number\"===typeof k&&Ke(a,\"\"+k):\"suppressContentEditableWarning\"!==h&&\"suppressHydrationWarning\"!==h&&\"autoFocus\"!==h&&(ra.hasOwnProperty(h)?null!=k&&Se(d,\nh):null!=k&&Fc(a,h,k,e))}switch(b){case \"input\":cc(a);Mc(a,c,!1);break;case \"textarea\":cc(a);Ee(a,c);break;case \"option\":null!=c.value&&a.setAttribute(\"value\",c.value);break;case \"select\":a.multiple=!!c.multiple;b=c.value;null!=b?ze(a,!!c.multiple,b,!1):null!=c.defaultValue&&ze(a,!!c.multiple,c.defaultValue,!0);break;default:\"function\"===typeof f.onClick&&(a.onclick=v)}}\nfunction We(a,b,c,d,e){var f=null;switch(b){case \"input\":c=Gc(a,c);d=Gc(a,d);f=[];break;case \"option\":c=ye(a,c);d=ye(a,d);f=[];break;case \"select\":c=p({},c,{value:void 0});d=p({},d,{value:void 0});f=[];break;case \"textarea\":c=Be(a,c);d=Be(a,d);f=[];break;default:\"function\"!==typeof c.onClick&&\"function\"===typeof d.onClick&&(a.onclick=v)}Pe(b,d,Re);b=a=void 0;var g=null;for(a in c)if(!d.hasOwnProperty(a)&&c.hasOwnProperty(a)&&null!=c[a])if(\"style\"===a){var h=c[a];for(b in h)h.hasOwnProperty(b)&&(g||\n(g={}),g[b]=\"\")}else\"dangerouslySetInnerHTML\"!==a&&\"children\"!==a&&\"suppressContentEditableWarning\"!==a&&\"suppressHydrationWarning\"!==a&&\"autoFocus\"!==a&&(ra.hasOwnProperty(a)?f||(f=[]):(f=f||[]).push(a,null));for(a in d){var k=d[a];h=null!=c?c[a]:void 0;if(d.hasOwnProperty(a)&&k!==h&&(null!=k||null!=h))if(\"style\"===a)if(h){for(b in h)!h.hasOwnProperty(b)||k&&k.hasOwnProperty(b)||(g||(g={}),g[b]=\"\");for(b in k)k.hasOwnProperty(b)&&h[b]!==k[b]&&(g||(g={}),g[b]=k[b])}else g||(f||(f=[]),f.push(a,g)),\ng=k;else\"dangerouslySetInnerHTML\"===a?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(a,\"\"+k)):\"children\"===a?h===k||\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(a,\"\"+k):\"suppressContentEditableWarning\"!==a&&\"suppressHydrationWarning\"!==a&&(ra.hasOwnProperty(a)?(null!=k&&Se(e,a),f||h===k||(f=[])):(f=f||[]).push(a,k))}g&&(f=f||[]).push(\"style\",g);return f}\nfunction Xe(a,b,c,d,e){\"input\"===c&&\"radio\"===e.type&&null!=e.name&&Jc(a,e);Qe(c,d);d=Qe(c,e);for(var f=0;f<b.length;f+=2){var g=b[f],h=b[f+1];\"style\"===g?Ne(a,h,Re):\"dangerouslySetInnerHTML\"===g?Je(a,h):\"children\"===g?Ke(a,h):Fc(a,g,h,d)}switch(c){case \"input\":Kc(a,e);break;case \"textarea\":De(a,e);break;case \"select\":a._wrapperState.initialValue=void 0,b=a._wrapperState.wasMultiple,a._wrapperState.wasMultiple=!!e.multiple,c=e.value,null!=c?ze(a,!!e.multiple,c,!1):b!==!!e.multiple&&(null!=e.defaultValue?\nze(a,!!e.multiple,e.defaultValue,!0):ze(a,!!e.multiple,e.multiple?[]:\"\",!1))}}\nfunction Ye(a,b,c,d,e){switch(b){case \"iframe\":case \"object\":K(\"load\",a);break;case \"video\":case \"audio\":for(d=0;d<jb.length;d++)K(jb[d],a);break;case \"source\":K(\"error\",a);break;case \"img\":case \"image\":case \"link\":K(\"error\",a);K(\"load\",a);break;case \"form\":K(\"reset\",a);K(\"submit\",a);break;case \"details\":K(\"toggle\",a);break;case \"input\":Hc(a,c);K(\"invalid\",a);Se(e,\"onChange\");break;case \"select\":Ae(a,c);K(\"invalid\",a);Se(e,\"onChange\");break;case \"textarea\":Ce(a,c),K(\"invalid\",a),Se(e,\"onChange\")}Pe(b,\nc,Re);d=null;for(var f in c)if(c.hasOwnProperty(f)){var g=c[f];\"children\"===f?\"string\"===typeof g?a.textContent!==g&&(d=[\"children\",g]):\"number\"===typeof g&&a.textContent!==\"\"+g&&(d=[\"children\",\"\"+g]):ra.hasOwnProperty(f)&&null!=g&&Se(e,f)}switch(b){case \"input\":cc(a);Mc(a,c,!0);break;case \"textarea\":cc(a);Ee(a,c);break;case \"select\":case \"option\":break;default:\"function\"===typeof c.onClick&&(a.onclick=v)}return d}function Ze(a,b){return a.nodeValue!==b}\nvar $e={createElement:Te,createTextNode:Ue,setInitialProperties:Ve,diffProperties:We,updateProperties:Xe,diffHydratedProperties:Ye,diffHydratedText:Ze,warnForUnmatchedText:function(){},warnForDeletedHydratableElement:function(){},warnForDeletedHydratableText:function(){},warnForInsertedHydratedElement:function(){},warnForInsertedHydratedText:function(){},restoreControlledState:function(a,b,c){switch(b){case \"input\":Kc(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;\nc=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Pa(d);e?void 0:A(\"90\");dc(d);Kc(d,e)}}}break;case \"textarea\":De(a,c);break;case \"select\":b=c.value,null!=b&&ze(a,!!c.multiple,b,!1)}}},af=null,bf=null;function cf(a,b){switch(a){case \"button\":case \"input\":case \"select\":case \"textarea\":return!!b.autoFocus}return!1}\nfunction df(a,b){return\"textarea\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&\"string\"===typeof b.dangerouslySetInnerHTML.__html}var ef=ge,ff=ie,gf=je;function hf(a){for(a=a.nextSibling;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}function jf(a){for(a=a.firstChild;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}new Set;var kf=[],lf=-1;function mf(a){return{current:a}}\nfunction M(a){0>lf||(a.current=kf[lf],kf[lf]=null,lf--)}function N(a,b){lf++;kf[lf]=a.current;a.current=b}var nf=mf(ha),O=mf(!1),of=ha;function pf(a){return qf(a)?of:nf.current}\nfunction rf(a,b){var c=a.type.contextTypes;if(!c)return ha;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function qf(a){return 2===a.tag&&null!=a.type.childContextTypes}function sf(a){qf(a)&&(M(O,a),M(nf,a))}function tf(a){M(O,a);M(nf,a)}\nfunction uf(a,b,c){nf.current!==ha?A(\"168\"):void 0;N(nf,b,a);N(O,c,a)}function vf(a,b){var c=a.stateNode,d=a.type.childContextTypes;if(\"function\"!==typeof c.getChildContext)return b;c=c.getChildContext();for(var e in c)e in d?void 0:A(\"108\",uc(a)||\"Unknown\",e);return p({},b,c)}function wf(a){if(!qf(a))return!1;var b=a.stateNode;b=b&&b.__reactInternalMemoizedMergedChildContext||ha;of=nf.current;N(nf,b,a);N(O,O.current,a);return!0}\nfunction xf(a,b){var c=a.stateNode;c?void 0:A(\"169\");if(b){var d=vf(a,of);c.__reactInternalMemoizedMergedChildContext=d;M(O,a);M(nf,a);N(nf,d,a)}else M(O,a);N(O,b,a)}\nfunction yf(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=null;this.index=0;this.ref=null;this.pendingProps=b;this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.expirationTime=0;this.alternate=null}\nfunction zf(a,b,c){var d=a.alternate;null===d?(d=new yf(a.tag,b,a.key,a.mode),d.type=a.type,d.stateNode=a.stateNode,d.alternate=a,a.alternate=d):(d.pendingProps=b,d.effectTag=0,d.nextEffect=null,d.firstEffect=null,d.lastEffect=null);d.expirationTime=c;d.child=a.child;d.memoizedProps=a.memoizedProps;d.memoizedState=a.memoizedState;d.updateQueue=a.updateQueue;d.sibling=a.sibling;d.index=a.index;d.ref=a.ref;return d}\nfunction Af(a,b,c){var d=a.type,e=a.key;a=a.props;if(\"function\"===typeof d)var f=d.prototype&&d.prototype.isReactComponent?2:0;else if(\"string\"===typeof d)f=5;else switch(d){case ic:return Bf(a.children,b,c,e);case pc:f=11;b|=3;break;case jc:f=11;b|=2;break;case kc:return d=new yf(15,a,e,b|4),d.type=kc,d.expirationTime=c,d;case rc:f=16;b|=2;break;default:a:{switch(\"object\"===typeof d&&null!==d?d.$$typeof:null){case lc:f=13;break a;case mc:f=12;break a;case qc:f=14;break a;default:A(\"130\",null==d?\nd:typeof d,\"\")}f=void 0}}b=new yf(f,a,e,b);b.type=d;b.expirationTime=c;return b}function Bf(a,b,c,d){a=new yf(10,a,d,b);a.expirationTime=c;return a}function Cf(a,b,c){a=new yf(6,a,null,b);a.expirationTime=c;return a}function Df(a,b,c){b=new yf(4,null!==a.children?a.children:[],a.key,b);b.expirationTime=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction Ef(a,b,c){b=new yf(3,null,null,b?3:0);a={current:b,containerInfo:a,pendingChildren:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,pendingCommitExpirationTime:0,finishedWork:null,context:null,pendingContext:null,hydrate:c,remainingExpirationTime:0,firstBatch:null,nextScheduledRoot:null};return b.stateNode=a}var Ff=null,Gf=null;function Hf(a){return function(b){try{return a(b)}catch(c){}}}\nfunction If(a){if(\"undefined\"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(b.isDisabled||!b.supportsFiber)return!0;try{var c=b.inject(a);Ff=Hf(function(a){return b.onCommitFiberRoot(c,a)});Gf=Hf(function(a){return b.onCommitFiberUnmount(c,a)})}catch(d){}return!0}function Jf(a){\"function\"===typeof Ff&&Ff(a)}function Kf(a){\"function\"===typeof Gf&&Gf(a)}var Lf=!1;\nfunction Mf(a){return{expirationTime:0,baseState:a,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function Nf(a){return{expirationTime:a.expirationTime,baseState:a.baseState,firstUpdate:a.firstUpdate,lastUpdate:a.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}\nfunction Of(a){return{expirationTime:a,tag:0,payload:null,callback:null,next:null,nextEffect:null}}function Pf(a,b,c){null===a.lastUpdate?a.firstUpdate=a.lastUpdate=b:(a.lastUpdate.next=b,a.lastUpdate=b);if(0===a.expirationTime||a.expirationTime>c)a.expirationTime=c}\nfunction Qf(a,b,c){var d=a.alternate;if(null===d){var e=a.updateQueue;var f=null;null===e&&(e=a.updateQueue=Mf(a.memoizedState))}else e=a.updateQueue,f=d.updateQueue,null===e?null===f?(e=a.updateQueue=Mf(a.memoizedState),f=d.updateQueue=Mf(d.memoizedState)):e=a.updateQueue=Nf(f):null===f&&(f=d.updateQueue=Nf(e));null===f||e===f?Pf(e,b,c):null===e.lastUpdate||null===f.lastUpdate?(Pf(e,b,c),Pf(f,b,c)):(Pf(e,b,c),f.lastUpdate=b)}\nfunction Rf(a,b,c){var d=a.updateQueue;d=null===d?a.updateQueue=Mf(a.memoizedState):Sf(a,d);null===d.lastCapturedUpdate?d.firstCapturedUpdate=d.lastCapturedUpdate=b:(d.lastCapturedUpdate.next=b,d.lastCapturedUpdate=b);if(0===d.expirationTime||d.expirationTime>c)d.expirationTime=c}function Sf(a,b){var c=a.alternate;null!==c&&b===c.updateQueue&&(b=a.updateQueue=Nf(b));return b}\nfunction Tf(a,b,c,d,e,f){switch(c.tag){case 1:return a=c.payload,\"function\"===typeof a?a.call(f,d,e):a;case 3:a.effectTag=a.effectTag&-1025|64;case 0:a=c.payload;e=\"function\"===typeof a?a.call(f,d,e):a;if(null===e||void 0===e)break;return p({},d,e);case 2:Lf=!0}return d}\nfunction Uf(a,b,c,d,e){Lf=!1;if(!(0===b.expirationTime||b.expirationTime>e)){b=Sf(a,b);for(var f=b.baseState,g=null,h=0,k=b.firstUpdate,n=f;null!==k;){var r=k.expirationTime;if(r>e){if(null===g&&(g=k,f=n),0===h||h>r)h=r}else n=Tf(a,b,k,n,c,d),null!==k.callback&&(a.effectTag|=32,k.nextEffect=null,null===b.lastEffect?b.firstEffect=b.lastEffect=k:(b.lastEffect.nextEffect=k,b.lastEffect=k));k=k.next}r=null;for(k=b.firstCapturedUpdate;null!==k;){var w=k.expirationTime;if(w>e){if(null===r&&(r=k,null===\ng&&(f=n)),0===h||h>w)h=w}else n=Tf(a,b,k,n,c,d),null!==k.callback&&(a.effectTag|=32,k.nextEffect=null,null===b.lastCapturedEffect?b.firstCapturedEffect=b.lastCapturedEffect=k:(b.lastCapturedEffect.nextEffect=k,b.lastCapturedEffect=k));k=k.next}null===g&&(b.lastUpdate=null);null===r?b.lastCapturedUpdate=null:a.effectTag|=32;null===g&&null===r&&(f=n);b.baseState=f;b.firstUpdate=g;b.firstCapturedUpdate=r;b.expirationTime=h;a.memoizedState=n}}\nfunction Vf(a,b){\"function\"!==typeof a?A(\"191\",a):void 0;a.call(b)}\nfunction Wf(a,b,c){null!==b.firstCapturedUpdate&&(null!==b.lastUpdate&&(b.lastUpdate.next=b.firstCapturedUpdate,b.lastUpdate=b.lastCapturedUpdate),b.firstCapturedUpdate=b.lastCapturedUpdate=null);a=b.firstEffect;for(b.firstEffect=b.lastEffect=null;null!==a;){var d=a.callback;null!==d&&(a.callback=null,Vf(d,c));a=a.nextEffect}a=b.firstCapturedEffect;for(b.firstCapturedEffect=b.lastCapturedEffect=null;null!==a;)b=a.callback,null!==b&&(a.callback=null,Vf(b,c)),a=a.nextEffect}\nfunction Xf(a,b){return{value:a,source:b,stack:vc(b)}}var Yf=mf(null),Zf=mf(null),$f=mf(0);function ag(a){var b=a.type._context;N($f,b._changedBits,a);N(Zf,b._currentValue,a);N(Yf,a,a);b._currentValue=a.pendingProps.value;b._changedBits=a.stateNode}function bg(a){var b=$f.current,c=Zf.current;M(Yf,a);M(Zf,a);M($f,a);a=a.type._context;a._currentValue=c;a._changedBits=b}var cg={},dg=mf(cg),eg=mf(cg),fg=mf(cg);function gg(a){a===cg?A(\"174\"):void 0;return a}\nfunction ig(a,b){N(fg,b,a);N(eg,a,a);N(dg,cg,a);var c=b.nodeType;switch(c){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:He(null,\"\");break;default:c=8===c?b.parentNode:b,b=c.namespaceURI||null,c=c.tagName,b=He(b,c)}M(dg,a);N(dg,b,a)}function jg(a){M(dg,a);M(eg,a);M(fg,a)}function kg(a){eg.current===a&&(M(dg,a),M(eg,a))}function lg(a,b,c){var d=a.memoizedState;b=b(c,d);d=null===b||void 0===b?d:p({},d,b);a.memoizedState=d;a=a.updateQueue;null!==a&&0===a.expirationTime&&(a.baseState=d)}\nvar pg={isMounted:function(a){return(a=a._reactInternalFiber)?2===jd(a):!1},enqueueSetState:function(a,b,c){a=a._reactInternalFiber;var d=mg();d=ng(d,a);var e=Of(d);e.payload=b;void 0!==c&&null!==c&&(e.callback=c);Qf(a,e,d);og(a,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternalFiber;var d=mg();d=ng(d,a);var e=Of(d);e.tag=1;e.payload=b;void 0!==c&&null!==c&&(e.callback=c);Qf(a,e,d);og(a,d)},enqueueForceUpdate:function(a,b){a=a._reactInternalFiber;var c=mg();c=ng(c,a);var d=Of(c);d.tag=2;void 0!==\nb&&null!==b&&(d.callback=b);Qf(a,d,c);og(a,c)}};function qg(a,b,c,d,e,f){var g=a.stateNode;a=a.type;return\"function\"===typeof g.shouldComponentUpdate?g.shouldComponentUpdate(c,e,f):a.prototype&&a.prototype.isPureReactComponent?!ea(b,c)||!ea(d,e):!0}\nfunction rg(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&pg.enqueueReplaceState(b,b.state,null)}\nfunction sg(a,b){var c=a.type,d=a.stateNode,e=a.pendingProps,f=pf(a);d.props=e;d.state=a.memoizedState;d.refs=ha;d.context=rf(a,f);f=a.updateQueue;null!==f&&(Uf(a,f,e,d,b),d.state=a.memoizedState);f=a.type.getDerivedStateFromProps;\"function\"===typeof f&&(lg(a,f,e),d.state=a.memoizedState);\"function\"===typeof c.getDerivedStateFromProps||\"function\"===typeof d.getSnapshotBeforeUpdate||\"function\"!==typeof d.UNSAFE_componentWillMount&&\"function\"!==typeof d.componentWillMount||(c=d.state,\"function\"===typeof d.componentWillMount&&\nd.componentWillMount(),\"function\"===typeof d.UNSAFE_componentWillMount&&d.UNSAFE_componentWillMount(),c!==d.state&&pg.enqueueReplaceState(d,d.state,null),f=a.updateQueue,null!==f&&(Uf(a,f,e,d,b),d.state=a.memoizedState));\"function\"===typeof d.componentDidMount&&(a.effectTag|=4)}var tg=Array.isArray;\nfunction ug(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;var d=void 0;c&&(2!==c.tag?A(\"110\"):void 0,d=c.stateNode);d?void 0:A(\"147\",a);var e=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs===ha?d.refs={}:d.refs;null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}\"string\"!==typeof a?A(\"148\"):void 0;c._owner?void 0:A(\"254\",a)}return a}\nfunction vg(a,b){\"textarea\"!==a.type&&A(\"31\",\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b,\"\")}\nfunction wg(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.effectTag=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b,c){a=zf(a,b,c);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.effectTag=\n2,c):d;b.effectTag=2;return c}function g(b){a&&null===b.alternate&&(b.effectTag=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Cf(c,a.mode,d),b.return=a,b;b=e(b,c,d);b.return=a;return b}function k(a,b,c,d){if(null!==b&&b.type===c.type)return d=e(b,c.props,d),d.ref=ug(a,b,c),d.return=a,d;d=Af(c,a.mode,d);d.ref=ug(a,b,c);d.return=a;return d}function n(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=\nDf(c,a.mode,d),b.return=a,b;b=e(b,c.children||[],d);b.return=a;return b}function r(a,b,c,d,f){if(null===b||10!==b.tag)return b=Bf(c,a.mode,d,f),b.return=a,b;b=e(b,c,d);b.return=a;return b}function w(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=Cf(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case gc:return c=Af(b,a.mode,c),c.ref=ug(a,null,b),c.return=a,c;case hc:return b=Df(b,a.mode,c),b.return=a,b}if(tg(b)||tc(b))return b=Bf(b,a.mode,c,null),b.return=\na,b;vg(a,b)}return null}function P(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case gc:return c.key===e?c.type===ic?r(a,b,c.props.children,d,e):k(a,b,c,d):null;case hc:return c.key===e?n(a,b,c,d):null}if(tg(c)||tc(c))return null!==e?null:r(a,b,c,d,null);vg(a,c)}return null}function nc(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=a.get(c)||null,h(b,a,\"\"+d,e);\nif(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case gc:return a=a.get(null===d.key?c:d.key)||null,d.type===ic?r(b,a,d.props.children,e,d.key):k(b,a,d,e);case hc:return a=a.get(null===d.key?c:d.key)||null,n(b,a,d,e)}if(tg(d)||tc(d))return a=a.get(c)||null,r(b,a,d,e,null);vg(b,d)}return null}function Jd(e,g,h,k){for(var u=null,x=null,t=g,q=g=0,n=null;null!==t&&q<h.length;q++){t.index>q?(n=t,t=null):n=t.sibling;var l=P(e,t,h[q],k);if(null===l){null===t&&(t=n);break}a&&t&&null===l.alternate&&b(e,\nt);g=f(l,g,q);null===x?u=l:x.sibling=l;x=l;t=n}if(q===h.length)return c(e,t),u;if(null===t){for(;q<h.length;q++)if(t=w(e,h[q],k))g=f(t,g,q),null===x?u=t:x.sibling=t,x=t;return u}for(t=d(e,t);q<h.length;q++)if(n=nc(t,e,q,h[q],k))a&&null!==n.alternate&&t.delete(null===n.key?q:n.key),g=f(n,g,q),null===x?u=n:x.sibling=n,x=n;a&&t.forEach(function(a){return b(e,a)});return u}function E(e,g,h,k){var u=tc(h);\"function\"!==typeof u?A(\"150\"):void 0;h=u.call(h);null==h?A(\"151\"):void 0;for(var t=u=null,n=g,x=\ng=0,y=null,l=h.next();null!==n&&!l.done;x++,l=h.next()){n.index>x?(y=n,n=null):y=n.sibling;var r=P(e,n,l.value,k);if(null===r){n||(n=y);break}a&&n&&null===r.alternate&&b(e,n);g=f(r,g,x);null===t?u=r:t.sibling=r;t=r;n=y}if(l.done)return c(e,n),u;if(null===n){for(;!l.done;x++,l=h.next())l=w(e,l.value,k),null!==l&&(g=f(l,g,x),null===t?u=l:t.sibling=l,t=l);return u}for(n=d(e,n);!l.done;x++,l=h.next())l=nc(n,e,x,l.value,k),null!==l&&(a&&null!==l.alternate&&n.delete(null===l.key?x:l.key),g=f(l,g,x),null===\nt?u=l:t.sibling=l,t=l);a&&n.forEach(function(a){return b(e,a)});return u}return function(a,d,f,h){var k=\"object\"===typeof f&&null!==f&&f.type===ic&&null===f.key;k&&(f=f.props.children);var n=\"object\"===typeof f&&null!==f;if(n)switch(f.$$typeof){case gc:a:{n=f.key;for(k=d;null!==k;){if(k.key===n)if(10===k.tag?f.type===ic:k.type===f.type){c(a,k.sibling);d=e(k,f.type===ic?f.props.children:f.props,h);d.ref=ug(a,k,f);d.return=a;a=d;break a}else{c(a,k);break}else b(a,k);k=k.sibling}f.type===ic?(d=Bf(f.props.children,\na.mode,h,f.key),d.return=a,a=d):(h=Af(f,a.mode,h),h.ref=ug(a,d,f),h.return=a,a=h)}return g(a);case hc:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[],h);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=Df(f,a.mode,h);d.return=a;a=d}return g(a)}if(\"string\"===typeof f||\"number\"===typeof f)return f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f,h),d.return=\na,a=d):(c(a,d),d=Cf(f,a.mode,h),d.return=a,a=d),g(a);if(tg(f))return Jd(a,d,f,h);if(tc(f))return E(a,d,f,h);n&&vg(a,f);if(\"undefined\"===typeof f&&!k)switch(a.tag){case 2:case 1:h=a.type,A(\"152\",h.displayName||h.name||\"Component\")}return c(a,d)}}var xg=wg(!0),yg=wg(!1),zg=null,Ag=null,Bg=!1;function Cg(a,b){var c=new yf(5,null,null,0);c.type=\"DELETED\";c.stateNode=b;c.return=a;c.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}\nfunction Dg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;default:return!1}}function Eg(a){if(Bg){var b=Ag;if(b){var c=b;if(!Dg(a,b)){b=hf(c);if(!b||!Dg(a,b)){a.effectTag|=2;Bg=!1;zg=a;return}Cg(zg,c)}zg=a;Ag=jf(b)}else a.effectTag|=2,Bg=!1,zg=a}}\nfunction Fg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag;)a=a.return;zg=a}function Gg(a){if(a!==zg)return!1;if(!Bg)return Fg(a),Bg=!0,!1;var b=a.type;if(5!==a.tag||\"head\"!==b&&\"body\"!==b&&!df(b,a.memoizedProps))for(b=Ag;b;)Cg(a,b),b=hf(b);Fg(a);Ag=zg?hf(a.stateNode):null;return!0}function Hg(){Ag=zg=null;Bg=!1}function Q(a,b,c){Ig(a,b,c,b.expirationTime)}function Ig(a,b,c,d){b.child=null===a?yg(b,null,c,d):xg(b,a.child,c,d)}\nfunction Jg(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.effectTag|=128}function Kg(a,b,c,d,e){Jg(a,b);var f=0!==(b.effectTag&64);if(!c&&!f)return d&&xf(b,!1),R(a,b);c=b.stateNode;ec.current=b;var g=f?null:c.render();b.effectTag|=1;f&&(Ig(a,b,null,e),b.child=null);Ig(a,b,g,e);b.memoizedState=c.state;b.memoizedProps=c.props;d&&xf(b,!0);return b.child}\nfunction Lg(a){var b=a.stateNode;b.pendingContext?uf(a,b.pendingContext,b.pendingContext!==b.context):b.context&&uf(a,b.context,!1);ig(a,b.containerInfo)}\nfunction Mg(a,b,c,d){var e=a.child;null!==e&&(e.return=a);for(;null!==e;){switch(e.tag){case 12:var f=e.stateNode|0;if(e.type===b&&0!==(f&c)){for(f=e;null!==f;){var g=f.alternate;if(0===f.expirationTime||f.expirationTime>d)f.expirationTime=d,null!==g&&(0===g.expirationTime||g.expirationTime>d)&&(g.expirationTime=d);else if(null!==g&&(0===g.expirationTime||g.expirationTime>d))g.expirationTime=d;else break;f=f.return}f=null}else f=e.child;break;case 13:f=e.type===a.type?null:e.child;break;default:f=\ne.child}if(null!==f)f.return=e;else for(f=e;null!==f;){if(f===a){f=null;break}e=f.sibling;if(null!==e){e.return=f.return;f=e;break}f=f.return}e=f}}\nfunction Qg(a,b,c){var d=b.type._context,e=b.pendingProps,f=b.memoizedProps,g=!0;if(O.current)g=!1;else if(f===e)return b.stateNode=0,ag(b),R(a,b);var h=e.value;b.memoizedProps=e;if(null===f)h=1073741823;else if(f.value===e.value){if(f.children===e.children&&g)return b.stateNode=0,ag(b),R(a,b);h=0}else{var k=f.value;if(k===h&&(0!==k||1/k===1/h)||k!==k&&h!==h){if(f.children===e.children&&g)return b.stateNode=0,ag(b),R(a,b);h=0}else if(h=\"function\"===typeof d._calculateChangedBits?d._calculateChangedBits(k,\nh):1073741823,h|=0,0===h){if(f.children===e.children&&g)return b.stateNode=0,ag(b),R(a,b)}else Mg(b,d,h,c)}b.stateNode=h;ag(b);Q(a,b,e.children);return b.child}function R(a,b){null!==a&&b.child!==a.child?A(\"153\"):void 0;if(null!==b.child){a=b.child;var c=zf(a,a.pendingProps,a.expirationTime);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=zf(a,a.pendingProps,a.expirationTime),c.return=b;c.sibling=null}return b.child}\nfunction Rg(a,b,c){if(0===b.expirationTime||b.expirationTime>c){switch(b.tag){case 3:Lg(b);break;case 2:wf(b);break;case 4:ig(b,b.stateNode.containerInfo);break;case 13:ag(b)}return null}switch(b.tag){case 0:null!==a?A(\"155\"):void 0;var d=b.type,e=b.pendingProps,f=pf(b);f=rf(b,f);d=d(e,f);b.effectTag|=1;\"object\"===typeof d&&null!==d&&\"function\"===typeof d.render&&void 0===d.$$typeof?(f=b.type,b.tag=2,b.memoizedState=null!==d.state&&void 0!==d.state?d.state:null,f=f.getDerivedStateFromProps,\"function\"===\ntypeof f&&lg(b,f,e),e=wf(b),d.updater=pg,b.stateNode=d,d._reactInternalFiber=b,sg(b,c),a=Kg(a,b,!0,e,c)):(b.tag=1,Q(a,b,d),b.memoizedProps=e,a=b.child);return a;case 1:return e=b.type,c=b.pendingProps,O.current||b.memoizedProps!==c?(d=pf(b),d=rf(b,d),e=e(c,d),b.effectTag|=1,Q(a,b,e),b.memoizedProps=c,a=b.child):a=R(a,b),a;case 2:e=wf(b);if(null===a)if(null===b.stateNode){var g=b.pendingProps,h=b.type;d=pf(b);var k=2===b.tag&&null!=b.type.contextTypes;f=k?rf(b,d):ha;g=new h(g,f);b.memoizedState=null!==\ng.state&&void 0!==g.state?g.state:null;g.updater=pg;b.stateNode=g;g._reactInternalFiber=b;k&&(k=b.stateNode,k.__reactInternalMemoizedUnmaskedChildContext=d,k.__reactInternalMemoizedMaskedChildContext=f);sg(b,c);d=!0}else{h=b.type;d=b.stateNode;k=b.memoizedProps;f=b.pendingProps;d.props=k;var n=d.context;g=pf(b);g=rf(b,g);var r=h.getDerivedStateFromProps;(h=\"function\"===typeof r||\"function\"===typeof d.getSnapshotBeforeUpdate)||\"function\"!==typeof d.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof d.componentWillReceiveProps||\n(k!==f||n!==g)&&rg(b,d,f,g);Lf=!1;var w=b.memoizedState;n=d.state=w;var P=b.updateQueue;null!==P&&(Uf(b,P,f,d,c),n=b.memoizedState);k!==f||w!==n||O.current||Lf?(\"function\"===typeof r&&(lg(b,r,f),n=b.memoizedState),(k=Lf||qg(b,k,f,w,n,g))?(h||\"function\"!==typeof d.UNSAFE_componentWillMount&&\"function\"!==typeof d.componentWillMount||(\"function\"===typeof d.componentWillMount&&d.componentWillMount(),\"function\"===typeof d.UNSAFE_componentWillMount&&d.UNSAFE_componentWillMount()),\"function\"===typeof d.componentDidMount&&\n(b.effectTag|=4)):(\"function\"===typeof d.componentDidMount&&(b.effectTag|=4),b.memoizedProps=f,b.memoizedState=n),d.props=f,d.state=n,d.context=g,d=k):(\"function\"===typeof d.componentDidMount&&(b.effectTag|=4),d=!1)}else h=b.type,d=b.stateNode,f=b.memoizedProps,k=b.pendingProps,d.props=f,n=d.context,g=pf(b),g=rf(b,g),r=h.getDerivedStateFromProps,(h=\"function\"===typeof r||\"function\"===typeof d.getSnapshotBeforeUpdate)||\"function\"!==typeof d.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof d.componentWillReceiveProps||\n(f!==k||n!==g)&&rg(b,d,k,g),Lf=!1,n=b.memoizedState,w=d.state=n,P=b.updateQueue,null!==P&&(Uf(b,P,k,d,c),w=b.memoizedState),f!==k||n!==w||O.current||Lf?(\"function\"===typeof r&&(lg(b,r,k),w=b.memoizedState),(r=Lf||qg(b,f,k,n,w,g))?(h||\"function\"!==typeof d.UNSAFE_componentWillUpdate&&\"function\"!==typeof d.componentWillUpdate||(\"function\"===typeof d.componentWillUpdate&&d.componentWillUpdate(k,w,g),\"function\"===typeof d.UNSAFE_componentWillUpdate&&d.UNSAFE_componentWillUpdate(k,w,g)),\"function\"===typeof d.componentDidUpdate&&\n(b.effectTag|=4),\"function\"===typeof d.getSnapshotBeforeUpdate&&(b.effectTag|=256)):(\"function\"!==typeof d.componentDidUpdate||f===a.memoizedProps&&n===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof d.getSnapshotBeforeUpdate||f===a.memoizedProps&&n===a.memoizedState||(b.effectTag|=256),b.memoizedProps=k,b.memoizedState=w),d.props=k,d.state=w,d.context=g,d=r):(\"function\"!==typeof d.componentDidUpdate||f===a.memoizedProps&&n===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof d.getSnapshotBeforeUpdate||\nf===a.memoizedProps&&n===a.memoizedState||(b.effectTag|=256),d=!1);return Kg(a,b,d,e,c);case 3:Lg(b);e=b.updateQueue;if(null!==e)if(d=b.memoizedState,d=null!==d?d.element:null,Uf(b,e,b.pendingProps,null,c),e=b.memoizedState.element,e===d)Hg(),a=R(a,b);else{d=b.stateNode;if(d=(null===a||null===a.child)&&d.hydrate)Ag=jf(b.stateNode.containerInfo),zg=b,d=Bg=!0;d?(b.effectTag|=2,b.child=yg(b,null,e,c)):(Hg(),Q(a,b,e));a=b.child}else Hg(),a=R(a,b);return a;case 5:a:{gg(fg.current);e=gg(dg.current);d=He(e,\nb.type);e!==d&&(N(eg,b,b),N(dg,d,b));null===a&&Eg(b);e=b.type;k=b.memoizedProps;d=b.pendingProps;f=null!==a?a.memoizedProps:null;if(!O.current&&k===d){if(k=b.mode&1&&!!d.hidden)b.expirationTime=1073741823;if(!k||1073741823!==c){a=R(a,b);break a}}k=d.children;df(e,d)?k=null:f&&df(e,f)&&(b.effectTag|=16);Jg(a,b);1073741823!==c&&b.mode&1&&d.hidden?(b.expirationTime=1073741823,b.memoizedProps=d,a=null):(Q(a,b,k),b.memoizedProps=d,a=b.child)}return a;case 6:return null===a&&Eg(b),b.memoizedProps=b.pendingProps,\nnull;case 16:return null;case 4:return ig(b,b.stateNode.containerInfo),e=b.pendingProps,O.current||b.memoizedProps!==e?(null===a?b.child=xg(b,null,e,c):Q(a,b,e),b.memoizedProps=e,a=b.child):a=R(a,b),a;case 14:return e=b.type.render,c=b.pendingProps,d=b.ref,O.current||b.memoizedProps!==c||d!==(null!==a?a.ref:null)?(e=e(c,d),Q(a,b,e),b.memoizedProps=c,a=b.child):a=R(a,b),a;case 10:return c=b.pendingProps,O.current||b.memoizedProps!==c?(Q(a,b,c),b.memoizedProps=c,a=b.child):a=R(a,b),a;case 11:return c=\nb.pendingProps.children,O.current||null!==c&&b.memoizedProps!==c?(Q(a,b,c),b.memoizedProps=c,a=b.child):a=R(a,b),a;case 15:return c=b.pendingProps,b.memoizedProps===c?a=R(a,b):(Q(a,b,c.children),b.memoizedProps=c,a=b.child),a;case 13:return Qg(a,b,c);case 12:a:if(d=b.type,f=b.pendingProps,k=b.memoizedProps,e=d._currentValue,g=d._changedBits,O.current||0!==g||k!==f){b.memoizedProps=f;h=f.unstable_observedBits;if(void 0===h||null===h)h=1073741823;b.stateNode=h;if(0!==(g&h))Mg(b,d,g,c);else if(k===f){a=\nR(a,b);break a}c=f.children;c=c(e);b.effectTag|=1;Q(a,b,c);a=b.child}else a=R(a,b);return a;default:A(\"156\")}}function Sg(a){a.effectTag|=4}var Tg=void 0,Ug=void 0,Vg=void 0;Tg=function(){};Ug=function(a,b,c){(b.updateQueue=c)&&Sg(b)};Vg=function(a,b,c,d){c!==d&&Sg(b)};\nfunction Wg(a,b){var c=b.pendingProps;switch(b.tag){case 1:return null;case 2:return sf(b),null;case 3:jg(b);tf(b);var d=b.stateNode;d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)Gg(b),b.effectTag&=-3;Tg(b);return null;case 5:kg(b);d=gg(fg.current);var e=b.type;if(null!==a&&null!=b.stateNode){var f=a.memoizedProps,g=b.stateNode,h=gg(dg.current);g=We(g,e,f,c,d);Ug(a,b,g,e,f,c,d,h);a.ref!==b.ref&&(b.effectTag|=128)}else{if(!c)return null===b.stateNode?\nA(\"166\"):void 0,null;a=gg(dg.current);if(Gg(b))c=b.stateNode,e=b.type,f=b.memoizedProps,c[C]=b,c[Ma]=f,d=Ye(c,e,f,a,d),b.updateQueue=d,null!==d&&Sg(b);else{a=Te(e,c,d,a);a[C]=b;a[Ma]=c;a:for(f=b.child;null!==f;){if(5===f.tag||6===f.tag)a.appendChild(f.stateNode);else if(4!==f.tag&&null!==f.child){f.child.return=f;f=f.child;continue}if(f===b)break;for(;null===f.sibling;){if(null===f.return||f.return===b)break a;f=f.return}f.sibling.return=f.return;f=f.sibling}Ve(a,e,c,d);cf(e,c)&&Sg(b);b.stateNode=\na}null!==b.ref&&(b.effectTag|=128)}return null;case 6:if(a&&null!=b.stateNode)Vg(a,b,a.memoizedProps,c);else{if(\"string\"!==typeof c)return null===b.stateNode?A(\"166\"):void 0,null;d=gg(fg.current);gg(dg.current);Gg(b)?(d=b.stateNode,c=b.memoizedProps,d[C]=b,Ze(d,c)&&Sg(b)):(d=Ue(c,d),d[C]=b,b.stateNode=d)}return null;case 14:return null;case 16:return null;case 10:return null;case 11:return null;case 15:return null;case 4:return jg(b),Tg(b),null;case 13:return bg(b),null;case 12:return null;case 0:A(\"167\");\ndefault:A(\"156\")}}function Xg(a,b){var c=b.source;null===b.stack&&null!==c&&vc(c);null!==c&&uc(c);b=b.value;null!==a&&2===a.tag&&uc(a);try{b&&b.suppressReactErrorLogging||console.error(b)}catch(d){d&&d.suppressReactErrorLogging||console.error(d)}}function Yg(a){var b=a.ref;if(null!==b)if(\"function\"===typeof b)try{b(null)}catch(c){Zg(a,c)}else b.current=null}\nfunction $g(a){\"function\"===typeof Kf&&Kf(a);switch(a.tag){case 2:Yg(a);var b=a.stateNode;if(\"function\"===typeof b.componentWillUnmount)try{b.props=a.memoizedProps,b.state=a.memoizedState,b.componentWillUnmount()}catch(c){Zg(a,c)}break;case 5:Yg(a);break;case 4:ah(a)}}function bh(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction ch(a){a:{for(var b=a.return;null!==b;){if(bh(b)){var c=b;break a}b=b.return}A(\"160\");c=void 0}var d=b=void 0;switch(c.tag){case 5:b=c.stateNode;d=!1;break;case 3:b=c.stateNode.containerInfo;d=!0;break;case 4:b=c.stateNode.containerInfo;d=!0;break;default:A(\"161\")}c.effectTag&16&&(Ke(b,\"\"),c.effectTag&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||bh(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag;){if(c.effectTag&2)continue b;\nif(null===c.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.effectTag&2)){c=c.stateNode;break a}}for(var e=a;;){if(5===e.tag||6===e.tag)if(c)if(d){var f=b,g=e.stateNode,h=c;8===f.nodeType?f.parentNode.insertBefore(g,h):f.insertBefore(g,h)}else b.insertBefore(e.stateNode,c);else d?(f=b,g=e.stateNode,8===f.nodeType?f.parentNode.insertBefore(g,f):f.appendChild(g)):b.appendChild(e.stateNode);else if(4!==e.tag&&null!==e.child){e.child.return=e;e=e.child;continue}if(e===a)break;for(;null===\ne.sibling;){if(null===e.return||e.return===a)return;e=e.return}e.sibling.return=e.return;e=e.sibling}}\nfunction ah(a){for(var b=a,c=!1,d=void 0,e=void 0;;){if(!c){c=b.return;a:for(;;){null===c?A(\"160\"):void 0;switch(c.tag){case 5:d=c.stateNode;e=!1;break a;case 3:d=c.stateNode.containerInfo;e=!0;break a;case 4:d=c.stateNode.containerInfo;e=!0;break a}c=c.return}c=!0}if(5===b.tag||6===b.tag){a:for(var f=b,g=f;;)if($g(g),null!==g.child&&4!==g.tag)g.child.return=g,g=g.child;else{if(g===f)break;for(;null===g.sibling;){if(null===g.return||g.return===f)break a;g=g.return}g.sibling.return=g.return;g=g.sibling}e?\n(f=d,g=b.stateNode,8===f.nodeType?f.parentNode.removeChild(g):f.removeChild(g)):d.removeChild(b.stateNode)}else if(4===b.tag?d=b.stateNode.containerInfo:$g(b),null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return;b=b.return;4===b.tag&&(c=!1)}b.sibling.return=b.return;b=b.sibling}}\nfunction dh(a,b){switch(b.tag){case 2:break;case 5:var c=b.stateNode;if(null!=c){var d=b.memoizedProps;a=null!==a?a.memoizedProps:d;var e=b.type,f=b.updateQueue;b.updateQueue=null;null!==f&&(c[Ma]=d,Xe(c,f,e,a,d))}break;case 6:null===b.stateNode?A(\"162\"):void 0;b.stateNode.nodeValue=b.memoizedProps;break;case 3:break;case 15:break;case 16:break;default:A(\"163\")}}function eh(a,b,c){c=Of(c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){fh(d);Xg(a,b)};return c}\nfunction gh(a,b,c){c=Of(c);c.tag=3;var d=a.stateNode;null!==d&&\"function\"===typeof d.componentDidCatch&&(c.callback=function(){null===hh?hh=new Set([this]):hh.add(this);var c=b.value,d=b.stack;Xg(a,b);this.componentDidCatch(c,{componentStack:null!==d?d:\"\"})});return c}\nfunction ih(a,b,c,d,e,f){c.effectTag|=512;c.firstEffect=c.lastEffect=null;d=Xf(d,c);a=b;do{switch(a.tag){case 3:a.effectTag|=1024;d=eh(a,d,f);Rf(a,d,f);return;case 2:if(b=d,c=a.stateNode,0===(a.effectTag&64)&&null!==c&&\"function\"===typeof c.componentDidCatch&&(null===hh||!hh.has(c))){a.effectTag|=1024;d=gh(a,b,f);Rf(a,d,f);return}}a=a.return}while(null!==a)}\nfunction jh(a){switch(a.tag){case 2:sf(a);var b=a.effectTag;return b&1024?(a.effectTag=b&-1025|64,a):null;case 3:return jg(a),tf(a),b=a.effectTag,b&1024?(a.effectTag=b&-1025|64,a):null;case 5:return kg(a),null;case 16:return b=a.effectTag,b&1024?(a.effectTag=b&-1025|64,a):null;case 4:return jg(a),null;case 13:return bg(a),null;default:return null}}var kh=ef(),lh=2,mh=kh,nh=0,oh=0,ph=!1,S=null,qh=null,T=0,rh=-1,sh=!1,U=null,th=!1,uh=!1,hh=null;\nfunction vh(){if(null!==S)for(var a=S.return;null!==a;){var b=a;switch(b.tag){case 2:sf(b);break;case 3:jg(b);tf(b);break;case 5:kg(b);break;case 4:jg(b);break;case 13:bg(b)}a=a.return}qh=null;T=0;rh=-1;sh=!1;S=null;uh=!1}\nfunction wh(a){for(;;){var b=a.alternate,c=a.return,d=a.sibling;if(0===(a.effectTag&512)){b=Wg(b,a,T);var e=a;if(1073741823===T||1073741823!==e.expirationTime){var f=0;switch(e.tag){case 3:case 2:var g=e.updateQueue;null!==g&&(f=g.expirationTime)}for(g=e.child;null!==g;)0!==g.expirationTime&&(0===f||f>g.expirationTime)&&(f=g.expirationTime),g=g.sibling;e.expirationTime=f}if(null!==b)return b;null!==c&&0===(c.effectTag&512)&&(null===c.firstEffect&&(c.firstEffect=a.firstEffect),null!==a.lastEffect&&\n(null!==c.lastEffect&&(c.lastEffect.nextEffect=a.firstEffect),c.lastEffect=a.lastEffect),1<a.effectTag&&(null!==c.lastEffect?c.lastEffect.nextEffect=a:c.firstEffect=a,c.lastEffect=a));if(null!==d)return d;if(null!==c)a=c;else{uh=!0;break}}else{a=jh(a,sh,T);if(null!==a)return a.effectTag&=511,a;null!==c&&(c.firstEffect=c.lastEffect=null,c.effectTag|=512);if(null!==d)return d;if(null!==c)a=c;else break}}return null}\nfunction xh(a){var b=Rg(a.alternate,a,T);null===b&&(b=wh(a));ec.current=null;return b}\nfunction yh(a,b,c){ph?A(\"243\"):void 0;ph=!0;if(b!==T||a!==qh||null===S)vh(),qh=a,T=b,rh=-1,S=zf(qh.current,null,T),a.pendingCommitExpirationTime=0;var d=!1;sh=!c||T<=lh;do{try{if(c)for(;null!==S&&!zh();)S=xh(S);else for(;null!==S;)S=xh(S)}catch(f){if(null===S)d=!0,fh(f);else{null===S?A(\"271\"):void 0;c=S;var e=c.return;if(null===e){d=!0;fh(f);break}ih(a,e,c,f,sh,T,mh);S=wh(c)}}break}while(1);ph=!1;if(d)return null;if(null===S){if(uh)return a.pendingCommitExpirationTime=b,a.current.alternate;sh?A(\"262\"):\nvoid 0;0<=rh&&setTimeout(function(){var b=a.current.expirationTime;0!==b&&(0===a.remainingExpirationTime||a.remainingExpirationTime<b)&&Ah(a,b)},rh);Bh(a.current.expirationTime)}return null}\nfunction Zg(a,b){var c;a:{ph&&!th?A(\"263\"):void 0;for(c=a.return;null!==c;){switch(c.tag){case 2:var d=c.stateNode;if(\"function\"===typeof c.type.getDerivedStateFromCatch||\"function\"===typeof d.componentDidCatch&&(null===hh||!hh.has(d))){a=Xf(b,a);a=gh(c,a,1);Qf(c,a,1);og(c,1);c=void 0;break a}break;case 3:a=Xf(b,a);a=eh(c,a,1);Qf(c,a,1);og(c,1);c=void 0;break a}c=c.return}3===a.tag&&(c=Xf(b,a),c=eh(a,c,1),Qf(a,c,1),og(a,1));c=void 0}return c}\nfunction Ch(){var a=2+25*(((mg()-2+500)/25|0)+1);a<=nh&&(a=nh+1);return nh=a}function ng(a,b){a=0!==oh?oh:ph?th?1:T:b.mode&1?Dh?2+10*(((a-2+15)/10|0)+1):2+25*(((a-2+500)/25|0)+1):1;Dh&&(0===Eh||a>Eh)&&(Eh=a);return a}\nfunction og(a,b){for(;null!==a;){if(0===a.expirationTime||a.expirationTime>b)a.expirationTime=b;null!==a.alternate&&(0===a.alternate.expirationTime||a.alternate.expirationTime>b)&&(a.alternate.expirationTime=b);if(null===a.return)if(3===a.tag){var c=a.stateNode;!ph&&0!==T&&b<T&&vh();var d=c.current.expirationTime;ph&&!th&&qh===c||Ah(c,d);Fh>Gh&&A(\"185\")}else break;a=a.return}}function mg(){mh=ef()-kh;return lh=(mh/10|0)+2}\nfunction Hh(a){var b=oh;oh=2+25*(((mg()-2+500)/25|0)+1);try{return a()}finally{oh=b}}function Ih(a,b,c,d,e){var f=oh;oh=1;try{return a(b,c,d,e)}finally{oh=f}}var Jh=null,V=null,Kh=0,Lh=void 0,W=!1,X=null,Y=0,Eh=0,Mh=!1,Nh=!1,Oh=null,Ph=null,Z=!1,Qh=!1,Dh=!1,Rh=null,Gh=1E3,Fh=0,Sh=1;function Th(a){if(0!==Kh){if(a>Kh)return;null!==Lh&&gf(Lh)}var b=ef()-kh;Kh=a;Lh=ff(Uh,{timeout:10*(a-2)-b})}\nfunction Ah(a,b){if(null===a.nextScheduledRoot)a.remainingExpirationTime=b,null===V?(Jh=V=a,a.nextScheduledRoot=a):(V=V.nextScheduledRoot=a,V.nextScheduledRoot=Jh);else{var c=a.remainingExpirationTime;if(0===c||b<c)a.remainingExpirationTime=b}W||(Z?Qh&&(X=a,Y=1,Vh(a,1,!1)):1===b?Wh():Th(b))}\nfunction Xh(){var a=0,b=null;if(null!==V)for(var c=V,d=Jh;null!==d;){var e=d.remainingExpirationTime;if(0===e){null===c||null===V?A(\"244\"):void 0;if(d===d.nextScheduledRoot){Jh=V=d.nextScheduledRoot=null;break}else if(d===Jh)Jh=e=d.nextScheduledRoot,V.nextScheduledRoot=e,d.nextScheduledRoot=null;else if(d===V){V=c;V.nextScheduledRoot=Jh;d.nextScheduledRoot=null;break}else c.nextScheduledRoot=d.nextScheduledRoot,d.nextScheduledRoot=null;d=c.nextScheduledRoot}else{if(0===a||e<a)a=e,b=d;if(d===V)break;\nc=d;d=d.nextScheduledRoot}}c=X;null!==c&&c===b&&1===a?Fh++:Fh=0;X=b;Y=a}function Uh(a){Yh(0,!0,a)}function Wh(){Yh(1,!1,null)}function Yh(a,b,c){Ph=c;Xh();if(b)for(;null!==X&&0!==Y&&(0===a||a>=Y)&&(!Mh||mg()>=Y);)mg(),Vh(X,Y,!Mh),Xh();else for(;null!==X&&0!==Y&&(0===a||a>=Y);)Vh(X,Y,!1),Xh();null!==Ph&&(Kh=0,Lh=null);0!==Y&&Th(Y);Ph=null;Mh=!1;Zh()}function $h(a,b){W?A(\"253\"):void 0;X=a;Y=b;Vh(a,b,!1);Wh();Zh()}\nfunction Zh(){Fh=0;if(null!==Rh){var a=Rh;Rh=null;for(var b=0;b<a.length;b++){var c=a[b];try{c._onComplete()}catch(d){Nh||(Nh=!0,Oh=d)}}}if(Nh)throw a=Oh,Oh=null,Nh=!1,a;}function Vh(a,b,c){W?A(\"245\"):void 0;W=!0;c?(c=a.finishedWork,null!==c?ai(a,c,b):(c=yh(a,b,!0),null!==c&&(zh()?a.finishedWork=c:ai(a,c,b)))):(c=a.finishedWork,null!==c?ai(a,c,b):(c=yh(a,b,!1),null!==c&&ai(a,c,b)));W=!1}\nfunction ai(a,b,c){var d=a.firstBatch;if(null!==d&&d._expirationTime<=c&&(null===Rh?Rh=[d]:Rh.push(d),d._defer)){a.finishedWork=b;a.remainingExpirationTime=0;return}a.finishedWork=null;th=ph=!0;c=b.stateNode;c.current===b?A(\"177\"):void 0;d=c.pendingCommitExpirationTime;0===d?A(\"261\"):void 0;c.pendingCommitExpirationTime=0;mg();ec.current=null;if(1<b.effectTag)if(null!==b.lastEffect){b.lastEffect.nextEffect=b;var e=b.firstEffect}else e=b;else e=b.firstEffect;af=Hd;var f=da();if(Ud(f)){if(\"selectionStart\"in\nf)var g={start:f.selectionStart,end:f.selectionEnd};else a:{var h=window.getSelection&&window.getSelection();if(h&&0!==h.rangeCount){g=h.anchorNode;var k=h.anchorOffset,n=h.focusNode;h=h.focusOffset;try{g.nodeType,n.nodeType}catch(Wa){g=null;break a}var r=0,w=-1,P=-1,nc=0,Jd=0,E=f,t=null;b:for(;;){for(var x;;){E!==g||0!==k&&3!==E.nodeType||(w=r+k);E!==n||0!==h&&3!==E.nodeType||(P=r+h);3===E.nodeType&&(r+=E.nodeValue.length);if(null===(x=E.firstChild))break;t=E;E=x}for(;;){if(E===f)break b;t===g&&\n++nc===k&&(w=r);t===n&&++Jd===h&&(P=r);if(null!==(x=E.nextSibling))break;E=t;t=E.parentNode}E=x}g=-1===w||-1===P?null:{start:w,end:P}}else g=null}g=g||{start:0,end:0}}else g=null;bf={focusedElem:f,selectionRange:g};Id(!1);for(U=e;null!==U;){f=!1;g=void 0;try{for(;null!==U;){if(U.effectTag&256){var u=U.alternate;k=U;switch(k.tag){case 2:if(k.effectTag&256&&null!==u){var y=u.memoizedProps,D=u.memoizedState,ja=k.stateNode;ja.props=k.memoizedProps;ja.state=k.memoizedState;var mi=ja.getSnapshotBeforeUpdate(y,\nD);ja.__reactInternalSnapshotBeforeUpdate=mi}break;case 3:case 5:case 6:case 4:break;default:A(\"163\")}}U=U.nextEffect}}catch(Wa){f=!0,g=Wa}f&&(null===U?A(\"178\"):void 0,Zg(U,g),null!==U&&(U=U.nextEffect))}for(U=e;null!==U;){u=!1;y=void 0;try{for(;null!==U;){var q=U.effectTag;q&16&&Ke(U.stateNode,\"\");if(q&128){var z=U.alternate;if(null!==z){var l=z.ref;null!==l&&(\"function\"===typeof l?l(null):l.current=null)}}switch(q&14){case 2:ch(U);U.effectTag&=-3;break;case 6:ch(U);U.effectTag&=-3;dh(U.alternate,\nU);break;case 4:dh(U.alternate,U);break;case 8:D=U,ah(D),D.return=null,D.child=null,D.alternate&&(D.alternate.child=null,D.alternate.return=null)}U=U.nextEffect}}catch(Wa){u=!0,y=Wa}u&&(null===U?A(\"178\"):void 0,Zg(U,y),null!==U&&(U=U.nextEffect))}l=bf;z=da();q=l.focusedElem;u=l.selectionRange;if(z!==q&&fa(document.documentElement,q)){null!==u&&Ud(q)&&(z=u.start,l=u.end,void 0===l&&(l=z),\"selectionStart\"in q?(q.selectionStart=z,q.selectionEnd=Math.min(l,q.value.length)):window.getSelection&&(z=window.getSelection(),\ny=q[lb()].length,l=Math.min(u.start,y),u=void 0===u.end?l:Math.min(u.end,y),!z.extend&&l>u&&(y=u,u=l,l=y),y=Td(q,l),D=Td(q,u),y&&D&&(1!==z.rangeCount||z.anchorNode!==y.node||z.anchorOffset!==y.offset||z.focusNode!==D.node||z.focusOffset!==D.offset)&&(ja=document.createRange(),ja.setStart(y.node,y.offset),z.removeAllRanges(),l>u?(z.addRange(ja),z.extend(D.node,D.offset)):(ja.setEnd(D.node,D.offset),z.addRange(ja)))));z=[];for(l=q;l=l.parentNode;)1===l.nodeType&&z.push({element:l,left:l.scrollLeft,\ntop:l.scrollTop});\"function\"===typeof q.focus&&q.focus();for(q=0;q<z.length;q++)l=z[q],l.element.scrollLeft=l.left,l.element.scrollTop=l.top}bf=null;Id(af);af=null;c.current=b;for(U=e;null!==U;){e=!1;q=void 0;try{for(z=d;null!==U;){var hg=U.effectTag;if(hg&36){var oc=U.alternate;l=U;u=z;switch(l.tag){case 2:var ca=l.stateNode;if(l.effectTag&4)if(null===oc)ca.props=l.memoizedProps,ca.state=l.memoizedState,ca.componentDidMount();else{var wi=oc.memoizedProps,xi=oc.memoizedState;ca.props=l.memoizedProps;\nca.state=l.memoizedState;ca.componentDidUpdate(wi,xi,ca.__reactInternalSnapshotBeforeUpdate)}var Ng=l.updateQueue;null!==Ng&&(ca.props=l.memoizedProps,ca.state=l.memoizedState,Wf(l,Ng,ca,u));break;case 3:var Og=l.updateQueue;if(null!==Og){y=null;if(null!==l.child)switch(l.child.tag){case 5:y=l.child.stateNode;break;case 2:y=l.child.stateNode}Wf(l,Og,y,u)}break;case 5:var yi=l.stateNode;null===oc&&l.effectTag&4&&cf(l.type,l.memoizedProps)&&yi.focus();break;case 6:break;case 4:break;case 15:break;case 16:break;\ndefault:A(\"163\")}}if(hg&128){l=void 0;var yc=U.ref;if(null!==yc){var Pg=U.stateNode;switch(U.tag){case 5:l=Pg;break;default:l=Pg}\"function\"===typeof yc?yc(l):yc.current=l}}var zi=U.nextEffect;U.nextEffect=null;U=zi}}catch(Wa){e=!0,q=Wa}e&&(null===U?A(\"178\"):void 0,Zg(U,q),null!==U&&(U=U.nextEffect))}ph=th=!1;\"function\"===typeof Jf&&Jf(b.stateNode);b=c.current.expirationTime;0===b&&(hh=null);a.remainingExpirationTime=b}function zh(){return null===Ph||Ph.timeRemaining()>Sh?!1:Mh=!0}\nfunction fh(a){null===X?A(\"246\"):void 0;X.remainingExpirationTime=0;Nh||(Nh=!0,Oh=a)}function Bh(a){null===X?A(\"246\"):void 0;X.remainingExpirationTime=a}function bi(a,b){var c=Z;Z=!0;try{return a(b)}finally{(Z=c)||W||Wh()}}function ci(a,b){if(Z&&!Qh){Qh=!0;try{return a(b)}finally{Qh=!1}}return a(b)}function di(a,b){W?A(\"187\"):void 0;var c=Z;Z=!0;try{return Ih(a,b)}finally{Z=c,Wh()}}\nfunction ei(a,b,c){if(Dh)return a(b,c);Z||W||0===Eh||(Yh(Eh,!1,null),Eh=0);var d=Dh,e=Z;Z=Dh=!0;try{return a(b,c)}finally{Dh=d,(Z=e)||W||Wh()}}function fi(a){var b=Z;Z=!0;try{Ih(a)}finally{(Z=b)||W||Yh(1,!1,null)}}\nfunction gi(a,b,c,d,e){var f=b.current;if(c){c=c._reactInternalFiber;var g;b:{2===jd(c)&&2===c.tag?void 0:A(\"170\");for(g=c;3!==g.tag;){if(qf(g)){g=g.stateNode.__reactInternalMemoizedMergedChildContext;break b}(g=g.return)?void 0:A(\"171\")}g=g.stateNode.context}c=qf(c)?vf(c,g):g}else c=ha;null===b.context?b.context=c:b.pendingContext=c;b=e;e=Of(d);e.payload={element:a};b=void 0===b?null:b;null!==b&&(e.callback=b);Qf(f,e,d);og(f,d);return d}\nfunction hi(a){var b=a._reactInternalFiber;void 0===b&&(\"function\"===typeof a.render?A(\"188\"):A(\"268\",Object.keys(a)));a=md(b);return null===a?null:a.stateNode}function ii(a,b,c,d){var e=b.current,f=mg();e=ng(f,e);return gi(a,b,c,e,d)}function ji(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}\nfunction ki(a){var b=a.findFiberByHostInstance;return If(p({},a,{findHostInstanceByFiber:function(a){a=md(a);return null===a?null:a.stateNode},findFiberByHostInstance:function(a){return b?b(a):null}}))}\nvar li={updateContainerAtExpirationTime:gi,createContainer:function(a,b,c){return Ef(a,b,c)},updateContainer:ii,flushRoot:$h,requestWork:Ah,computeUniqueAsyncExpiration:Ch,batchedUpdates:bi,unbatchedUpdates:ci,deferredUpdates:Hh,syncUpdates:Ih,interactiveUpdates:ei,flushInteractiveUpdates:function(){W||0===Eh||(Yh(Eh,!1,null),Eh=0)},flushControlled:fi,flushSync:di,getPublicRootInstance:ji,findHostInstance:hi,findHostInstanceWithNoPortals:function(a){a=nd(a);return null===a?null:a.stateNode},injectIntoDevTools:ki};\nfunction ni(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:hc,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}Kb.injectFiberControlledHostComponent($e);function oi(a){this._expirationTime=Ch();this._root=a;this._callbacks=this._next=null;this._hasChildren=this._didComplete=!1;this._children=null;this._defer=!0}\noi.prototype.render=function(a){this._defer?void 0:A(\"250\");this._hasChildren=!0;this._children=a;var b=this._root._internalRoot,c=this._expirationTime,d=new pi;gi(a,b,null,c,d._onCommit);return d};oi.prototype.then=function(a){if(this._didComplete)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\noi.prototype.commit=function(){var a=this._root._internalRoot,b=a.firstBatch;this._defer&&null!==b?void 0:A(\"251\");if(this._hasChildren){var c=this._expirationTime;if(b!==this){this._hasChildren&&(c=this._expirationTime=b._expirationTime,this.render(this._children));for(var d=null,e=b;e!==this;)d=e,e=e._next;null===d?A(\"251\"):void 0;d._next=e._next;this._next=b;a.firstBatch=this}this._defer=!1;$h(a,c);b=this._next;this._next=null;b=a.firstBatch=b;null!==b&&b._hasChildren&&b.render(b._children)}else this._next=\nnull,this._defer=!1};oi.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++)(0,a[b])()}};function pi(){this._callbacks=null;this._didCommit=!1;this._onCommit=this._onCommit.bind(this)}pi.prototype.then=function(a){if(this._didCommit)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\npi.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++){var c=a[b];\"function\"!==typeof c?A(\"191\",c):void 0;c()}}};function qi(a,b,c){this._internalRoot=Ef(a,b,c)}qi.prototype.render=function(a,b){var c=this._internalRoot,d=new pi;b=void 0===b?null:b;null!==b&&d.then(b);ii(a,c,null,d._onCommit);return d};\nqi.prototype.unmount=function(a){var b=this._internalRoot,c=new pi;a=void 0===a?null:a;null!==a&&c.then(a);ii(null,b,null,c._onCommit);return c};qi.prototype.legacy_renderSubtreeIntoContainer=function(a,b,c){var d=this._internalRoot,e=new pi;c=void 0===c?null:c;null!==c&&e.then(c);ii(b,d,a,e._onCommit);return e};\nqi.prototype.createBatch=function(){var a=new oi(this),b=a._expirationTime,c=this._internalRoot,d=c.firstBatch;if(null===d)c.firstBatch=a,a._next=null;else{for(c=null;null!==d&&d._expirationTime<=b;)c=d,d=d._next;a._next=d;null!==c&&(c._next=a)}return a};function ri(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}Sb=li.batchedUpdates;Tb=li.interactiveUpdates;Ub=li.flushInteractiveUpdates;\nfunction si(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute(\"data-reactroot\")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new qi(a,!1,b)}\nfunction ti(a,b,c,d,e){ri(c)?void 0:A(\"200\");var f=c._reactRootContainer;if(f){if(\"function\"===typeof e){var g=e;e=function(){var a=ji(f._internalRoot);g.call(a)}}null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)}else{f=c._reactRootContainer=si(c,d);if(\"function\"===typeof e){var h=e;e=function(){var a=ji(f._internalRoot);h.call(a)}}ci(function(){null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)})}return ji(f._internalRoot)}\nfunction ui(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;ri(b)?void 0:A(\"200\");return ni(a,b,null,c)}\nvar vi={createPortal:ui,findDOMNode:function(a){return null==a?null:1===a.nodeType?a:hi(a)},hydrate:function(a,b,c){return ti(null,a,b,!0,c)},render:function(a,b,c){return ti(null,a,b,!1,c)},unstable_renderSubtreeIntoContainer:function(a,b,c,d){null==a||void 0===a._reactInternalFiber?A(\"38\"):void 0;return ti(a,b,c,!1,d)},unmountComponentAtNode:function(a){ri(a)?void 0:A(\"40\");return a._reactRootContainer?(ci(function(){ti(null,null,a,!1,function(){a._reactRootContainer=null})}),!0):!1},unstable_createPortal:function(){return ui.apply(void 0,\narguments)},unstable_batchedUpdates:bi,unstable_deferredUpdates:Hh,unstable_interactiveUpdates:ei,flushSync:di,unstable_flushControlled:fi,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{EventPluginHub:Ka,EventPluginRegistry:va,EventPropagators:$a,ReactControlledComponent:Rb,ReactDOMComponentTree:Qa,ReactDOMEventListener:Nd},unstable_createRoot:function(a,b){return new qi(a,!0,null!=b&&!0===b.hydrate)}};ki({findFiberByHostInstance:Na,bundleType:0,version:\"16.4.1\",rendererPackageName:\"react-dom\"});\nvar Ai={default:vi},Bi=Ai&&vi||Ai;module.exports=Bi.default?Bi.default:Bi;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-dom/cjs/react-dom.production.min.js\n// module id = 24\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\n/**\n * Simple, lightweight module assisting with the detection and context of\n * Worker. Helps avoid circular dependencies and allows code to reason about\n * whether or not they are in a Worker, even if they never include the main\n * `ReactWorker` dependency.\n */\nvar ExecutionEnvironment = {\n\n  canUseDOM: canUseDOM,\n\n  canUseWorkers: typeof Worker !== 'undefined',\n\n  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),\n\n  canUseViewport: canUseDOM && !!window.screen,\n\n  isInWorker: !canUseDOM // For now, this is true - might change in the future.\n\n};\n\nmodule.exports = ExecutionEnvironment;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/ExecutionEnvironment.js\n// module id = 25\n// module chunks = 0","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\n/* eslint-disable fb-www/typeof-undefined */\n\n/**\n * Same as document.activeElement but wraps in a try-catch block. In IE it is\n * not safe to call document.activeElement if there is nothing focused.\n *\n * The activeElement will be null only if the document or document body is not\n * yet defined.\n *\n * @param {?DOMDocument} doc Defaults to current document.\n * @return {?DOMElement}\n */\nfunction getActiveElement(doc) /*?DOMElement*/{\n  doc = doc || (typeof document !== 'undefined' ? document : undefined);\n  if (typeof doc === 'undefined') {\n    return null;\n  }\n  try {\n    return doc.activeElement || doc.body;\n  } catch (e) {\n    return doc.body;\n  }\n}\n\nmodule.exports = getActiveElement;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/getActiveElement.js\n// module id = 26\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n * \n */\n\n/*eslint-disable no-self-compare */\n\n'use strict';\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  // SameValue algorithm\n  if (x === y) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    // Added the nonzero y check to make Flow happy, but it is redundant\n    return x !== 0 || y !== 0 || 1 / x === 1 / y;\n  } else {\n    // Step 6.a: NaN == NaN\n    return x !== x && y !== y;\n  }\n}\n\n/**\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n * Returns true when the values of all keys are strictly equal.\n */\nfunction shallowEqual(objA, objB) {\n  if (is(objA, objB)) {\n    return true;\n  }\n\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  // Test for A's keys different from B.\n  for (var i = 0; i < keysA.length; i++) {\n    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = shallowEqual;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/shallowEqual.js\n// module id = 27\n// module chunks = 0","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nvar isTextNode = require('./isTextNode');\n\n/*eslint-disable no-bitwise */\n\n/**\n * Checks if a given DOM node contains or is another DOM node.\n */\nfunction containsNode(outerNode, innerNode) {\n  if (!outerNode || !innerNode) {\n    return false;\n  } else if (outerNode === innerNode) {\n    return true;\n  } else if (isTextNode(outerNode)) {\n    return false;\n  } else if (isTextNode(innerNode)) {\n    return containsNode(outerNode, innerNode.parentNode);\n  } else if ('contains' in outerNode) {\n    return outerNode.contains(innerNode);\n  } else if (outerNode.compareDocumentPosition) {\n    return !!(outerNode.compareDocumentPosition(innerNode) & 16);\n  } else {\n    return false;\n  }\n}\n\nmodule.exports = containsNode;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/containsNode.js\n// module id = 28\n// module chunks = 0","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\nvar isNode = require('./isNode');\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM text node.\n */\nfunction isTextNode(object) {\n  return isNode(object) && object.nodeType == 3;\n}\n\nmodule.exports = isTextNode;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/isTextNode.js\n// module id = 29\n// module chunks = 0","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM node.\n */\nfunction isNode(object) {\n  var doc = object ? object.ownerDocument || object : document;\n  var defaultView = doc.defaultView || window;\n  return !!(object && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));\n}\n\nmodule.exports = isNode;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/isNode.js\n// module id = 30\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/prop-types/factoryWithThrowingShims.js\n// module id = 31\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/prop-types/lib/ReactPropTypesSecret.js\n// module id = 32\n// module chunks = 0","import React from 'react';\r\nimport { Parallax } from 'react-spring/dist/react-spring';\r\nimport '../index.css';\r\n\r\n\r\nexport class SectionLabels extends React.Component {\r\n  render() {\r\n    return (\r\n<div>\r\n    <Parallax.Layer\r\n        offset={1.08}\r\n        speed={.05}\r\n        style={{ display: 'flex', flexDirection:\"column\", alignItems: 'flex-start', justifyContent: 'start', height: '5vmin',zIndex:3, padding:' 0 5%'}}>\r\n        <p style={{textShadow: '6px 6px 0px rgba(0,0,0,0.2) ',fontWeight:600, fontSize:'5vmin'}}>Portfolio</p>\r\n    </Parallax.Layer>\r\n        \r\n    <Parallax.Layer\r\n        offset={2.08}\r\n        speed={.05}\r\n        style={{ display: 'flex', flexDirection:\"column\", alignItems: 'flex-start', justifyContent: 'start', height: '5vmin',zIndex:3, padding:' 0 5%'}}>\r\n        <p style={{textShadow: '6px 6px 0px rgba(0,0,0,0.2) ',fontWeight:600,fontSize:'5vmin'}}> Skills &lt; / &gt; </p>\r\n    </Parallax.Layer>\r\n</div>\r\n    )}}\n\n\n// WEBPACK FOOTER //\n// ./src/components/SectionLabels.js","import React from 'react';\r\nimport { Parallax } from 'react-spring/dist/react-spring';\r\nimport '../index.css';\r\nimport avatar from '../assets/img/ThomasKim.jpg';\r\nimport firebase from '../config/firebase.js';\r\n\r\n\r\nexport class AboutMe extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n    this.state = {\r\n        blurb: 'MERN-stack developer (MongoDB/MySQL Express React Node). I enjoy making web apps in REACT. Currently publishing my PWA to an app store.'\r\n    }\r\n}\r\ncomponenWillMount(){\r\n    const itemsRef = firebase.database().ref();\r\n    itemsRef.on('value', (snapshot) => {\r\n    var blurb = snapshot.val().blurb;\r\n    this.setState({blurb});\r\n    })}\r\n\r\n\r\n  render() {\r\n    return (\r\n<div>\r\n<Parallax.Layer\r\n           offset={0}\r\n          speed={0.75}\r\n          style={{ display: 'flex', flexDirection:\"column\", alignContent: 'center', justifyContent: 'center',zIndex:5,padding:'0 5%', marginTop:'-2%'}}>\r\n              <img src={avatar} className='avatar' style={{height:'20vh',width: '20vh', borderRadius:'50%', border: '1vmin solid rgba(3,3,3,0.6)', marginBottom:'5%', boxShadow: '0px 0px 9px 1px rgba(0,0,0,0.5)'}} alt='about me'/> \r\n          <p style={{marginBottom:'7vmin', fontSize:'7vmin', fontWeight:600}}>Hi! I'm Thomas, Full Stack Developer</p>\r\n          {/* <div><a href=\"https://github.com/tomkim825/\" target=\"_blank\"  style={{border:'1px solid white', padding: '5px', margin: '0 5px', color:'black'}}><i class=\"fab fa-github\" ></i> Github    </a><a href=\"https://www.linkedin.com/in/thomas-c-kim/\" target=\"_blank\"  style={{border:'1px solid white', padding: '5px', margin: '0 5px', color:'blue'}}><i class=\"fab fa-linkedin\"></i> LinkedIn </a><a href=\"mailto:tomkim825@gmail.com\" style={{border:'1px solid white', padding: '5px', margin: '0 5px', color:'red'}}><i class=\"fas fa-envelope\"></i> Email Me  </a></div> */}\r\n\r\n</Parallax.Layer>\r\n\r\n\r\n\r\n<Parallax.Layer\r\n          offset={0}\r\n          speed={0.25}\r\n          style={{ display: 'flex', flexDirection:\"column\", alignContent: 'flex-start', justifyContent: 'flex-end',zIndex:4,padding:'0 4%'}}>\r\n          <p style={{marginBottom:'15vmin'}}> {this.state.blurb}          </p>\r\n</Parallax.Layer>\r\n</div>\r\n    )}}\n\n\n// WEBPACK FOOTER //\n// ./src/components/AboutMe.js","module.exports = __webpack_public_path__ + \"static/media/ThomasKim.b9e7b502.jpg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/img/ThomasKim.jpg\n// module id = 35\n// module chunks = 0","\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/database';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyAfMomQhiipmtHYBc-5Odytsgz47CAS9q0\",\r\n    authDomain: \"mom-or-dad.firebaseapp.com\",\r\n    databaseURL: \"https://mom-or-dad.firebaseio.com\",\r\n    projectId: \"mom-or-dad\",\r\n    storageBucket: \"mom-or-dad.appspot.com\",\r\n    messagingSenderId: \"346751856796\"\r\n};\r\nfirebase.initializeApp(config);\r\nexport default firebase;\n\n\n// WEBPACK FOOTER //\n// ./src/config/firebase.js","'use strict';\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nrequire('@firebase/polyfill');\nvar firebase = _interopDefault(require('@firebase/app'));\n\n/**\r\n * Copyright 2018 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nmodule.exports = firebase;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/firebase/app/dist/index.cjs.js\n// module id = 37\n// module chunks = 0","import 'whatwg-fetch';\n\n// Store setTimeout reference so promise-polyfill will be unaffected by\n// other code modifying setTimeout (like sinon.useFakeTimers())\nvar setTimeoutFunc = setTimeout;\n\nfunction noop() {}\n\n// Polyfill for Function.prototype.bind\nfunction bind(fn, thisArg) {\n  return function() {\n    fn.apply(thisArg, arguments);\n  };\n}\n\nfunction Promise(fn) {\n  if (!(this instanceof Promise))\n    throw new TypeError('Promises must be constructed via new');\n  if (typeof fn !== 'function') throw new TypeError('not a function');\n  this._state = 0;\n  this._handled = false;\n  this._value = undefined;\n  this._deferreds = [];\n\n  doResolve(fn, this);\n}\n\nfunction handle(self, deferred) {\n  while (self._state === 3) {\n    self = self._value;\n  }\n  if (self._state === 0) {\n    self._deferreds.push(deferred);\n    return;\n  }\n  self._handled = true;\n  Promise._immediateFn(function() {\n    var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      (self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n      return;\n    }\n    var ret;\n    try {\n      ret = cb(self._value);\n    } catch (e) {\n      reject(deferred.promise, e);\n      return;\n    }\n    resolve(deferred.promise, ret);\n  });\n}\n\nfunction resolve(self, newValue) {\n  try {\n    // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n    if (newValue === self)\n      throw new TypeError('A promise cannot be resolved with itself.');\n    if (\n      newValue &&\n      (typeof newValue === 'object' || typeof newValue === 'function')\n    ) {\n      var then = newValue.then;\n      if (newValue instanceof Promise) {\n        self._state = 3;\n        self._value = newValue;\n        finale(self);\n        return;\n      } else if (typeof then === 'function') {\n        doResolve(bind(then, newValue), self);\n        return;\n      }\n    }\n    self._state = 1;\n    self._value = newValue;\n    finale(self);\n  } catch (e) {\n    reject(self, e);\n  }\n}\n\nfunction reject(self, newValue) {\n  self._state = 2;\n  self._value = newValue;\n  finale(self);\n}\n\nfunction finale(self) {\n  if (self._state === 2 && self._deferreds.length === 0) {\n    Promise._immediateFn(function() {\n      if (!self._handled) {\n        Promise._unhandledRejectionFn(self._value);\n      }\n    });\n  }\n\n  for (var i = 0, len = self._deferreds.length; i < len; i++) {\n    handle(self, self._deferreds[i]);\n  }\n  self._deferreds = null;\n}\n\nfunction Handler(onFulfilled, onRejected, promise) {\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, self) {\n  var done = false;\n  try {\n    fn(\n      function(value) {\n        if (done) return;\n        done = true;\n        resolve(self, value);\n      },\n      function(reason) {\n        if (done) return;\n        done = true;\n        reject(self, reason);\n      }\n    );\n  } catch (ex) {\n    if (done) return;\n    done = true;\n    reject(self, ex);\n  }\n}\n\nPromise.prototype['catch'] = function(onRejected) {\n  return this.then(null, onRejected);\n};\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  var prom = new this.constructor(noop);\n\n  handle(this, new Handler(onFulfilled, onRejected, prom));\n  return prom;\n};\n\nPromise.prototype['finally'] = function(callback) {\n  var constructor = this.constructor;\n  return this.then(\n    function(value) {\n      return constructor.resolve(callback()).then(function() {\n        return value;\n      });\n    },\n    function(reason) {\n      return constructor.resolve(callback()).then(function() {\n        return constructor.reject(reason);\n      });\n    }\n  );\n};\n\nPromise.all = function(arr) {\n  return new Promise(function(resolve, reject) {\n    if (!arr || typeof arr.length === 'undefined')\n      throw new TypeError('Promise.all accepts an array');\n    var args = Array.prototype.slice.call(arr);\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n\n    function res(i, val) {\n      try {\n        if (val && (typeof val === 'object' || typeof val === 'function')) {\n          var then = val.then;\n          if (typeof then === 'function') {\n            then.call(\n              val,\n              function(val) {\n                res(i, val);\n              },\n              reject\n            );\n            return;\n          }\n        }\n        args[i] = val;\n        if (--remaining === 0) {\n          resolve(args);\n        }\n      } catch (ex) {\n        reject(ex);\n      }\n    }\n\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.resolve = function(value) {\n  if (value && typeof value === 'object' && value.constructor === Promise) {\n    return value;\n  }\n\n  return new Promise(function(resolve) {\n    resolve(value);\n  });\n};\n\nPromise.reject = function(value) {\n  return new Promise(function(resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function(values) {\n  return new Promise(function(resolve, reject) {\n    for (var i = 0, len = values.length; i < len; i++) {\n      values[i].then(resolve, reject);\n    }\n  });\n};\n\n// Use polyfill for setImmediate for performance gains\nPromise._immediateFn =\n  (typeof setImmediate === 'function' &&\n    function(fn) {\n      setImmediate(fn);\n    }) ||\n  function(fn) {\n    setTimeoutFunc(fn, 0);\n  };\n\nPromise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\n  if (typeof console !== 'undefined' && console) {\n    console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n  }\n};\n\nvar globalNS = (function() {\n  // the only reliable means to get the global object is\n  // `Function('return this')()`\n  // However, this causes CSP violations in Chrome apps.\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('unable to locate global object');\n})();\n\nif (!globalNS.Promise) {\n  globalNS.Promise = Promise;\n}\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar _global = createCommonjsModule(function (module) {\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n});\n\nvar _core = createCommonjsModule(function (module) {\nvar core = module.exports = { version: '2.5.5' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n});\nvar _core_1 = _core.version;\n\nvar _isObject = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\nvar _anObject = function (it) {\n  if (!_isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n\nvar _fails = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n\n// Thank's IE8 for his funny defineProperty\nvar _descriptors = !_fails(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n\nvar document = _global.document;\n// typeof document.createElement is 'object' in old IE\nvar is = _isObject(document) && _isObject(document.createElement);\nvar _domCreate = function (it) {\n  return is ? document.createElement(it) : {};\n};\n\nvar _ie8DomDefine = !_descriptors && !_fails(function () {\n  return Object.defineProperty(_domCreate('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n\n// 7.1.1 ToPrimitive(input [, PreferredType])\n\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nvar _toPrimitive = function (it, S) {\n  if (!_isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !_isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\nvar dP = Object.defineProperty;\n\nvar f = _descriptors ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  _anObject(O);\n  P = _toPrimitive(P, true);\n  _anObject(Attributes);\n  if (_ie8DomDefine) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n\nvar _objectDp = {\n\tf: f\n};\n\nvar _propertyDesc = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n\nvar _hide = _descriptors ? function (object, key, value) {\n  return _objectDp.f(object, key, _propertyDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n\nvar hasOwnProperty = {}.hasOwnProperty;\nvar _has = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n\nvar id = 0;\nvar px = Math.random();\nvar _uid = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\nvar _redefine = createCommonjsModule(function (module) {\nvar SRC = _uid('src');\nvar TO_STRING = 'toString';\nvar $toString = Function[TO_STRING];\nvar TPL = ('' + $toString).split(TO_STRING);\n\n_core.inspectSource = function (it) {\n  return $toString.call(it);\n};\n\n(module.exports = function (O, key, val, safe) {\n  var isFunction = typeof val == 'function';\n  if (isFunction) _has(val, 'name') || _hide(val, 'name', key);\n  if (O[key] === val) return;\n  if (isFunction) _has(val, SRC) || _hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if (O === _global) {\n    O[key] = val;\n  } else if (!safe) {\n    delete O[key];\n    _hide(O, key, val);\n  } else if (O[key]) {\n    O[key] = val;\n  } else {\n    _hide(O, key, val);\n  }\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, TO_STRING, function toString() {\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});\n});\n\nvar _aFunction = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n// optional / simple context binding\n\nvar _ctx = function (fn, that, length) {\n  _aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var target = IS_GLOBAL ? _global : IS_STATIC ? _global[name] || (_global[name] = {}) : (_global[name] || {})[PROTOTYPE];\n  var exports = IS_GLOBAL ? _core : _core[name] || (_core[name] = {});\n  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n  var key, own, out, exp;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    // export native or passed\n    out = (own ? target : source)[key];\n    // bind timers to global for call from export context\n    exp = IS_BIND && own ? _ctx(out, _global) : IS_PROTO && typeof out == 'function' ? _ctx(Function.call, out) : out;\n    // extend global\n    if (target) _redefine(target, key, out, type & $export.U);\n    // export\n    if (exports[key] != out) _hide(exports, key, exp);\n    if (IS_PROTO && expProto[key] != out) expProto[key] = out;\n  }\n};\n_global.core = _core;\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nvar _export = $export;\n\nvar toString = {}.toString;\n\nvar _cof = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\n\n// eslint-disable-next-line no-prototype-builtins\nvar _iobject = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return _cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n// 7.2.1 RequireObjectCoercible(argument)\nvar _defined = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n// 7.1.13 ToObject(argument)\n\nvar _toObject = function (it) {\n  return Object(_defined(it));\n};\n\n// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nvar _toInteger = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n// 7.1.15 ToLength\n\nvar min = Math.min;\nvar _toLength = function (it) {\n  return it > 0 ? min(_toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n\n// 7.2.2 IsArray(argument)\n\nvar _isArray = Array.isArray || function isArray(arg) {\n  return _cof(arg) == 'Array';\n};\n\nvar SHARED = '__core-js_shared__';\nvar store = _global[SHARED] || (_global[SHARED] = {});\nvar _shared = function (key) {\n  return store[key] || (store[key] = {});\n};\n\nvar _wks = createCommonjsModule(function (module) {\nvar store = _shared('wks');\n\nvar Symbol = _global.Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : _uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n});\n\nvar SPECIES = _wks('species');\n\nvar _arraySpeciesConstructor = function (original) {\n  var C;\n  if (_isArray(original)) {\n    C = original.constructor;\n    // cross-realm fallback\n    if (typeof C == 'function' && (C === Array || _isArray(C.prototype))) C = undefined;\n    if (_isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return C === undefined ? Array : C;\n};\n\n// 9.4.2.3 ArraySpeciesCreate(originalArray, length)\n\n\nvar _arraySpeciesCreate = function (original, length) {\n  return new (_arraySpeciesConstructor(original))(length);\n};\n\n// 0 -> Array#forEach\n// 1 -> Array#map\n// 2 -> Array#filter\n// 3 -> Array#some\n// 4 -> Array#every\n// 5 -> Array#find\n// 6 -> Array#findIndex\n\n\n\n\n\nvar _arrayMethods = function (TYPE, $create) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  var create = $create || _arraySpeciesCreate;\n  return function ($this, callbackfn, that) {\n    var O = _toObject($this);\n    var self = _iobject(O);\n    var f = _ctx(callbackfn, that, 3);\n    var length = _toLength(self.length);\n    var index = 0;\n    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var val, res;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      val = self[index];\n      res = f(val, index, O);\n      if (TYPE) {\n        if (IS_MAP) result[index] = res;   // map\n        else if (res) switch (TYPE) {\n          case 3: return true;             // some\n          case 5: return val;              // find\n          case 6: return index;            // findIndex\n          case 2: result.push(val);        // filter\n        } else if (IS_EVERY) return false; // every\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n  };\n};\n\n// 22.1.3.31 Array.prototype[@@unscopables]\nvar UNSCOPABLES = _wks('unscopables');\nvar ArrayProto = Array.prototype;\nif (ArrayProto[UNSCOPABLES] == undefined) _hide(ArrayProto, UNSCOPABLES, {});\nvar _addToUnscopables = function (key) {\n  ArrayProto[UNSCOPABLES][key] = true;\n};\n\n// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)\n\nvar $find = _arrayMethods(5);\nvar KEY = 'find';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n_export(_export.P + _export.F * forced, 'Array', {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n_addToUnscopables(KEY);\n\nvar find = _core.Array.find;\n\n// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)\n\nvar $find$1 = _arrayMethods(6);\nvar KEY$1 = 'findIndex';\nvar forced$1 = true;\n// Shouldn't skip holes\nif (KEY$1 in []) Array(1)[KEY$1](function () { forced$1 = false; });\n_export(_export.P + _export.F * forced$1, 'Array', {\n  findIndex: function findIndex(callbackfn /* , that = undefined */) {\n    return $find$1(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n_addToUnscopables(KEY$1);\n\nvar findIndex = _core.Array.findIndex;\n\n// to indexed object, toObject with fallback for non-array-like ES3 strings\n\n\nvar _toIobject = function (it) {\n  return _iobject(_defined(it));\n};\n\nvar max = Math.max;\nvar min$1 = Math.min;\nvar _toAbsoluteIndex = function (index, length) {\n  index = _toInteger(index);\n  return index < 0 ? max(index + length, 0) : min$1(index, length);\n};\n\n// false -> Array#indexOf\n// true  -> Array#includes\n\n\n\nvar _arrayIncludes = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = _toIobject($this);\n    var length = _toLength(O.length);\n    var index = _toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\nvar shared = _shared('keys');\n\nvar _sharedKey = function (key) {\n  return shared[key] || (shared[key] = _uid(key));\n};\n\nvar arrayIndexOf = _arrayIncludes(false);\nvar IE_PROTO = _sharedKey('IE_PROTO');\n\nvar _objectKeysInternal = function (object, names) {\n  var O = _toIobject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) _has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (_has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n\n// IE 8- don't enum bug keys\nvar _enumBugKeys = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n\n// 19.1.2.14 / 15.2.3.14 Object.keys(O)\n\n\n\nvar _objectKeys = Object.keys || function keys(O) {\n  return _objectKeysInternal(O, _enumBugKeys);\n};\n\nvar f$1 = Object.getOwnPropertySymbols;\n\nvar _objectGops = {\n\tf: f$1\n};\n\nvar f$2 = {}.propertyIsEnumerable;\n\nvar _objectPie = {\n\tf: f$2\n};\n\n// 19.1.2.1 Object.assign(target, source, ...)\n\n\n\n\n\nvar $assign = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nvar _objectAssign = !$assign || _fails(function () {\n  var A = {};\n  var B = {};\n  // eslint-disable-next-line no-undef\n  var S = Symbol();\n  var K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function (k) { B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source) { // eslint-disable-line no-unused-vars\n  var T = _toObject(target);\n  var aLen = arguments.length;\n  var index = 1;\n  var getSymbols = _objectGops.f;\n  var isEnum = _objectPie.f;\n  while (aLen > index) {\n    var S = _iobject(arguments[index++]);\n    var keys = getSymbols ? _objectKeys(S).concat(getSymbols(S)) : _objectKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];\n  } return T;\n} : $assign;\n\n// 19.1.3.1 Object.assign(target, source)\n\n\n_export(_export.S + _export.F, 'Object', { assign: _objectAssign });\n\nvar assign = _core.Object.assign;\n\n// 7.2.8 IsRegExp(argument)\n\n\nvar MATCH = _wks('match');\nvar _isRegexp = function (it) {\n  var isRegExp;\n  return _isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : _cof(it) == 'RegExp');\n};\n\n// helper for String#{startsWith, endsWith, includes}\n\n\n\nvar _stringContext = function (that, searchString, NAME) {\n  if (_isRegexp(searchString)) throw TypeError('String#' + NAME + \" doesn't accept regex!\");\n  return String(_defined(that));\n};\n\nvar MATCH$1 = _wks('match');\nvar _failsIsRegexp = function (KEY) {\n  var re = /./;\n  try {\n    '/./'[KEY](re);\n  } catch (e) {\n    try {\n      re[MATCH$1] = false;\n      return !'/./'[KEY](re);\n    } catch (f) { /* empty */ }\n  } return true;\n};\n\nvar STARTS_WITH = 'startsWith';\nvar $startsWith = ''[STARTS_WITH];\n\n_export(_export.P + _export.F * _failsIsRegexp(STARTS_WITH), 'String', {\n  startsWith: function startsWith(searchString /* , position = 0 */) {\n    var that = _stringContext(this, searchString, STARTS_WITH);\n    var index = _toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length));\n    var search = String(searchString);\n    return $startsWith\n      ? $startsWith.call(that, search, index)\n      : that.slice(index, index + search.length) === search;\n  }\n});\n\nvar startsWith = _core.String.startsWith;\n\nvar _stringRepeat = function repeat(count) {\n  var str = String(_defined(this));\n  var res = '';\n  var n = _toInteger(count);\n  if (n < 0 || n == Infinity) throw RangeError(\"Count can't be negative\");\n  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) res += str;\n  return res;\n};\n\n_export(_export.P, 'String', {\n  // 21.1.3.13 String.prototype.repeat(count)\n  repeat: _stringRepeat\n});\n\nvar repeat = _core.String.repeat;\n\nvar _meta = createCommonjsModule(function (module) {\nvar META = _uid('meta');\n\n\nvar setDesc = _objectDp.f;\nvar id = 0;\nvar isExtensible = Object.isExtensible || function () {\n  return true;\n};\nvar FREEZE = !_fails(function () {\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function (it) {\n  setDesc(it, META, { value: {\n    i: 'O' + ++id, // object ID\n    w: {}          // weak collections IDs\n  } });\n};\nvar fastKey = function (it, create) {\n  // return primitive with prefix\n  if (!_isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if (!_has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return 'F';\n    // not necessary to add metadata\n    if (!create) return 'E';\n    // add missing metadata\n    setMeta(it);\n  // return object ID\n  } return it[META].i;\n};\nvar getWeak = function (it, create) {\n  if (!_has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return true;\n    // not necessary to add metadata\n    if (!create) return false;\n    // add missing metadata\n    setMeta(it);\n  // return hash weak collections IDs\n  } return it[META].w;\n};\n// add metadata on freeze-family methods calling\nvar onFreeze = function (it) {\n  if (FREEZE && meta.NEED && isExtensible(it) && !_has(it, META)) setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY: META,\n  NEED: false,\n  fastKey: fastKey,\n  getWeak: getWeak,\n  onFreeze: onFreeze\n};\n});\nvar _meta_1 = _meta.KEY;\nvar _meta_2 = _meta.NEED;\nvar _meta_3 = _meta.fastKey;\nvar _meta_4 = _meta.getWeak;\nvar _meta_5 = _meta.onFreeze;\n\nvar def = _objectDp.f;\n\nvar TAG = _wks('toStringTag');\n\nvar _setToStringTag = function (it, tag, stat) {\n  if (it && !_has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n\nvar f$3 = _wks;\n\nvar _wksExt = {\n\tf: f$3\n};\n\nvar _library = false;\n\nvar defineProperty = _objectDp.f;\nvar _wksDefine = function (name) {\n  var $Symbol = _core.Symbol || (_core.Symbol = _library ? {} : _global.Symbol || {});\n  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: _wksExt.f(name) });\n};\n\n// all enumerable object keys, includes symbols\n\n\n\nvar _enumKeys = function (it) {\n  var result = _objectKeys(it);\n  var getSymbols = _objectGops.f;\n  if (getSymbols) {\n    var symbols = getSymbols(it);\n    var isEnum = _objectPie.f;\n    var i = 0;\n    var key;\n    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);\n  } return result;\n};\n\nvar _objectDps = _descriptors ? Object.defineProperties : function defineProperties(O, Properties) {\n  _anObject(O);\n  var keys = _objectKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) _objectDp.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n\nvar document$1 = _global.document;\nvar _html = document$1 && document$1.documentElement;\n\n// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\n\n\n\nvar IE_PROTO$1 = _sharedKey('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE$1 = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = _domCreate('iframe');\n  var i = _enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  _html.appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE$1][_enumBugKeys[i]];\n  return createDict();\n};\n\nvar _objectCreate = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE$1] = _anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE$1] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO$1] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : _objectDps(result, Properties);\n};\n\n// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\n\nvar hiddenKeys = _enumBugKeys.concat('length', 'prototype');\n\nvar f$4 = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return _objectKeysInternal(O, hiddenKeys);\n};\n\nvar _objectGopn = {\n\tf: f$4\n};\n\n// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\n\nvar gOPN = _objectGopn.f;\nvar toString$1 = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return gOPN(it);\n  } catch (e) {\n    return windowNames.slice();\n  }\n};\n\nvar f$5 = function getOwnPropertyNames(it) {\n  return windowNames && toString$1.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(_toIobject(it));\n};\n\nvar _objectGopnExt = {\n\tf: f$5\n};\n\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar f$6 = _descriptors ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = _toIobject(O);\n  P = _toPrimitive(P, true);\n  if (_ie8DomDefine) try {\n    return gOPD(O, P);\n  } catch (e) { /* empty */ }\n  if (_has(O, P)) return _propertyDesc(!_objectPie.f.call(O, P), O[P]);\n};\n\nvar _objectGopd = {\n\tf: f$6\n};\n\n// ECMAScript 6 symbols shim\n\n\n\n\n\nvar META = _meta.KEY;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar gOPD$1 = _objectGopd.f;\nvar dP$1 = _objectDp.f;\nvar gOPN$1 = _objectGopnExt.f;\nvar $Symbol = _global.Symbol;\nvar $JSON = _global.JSON;\nvar _stringify = $JSON && $JSON.stringify;\nvar PROTOTYPE$2 = 'prototype';\nvar HIDDEN = _wks('_hidden');\nvar TO_PRIMITIVE = _wks('toPrimitive');\nvar isEnum = {}.propertyIsEnumerable;\nvar SymbolRegistry = _shared('symbol-registry');\nvar AllSymbols = _shared('symbols');\nvar OPSymbols = _shared('op-symbols');\nvar ObjectProto = Object[PROTOTYPE$2];\nvar USE_NATIVE = typeof $Symbol == 'function';\nvar QObject = _global.QObject;\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar setter = !QObject || !QObject[PROTOTYPE$2] || !QObject[PROTOTYPE$2].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar setSymbolDesc = _descriptors && _fails(function () {\n  return _objectCreate(dP$1({}, 'a', {\n    get: function () { return dP$1(this, 'a', { value: 7 }).a; }\n  })).a != 7;\n}) ? function (it, key, D) {\n  var protoDesc = gOPD$1(ObjectProto, key);\n  if (protoDesc) delete ObjectProto[key];\n  dP$1(it, key, D);\n  if (protoDesc && it !== ObjectProto) dP$1(ObjectProto, key, protoDesc);\n} : dP$1;\n\nvar wrap = function (tag) {\n  var sym = AllSymbols[tag] = _objectCreate($Symbol[PROTOTYPE$2]);\n  sym._k = tag;\n  return sym;\n};\n\nvar isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  return it instanceof $Symbol;\n};\n\nvar $defineProperty = function defineProperty(it, key, D) {\n  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);\n  _anObject(it);\n  key = _toPrimitive(key, true);\n  _anObject(D);\n  if (_has(AllSymbols, key)) {\n    if (!D.enumerable) {\n      if (!_has(it, HIDDEN)) dP$1(it, HIDDEN, _propertyDesc(1, {}));\n      it[HIDDEN][key] = true;\n    } else {\n      if (_has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;\n      D = _objectCreate(D, { enumerable: _propertyDesc(0, false) });\n    } return setSymbolDesc(it, key, D);\n  } return dP$1(it, key, D);\n};\nvar $defineProperties = function defineProperties(it, P) {\n  _anObject(it);\n  var keys = _enumKeys(P = _toIobject(P));\n  var i = 0;\n  var l = keys.length;\n  var key;\n  while (l > i) $defineProperty(it, key = keys[i++], P[key]);\n  return it;\n};\nvar $create = function create(it, P) {\n  return P === undefined ? _objectCreate(it) : $defineProperties(_objectCreate(it), P);\n};\nvar $propertyIsEnumerable = function propertyIsEnumerable(key) {\n  var E = isEnum.call(this, key = _toPrimitive(key, true));\n  if (this === ObjectProto && _has(AllSymbols, key) && !_has(OPSymbols, key)) return false;\n  return E || !_has(this, key) || !_has(AllSymbols, key) || _has(this, HIDDEN) && this[HIDDEN][key] ? E : true;\n};\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {\n  it = _toIobject(it);\n  key = _toPrimitive(key, true);\n  if (it === ObjectProto && _has(AllSymbols, key) && !_has(OPSymbols, key)) return;\n  var D = gOPD$1(it, key);\n  if (D && _has(AllSymbols, key) && !(_has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;\n  return D;\n};\nvar $getOwnPropertyNames = function getOwnPropertyNames(it) {\n  var names = gOPN$1(_toIobject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (!_has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);\n  } return result;\n};\nvar $getOwnPropertySymbols = function getOwnPropertySymbols(it) {\n  var IS_OP = it === ObjectProto;\n  var names = gOPN$1(IS_OP ? OPSymbols : _toIobject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (_has(AllSymbols, key = names[i++]) && (IS_OP ? _has(ObjectProto, key) : true)) result.push(AllSymbols[key]);\n  } return result;\n};\n\n// 19.4.1.1 Symbol([description])\nif (!USE_NATIVE) {\n  $Symbol = function Symbol() {\n    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');\n    var tag = _uid(arguments.length > 0 ? arguments[0] : undefined);\n    var $set = function (value) {\n      if (this === ObjectProto) $set.call(OPSymbols, value);\n      if (_has(this, HIDDEN) && _has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;\n      setSymbolDesc(this, tag, _propertyDesc(1, value));\n    };\n    if (_descriptors && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });\n    return wrap(tag);\n  };\n  _redefine($Symbol[PROTOTYPE$2], 'toString', function toString() {\n    return this._k;\n  });\n\n  _objectGopd.f = $getOwnPropertyDescriptor;\n  _objectDp.f = $defineProperty;\n  _objectGopn.f = _objectGopnExt.f = $getOwnPropertyNames;\n  _objectPie.f = $propertyIsEnumerable;\n  _objectGops.f = $getOwnPropertySymbols;\n\n  if (_descriptors && !_library) {\n    _redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);\n  }\n\n  _wksExt.f = function (name) {\n    return wrap(_wks(name));\n  };\n}\n\n_export(_export.G + _export.W + _export.F * !USE_NATIVE, { Symbol: $Symbol });\n\nfor (var es6Symbols = (\n  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14\n  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'\n).split(','), j = 0; es6Symbols.length > j;)_wks(es6Symbols[j++]);\n\nfor (var wellKnownSymbols = _objectKeys(_wks.store), k = 0; wellKnownSymbols.length > k;) _wksDefine(wellKnownSymbols[k++]);\n\n_export(_export.S + _export.F * !USE_NATIVE, 'Symbol', {\n  // 19.4.2.1 Symbol.for(key)\n  'for': function (key) {\n    return _has(SymbolRegistry, key += '')\n      ? SymbolRegistry[key]\n      : SymbolRegistry[key] = $Symbol(key);\n  },\n  // 19.4.2.5 Symbol.keyFor(sym)\n  keyFor: function keyFor(sym) {\n    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');\n    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;\n  },\n  useSetter: function () { setter = true; },\n  useSimple: function () { setter = false; }\n});\n\n_export(_export.S + _export.F * !USE_NATIVE, 'Object', {\n  // 19.1.2.2 Object.create(O [, Properties])\n  create: $create,\n  // 19.1.2.4 Object.defineProperty(O, P, Attributes)\n  defineProperty: $defineProperty,\n  // 19.1.2.3 Object.defineProperties(O, Properties)\n  defineProperties: $defineProperties,\n  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,\n  // 19.1.2.7 Object.getOwnPropertyNames(O)\n  getOwnPropertyNames: $getOwnPropertyNames,\n  // 19.1.2.8 Object.getOwnPropertySymbols(O)\n  getOwnPropertySymbols: $getOwnPropertySymbols\n});\n\n// 24.3.2 JSON.stringify(value [, replacer [, space]])\n$JSON && _export(_export.S + _export.F * (!USE_NATIVE || _fails(function () {\n  var S = $Symbol();\n  // MS Edge converts symbol values to JSON as {}\n  // WebKit converts symbol values to JSON as null\n  // V8 throws on boxed symbols\n  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';\n})), 'JSON', {\n  stringify: function stringify(it) {\n    var args = [it];\n    var i = 1;\n    var replacer, $replacer;\n    while (arguments.length > i) args.push(arguments[i++]);\n    $replacer = replacer = args[1];\n    if (!_isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined\n    if (!_isArray(replacer)) replacer = function (key, value) {\n      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);\n      if (!isSymbol(value)) return value;\n    };\n    args[1] = replacer;\n    return _stringify.apply($JSON, args);\n  }\n});\n\n// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)\n$Symbol[PROTOTYPE$2][TO_PRIMITIVE] || _hide($Symbol[PROTOTYPE$2], TO_PRIMITIVE, $Symbol[PROTOTYPE$2].valueOf);\n// 19.4.3.5 Symbol.prototype[@@toStringTag]\n_setToStringTag($Symbol, 'Symbol');\n// 20.2.1.9 Math[@@toStringTag]\n_setToStringTag(Math, 'Math', true);\n// 24.3.3 JSON[@@toStringTag]\n_setToStringTag(_global.JSON, 'JSON', true);\n\n// getting tag from 19.1.3.6 Object.prototype.toString()\n\nvar TAG$1 = _wks('toStringTag');\n// ES3 wrong here\nvar ARG = _cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nvar _classof = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG$1)) == 'string' ? T\n    // builtinTag case\n    : ARG ? _cof(O)\n    // ES3 arguments fallback\n    : (B = _cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n\n// 19.1.3.6 Object.prototype.toString()\n\nvar test = {};\ntest[_wks('toStringTag')] = 'z';\nif (test + '' != '[object z]') {\n  _redefine(Object.prototype, 'toString', function toString() {\n    return '[object ' + _classof(this) + ']';\n  }, true);\n}\n\n_wksDefine('asyncIterator');\n\n_wksDefine('observable');\n\nvar symbol = _core.Symbol;\n\n// true  -> String#at\n// false -> String#codePointAt\nvar _stringAt = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(_defined(that));\n    var i = _toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n\nvar _iterators = {};\n\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\n_hide(IteratorPrototype, _wks('iterator'), function () { return this; });\n\nvar _iterCreate = function (Constructor, NAME, next) {\n  Constructor.prototype = _objectCreate(IteratorPrototype, { next: _propertyDesc(1, next) });\n  _setToStringTag(Constructor, NAME + ' Iterator');\n};\n\n// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\n\n\nvar IE_PROTO$2 = _sharedKey('IE_PROTO');\nvar ObjectProto$1 = Object.prototype;\n\nvar _objectGpo = Object.getPrototypeOf || function (O) {\n  O = _toObject(O);\n  if (_has(O, IE_PROTO$2)) return O[IE_PROTO$2];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto$1 : null;\n};\n\nvar ITERATOR = _wks('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nvar _iterDefine = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  _iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = _objectGpo($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      _setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!_library && typeof IteratorPrototype[ITERATOR] != 'function') _hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!_library || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    _hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  _iterators[NAME] = $default;\n  _iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) _redefine(proto, key, methods[key]);\n    } else _export(_export.P + _export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n\nvar $at = _stringAt(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\n_iterDefine(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return { value: undefined, done: true };\n  point = $at(O, index);\n  this._i += point.length;\n  return { value: point, done: false };\n});\n\nvar _iterStep = function (done, value) {\n  return { value: value, done: !!done };\n};\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nvar es6_array_iterator = _iterDefine(Array, 'Array', function (iterated, kind) {\n  this._t = _toIobject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return _iterStep(1);\n  }\n  if (kind == 'keys') return _iterStep(0, index);\n  if (kind == 'values') return _iterStep(0, O[index]);\n  return _iterStep(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\n_iterators.Arguments = _iterators.Array;\n\n_addToUnscopables('keys');\n_addToUnscopables('values');\n_addToUnscopables('entries');\n\nvar ITERATOR$1 = _wks('iterator');\nvar TO_STRING_TAG = _wks('toStringTag');\nvar ArrayValues = _iterators.Array;\n\nvar DOMIterables = {\n  CSSRuleList: true, // TODO: Not spec compliant, should be false.\n  CSSStyleDeclaration: false,\n  CSSValueList: false,\n  ClientRectList: false,\n  DOMRectList: false,\n  DOMStringList: false,\n  DOMTokenList: true,\n  DataTransferItemList: false,\n  FileList: false,\n  HTMLAllCollection: false,\n  HTMLCollection: false,\n  HTMLFormElement: false,\n  HTMLSelectElement: false,\n  MediaList: true, // TODO: Not spec compliant, should be false.\n  MimeTypeArray: false,\n  NamedNodeMap: false,\n  NodeList: true,\n  PaintRequestList: false,\n  Plugin: false,\n  PluginArray: false,\n  SVGLengthList: false,\n  SVGNumberList: false,\n  SVGPathSegList: false,\n  SVGPointList: false,\n  SVGStringList: false,\n  SVGTransformList: false,\n  SourceBufferList: false,\n  StyleSheetList: true, // TODO: Not spec compliant, should be false.\n  TextTrackCueList: false,\n  TextTrackList: false,\n  TouchList: false\n};\n\nfor (var collections = _objectKeys(DOMIterables), i = 0; i < collections.length; i++) {\n  var NAME = collections[i];\n  var explicit = DOMIterables[NAME];\n  var Collection = _global[NAME];\n  var proto = Collection && Collection.prototype;\n  var key;\n  if (proto) {\n    if (!proto[ITERATOR$1]) _hide(proto, ITERATOR$1, ArrayValues);\n    if (!proto[TO_STRING_TAG]) _hide(proto, TO_STRING_TAG, NAME);\n    _iterators[NAME] = ArrayValues;\n    if (explicit) for (key in es6_array_iterator) if (!proto[key]) _redefine(proto, key, es6_array_iterator[key], true);\n  }\n}\n\nvar iterator = _wksExt.f('iterator');\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/dist/index.esm.js\n// module id = 38\n// module chunks = 0","var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/timers-browserify/main.js\n// module id = 39\n// module chunks = 0","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/setimmediate/setImmediate.js\n// module id = 40\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar util = require('@firebase/util');\nvar logger = require('@firebase/logger');\nvar tslib_1 = require('tslib');\nvar firebase = _interopDefault(require('@firebase/app'));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Wraps a DOM Storage object and:\r\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\r\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\r\n *\r\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\r\n * and one for localStorage.\r\n *\r\n * @constructor\r\n */\r\nvar DOMStorageWrapper = /** @class */ (function () {\r\n    /**\r\n     * @param {Storage} domStorage_ The underlying storage object (e.g. localStorage or sessionStorage)\r\n     */\r\n    function DOMStorageWrapper(domStorage_) {\r\n        this.domStorage_ = domStorage_;\r\n        // Use a prefix to avoid collisions with other stuff saved by the app.\r\n        this.prefix_ = 'firebase:';\r\n    }\r\n    /**\r\n     * @param {string} key The key to save the value under\r\n     * @param {?Object} value The value being stored, or null to remove the key.\r\n     */\r\n    DOMStorageWrapper.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            this.domStorage_.removeItem(this.prefixedName_(key));\r\n        }\r\n        else {\r\n            this.domStorage_.setItem(this.prefixedName_(key), util.stringify(value));\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} key\r\n     * @return {*} The value that was stored under this key, or null\r\n     */\r\n    DOMStorageWrapper.prototype.get = function (key) {\r\n        var storedVal = this.domStorage_.getItem(this.prefixedName_(key));\r\n        if (storedVal == null) {\r\n            return null;\r\n        }\r\n        else {\r\n            return util.jsonEval(storedVal);\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} key\r\n     */\r\n    DOMStorageWrapper.prototype.remove = function (key) {\r\n        this.domStorage_.removeItem(this.prefixedName_(key));\r\n    };\r\n    /**\r\n     * @param {string} name\r\n     * @return {string}\r\n     */\r\n    DOMStorageWrapper.prototype.prefixedName_ = function (name) {\r\n        return this.prefix_ + name;\r\n    };\r\n    DOMStorageWrapper.prototype.toString = function () {\r\n        return this.domStorage_.toString();\r\n    };\r\n    return DOMStorageWrapper;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\r\n * (TODO: create interface for both to implement).\r\n *\r\n * @constructor\r\n */\r\nvar MemoryStorage = /** @class */ (function () {\r\n    function MemoryStorage() {\r\n        this.cache_ = {};\r\n        this.isInMemoryStorage = true;\r\n    }\r\n    MemoryStorage.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            delete this.cache_[key];\r\n        }\r\n        else {\r\n            this.cache_[key] = value;\r\n        }\r\n    };\r\n    MemoryStorage.prototype.get = function (key) {\r\n        if (util.contains(this.cache_, key)) {\r\n            return this.cache_[key];\r\n        }\r\n        return null;\r\n    };\r\n    MemoryStorage.prototype.remove = function (key) {\r\n        delete this.cache_[key];\r\n    };\r\n    return MemoryStorage;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\r\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\r\n * to reflect this type\r\n *\r\n * @param {string} domStorageName Name of the underlying storage object\r\n *   (e.g. 'localStorage' or 'sessionStorage').\r\n * @return {?} Turning off type information until a common interface is defined.\r\n */\r\nvar createStoragefor = function (domStorageName) {\r\n    try {\r\n        // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\r\n        // so it must be inside the try/catch.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window[domStorageName] !== 'undefined') {\r\n            // Need to test cache. Just because it's here doesn't mean it works\r\n            var domStorage = window[domStorageName];\r\n            domStorage.setItem('firebase:sentinel', 'cache');\r\n            domStorage.removeItem('firebase:sentinel');\r\n            return new DOMStorageWrapper(domStorage);\r\n        }\r\n    }\r\n    catch (e) { }\r\n    // Failed to create wrapper.  Just return in-memory storage.\r\n    // TODO: log?\r\n    return new MemoryStorage();\r\n};\r\n/** A storage object that lasts across sessions */\r\nvar PersistentStorage = createStoragefor('localStorage');\r\n/** A storage object that only lasts one session */\r\nvar SessionStorage = createStoragefor('sessionStorage');\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar logClient = new logger.Logger('@firebase/database');\r\n/**\r\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\r\n * @type {function(): number} Generated ID.\r\n */\r\nvar LUIDGenerator = (function () {\r\n    var id = 1;\r\n    return function () {\r\n        return id++;\r\n    };\r\n})();\r\n/**\r\n * Sha1 hash of the input string\r\n * @param {!string} str The string to hash\r\n * @return {!string} The resulting hash\r\n */\r\nvar sha1 = function (str) {\r\n    var utf8Bytes = util.stringToByteArray(str);\r\n    var sha1 = new util.Sha1();\r\n    sha1.update(utf8Bytes);\r\n    var sha1Bytes = sha1.digest();\r\n    return util.base64.encodeByteArray(sha1Bytes);\r\n};\r\n/**\r\n * @param {...*} var_args\r\n * @return {string}\r\n * @private\r\n */\r\nvar buildLogMessage_ = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    var message = '';\r\n    for (var i = 0; i < var_args.length; i++) {\r\n        if (Array.isArray(var_args[i]) ||\r\n            (var_args[i] &&\r\n                typeof var_args[i] === 'object' &&\r\n                typeof var_args[i].length === 'number')) {\r\n            message += buildLogMessage_.apply(null, var_args[i]);\r\n        }\r\n        else if (typeof var_args[i] === 'object') {\r\n            message += util.stringify(var_args[i]);\r\n        }\r\n        else {\r\n            message += var_args[i];\r\n        }\r\n        message += ' ';\r\n    }\r\n    return message;\r\n};\r\n/**\r\n * Use this for all debug messages in Firebase.\r\n * @type {?function(string)}\r\n */\r\nvar logger$1 = null;\r\n/**\r\n * Flag to check for log availability on first log message\r\n * @type {boolean}\r\n * @private\r\n */\r\nvar firstLog_ = true;\r\n/**\r\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\r\n * @param {boolean|?function(string)} logger_ A flag to turn on logging, or a custom logger\r\n * @param {boolean=} persistent Whether or not to persist logging settings across refreshes\r\n */\r\nvar enableLogging = function (logger_, persistent) {\r\n    util.assert(!persistent || (logger_ === true || logger_ === false), \"Can't turn on custom loggers persistently.\");\r\n    if (logger_ === true) {\r\n        logClient.logLevel = logger.LogLevel.VERBOSE;\r\n        logger$1 = logClient.log.bind(logClient);\r\n        if (persistent)\r\n            SessionStorage.set('logging_enabled', true);\r\n    }\r\n    else if (typeof logger_ === 'function') {\r\n        logger$1 = logger_;\r\n    }\r\n    else {\r\n        logger$1 = null;\r\n        SessionStorage.remove('logging_enabled');\r\n    }\r\n};\r\n/**\r\n *\r\n * @param {...(string|Arguments)} var_args\r\n */\r\nvar log = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    if (firstLog_ === true) {\r\n        firstLog_ = false;\r\n        if (logger$1 === null && SessionStorage.get('logging_enabled') === true)\r\n            enableLogging(true);\r\n    }\r\n    if (logger$1) {\r\n        var message = buildLogMessage_.apply(null, var_args);\r\n        logger$1(message);\r\n    }\r\n};\r\n/**\r\n * @param {!string} prefix\r\n * @return {function(...[*])}\r\n */\r\nvar logWrapper = function (prefix) {\r\n    return function () {\r\n        var var_args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            var_args[_i] = arguments[_i];\r\n        }\r\n        log.apply(void 0, [prefix].concat(var_args));\r\n    };\r\n};\r\n/**\r\n * @param {...string} var_args\r\n */\r\nvar error = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_.apply(void 0, var_args);\r\n    logClient.error(message);\r\n};\r\n/**\r\n * @param {...string} var_args\r\n */\r\nvar fatal = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    var message = \"FIREBASE FATAL ERROR: \" + buildLogMessage_.apply(void 0, var_args);\r\n    logClient.error(message);\r\n    throw new Error(message);\r\n};\r\n/**\r\n * @param {...*} var_args\r\n */\r\nvar warn = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE WARNING: ' + buildLogMessage_.apply(void 0, var_args);\r\n    logClient.warn(message);\r\n};\r\n/**\r\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\r\n * does not use https.\r\n */\r\nvar warnIfPageIsSecure = function () {\r\n    // Be very careful accessing browser globals. Who knows what may or may not exist.\r\n    if (typeof window !== 'undefined' &&\r\n        window.location &&\r\n        window.location.protocol &&\r\n        window.location.protocol.indexOf('https:') !== -1) {\r\n        warn('Insecure Firebase access from a secure page. ' +\r\n            'Please use https in calls to new Firebase().');\r\n    }\r\n};\r\n/**\r\n * Returns true if data is NaN, or +/- Infinity.\r\n * @param {*} data\r\n * @return {boolean}\r\n */\r\nvar isInvalidJSONNumber = function (data) {\r\n    return (typeof data === 'number' &&\r\n        (data != data || // NaN\r\n            data == Number.POSITIVE_INFINITY ||\r\n            data == Number.NEGATIVE_INFINITY));\r\n};\r\n/**\r\n * @param {function()} fn\r\n */\r\nvar executeWhenDOMReady = function (fn) {\r\n    if (util.isNodeSdk() || document.readyState === 'complete') {\r\n        fn();\r\n    }\r\n    else {\r\n        // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\r\n        // fire before onload), but fall back to onload.\r\n        var called_1 = false;\r\n        var wrappedFn_1 = function () {\r\n            if (!document.body) {\r\n                setTimeout(wrappedFn_1, Math.floor(10));\r\n                return;\r\n            }\r\n            if (!called_1) {\r\n                called_1 = true;\r\n                fn();\r\n            }\r\n        };\r\n        if (document.addEventListener) {\r\n            document.addEventListener('DOMContentLoaded', wrappedFn_1, false);\r\n            // fallback to onload.\r\n            window.addEventListener('load', wrappedFn_1, false);\r\n        }\r\n        else if (document.attachEvent) {\r\n            // IE.\r\n            document.attachEvent('onreadystatechange', function () {\r\n                if (document.readyState === 'complete')\r\n                    wrappedFn_1();\r\n            });\r\n            // fallback to onload.\r\n            window.attachEvent('onload', wrappedFn_1);\r\n            // jQuery has an extra hack for IE that we could employ (based on\r\n            // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\r\n            // I'm hoping we don't need it.\r\n        }\r\n    }\r\n};\r\n/**\r\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\r\n * @type {!string}\r\n */\r\nvar MIN_NAME = '[MIN_NAME]';\r\n/**\r\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\r\n * @type {!string}\r\n */\r\nvar MAX_NAME = '[MAX_NAME]';\r\n/**\r\n * Compares valid Firebase key names, plus min and max name\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number}\r\n */\r\nvar nameCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a === MIN_NAME || b === MAX_NAME) {\r\n        return -1;\r\n    }\r\n    else if (b === MIN_NAME || a === MAX_NAME) {\r\n        return 1;\r\n    }\r\n    else {\r\n        var aAsInt = tryParseInt(a), bAsInt = tryParseInt(b);\r\n        if (aAsInt !== null) {\r\n            if (bAsInt !== null) {\r\n                return aAsInt - bAsInt == 0 ? a.length - b.length : aAsInt - bAsInt;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (bAsInt !== null) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return a < b ? -1 : 1;\r\n        }\r\n    }\r\n};\r\n/**\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number} comparison result.\r\n */\r\nvar stringCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a < b) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n};\r\n/**\r\n * @param {string} key\r\n * @param {Object} obj\r\n * @return {*}\r\n */\r\nvar requireKey = function (key, obj) {\r\n    if (obj && key in obj) {\r\n        return obj[key];\r\n    }\r\n    else {\r\n        throw new Error('Missing required key (' + key + ') in object: ' + util.stringify(obj));\r\n    }\r\n};\r\n/**\r\n * @param {*} obj\r\n * @return {string}\r\n */\r\nvar ObjectToUniqueKey = function (obj) {\r\n    if (typeof obj !== 'object' || obj === null)\r\n        return util.stringify(obj);\r\n    var keys = [];\r\n    for (var k in obj) {\r\n        keys.push(k);\r\n    }\r\n    // Export as json, but with the keys sorted.\r\n    keys.sort();\r\n    var key = '{';\r\n    for (var i = 0; i < keys.length; i++) {\r\n        if (i !== 0)\r\n            key += ',';\r\n        key += util.stringify(keys[i]);\r\n        key += ':';\r\n        key += ObjectToUniqueKey(obj[keys[i]]);\r\n    }\r\n    key += '}';\r\n    return key;\r\n};\r\n/**\r\n * Splits a string into a number of smaller segments of maximum size\r\n * @param {!string} str The string\r\n * @param {!number} segsize The maximum number of chars in the string.\r\n * @return {Array.<string>} The string, split into appropriately-sized chunks\r\n */\r\nvar splitStringBySize = function (str, segsize) {\r\n    var len = str.length;\r\n    if (len <= segsize) {\r\n        return [str];\r\n    }\r\n    var dataSegs = [];\r\n    for (var c = 0; c < len; c += segsize) {\r\n        if (c + segsize > len) {\r\n            dataSegs.push(str.substring(c, len));\r\n        }\r\n        else {\r\n            dataSegs.push(str.substring(c, c + segsize));\r\n        }\r\n    }\r\n    return dataSegs;\r\n};\r\n/**\r\n * Apply a function to each (key, value) pair in an object or\r\n * apply a function to each (index, value) pair in an array\r\n * @param {!(Object|Array)} obj The object or array to iterate over\r\n * @param {function(?, ?)} fn The function to apply\r\n */\r\nvar each = function (obj, fn) {\r\n    if (Array.isArray(obj)) {\r\n        for (var i = 0; i < obj.length; ++i) {\r\n            fn(i, obj[i]);\r\n        }\r\n    }\r\n    else {\r\n        /**\r\n         * in the conversion of code we removed the goog.object.forEach\r\n         * function which did a value,key callback. We standardized on\r\n         * a single impl that does a key, value callback. So we invert\r\n         * to not have to touch the `each` code points\r\n         */\r\n        util.forEach(obj, function (key, val) { return fn(val, key); });\r\n    }\r\n};\r\n/**\r\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\r\n * I made one modification at the end and removed the NaN / Infinity\r\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\r\n * @param {!number} v A double\r\n * @return {string}\r\n */\r\nvar doubleToIEEE754String = function (v) {\r\n    util.assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\r\n    var ebits = 11, fbits = 52;\r\n    var bias = (1 << (ebits - 1)) - 1, s, e, f, ln, i, bits, str;\r\n    // Compute sign, exponent, fraction\r\n    // Skip NaN / Infinity handling --MJL.\r\n    if (v === 0) {\r\n        e = 0;\r\n        f = 0;\r\n        s = 1 / v === -Infinity ? 1 : 0;\r\n    }\r\n    else {\r\n        s = v < 0;\r\n        v = Math.abs(v);\r\n        if (v >= Math.pow(2, 1 - bias)) {\r\n            // Normalized\r\n            ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\r\n            e = ln + bias;\r\n            f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\r\n        }\r\n        else {\r\n            // Denormalized\r\n            e = 0;\r\n            f = Math.round(v / Math.pow(2, 1 - bias - fbits));\r\n        }\r\n    }\r\n    // Pack sign, exponent, fraction\r\n    bits = [];\r\n    for (i = fbits; i; i -= 1) {\r\n        bits.push(f % 2 ? 1 : 0);\r\n        f = Math.floor(f / 2);\r\n    }\r\n    for (i = ebits; i; i -= 1) {\r\n        bits.push(e % 2 ? 1 : 0);\r\n        e = Math.floor(e / 2);\r\n    }\r\n    bits.push(s ? 1 : 0);\r\n    bits.reverse();\r\n    str = bits.join('');\r\n    // Return the data as a hex string. --MJL\r\n    var hexByteString = '';\r\n    for (i = 0; i < 64; i += 8) {\r\n        var hexByte = parseInt(str.substr(i, 8), 2).toString(16);\r\n        if (hexByte.length === 1)\r\n            hexByte = '0' + hexByte;\r\n        hexByteString = hexByteString + hexByte;\r\n    }\r\n    return hexByteString.toLowerCase();\r\n};\r\n/**\r\n * Used to detect if we're in a Chrome content script (which executes in an\r\n * isolated environment where long-polling doesn't work).\r\n * @return {boolean}\r\n */\r\nvar isChromeExtensionContentScript = function () {\r\n    return !!(typeof window === 'object' &&\r\n        window['chrome'] &&\r\n        window['chrome']['extension'] &&\r\n        !/^chrome/.test(window.location.href));\r\n};\r\n/**\r\n * Used to detect if we're in a Windows 8 Store app.\r\n * @return {boolean}\r\n */\r\nvar isWindowsStoreApp = function () {\r\n    // Check for the presence of a couple WinRT globals\r\n    return typeof Windows === 'object' && typeof Windows.UI === 'object';\r\n};\r\n/**\r\n * Converts a server error code to a Javascript Error\r\n * @param {!string} code\r\n * @param {!Query} query\r\n * @return {Error}\r\n */\r\nvar errorForServerCode = function (code, query) {\r\n    var reason = 'Unknown Error';\r\n    if (code === 'too_big') {\r\n        reason =\r\n            'The data requested exceeds the maximum size ' +\r\n                'that can be accessed with a single request.';\r\n    }\r\n    else if (code == 'permission_denied') {\r\n        reason = \"Client doesn't have permission to access the desired data.\";\r\n    }\r\n    else if (code == 'unavailable') {\r\n        reason = 'The service is unavailable';\r\n    }\r\n    var error = new Error(code + ' at ' + query.path.toString() + ': ' + reason);\r\n    error.code = code.toUpperCase();\r\n    return error;\r\n};\r\n/**\r\n * Used to test for integer-looking strings\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INTEGER_REGEXP_ = new RegExp('^-?\\\\d{1,10}$');\r\n/**\r\n * If the string contains a 32-bit integer, return it.  Else return null.\r\n * @param {!string} str\r\n * @return {?number}\r\n */\r\nvar tryParseInt = function (str) {\r\n    if (INTEGER_REGEXP_.test(str)) {\r\n        var intVal = Number(str);\r\n        if (intVal >= -2147483648 && intVal <= 2147483647) {\r\n            return intVal;\r\n        }\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Helper to run some code but catch any exceptions and re-throw them later.\r\n * Useful for preventing user callbacks from breaking internal code.\r\n *\r\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\r\n * convenient (we don't have to try to figure out when is a safe point to\r\n * re-throw it), and the behavior seems reasonable:\r\n *\r\n * * If you aren't pausing on exceptions, you get an error in the console with\r\n *   the correct stack trace.\r\n * * If you're pausing on all exceptions, the debugger will pause on your\r\n *   exception and then again when we rethrow it.\r\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\r\n *   on us re-throwing it.\r\n *\r\n * @param {!function()} fn The code to guard.\r\n */\r\nvar exceptionGuard = function (fn) {\r\n    try {\r\n        fn();\r\n    }\r\n    catch (e) {\r\n        // Re-throw exception when it's safe.\r\n        setTimeout(function () {\r\n            // It used to be that \"throw e\" would result in a good console error with\r\n            // relevant context, but as of Chrome 39, you just get the firebase.js\r\n            // file/line number where we re-throw it, which is useless. So we log\r\n            // e.stack explicitly.\r\n            var stack = e.stack || '';\r\n            warn('Exception was thrown by user callback.', stack);\r\n            throw e;\r\n        }, Math.floor(0));\r\n    }\r\n};\r\n/**\r\n * @return {boolean} true if we think we're currently being crawled.\r\n */\r\nvar beingCrawled = function () {\r\n    var userAgent = (typeof window === 'object' &&\r\n        window['navigator'] &&\r\n        window['navigator']['userAgent']) ||\r\n        '';\r\n    // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\r\n    // believe to support JavaScript/AJAX rendering.\r\n    // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\r\n    // would have seen the page\" is flaky if we don't treat it as a crawler.\r\n    return (userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i) >= 0);\r\n};\r\n/**\r\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\r\n *\r\n * It is removed with clearTimeout() as normal.\r\n *\r\n * @param {Function} fn Function to run.\r\n * @param {number} time Milliseconds to wait before running.\r\n * @return {number|Object} The setTimeout() return value.\r\n */\r\nvar setTimeoutNonBlocking = function (fn, time) {\r\n    var timeout = setTimeout(fn, time);\r\n    if (typeof timeout === 'object' && timeout['unref']) {\r\n        timeout['unref']();\r\n    }\r\n    return timeout;\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An immutable object representing a parsed path.  It's immutable so that you\r\n * can pass them around to other functions without worrying about them changing\r\n * it.\r\n */\r\nvar Path = /** @class */ (function () {\r\n    /**\r\n     * @param {string|Array.<string>} pathOrString Path string to parse,\r\n     *      or another path, or the raw tokens array\r\n     * @param {number=} pieceNum\r\n     */\r\n    function Path(pathOrString, pieceNum) {\r\n        if (pieceNum === void 0) {\r\n            this.pieces_ = pathOrString.split('/');\r\n            // Remove empty pieces.\r\n            var copyTo = 0;\r\n            for (var i = 0; i < this.pieces_.length; i++) {\r\n                if (this.pieces_[i].length > 0) {\r\n                    this.pieces_[copyTo] = this.pieces_[i];\r\n                    copyTo++;\r\n                }\r\n            }\r\n            this.pieces_.length = copyTo;\r\n            this.pieceNum_ = 0;\r\n        }\r\n        else {\r\n            this.pieces_ = pathOrString;\r\n            this.pieceNum_ = pieceNum;\r\n        }\r\n    }\r\n    Object.defineProperty(Path, \"Empty\", {\r\n        /**\r\n         * Singleton to represent an empty path\r\n         *\r\n         * @const\r\n         */\r\n        get: function () {\r\n            return new Path('');\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Path.prototype.getFront = function () {\r\n        if (this.pieceNum_ >= this.pieces_.length)\r\n            return null;\r\n        return this.pieces_[this.pieceNum_];\r\n    };\r\n    /**\r\n     * @return {number} The number of segments in this path\r\n     */\r\n    Path.prototype.getLength = function () {\r\n        return this.pieces_.length - this.pieceNum_;\r\n    };\r\n    /**\r\n     * @return {!Path}\r\n     */\r\n    Path.prototype.popFront = function () {\r\n        var pieceNum = this.pieceNum_;\r\n        if (pieceNum < this.pieces_.length) {\r\n            pieceNum++;\r\n        }\r\n        return new Path(this.pieces_, pieceNum);\r\n    };\r\n    /**\r\n     * @return {?string}\r\n     */\r\n    Path.prototype.getBack = function () {\r\n        if (this.pieceNum_ < this.pieces_.length)\r\n            return this.pieces_[this.pieces_.length - 1];\r\n        return null;\r\n    };\r\n    Path.prototype.toString = function () {\r\n        var pathString = '';\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            if (this.pieces_[i] !== '')\r\n                pathString += '/' + this.pieces_[i];\r\n        }\r\n        return pathString || '/';\r\n    };\r\n    Path.prototype.toUrlEncodedString = function () {\r\n        var pathString = '';\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            if (this.pieces_[i] !== '')\r\n                pathString += '/' + encodeURIComponent(String(this.pieces_[i]));\r\n        }\r\n        return pathString || '/';\r\n    };\r\n    /**\r\n     * Shallow copy of the parts of the path.\r\n     *\r\n     * @param {number=} begin\r\n     * @return {!Array<string>}\r\n     */\r\n    Path.prototype.slice = function (begin) {\r\n        if (begin === void 0) { begin = 0; }\r\n        return this.pieces_.slice(this.pieceNum_ + begin);\r\n    };\r\n    /**\r\n     * @return {?Path}\r\n     */\r\n    Path.prototype.parent = function () {\r\n        if (this.pieceNum_ >= this.pieces_.length)\r\n            return null;\r\n        var pieces = [];\r\n        for (var i = this.pieceNum_; i < this.pieces_.length - 1; i++)\r\n            pieces.push(this.pieces_[i]);\r\n        return new Path(pieces, 0);\r\n    };\r\n    /**\r\n     * @param {string|!Path} childPathObj\r\n     * @return {!Path}\r\n     */\r\n    Path.prototype.child = function (childPathObj) {\r\n        var pieces = [];\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++)\r\n            pieces.push(this.pieces_[i]);\r\n        if (childPathObj instanceof Path) {\r\n            for (var i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\r\n                pieces.push(childPathObj.pieces_[i]);\r\n            }\r\n        }\r\n        else {\r\n            var childPieces = childPathObj.split('/');\r\n            for (var i = 0; i < childPieces.length; i++) {\r\n                if (childPieces[i].length > 0)\r\n                    pieces.push(childPieces[i]);\r\n            }\r\n        }\r\n        return new Path(pieces, 0);\r\n    };\r\n    /**\r\n     * @return {boolean} True if there are no segments in this path\r\n     */\r\n    Path.prototype.isEmpty = function () {\r\n        return this.pieceNum_ >= this.pieces_.length;\r\n    };\r\n    /**\r\n     * @param {!Path} outerPath\r\n     * @param {!Path} innerPath\r\n     * @return {!Path} The path from outerPath to innerPath\r\n     */\r\n    Path.relativePath = function (outerPath, innerPath) {\r\n        var outer = outerPath.getFront(), inner = innerPath.getFront();\r\n        if (outer === null) {\r\n            return innerPath;\r\n        }\r\n        else if (outer === inner) {\r\n            return Path.relativePath(outerPath.popFront(), innerPath.popFront());\r\n        }\r\n        else {\r\n            throw new Error('INTERNAL ERROR: innerPath (' +\r\n                innerPath +\r\n                ') is not within ' +\r\n                'outerPath (' +\r\n                outerPath +\r\n                ')');\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Path} left\r\n     * @param {!Path} right\r\n     * @return {number} -1, 0, 1 if left is less, equal, or greater than the right.\r\n     */\r\n    Path.comparePaths = function (left, right) {\r\n        var leftKeys = left.slice();\r\n        var rightKeys = right.slice();\r\n        for (var i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\r\n            var cmp = nameCompare(leftKeys[i], rightKeys[i]);\r\n            if (cmp !== 0)\r\n                return cmp;\r\n        }\r\n        if (leftKeys.length === rightKeys.length)\r\n            return 0;\r\n        return leftKeys.length < rightKeys.length ? -1 : 1;\r\n    };\r\n    /**\r\n     *\r\n     * @param {Path} other\r\n     * @return {boolean} true if paths are the same.\r\n     */\r\n    Path.prototype.equals = function (other) {\r\n        if (this.getLength() !== other.getLength()) {\r\n            return false;\r\n        }\r\n        for (var i = this.pieceNum_, j = other.pieceNum_; i <= this.pieces_.length; i++, j++) {\r\n            if (this.pieces_[i] !== other.pieces_[j]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Path} other\r\n     * @return {boolean} True if this path is a parent (or the same as) other\r\n     */\r\n    Path.prototype.contains = function (other) {\r\n        var i = this.pieceNum_;\r\n        var j = other.pieceNum_;\r\n        if (this.getLength() > other.getLength()) {\r\n            return false;\r\n        }\r\n        while (i < this.pieces_.length) {\r\n            if (this.pieces_[i] !== other.pieces_[j]) {\r\n                return false;\r\n            }\r\n            ++i;\r\n            ++j;\r\n        }\r\n        return true;\r\n    };\r\n    return Path;\r\n}()); // end Path\r\n/**\r\n * Dynamic (mutable) path used to count path lengths.\r\n *\r\n * This class is used to efficiently check paths for valid\r\n * length (in UTF8 bytes) and depth (used in path validation).\r\n *\r\n * Throws Error exception if path is ever invalid.\r\n *\r\n * The definition of a path always begins with '/'.\r\n */\r\nvar ValidationPath = /** @class */ (function () {\r\n    /**\r\n     * @param {!Path} path Initial Path.\r\n     * @param {string} errorPrefix_ Prefix for any error messages.\r\n     */\r\n    function ValidationPath(path, errorPrefix_) {\r\n        this.errorPrefix_ = errorPrefix_;\r\n        /** @type {!Array<string>} */\r\n        this.parts_ = path.slice();\r\n        /** @type {number} Initialize to number of '/' chars needed in path. */\r\n        this.byteLength_ = Math.max(1, this.parts_.length);\r\n        for (var i = 0; i < this.parts_.length; i++) {\r\n            this.byteLength_ += util.stringLength(this.parts_[i]);\r\n        }\r\n        this.checkValid_();\r\n    }\r\n    Object.defineProperty(ValidationPath, \"MAX_PATH_DEPTH\", {\r\n        /** @const {number} Maximum key depth. */\r\n        get: function () {\r\n            return 32;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ValidationPath, \"MAX_PATH_LENGTH_BYTES\", {\r\n        /** @const {number} Maximum number of (UTF8) bytes in a Firebase path. */\r\n        get: function () {\r\n            return 768;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /** @param {string} child */\r\n    ValidationPath.prototype.push = function (child) {\r\n        // Count the needed '/'\r\n        if (this.parts_.length > 0) {\r\n            this.byteLength_ += 1;\r\n        }\r\n        this.parts_.push(child);\r\n        this.byteLength_ += util.stringLength(child);\r\n        this.checkValid_();\r\n    };\r\n    ValidationPath.prototype.pop = function () {\r\n        var last = this.parts_.pop();\r\n        this.byteLength_ -= util.stringLength(last);\r\n        // Un-count the previous '/'\r\n        if (this.parts_.length > 0) {\r\n            this.byteLength_ -= 1;\r\n        }\r\n    };\r\n    ValidationPath.prototype.checkValid_ = function () {\r\n        if (this.byteLength_ > ValidationPath.MAX_PATH_LENGTH_BYTES) {\r\n            throw new Error(this.errorPrefix_ +\r\n                'has a key path longer than ' +\r\n                ValidationPath.MAX_PATH_LENGTH_BYTES +\r\n                ' bytes (' +\r\n                this.byteLength_ +\r\n                ').');\r\n        }\r\n        if (this.parts_.length > ValidationPath.MAX_PATH_DEPTH) {\r\n            throw new Error(this.errorPrefix_ +\r\n                'path specified exceeds the maximum depth that can be written (' +\r\n                ValidationPath.MAX_PATH_DEPTH +\r\n                ') or object contains a cycle ' +\r\n                this.toErrorString());\r\n        }\r\n    };\r\n    /**\r\n     * String for use in error messages - uses '.' notation for path.\r\n     *\r\n     * @return {string}\r\n     */\r\n    ValidationPath.prototype.toErrorString = function () {\r\n        if (this.parts_.length == 0) {\r\n            return '';\r\n        }\r\n        return \"in property '\" + this.parts_.join('.') + \"'\";\r\n    };\r\n    return ValidationPath;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PROTOCOL_VERSION = '5';\r\nvar VERSION_PARAM = 'v';\r\nvar TRANSPORT_SESSION_PARAM = 's';\r\nvar REFERER_PARAM = 'r';\r\nvar FORGE_REF = 'f';\r\nvar FORGE_DOMAIN = 'firebaseio.com';\r\nvar LAST_SESSION_PARAM = 'ls';\r\nvar WEBSOCKET = 'websocket';\r\nvar LONG_POLLING = 'long_polling';\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A class that holds metadata about a Repo object\r\n *\r\n * @constructor\r\n */\r\nvar RepoInfo = /** @class */ (function () {\r\n    /**\r\n     * @param {string} host Hostname portion of the url for the repo\r\n     * @param {boolean} secure Whether or not this repo is accessed over ssl\r\n     * @param {string} namespace The namespace represented by the repo\r\n     * @param {boolean} webSocketOnly Whether to prefer websockets over all other transports (used by Nest).\r\n     * @param {string=} persistenceKey Override the default session persistence storage key\r\n     */\r\n    function RepoInfo(host, secure, namespace, webSocketOnly, persistenceKey) {\r\n        if (persistenceKey === void 0) { persistenceKey = ''; }\r\n        this.secure = secure;\r\n        this.namespace = namespace;\r\n        this.webSocketOnly = webSocketOnly;\r\n        this.persistenceKey = persistenceKey;\r\n        this.host = host.toLowerCase();\r\n        this.domain = this.host.substr(this.host.indexOf('.') + 1);\r\n        this.internalHost = PersistentStorage.get('host:' + host) || this.host;\r\n    }\r\n    RepoInfo.prototype.needsQueryParam = function () {\r\n        return this.host !== this.internalHost || this.isCustomHost();\r\n    };\r\n    RepoInfo.prototype.isCacheableHost = function () {\r\n        return this.internalHost.substr(0, 2) === 's-';\r\n    };\r\n    RepoInfo.prototype.isDemoHost = function () {\r\n        return this.domain === 'firebaseio-demo.com';\r\n    };\r\n    RepoInfo.prototype.isCustomHost = function () {\r\n        return (this.domain !== 'firebaseio.com' && this.domain !== 'firebaseio-demo.com');\r\n    };\r\n    RepoInfo.prototype.updateHost = function (newHost) {\r\n        if (newHost !== this.internalHost) {\r\n            this.internalHost = newHost;\r\n            if (this.isCacheableHost()) {\r\n                PersistentStorage.set('host:' + this.host, this.internalHost);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns the websocket URL for this repo\r\n     * @param {string} type of connection\r\n     * @param {Object} params list\r\n     * @return {string} The URL for this repo\r\n     */\r\n    RepoInfo.prototype.connectionURL = function (type, params) {\r\n        util.assert(typeof type === 'string', 'typeof type must == string');\r\n        util.assert(typeof params === 'object', 'typeof params must == object');\r\n        var connURL;\r\n        if (type === WEBSOCKET) {\r\n            connURL =\r\n                (this.secure ? 'wss://' : 'ws://') + this.internalHost + '/.ws?';\r\n        }\r\n        else if (type === LONG_POLLING) {\r\n            connURL =\r\n                (this.secure ? 'https://' : 'http://') + this.internalHost + '/.lp?';\r\n        }\r\n        else {\r\n            throw new Error('Unknown connection type: ' + type);\r\n        }\r\n        if (this.needsQueryParam()) {\r\n            params['ns'] = this.namespace;\r\n        }\r\n        var pairs = [];\r\n        util.forEach(params, function (key, value) {\r\n            pairs.push(key + '=' + value);\r\n        });\r\n        return connURL + pairs.join('&');\r\n    };\r\n    /** @return {string} */\r\n    RepoInfo.prototype.toString = function () {\r\n        var str = this.toURLString();\r\n        if (this.persistenceKey) {\r\n            str += '<' + this.persistenceKey + '>';\r\n        }\r\n        return str;\r\n    };\r\n    /** @return {string} */\r\n    RepoInfo.prototype.toURLString = function () {\r\n        return (this.secure ? 'https://' : 'http://') + this.host;\r\n    };\r\n    return RepoInfo;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!string} pathString\r\n * @return {string}\r\n */\r\nfunction decodePath(pathString) {\r\n    var pathStringDecoded = '';\r\n    var pieces = pathString.split('/');\r\n    for (var i = 0; i < pieces.length; i++) {\r\n        if (pieces[i].length > 0) {\r\n            var piece = pieces[i];\r\n            try {\r\n                piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\r\n            }\r\n            catch (e) { }\r\n            pathStringDecoded += '/' + piece;\r\n        }\r\n    }\r\n    return pathStringDecoded;\r\n}\r\n/**\r\n * @param {!string} queryString\r\n * @return {!{[key:string]:string}} key value hash\r\n */\r\nfunction decodeQuery(queryString) {\r\n    var results = {};\r\n    if (queryString.charAt(0) === '?') {\r\n        queryString = queryString.substring(1);\r\n    }\r\n    for (var _i = 0, _a = queryString.split('&'); _i < _a.length; _i++) {\r\n        var segment = _a[_i];\r\n        if (segment.length === 0) {\r\n            continue;\r\n        }\r\n        var kv = segment.split('=');\r\n        if (kv.length === 2) {\r\n            results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\r\n        }\r\n        else {\r\n            warn(\"Invalid query segment '\" + segment + \"' in query '\" + queryString + \"'\");\r\n        }\r\n    }\r\n    return results;\r\n}\r\n/**\r\n *\r\n * @param {!string} dataURL\r\n * @return {{repoInfo: !RepoInfo, path: !Path}}\r\n */\r\nvar parseRepoInfo = function (dataURL) {\r\n    var parsedUrl = parseURL(dataURL), namespace = parsedUrl.subdomain;\r\n    if (parsedUrl.domain === 'firebase') {\r\n        fatal(parsedUrl.host +\r\n            ' is no longer supported. ' +\r\n            'Please use <YOUR FIREBASE>.firebaseio.com instead');\r\n    }\r\n    // Catch common error of uninitialized namespace value.\r\n    if ((!namespace || namespace == 'undefined') &&\r\n        parsedUrl.domain !== 'localhost') {\r\n        fatal('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');\r\n    }\r\n    if (!parsedUrl.secure) {\r\n        warnIfPageIsSecure();\r\n    }\r\n    var webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\r\n    return {\r\n        repoInfo: new RepoInfo(parsedUrl.host, parsedUrl.secure, namespace, webSocketOnly),\r\n        path: new Path(parsedUrl.pathString)\r\n    };\r\n};\r\n/**\r\n *\r\n * @param {!string} dataURL\r\n * @return {{host: string, port: number, domain: string, subdomain: string, secure: boolean, scheme: string, pathString: string}}\r\n */\r\nvar parseURL = function (dataURL) {\r\n    // Default to empty strings in the event of a malformed string.\r\n    var host = '', domain = '', subdomain = '', pathString = '';\r\n    // Always default to SSL, unless otherwise specified.\r\n    var secure = true, scheme = 'https', port = 443;\r\n    // Don't do any validation here. The caller is responsible for validating the result of parsing.\r\n    if (typeof dataURL === 'string') {\r\n        // Parse scheme.\r\n        var colonInd = dataURL.indexOf('//');\r\n        if (colonInd >= 0) {\r\n            scheme = dataURL.substring(0, colonInd - 1);\r\n            dataURL = dataURL.substring(colonInd + 2);\r\n        }\r\n        // Parse host, path, and query string.\r\n        var slashInd = dataURL.indexOf('/');\r\n        if (slashInd === -1) {\r\n            slashInd = dataURL.length;\r\n        }\r\n        var questionMarkInd = dataURL.indexOf('?');\r\n        if (questionMarkInd === -1) {\r\n            questionMarkInd = dataURL.length;\r\n        }\r\n        host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\r\n        if (slashInd < questionMarkInd) {\r\n            // For pathString, questionMarkInd will always come after slashInd\r\n            pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\r\n        }\r\n        var queryParams = decodeQuery(dataURL.substring(Math.min(dataURL.length, questionMarkInd)));\r\n        // If we have a port, use scheme for determining if it's secure.\r\n        colonInd = host.indexOf(':');\r\n        if (colonInd >= 0) {\r\n            secure = scheme === 'https' || scheme === 'wss';\r\n            port = parseInt(host.substring(colonInd + 1), 10);\r\n        }\r\n        else {\r\n            colonInd = dataURL.length;\r\n        }\r\n        var parts = host.split('.');\r\n        if (parts.length === 3) {\r\n            // Normalize namespaces to lowercase to share storage / connection.\r\n            domain = parts[1];\r\n            subdomain = parts[0].toLowerCase();\r\n        }\r\n        else if (parts.length === 2) {\r\n            domain = parts[0];\r\n        }\r\n        else if (parts[0].slice(0, colonInd).toLowerCase() === 'localhost') {\r\n            domain = 'localhost';\r\n        }\r\n        // Support `ns` query param if subdomain not already set\r\n        if (subdomain === '' && 'ns' in queryParams) {\r\n            subdomain = queryParams['ns'];\r\n        }\r\n    }\r\n    return {\r\n        host: host,\r\n        port: port,\r\n        domain: domain,\r\n        subdomain: subdomain,\r\n        secure: secure,\r\n        scheme: scheme,\r\n        pathString: pathString\r\n    };\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * True for invalid Firebase keys\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * True for invalid Firebase paths.\r\n * Allows '/' in paths.\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * Maximum number of characters to allow in leaf value\r\n * @type {number}\r\n * @private\r\n */\r\nvar MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\r\n/**\r\n * @param {*} key\r\n * @return {boolean}\r\n */\r\nvar isValidKey = function (key) {\r\n    return (typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key));\r\n};\r\n/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */\r\nvar isValidPathString = function (pathString) {\r\n    return (typeof pathString === 'string' &&\r\n        pathString.length !== 0 &&\r\n        !INVALID_PATH_REGEX_.test(pathString));\r\n};\r\n/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */\r\nvar isValidRootPathString = function (pathString) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    return isValidPathString(pathString);\r\n};\r\n/**\r\n * @param {*} priority\r\n * @return {boolean}\r\n */\r\nvar isValidPriority = function (priority) {\r\n    return (priority === null ||\r\n        typeof priority === 'string' ||\r\n        (typeof priority === 'number' && !isInvalidJSONNumber(priority)) ||\r\n        (priority && typeof priority === 'object' && util.contains(priority, '.sv')));\r\n};\r\n/**\r\n * Pre-validate a datum passed as an argument to Firebase function.\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */\r\nvar validateFirebaseDataArg = function (fnName, argumentNumber, data, path, optional) {\r\n    if (optional && data === undefined)\r\n        return;\r\n    validateFirebaseData(util.errorPrefix(fnName, argumentNumber, optional), data, path);\r\n};\r\n/**\r\n * Validate a data object client-side before sending to server.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {*} data\r\n * @param {!Path|!ValidationPath} path_\r\n */\r\nvar validateFirebaseData = function (errorPrefix, data, path_) {\r\n    var path = path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\r\n    if (data === undefined) {\r\n        throw new Error(errorPrefix + 'contains undefined ' + path.toErrorString());\r\n    }\r\n    if (typeof data === 'function') {\r\n        throw new Error(errorPrefix +\r\n            'contains a function ' +\r\n            path.toErrorString() +\r\n            ' with contents = ' +\r\n            data.toString());\r\n    }\r\n    if (isInvalidJSONNumber(data)) {\r\n        throw new Error(errorPrefix + 'contains ' + data.toString() + ' ' + path.toErrorString());\r\n    }\r\n    // Check max leaf size, but try to avoid the utf8 conversion if we can.\r\n    if (typeof data === 'string' &&\r\n        data.length > MAX_LEAF_SIZE_ / 3 &&\r\n        util.stringLength(data) > MAX_LEAF_SIZE_) {\r\n        throw new Error(errorPrefix +\r\n            'contains a string greater than ' +\r\n            MAX_LEAF_SIZE_ +\r\n            ' utf8 bytes ' +\r\n            path.toErrorString() +\r\n            \" ('\" +\r\n            data.substring(0, 50) +\r\n            \"...')\");\r\n    }\r\n    // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\r\n    // to save extra walking of large objects.\r\n    if (data && typeof data === 'object') {\r\n        var hasDotValue_1 = false, hasActualChild_1 = false;\r\n        util.forEach(data, function (key, value) {\r\n            if (key === '.value') {\r\n                hasDotValue_1 = true;\r\n            }\r\n            else if (key !== '.priority' && key !== '.sv') {\r\n                hasActualChild_1 = true;\r\n                if (!isValidKey(key)) {\r\n                    throw new Error(errorPrefix +\r\n                        ' contains an invalid key (' +\r\n                        key +\r\n                        ') ' +\r\n                        path.toErrorString() +\r\n                        '.  Keys must be non-empty strings ' +\r\n                        'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n                }\r\n            }\r\n            path.push(key);\r\n            validateFirebaseData(errorPrefix, value, path);\r\n            path.pop();\r\n        });\r\n        if (hasDotValue_1 && hasActualChild_1) {\r\n            throw new Error(errorPrefix +\r\n                ' contains \".value\" child ' +\r\n                path.toErrorString() +\r\n                ' in addition to actual children.');\r\n        }\r\n    }\r\n};\r\n/**\r\n * Pre-validate paths passed in the firebase function.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {Array<!Path>} mergePaths\r\n */\r\nvar validateFirebaseMergePaths = function (errorPrefix, mergePaths) {\r\n    var i, curPath;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        var keys = curPath.slice();\r\n        for (var j = 0; j < keys.length; j++) {\r\n            if (keys[j] === '.priority' && j === keys.length - 1) {\r\n                // .priority is OK\r\n            }\r\n            else if (!isValidKey(keys[j])) {\r\n                throw new Error(errorPrefix +\r\n                    'contains an invalid key (' +\r\n                    keys[j] +\r\n                    ') in path ' +\r\n                    curPath.toString() +\r\n                    '. Keys must be non-empty strings ' +\r\n                    'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n            }\r\n        }\r\n    }\r\n    // Check that update keys are not descendants of each other.\r\n    // We rely on the property that sorting guarantees that ancestors come\r\n    // right before descendants.\r\n    mergePaths.sort(Path.comparePaths);\r\n    var prevPath = null;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        if (prevPath !== null && prevPath.contains(curPath)) {\r\n            throw new Error(errorPrefix +\r\n                'contains a path ' +\r\n                prevPath.toString() +\r\n                ' that is ancestor of another path ' +\r\n                curPath.toString());\r\n        }\r\n        prevPath = curPath;\r\n    }\r\n};\r\n/**\r\n * pre-validate an object passed as an argument to firebase function (\r\n * must be an object - e.g. for firebase.update()).\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */\r\nvar validateFirebaseMergeDataArg = function (fnName, argumentNumber, data, path, optional) {\r\n    if (optional && data === undefined)\r\n        return;\r\n    var errorPrefix = util.errorPrefix(fnName, argumentNumber, optional);\r\n    if (!(data && typeof data === 'object') || Array.isArray(data)) {\r\n        throw new Error(errorPrefix + ' must be an object containing the children to replace.');\r\n    }\r\n    var mergePaths = [];\r\n    util.forEach(data, function (key, value) {\r\n        var curPath = new Path(key);\r\n        validateFirebaseData(errorPrefix, value, path.child(curPath));\r\n        if (curPath.getBack() === '.priority') {\r\n            if (!isValidPriority(value)) {\r\n                throw new Error(errorPrefix +\r\n                    \"contains an invalid value for '\" +\r\n                    curPath.toString() +\r\n                    \"', which must be a valid \" +\r\n                    'Firebase priority (a string, finite number, server value, or null).');\r\n            }\r\n        }\r\n        mergePaths.push(curPath);\r\n    });\r\n    validateFirebaseMergePaths(errorPrefix, mergePaths);\r\n};\r\nvar validatePriority = function (fnName, argumentNumber, priority, optional) {\r\n    if (optional && priority === undefined)\r\n        return;\r\n    if (isInvalidJSONNumber(priority))\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'is ' +\r\n            priority.toString() +\r\n            ', but must be a valid Firebase priority (a string, finite number, ' +\r\n            'server value, or null).');\r\n    // Special case to allow importing data with a .sv.\r\n    if (!isValidPriority(priority))\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid Firebase priority ' +\r\n            '(a string, finite number, server value, or null).');\r\n};\r\nvar validateEventType = function (fnName, argumentNumber, eventType, optional) {\r\n    if (optional && eventType === undefined)\r\n        return;\r\n    switch (eventType) {\r\n        case 'value':\r\n        case 'child_added':\r\n        case 'child_removed':\r\n        case 'child_changed':\r\n        case 'child_moved':\r\n            break;\r\n        default:\r\n            throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n                'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\r\n                '\"child_changed\", or \"child_moved\".');\r\n    }\r\n};\r\nvar validateKey = function (fnName, argumentNumber, key, optional) {\r\n    if (optional && key === undefined)\r\n        return;\r\n    if (!isValidKey(key))\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'was an invalid key = \"' +\r\n            key +\r\n            '\".  Firebase keys must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").');\r\n};\r\nvar validatePathString = function (fnName, argumentNumber, pathString, optional) {\r\n    if (optional && pathString === undefined)\r\n        return;\r\n    if (!isValidPathString(pathString))\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'was an invalid path = \"' +\r\n            pathString +\r\n            '\". Paths must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');\r\n};\r\nvar validateRootPathString = function (fnName, argumentNumber, pathString, optional) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    validatePathString(fnName, argumentNumber, pathString, optional);\r\n};\r\nvar validateWritablePath = function (fnName, path) {\r\n    if (path.getFront() === '.info') {\r\n        throw new Error(fnName + \" failed = Can't modify data under /.info/\");\r\n    }\r\n};\r\nvar validateUrl = function (fnName, argumentNumber, parsedUrl) {\r\n    // TODO = Validate server better.\r\n    var pathString = parsedUrl.path.toString();\r\n    if (!(typeof parsedUrl.repoInfo.host === 'string') ||\r\n        parsedUrl.repoInfo.host.length === 0 ||\r\n        (!isValidKey(parsedUrl.repoInfo.namespace) &&\r\n            parsedUrl.repoInfo.host.split(':')[0] !== 'localhost') ||\r\n        (pathString.length !== 0 && !isValidRootPathString(pathString))) {\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, false) +\r\n            'must be a valid firebase URL and ' +\r\n            'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".');\r\n    }\r\n};\r\nvar validateBoolean = function (fnName, argumentNumber, bool, optional) {\r\n    if (optional && bool === undefined)\r\n        return;\r\n    if (typeof bool !== 'boolean')\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) + 'must be a boolean.');\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n */\r\nvar OnDisconnect = /** @class */ (function () {\r\n    /**\r\n     * @param {!Repo} repo_\r\n     * @param {!Path} path_\r\n     */\r\n    function OnDisconnect(repo_, path_) {\r\n        this.repo_ = repo_;\r\n        this.path_ = path_;\r\n    }\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.cancel = function (onComplete) {\r\n        util.validateArgCount('OnDisconnect.cancel', 0, 1, arguments.length);\r\n        util.validateCallback('OnDisconnect.cancel', 1, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectCancel(this.path_, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.remove = function (onComplete) {\r\n        util.validateArgCount('OnDisconnect.remove', 0, 1, arguments.length);\r\n        validateWritablePath('OnDisconnect.remove', this.path_);\r\n        util.validateCallback('OnDisconnect.remove', 1, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSet(this.path_, null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} value\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.set = function (value, onComplete) {\r\n        util.validateArgCount('OnDisconnect.set', 1, 2, arguments.length);\r\n        validateWritablePath('OnDisconnect.set', this.path_);\r\n        validateFirebaseDataArg('OnDisconnect.set', 1, value, this.path_, false);\r\n        util.validateCallback('OnDisconnect.set', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSet(this.path_, value, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} value\r\n     * @param {number|string|null} priority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.setWithPriority = function (value, priority, onComplete) {\r\n        util.validateArgCount('OnDisconnect.setWithPriority', 2, 3, arguments.length);\r\n        validateWritablePath('OnDisconnect.setWithPriority', this.path_);\r\n        validateFirebaseDataArg('OnDisconnect.setWithPriority', 1, value, this.path_, false);\r\n        validatePriority('OnDisconnect.setWithPriority', 2, priority, false);\r\n        util.validateCallback('OnDisconnect.setWithPriority', 3, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSetWithPriority(this.path_, value, priority, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {!Object} objectToMerge\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.update = function (objectToMerge, onComplete) {\r\n        util.validateArgCount('OnDisconnect.update', 1, 2, arguments.length);\r\n        validateWritablePath('OnDisconnect.update', this.path_);\r\n        if (Array.isArray(objectToMerge)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < objectToMerge.length; ++i) {\r\n                newObjectToMerge['' + i] = objectToMerge[i];\r\n            }\r\n            objectToMerge = newObjectToMerge;\r\n            warn('Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the ' +\r\n                'existing data, or an Object with integer keys if you really do want to only update some of the children.');\r\n        }\r\n        validateFirebaseMergeDataArg('OnDisconnect.update', 1, objectToMerge, this.path_, false);\r\n        util.validateCallback('OnDisconnect.update', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectUpdate(this.path_, objectToMerge, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    return OnDisconnect;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar TransactionResult = /** @class */ (function () {\r\n    /**\r\n     * A type for the resolve value of Firebase.transaction.\r\n     * @constructor\r\n     * @dict\r\n     * @param {boolean} committed\r\n     * @param {DataSnapshot} snapshot\r\n     */\r\n    function TransactionResult(committed, snapshot) {\r\n        this.committed = committed;\r\n        this.snapshot = snapshot;\r\n    }\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    TransactionResult.prototype.toJSON = function () {\r\n        util.validateArgCount('TransactionResult.toJSON', 0, 1, arguments.length);\r\n        return { committed: this.committed, snapshot: this.snapshot.toJSON() };\r\n    };\r\n    return TransactionResult;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Fancy ID generator that creates 20-character string identifiers with the\r\n * following properties:\r\n *\r\n * 1. They're based on timestamp so that they sort *after* any existing ids.\r\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\r\n *    collide with other clients' IDs.\r\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\r\n *    that will sort properly).\r\n * 4. They're monotonically increasing. Even if you generate more than one in\r\n *    the same timestamp, the latter ones will sort after the former ones. We do\r\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\r\n *    in the case of a timestamp collision).\r\n */\r\nvar nextPushId = (function () {\r\n    // Modeled after base64 web-safe chars, but ordered by ASCII.\r\n    var PUSH_CHARS = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\r\n    // Timestamp of last push, used to prevent local collisions if you push twice\r\n    // in one ms.\r\n    var lastPushTime = 0;\r\n    // We generate 72-bits of randomness which get turned into 12 characters and\r\n    // appended to the timestamp to prevent collisions with other clients. We\r\n    // store the last characters we generated because in the event of a collision,\r\n    // we'll use those same characters except \"incremented\" by one.\r\n    var lastRandChars = [];\r\n    return function (now) {\r\n        var duplicateTime = now === lastPushTime;\r\n        lastPushTime = now;\r\n        var i;\r\n        var timeStampChars = new Array(8);\r\n        for (i = 7; i >= 0; i--) {\r\n            timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\r\n            // NOTE: Can't use << here because javascript will convert to int and lose\r\n            // the upper bits.\r\n            now = Math.floor(now / 64);\r\n        }\r\n        util.assert(now === 0, 'Cannot push at time == 0');\r\n        var id = timeStampChars.join('');\r\n        if (!duplicateTime) {\r\n            for (i = 0; i < 12; i++) {\r\n                lastRandChars[i] = Math.floor(Math.random() * 64);\r\n            }\r\n        }\r\n        else {\r\n            // If the timestamp hasn't changed since last push, use the same random\r\n            // number, except incremented by 1.\r\n            for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\r\n                lastRandChars[i] = 0;\r\n            }\r\n            lastRandChars[i]++;\r\n        }\r\n        for (i = 0; i < 12; i++) {\r\n            id += PUSH_CHARS.charAt(lastRandChars[i]);\r\n        }\r\n        util.assert(id.length === 20, 'nextPushId: Length should be 20.');\r\n        return id;\r\n    };\r\n})();\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @param {!string} name\r\n * @param {!Node} node\r\n * @constructor\r\n * @struct\r\n */\r\nvar NamedNode = /** @class */ (function () {\r\n    function NamedNode(name, node) {\r\n        this.name = name;\r\n        this.node = node;\r\n    }\r\n    /**\r\n     *\r\n     * @param {!string} name\r\n     * @param {!Node} node\r\n     * @return {NamedNode}\r\n     */\r\n    NamedNode.Wrap = function (name, node) {\r\n        return new NamedNode(name, node);\r\n    };\r\n    return NamedNode;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @constructor\r\n */\r\nvar Index = /** @class */ (function () {\r\n    function Index() {\r\n    }\r\n    /**\r\n     * @return {function(!NamedNode, !NamedNode):number} A standalone comparison function for\r\n     * this index\r\n     */\r\n    Index.prototype.getCompare = function () {\r\n        return this.compare.bind(this);\r\n    };\r\n    /**\r\n     * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\r\n     * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\r\n     *\r\n     * @param {!Node} oldNode\r\n     * @param {!Node} newNode\r\n     * @return {boolean} True if the portion of the snapshot being indexed changed between oldNode and newNode\r\n     */\r\n    Index.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        var oldWrapped = new NamedNode(MIN_NAME, oldNode);\r\n        var newWrapped = new NamedNode(MIN_NAME, newNode);\r\n        return this.compare(oldWrapped, newWrapped) !== 0;\r\n    };\r\n    /**\r\n     * @return {!NamedNode} a node wrapper that will sort equal to or less than\r\n     * any other node wrapper, using this index\r\n     */\r\n    Index.prototype.minPost = function () {\r\n        return NamedNode.MIN;\r\n    };\r\n    return Index;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __EMPTY_NODE;\r\nvar KeyIndex = /** @class */ (function (_super) {\r\n    tslib_1.__extends(KeyIndex, _super);\r\n    function KeyIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(KeyIndex, \"__EMPTY_NODE\", {\r\n        get: function () {\r\n            return __EMPTY_NODE;\r\n        },\r\n        set: function (val) {\r\n            __EMPTY_NODE = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.compare = function (a, b) {\r\n        return nameCompare(a.name, b.name);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.isDefinedOn = function (node) {\r\n        // We could probably return true here (since every node has a key), but it's never called\r\n        // so just leaving unimplemented for now.\r\n        throw util.assertionError('KeyIndex.isDefinedOn not expected to be called.');\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return false; // The key for a node never changes.\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.minPost = function () {\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.maxPost = function () {\r\n        // TODO: This should really be created once and cached in a static property, but\r\n        // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\r\n        return new NamedNode(MAX_NAME, __EMPTY_NODE);\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    KeyIndex.prototype.makePost = function (indexValue, name) {\r\n        util.assert(typeof indexValue === 'string', 'KeyIndex indexValue must always be a string.');\r\n        // We just use empty node, but it'll never be compared, since our comparator only looks at name.\r\n        return new NamedNode(indexValue, __EMPTY_NODE);\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    KeyIndex.prototype.toString = function () {\r\n        return '.key';\r\n    };\r\n    return KeyIndex;\r\n}(Index));\r\nvar KEY_INDEX = new KeyIndex();\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar MAX_NODE;\r\nfunction setMaxNode(val) {\r\n    MAX_NODE = val;\r\n}\r\n/**\r\n * @param {(!string|!number)} priority\r\n * @return {!string}\r\n */\r\nvar priorityHashText = function (priority) {\r\n    if (typeof priority === 'number')\r\n        return 'number:' + doubleToIEEE754String(priority);\r\n    else\r\n        return 'string:' + priority;\r\n};\r\n/**\r\n * Validates that a priority snapshot Node is valid.\r\n *\r\n * @param {!Node} priorityNode\r\n */\r\nvar validatePriorityNode = function (priorityNode) {\r\n    if (priorityNode.isLeafNode()) {\r\n        var val = priorityNode.val();\r\n        util.assert(typeof val === 'string' ||\r\n            typeof val === 'number' ||\r\n            (typeof val === 'object' && util.contains(val, '.sv')), 'Priority must be a string or number.');\r\n    }\r\n    else {\r\n        util.assert(priorityNode === MAX_NODE || priorityNode.isEmpty(), 'priority of unexpected type.');\r\n    }\r\n    // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\r\n    util.assert(priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(), \"Priority nodes can't have a priority of their own.\");\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __childrenNodeConstructor;\r\n/**\r\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\r\n * implements Node and stores the value of the node (a string,\r\n * number, or boolean) accessible via getValue().\r\n */\r\nvar LeafNode = /** @class */ (function () {\r\n    /**\r\n     * @implements {Node}\r\n     * @param {!(string|number|boolean|Object)} value_ The value to store in this leaf node.\r\n     *                                         The object type is possible in the event of a deferred value\r\n     * @param {!Node=} priorityNode_ The priority of this node.\r\n     */\r\n    function LeafNode(value_, priorityNode_) {\r\n        if (priorityNode_ === void 0) { priorityNode_ = LeafNode.__childrenNodeConstructor.EMPTY_NODE; }\r\n        this.value_ = value_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.lazyHash_ = null;\r\n        util.assert(this.value_ !== undefined && this.value_ !== null, \"LeafNode shouldn't be created with null/undefined value.\");\r\n        validatePriorityNode(this.priorityNode_);\r\n    }\r\n    Object.defineProperty(LeafNode, \"__childrenNodeConstructor\", {\r\n        get: function () {\r\n            return __childrenNodeConstructor;\r\n        },\r\n        set: function (val) {\r\n            __childrenNodeConstructor = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isLeafNode = function () {\r\n        return true;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPriority = function () {\r\n        return this.priorityNode_;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updatePriority = function (newPriorityNode) {\r\n        return new LeafNode(this.value_, newPriorityNode);\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getChild = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this;\r\n        }\r\n        else if (path.getFront() === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.hasChild = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPredecessorChildName = function (childName, childNode) {\r\n        return null;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else if (newChildNode.isEmpty() && childName !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName, newChildNode).updatePriority(this.priorityNode_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = path.getFront();\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else if (newChildNode.isEmpty() && front !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            util.assert(front !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\r\n            return this.updateImmediateChild(front, LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(path.popFront(), newChildNode));\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.numChildren = function () {\r\n        return 0;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.forEachChild = function (index, action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.val = function (exportFormat) {\r\n        if (exportFormat && !this.getPriority().isEmpty())\r\n            return {\r\n                '.value': this.getValue(),\r\n                '.priority': this.getPriority().val()\r\n            };\r\n        else\r\n            return this.getValue();\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash = '';\r\n            if (!this.priorityNode_.isEmpty())\r\n                toHash +=\r\n                    'priority:' +\r\n                        priorityHashText(this.priorityNode_.val()) +\r\n                        ':';\r\n            var type = typeof this.value_;\r\n            toHash += type + ':';\r\n            if (type === 'number') {\r\n                toHash += doubleToIEEE754String(this.value_);\r\n            }\r\n            else {\r\n                toHash += this.value_;\r\n            }\r\n            this.lazyHash_ = sha1(toHash);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /**\r\n     * Returns the value of the leaf node.\r\n     * @return {Object|string|number|boolean} The value of the node.\r\n     */\r\n    LeafNode.prototype.getValue = function () {\r\n        return this.value_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.compareTo = function (other) {\r\n        if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\r\n            return 1;\r\n        }\r\n        else if (other instanceof LeafNode.__childrenNodeConstructor) {\r\n            return -1;\r\n        }\r\n        else {\r\n            util.assert(other.isLeafNode(), 'Unknown node type');\r\n            return this.compareToLeafNode_(other);\r\n        }\r\n    };\r\n    /**\r\n     * Comparison specifically for two leaf nodes\r\n     * @param {!LeafNode} otherLeaf\r\n     * @return {!number}\r\n     * @private\r\n     */\r\n    LeafNode.prototype.compareToLeafNode_ = function (otherLeaf) {\r\n        var otherLeafType = typeof otherLeaf.value_;\r\n        var thisLeafType = typeof this.value_;\r\n        var otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\r\n        var thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\r\n        util.assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\r\n        util.assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\r\n        if (otherIndex === thisIndex) {\r\n            // Same type, compare values\r\n            if (thisLeafType === 'object') {\r\n                // Deferred value nodes are all equal, but we should also never get to this point...\r\n                return 0;\r\n            }\r\n            else {\r\n                // Note that this works because true > false, all others are number or string comparisons\r\n                if (this.value_ < otherLeaf.value_) {\r\n                    return -1;\r\n                }\r\n                else if (this.value_ === otherLeaf.value_) {\r\n                    return 0;\r\n                }\r\n                else {\r\n                    return 1;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return thisIndex - otherIndex;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.withIndex = function () {\r\n        return this;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.isIndexed = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.equals = function (other) {\r\n        /**\r\n         * @inheritDoc\r\n         */\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            var otherLeaf = other;\r\n            return (this.value_ === otherLeaf.value_ &&\r\n                this.priorityNode_.equals(otherLeaf.priorityNode_));\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * The sort order for comparing leaf nodes of different types. If two leaf nodes have\r\n     * the same type, the comparison falls back to their value\r\n     * @type {Array.<!string>}\r\n     * @const\r\n     */\r\n    LeafNode.VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\r\n    return LeafNode;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar nodeFromJSON;\r\nvar MAX_NODE$1;\r\nfunction setNodeFromJSON(val) {\r\n    nodeFromJSON = val;\r\n}\r\nfunction setMaxNode$1(val) {\r\n    MAX_NODE$1 = val;\r\n}\r\n/**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */\r\nvar PriorityIndex = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PriorityIndex, _super);\r\n    function PriorityIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.compare = function (a, b) {\r\n        var aPriority = a.node.getPriority();\r\n        var bPriority = b.node.getPriority();\r\n        var indexCmp = aPriority.compareTo(bPriority);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getPriority().isEmpty();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.getPriority().equals(newNode.getPriority());\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.minPost = function () {\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.maxPost = function () {\r\n        return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE$1));\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    PriorityIndex.prototype.makePost = function (indexValue, name) {\r\n        var priorityNode = nodeFromJSON(indexValue);\r\n        return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    PriorityIndex.prototype.toString = function () {\r\n        return '.priority';\r\n    };\r\n    return PriorityIndex;\r\n}(Index));\r\nvar PRIORITY_INDEX = new PriorityIndex();\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An iterator over an LLRBNode.\r\n */\r\nvar SortedMapIterator = /** @class */ (function () {\r\n    /**\r\n     * @template K, V, T\r\n     * @param {LLRBNode|LLRBEmptyNode} node Node to iterate.\r\n     * @param {?K} startKey\r\n     * @param {function(K, K): number} comparator\r\n     * @param {boolean} isReverse_ Whether or not to iterate in reverse\r\n     * @param {(function(K, V):T)=} resultGenerator_\r\n     */\r\n    function SortedMapIterator(node, startKey, comparator, isReverse_, resultGenerator_) {\r\n        if (resultGenerator_ === void 0) { resultGenerator_ = null; }\r\n        this.isReverse_ = isReverse_;\r\n        this.resultGenerator_ = resultGenerator_;\r\n        /** @private\r\n         * @type {Array.<!LLRBNode>}\r\n         */\r\n        this.nodeStack_ = [];\r\n        var cmp = 1;\r\n        while (!node.isEmpty()) {\r\n            node = node;\r\n            cmp = startKey ? comparator(node.key, startKey) : 1;\r\n            // flip the comparison if we're going in reverse\r\n            if (isReverse_)\r\n                cmp *= -1;\r\n            if (cmp < 0) {\r\n                // This node is less than our start key. ignore it\r\n                if (this.isReverse_) {\r\n                    node = node.left;\r\n                }\r\n                else {\r\n                    node = node.right;\r\n                }\r\n            }\r\n            else if (cmp === 0) {\r\n                // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\r\n                this.nodeStack_.push(node);\r\n                break;\r\n            }\r\n            else {\r\n                // This node is greater than our start key, add it to the stack and move to the next one\r\n                this.nodeStack_.push(node);\r\n                if (this.isReverse_) {\r\n                    node = node.right;\r\n                }\r\n                else {\r\n                    node = node.left;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    SortedMapIterator.prototype.getNext = function () {\r\n        if (this.nodeStack_.length === 0)\r\n            return null;\r\n        var node = this.nodeStack_.pop();\r\n        var result;\r\n        if (this.resultGenerator_)\r\n            result = this.resultGenerator_(node.key, node.value);\r\n        else\r\n            result = { key: node.key, value: node.value };\r\n        if (this.isReverse_) {\r\n            node = node.left;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.right;\r\n            }\r\n        }\r\n        else {\r\n            node = node.right;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.left;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    SortedMapIterator.prototype.hasNext = function () {\r\n        return this.nodeStack_.length > 0;\r\n    };\r\n    SortedMapIterator.prototype.peek = function () {\r\n        if (this.nodeStack_.length === 0)\r\n            return null;\r\n        var node = this.nodeStack_[this.nodeStack_.length - 1];\r\n        if (this.resultGenerator_) {\r\n            return this.resultGenerator_(node.key, node.value);\r\n        }\r\n        else {\r\n            return { key: node.key, value: node.value };\r\n        }\r\n    };\r\n    return SortedMapIterator;\r\n}());\r\n/**\r\n * Represents a node in a Left-leaning Red-Black tree.\r\n */\r\nvar LLRBNode = /** @class */ (function () {\r\n    /**\r\n     * @template K, V\r\n     * @param {!K} key Key associated with this node.\r\n     * @param {!V} value Value associated with this node.\r\n     * @param {?boolean} color Whether this node is red.\r\n     * @param {?(LLRBNode|LLRBEmptyNode)=} left Left child.\r\n     * @param {?(LLRBNode|LLRBEmptyNode)=} right Right child.\r\n     */\r\n    function LLRBNode(key, value, color, left, right) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this.color = color != null ? color : LLRBNode.RED;\r\n        this.left =\r\n            left != null ? left : SortedMap.EMPTY_NODE;\r\n        this.right =\r\n            right != null ? right : SortedMap.EMPTY_NODE;\r\n    }\r\n    /**\r\n     * Returns a copy of the current node, optionally replacing pieces of it.\r\n     *\r\n     * @param {?K} key New key for the node, or null.\r\n     * @param {?V} value New value for the node, or null.\r\n     * @param {?boolean} color New color for the node, or null.\r\n     * @param {?LLRBNode|LLRBEmptyNode} left New left child for the node, or null.\r\n     * @param {?LLRBNode|LLRBEmptyNode} right New right child for the node, or null.\r\n     * @return {!LLRBNode} The node copy.\r\n     */\r\n    LLRBNode.prototype.copy = function (key, value, color, left, right) {\r\n        return new LLRBNode(key != null ? key : this.key, value != null ? value : this.value, color != null ? color : this.color, left != null ? left : this.left, right != null ? right : this.right);\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the tree.\r\n     */\r\n    LLRBNode.prototype.count = function () {\r\n        return this.left.count() + 1 + this.right.count();\r\n    };\r\n    /**\r\n     * @return {boolean} True if the tree is empty.\r\n     */\r\n    LLRBNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called for each\r\n     *   node.  If it returns true, traversal is aborted.\r\n     * @return {*} The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    LLRBNode.prototype.inorderTraversal = function (action) {\r\n        return (this.left.inorderTraversal(action) ||\r\n            action(this.key, this.value) ||\r\n            this.right.inorderTraversal(action));\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!Object, !Object)} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {*} True if traversal was aborted.\r\n     */\r\n    LLRBNode.prototype.reverseTraversal = function (action) {\r\n        return (this.right.reverseTraversal(action) ||\r\n            action(this.key, this.value) ||\r\n            this.left.reverseTraversal(action));\r\n    };\r\n    /**\r\n     * @return {!Object} The minimum node in the tree.\r\n     * @private\r\n     */\r\n    LLRBNode.prototype.min_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            return this.left.min_();\r\n        }\r\n    };\r\n    /**\r\n     * @return {!K} The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.minKey = function () {\r\n        return this.min_().key;\r\n    };\r\n    /**\r\n     * @return {!K} The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.maxKey = function () {\r\n        if (this.right.isEmpty()) {\r\n            return this.key;\r\n        }\r\n        else {\r\n            return this.right.maxKey();\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Object} key Key to insert.\r\n     * @param {!Object} value Value to insert.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode} New tree, with the key/value added.\r\n     */\r\n    LLRBNode.prototype.insert = function (key, value, comparator) {\r\n        var cmp, n;\r\n        n = this;\r\n        cmp = comparator(key, n.key);\r\n        if (cmp < 0) {\r\n            n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\r\n        }\r\n        else if (cmp === 0) {\r\n            n = n.copy(null, value, null, null, null);\r\n        }\r\n        else {\r\n            n = n.copy(null, null, null, null, n.right.insert(key, value, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the minimum key removed.\r\n     */\r\n    LLRBNode.prototype.removeMin_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return SortedMap.EMPTY_NODE;\r\n        }\r\n        var n = this;\r\n        if (!n.left.isRed_() && !n.left.left.isRed_())\r\n            n = n.moveRedLeft_();\r\n        n = n.copy(null, null, null, n.left.removeMin_(), null);\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @param {!Object} key The key of the item to remove.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the specified item removed.\r\n     */\r\n    LLRBNode.prototype.remove = function (key, comparator) {\r\n        var n, smallest;\r\n        n = this;\r\n        if (comparator(key, n.key) < 0) {\r\n            if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\r\n                n = n.moveRedLeft_();\r\n            }\r\n            n = n.copy(null, null, null, n.left.remove(key, comparator), null);\r\n        }\r\n        else {\r\n            if (n.left.isRed_())\r\n                n = n.rotateRight_();\r\n            if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\r\n                n = n.moveRedRight_();\r\n            }\r\n            if (comparator(key, n.key) === 0) {\r\n                if (n.right.isEmpty()) {\r\n                    return SortedMap.EMPTY_NODE;\r\n                }\r\n                else {\r\n                    smallest = n.right.min_();\r\n                    n = n.copy(smallest.key, smallest.value, null, null, n.right.removeMin_());\r\n                }\r\n            }\r\n            n = n.copy(null, null, null, null, n.right.remove(key, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {boolean} Whether this is a RED node.\r\n     */\r\n    LLRBNode.prototype.isRed_ = function () {\r\n        return this.color;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree after performing any needed rotations.\r\n     */\r\n    LLRBNode.prototype.fixUp_ = function () {\r\n        var n = this;\r\n        if (n.right.isRed_() && !n.left.isRed_())\r\n            n = n.rotateLeft_();\r\n        if (n.left.isRed_() && n.left.left.isRed_())\r\n            n = n.rotateRight_();\r\n        if (n.left.isRed_() && n.right.isRed_())\r\n            n = n.colorFlip_();\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after moveRedLeft.\r\n     */\r\n    LLRBNode.prototype.moveRedLeft_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.right.left.isRed_()) {\r\n            n = n.copy(null, null, null, null, n.right.rotateRight_());\r\n            n = n.rotateLeft_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after moveRedRight.\r\n     */\r\n    LLRBNode.prototype.moveRedRight_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.left.left.isRed_()) {\r\n            n = n.rotateRight_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after rotateLeft.\r\n     */\r\n    LLRBNode.prototype.rotateLeft_ = function () {\r\n        var nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\r\n        return this.right.copy(null, null, this.color, nl, null);\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after rotateRight.\r\n     */\r\n    LLRBNode.prototype.rotateRight_ = function () {\r\n        var nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\r\n        return this.left.copy(null, null, this.color, null, nr);\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after colorFlip.\r\n     */\r\n    LLRBNode.prototype.colorFlip_ = function () {\r\n        var left = this.left.copy(null, null, !this.left.color, null, null);\r\n        var right = this.right.copy(null, null, !this.right.color, null, null);\r\n        return this.copy(null, null, !this.color, left, right);\r\n    };\r\n    /**\r\n     * For testing.\r\n     *\r\n     * @private\r\n     * @return {boolean} True if all is well.\r\n     */\r\n    LLRBNode.prototype.checkMaxDepth_ = function () {\r\n        var blackDepth = this.check_();\r\n        return Math.pow(2.0, blackDepth) <= this.count() + 1;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {number} Not sure what this returns exactly. :-).\r\n     */\r\n    LLRBNode.prototype.check_ = function () {\r\n        var blackDepth;\r\n        if (this.isRed_() && this.left.isRed_()) {\r\n            throw new Error('Red node has red child(' + this.key + ',' + this.value + ')');\r\n        }\r\n        if (this.right.isRed_()) {\r\n            throw new Error('Right child of (' + this.key + ',' + this.value + ') is red');\r\n        }\r\n        blackDepth = this.left.check_();\r\n        if (blackDepth !== this.right.check_()) {\r\n            throw new Error('Black depths differ');\r\n        }\r\n        else {\r\n            return blackDepth + (this.isRed_() ? 0 : 1);\r\n        }\r\n    };\r\n    LLRBNode.RED = true;\r\n    LLRBNode.BLACK = false;\r\n    return LLRBNode;\r\n}());\r\n/**\r\n * Represents an empty node (a leaf node in the Red-Black Tree).\r\n */\r\nvar LLRBEmptyNode = /** @class */ (function () {\r\n    function LLRBEmptyNode() {\r\n    }\r\n    /**\r\n     * Returns a copy of the current node.\r\n     *\r\n     * @return {!LLRBEmptyNode} The node copy.\r\n     */\r\n    LLRBEmptyNode.prototype.copy = function (key, value, color, left, right) {\r\n        return this;\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key/value added.\r\n     *\r\n     * @param {!K} key Key to be added.\r\n     * @param {!V} value Value to be added.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode} New tree, with item added.\r\n     */\r\n    LLRBEmptyNode.prototype.insert = function (key, value, comparator) {\r\n        return new LLRBNode(key, value, null);\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key removed.\r\n     *\r\n     * @param {!K} key The key to remove.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBEmptyNode} New tree, with item removed.\r\n     */\r\n    LLRBEmptyNode.prototype.remove = function (key, comparator) {\r\n        return this;\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the tree.\r\n     */\r\n    LLRBEmptyNode.prototype.count = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @return {boolean} True if the tree is empty.\r\n     */\r\n    LLRBEmptyNode.prototype.isEmpty = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {boolean} True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.inorderTraversal = function (action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V)} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {boolean} True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.reverseTraversal = function (action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * @return {null}\r\n     */\r\n    LLRBEmptyNode.prototype.minKey = function () {\r\n        return null;\r\n    };\r\n    /**\r\n     * @return {null}\r\n     */\r\n    LLRBEmptyNode.prototype.maxKey = function () {\r\n        return null;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {number} Not sure what this returns exactly. :-).\r\n     */\r\n    LLRBEmptyNode.prototype.check_ = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {boolean} Whether this node is red.\r\n     */\r\n    LLRBEmptyNode.prototype.isRed_ = function () {\r\n        return false;\r\n    };\r\n    return LLRBEmptyNode;\r\n}());\r\n/**\r\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\r\n * tree.\r\n */\r\nvar SortedMap = /** @class */ (function () {\r\n    /**\r\n     * @template K, V\r\n     * @param {function(K, K):number} comparator_ Key comparator.\r\n     * @param {LLRBNode=} root_ (Optional) Root node for the map.\r\n     */\r\n    function SortedMap(comparator_, root_) {\r\n        if (root_ === void 0) { root_ = SortedMap.EMPTY_NODE; }\r\n        this.comparator_ = comparator_;\r\n        this.root_ = root_;\r\n    }\r\n    /**\r\n     * Returns a copy of the map, with the specified key/value added or replaced.\r\n     * (TODO: We should perhaps rename this method to 'put')\r\n     *\r\n     * @param {!K} key Key to be added.\r\n     * @param {!V} value Value to be added.\r\n     * @return {!SortedMap.<K, V>} New map, with item added.\r\n     */\r\n    SortedMap.prototype.insert = function (key, value) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .insert(key, value, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns a copy of the map, with the specified key removed.\r\n     *\r\n     * @param {!K} key The key to remove.\r\n     * @return {!SortedMap.<K, V>} New map, with item removed.\r\n     */\r\n    SortedMap.prototype.remove = function (key) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .remove(key, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns the value of the node with the given key, or null.\r\n     *\r\n     * @param {!K} key The key to look up.\r\n     * @return {?V} The value of the node with the given key, or null if the\r\n     * key doesn't exist.\r\n     */\r\n    SortedMap.prototype.get = function (key) {\r\n        var cmp;\r\n        var node = this.root_;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                return node.value;\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                node = node.right;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Returns the key of the item *before* the specified key, or null if key is the first item.\r\n     * @param {K} key The key to find the predecessor of\r\n     * @return {?K} The predecessor key.\r\n     */\r\n    SortedMap.prototype.getPredecessorKey = function (key) {\r\n        var cmp, node = this.root_, rightParent = null;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                if (!node.left.isEmpty()) {\r\n                    node = node.left;\r\n                    while (!node.right.isEmpty())\r\n                        node = node.right;\r\n                    return node.key;\r\n                }\r\n                else if (rightParent) {\r\n                    return rightParent.key;\r\n                }\r\n                else {\r\n                    return null; // first item.\r\n                }\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                rightParent = node;\r\n                node = node.right;\r\n            }\r\n        }\r\n        throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');\r\n    };\r\n    /**\r\n     * @return {boolean} True if the map is empty.\r\n     */\r\n    SortedMap.prototype.isEmpty = function () {\r\n        return this.root_.isEmpty();\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the map.\r\n     */\r\n    SortedMap.prototype.count = function () {\r\n        return this.root_.count();\r\n    };\r\n    /**\r\n     * @return {?K} The minimum key in the map.\r\n     */\r\n    SortedMap.prototype.minKey = function () {\r\n        return this.root_.minKey();\r\n    };\r\n    /**\r\n     * @return {?K} The maximum key in the map.\r\n     */\r\n    SortedMap.prototype.maxKey = function () {\r\n        return this.root_.maxKey();\r\n    };\r\n    /**\r\n     * Traverses the map in key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @return {*} The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    SortedMap.prototype.inorderTraversal = function (action) {\r\n        return this.root_.inorderTraversal(action);\r\n    };\r\n    /**\r\n     * Traverses the map in reverse key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param {function(!Object, !Object)} action Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @return {*} True if the traversal was aborted.\r\n     */\r\n    SortedMap.prototype.reverseTraversal = function (action) {\r\n        return this.root_.reverseTraversal(action);\r\n    };\r\n    /**\r\n     * Returns an iterator over the SortedMap.\r\n     * @template T\r\n     * @param {(function(K, V):T)=} resultGenerator\r\n     * @return {SortedMapIterator.<K, V, T>} The iterator.\r\n     */\r\n    SortedMap.prototype.getIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, true, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, true, resultGenerator);\r\n    };\r\n    /**\r\n     * Always use the same empty node, to reduce memory.\r\n     * @const\r\n     */\r\n    SortedMap.EMPTY_NODE = new LLRBEmptyNode();\r\n    return SortedMap;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar LOG_2 = Math.log(2);\r\n/**\r\n * @constructor\r\n */\r\nvar Base12Num = /** @class */ (function () {\r\n    /**\r\n     * @param {number} length\r\n     */\r\n    function Base12Num(length) {\r\n        var logBase2 = function (num) {\r\n            return parseInt((Math.log(num) / LOG_2), 10);\r\n        };\r\n        var bitMask = function (bits) { return parseInt(Array(bits + 1).join('1'), 2); };\r\n        this.count = logBase2(length + 1);\r\n        this.current_ = this.count - 1;\r\n        var mask = bitMask(this.count);\r\n        this.bits_ = (length + 1) & mask;\r\n    }\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    Base12Num.prototype.nextBitIsOne = function () {\r\n        //noinspection JSBitwiseOperatorUsage\r\n        var result = !(this.bits_ & (0x1 << this.current_));\r\n        this.current_--;\r\n        return result;\r\n    };\r\n    return Base12Num;\r\n}());\r\n/**\r\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\r\n * function\r\n *\r\n * Uses the algorithm described in the paper linked here:\r\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\r\n *\r\n * @template K, V\r\n * @param {Array.<!NamedNode>} childList Unsorted list of children\r\n * @param {function(!NamedNode, !NamedNode):number} cmp The comparison method to be used\r\n * @param {(function(NamedNode):K)=} keyFn An optional function to extract K from a node wrapper, if K's\r\n *                                                        type is not NamedNode\r\n * @param {(function(K, K):number)=} mapSortFn An optional override for comparator used by the generated sorted map\r\n * @return {SortedMap.<K, V>}\r\n */\r\nvar buildChildSet = function (childList, cmp, keyFn, mapSortFn) {\r\n    childList.sort(cmp);\r\n    var buildBalancedTree = function (low, high) {\r\n        var length = high - low;\r\n        var namedNode;\r\n        var key;\r\n        if (length == 0) {\r\n            return null;\r\n        }\r\n        else if (length == 1) {\r\n            namedNode = childList[low];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, null, null);\r\n        }\r\n        else {\r\n            var middle = parseInt((length / 2), 10) + low;\r\n            var left = buildBalancedTree(low, middle);\r\n            var right = buildBalancedTree(middle + 1, high);\r\n            namedNode = childList[middle];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, left, right);\r\n        }\r\n    };\r\n    var buildFrom12Array = function (base12) {\r\n        var node = null;\r\n        var root = null;\r\n        var index = childList.length;\r\n        var buildPennant = function (chunkSize, color) {\r\n            var low = index - chunkSize;\r\n            var high = index;\r\n            index -= chunkSize;\r\n            var childTree = buildBalancedTree(low + 1, high);\r\n            var namedNode = childList[low];\r\n            var key = keyFn ? keyFn(namedNode) : namedNode;\r\n            attachPennant(new LLRBNode(key, namedNode.node, color, null, childTree));\r\n        };\r\n        var attachPennant = function (pennant) {\r\n            if (node) {\r\n                node.left = pennant;\r\n                node = pennant;\r\n            }\r\n            else {\r\n                root = pennant;\r\n                node = pennant;\r\n            }\r\n        };\r\n        for (var i = 0; i < base12.count; ++i) {\r\n            var isOne = base12.nextBitIsOne();\r\n            // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\r\n            var chunkSize = Math.pow(2, base12.count - (i + 1));\r\n            if (isOne) {\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n            }\r\n            else {\r\n                // current == 2\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n                buildPennant(chunkSize, LLRBNode.RED);\r\n            }\r\n        }\r\n        return root;\r\n    };\r\n    var base12 = new Base12Num(childList.length);\r\n    var root = buildFrom12Array(base12);\r\n    return new SortedMap(mapSortFn || cmp, root);\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _defaultIndexMap;\r\nvar fallbackObject = {};\r\n/**\r\n *\r\n * @param {Object.<string, FallbackType|SortedMap.<NamedNode, Node>>} indexes\r\n * @param {Object.<string, Index>} indexSet\r\n * @constructor\r\n */\r\nvar IndexMap = /** @class */ (function () {\r\n    function IndexMap(indexes_, indexSet_) {\r\n        this.indexes_ = indexes_;\r\n        this.indexSet_ = indexSet_;\r\n    }\r\n    Object.defineProperty(IndexMap, \"Default\", {\r\n        /**\r\n         * The default IndexMap for nodes without a priority\r\n         * @type {!IndexMap}\r\n         * @const\r\n         */\r\n        get: function () {\r\n            util.assert(fallbackObject && PRIORITY_INDEX, 'ChildrenNode.ts has not been loaded');\r\n            _defaultIndexMap =\r\n                _defaultIndexMap ||\r\n                    new IndexMap({ '.priority': fallbackObject }, { '.priority': PRIORITY_INDEX });\r\n            return _defaultIndexMap;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     *\r\n     * @param {!string} indexKey\r\n     * @return {?SortedMap.<NamedNode, Node>}\r\n     */\r\n    IndexMap.prototype.get = function (indexKey) {\r\n        var sortedMap = util.safeGet(this.indexes_, indexKey);\r\n        if (!sortedMap)\r\n            throw new Error('No index defined for ' + indexKey);\r\n        if (sortedMap === fallbackObject) {\r\n            // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\r\n            // regular child map\r\n            return null;\r\n        }\r\n        else {\r\n            return sortedMap;\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {boolean}\r\n     */\r\n    IndexMap.prototype.hasIndex = function (indexDefinition) {\r\n        return util.contains(this.indexSet_, indexDefinition.toString());\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @param {!SortedMap.<string, !Node>} existingChildren\r\n     * @return {!IndexMap}\r\n     */\r\n    IndexMap.prototype.addIndex = function (indexDefinition, existingChildren) {\r\n        util.assert(indexDefinition !== KEY_INDEX, \"KeyIndex always exists and isn't meant to be added to the IndexMap.\");\r\n        var childList = [];\r\n        var sawIndexedValue = false;\r\n        var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n        var next = iter.getNext();\r\n        while (next) {\r\n            sawIndexedValue =\r\n                sawIndexedValue || indexDefinition.isDefinedOn(next.node);\r\n            childList.push(next);\r\n            next = iter.getNext();\r\n        }\r\n        var newIndex;\r\n        if (sawIndexedValue) {\r\n            newIndex = buildChildSet(childList, indexDefinition.getCompare());\r\n        }\r\n        else {\r\n            newIndex = fallbackObject;\r\n        }\r\n        var indexName = indexDefinition.toString();\r\n        var newIndexSet = util.clone(this.indexSet_);\r\n        newIndexSet[indexName] = indexDefinition;\r\n        var newIndexes = util.clone(this.indexes_);\r\n        newIndexes[indexName] = newIndex;\r\n        return new IndexMap(newIndexes, newIndexSet);\r\n    };\r\n    /**\r\n     * Ensure that this node is properly tracked in any indexes that we're maintaining\r\n     * @param {!NamedNode} namedNode\r\n     * @param {!SortedMap.<string, !Node>} existingChildren\r\n     * @return {!IndexMap}\r\n     */\r\n    IndexMap.prototype.addToIndexes = function (namedNode, existingChildren) {\r\n        var _this = this;\r\n        var newIndexes = util.map(this.indexes_, function (indexedChildren, indexName) {\r\n            var index = util.safeGet(_this.indexSet_, indexName);\r\n            util.assert(index, 'Missing index implementation for ' + indexName);\r\n            if (indexedChildren === fallbackObject) {\r\n                // Check to see if we need to index everything\r\n                if (index.isDefinedOn(namedNode.node)) {\r\n                    // We need to build this index\r\n                    var childList = [];\r\n                    var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n                    var next = iter.getNext();\r\n                    while (next) {\r\n                        if (next.name != namedNode.name) {\r\n                            childList.push(next);\r\n                        }\r\n                        next = iter.getNext();\r\n                    }\r\n                    childList.push(namedNode);\r\n                    return buildChildSet(childList, index.getCompare());\r\n                }\r\n                else {\r\n                    // No change, this remains a fallback\r\n                    return fallbackObject;\r\n                }\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                var newChildren = indexedChildren;\r\n                if (existingSnap) {\r\n                    newChildren = newChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                return newChildren.insert(namedNode, namedNode.node);\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    /**\r\n     * Create a new IndexMap instance with the given value removed\r\n     * @param {!NamedNode} namedNode\r\n     * @param {!SortedMap.<string, !Node>} existingChildren\r\n     * @return {!IndexMap}\r\n     */\r\n    IndexMap.prototype.removeFromIndexes = function (namedNode, existingChildren) {\r\n        var newIndexes = util.map(this.indexes_, function (indexedChildren) {\r\n            if (indexedChildren === fallbackObject) {\r\n                // This is the fallback. Just return it, nothing to do in this case\r\n                return indexedChildren;\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                if (existingSnap) {\r\n                    return indexedChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                else {\r\n                    // No record of this child\r\n                    return indexedChildren;\r\n                }\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    return IndexMap;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction NAME_ONLY_COMPARATOR(left, right) {\r\n    return nameCompare(left.name, right.name);\r\n}\r\nfunction NAME_COMPARATOR(left, right) {\r\n    return nameCompare(left, right);\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\r\nvar EMPTY_NODE;\r\n/**\r\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\r\n * (i.e. nodes with children).  It implements Node and stores the\r\n * list of children in the children property, sorted by child name.\r\n *\r\n * @constructor\r\n * @implements {Node}\r\n */\r\nvar ChildrenNode = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!SortedMap.<string, !Node>} children_ List of children\r\n     * of this node..\r\n     * @param {?Node} priorityNode_ The priority of this node (as a snapshot node).\r\n     * @param {!IndexMap} indexMap_\r\n     */\r\n    function ChildrenNode(children_, priorityNode_, indexMap_) {\r\n        this.children_ = children_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.indexMap_ = indexMap_;\r\n        this.lazyHash_ = null;\r\n        /**\r\n         * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\r\n         * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\r\n         * class instead of an empty ChildrenNode.\r\n         */\r\n        if (this.priorityNode_) {\r\n            validatePriorityNode(this.priorityNode_);\r\n        }\r\n        if (this.children_.isEmpty()) {\r\n            util.assert(!this.priorityNode_ || this.priorityNode_.isEmpty(), 'An empty node cannot have a priority');\r\n        }\r\n    }\r\n    Object.defineProperty(ChildrenNode, \"EMPTY_NODE\", {\r\n        get: function () {\r\n            return (EMPTY_NODE ||\r\n                (EMPTY_NODE = new ChildrenNode(new SortedMap(NAME_COMPARATOR), null, IndexMap.Default)));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isLeafNode = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPriority = function () {\r\n        return this.priorityNode_ || EMPTY_NODE;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updatePriority = function (newPriorityNode) {\r\n        if (this.children_.isEmpty()) {\r\n            // Don't allow priorities on empty nodes\r\n            return this;\r\n        }\r\n        else {\r\n            return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.getPriority();\r\n        }\r\n        else {\r\n            var child = this.children_.get(childName);\r\n            return child === null ? EMPTY_NODE : child;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getChild = function (path) {\r\n        var front = path.getFront();\r\n        if (front === null)\r\n            return this;\r\n        return this.getImmediateChild(front).getChild(path.popFront());\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hasChild = function (childName) {\r\n        return this.children_.get(childName) !== null;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        util.assert(newChildNode, 'We should always be passing snapshot nodes');\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else {\r\n            var namedNode = new NamedNode(childName, newChildNode);\r\n            var newChildren = void 0, newIndexMap = void 0, newPriority = void 0;\r\n            if (newChildNode.isEmpty()) {\r\n                newChildren = this.children_.remove(childName);\r\n                newIndexMap = this.indexMap_.removeFromIndexes(namedNode, this.children_);\r\n            }\r\n            else {\r\n                newChildren = this.children_.insert(childName, newChildNode);\r\n                newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\r\n            }\r\n            newPriority = newChildren.isEmpty() ? EMPTY_NODE : this.priorityNode_;\r\n            return new ChildrenNode(newChildren, newPriority, newIndexMap);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = path.getFront();\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else {\r\n            util.assert(path.getFront() !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\r\n            var newImmediateChild = this.getImmediateChild(front).updateChild(path.popFront(), newChildNode);\r\n            return this.updateImmediateChild(front, newImmediateChild);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isEmpty = function () {\r\n        return this.children_.isEmpty();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.numChildren = function () {\r\n        return this.children_.count();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.val = function (exportFormat) {\r\n        if (this.isEmpty())\r\n            return null;\r\n        var obj = {};\r\n        var numKeys = 0, maxKey = 0, allIntegerKeys = true;\r\n        this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            obj[key] = childNode.val(exportFormat);\r\n            numKeys++;\r\n            if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\r\n                maxKey = Math.max(maxKey, Number(key));\r\n            }\r\n            else {\r\n                allIntegerKeys = false;\r\n            }\r\n        });\r\n        if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\r\n            // convert to array.\r\n            var array = [];\r\n            for (var key in obj)\r\n                array[key] = obj[key];\r\n            return array;\r\n        }\r\n        else {\r\n            if (exportFormat && !this.getPriority().isEmpty()) {\r\n                obj['.priority'] = this.getPriority().val();\r\n            }\r\n            return obj;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash_1 = '';\r\n            if (!this.getPriority().isEmpty())\r\n                toHash_1 +=\r\n                    'priority:' +\r\n                        priorityHashText(this.getPriority().val()) +\r\n                        ':';\r\n            this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                var childHash = childNode.hash();\r\n                if (childHash !== '')\r\n                    toHash_1 += ':' + key + ':' + childHash;\r\n            });\r\n            this.lazyHash_ = toHash_1 === '' ? '' : sha1(toHash_1);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPredecessorChildName = function (childName, childNode, index) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            var predecessor = idx.getPredecessorKey(new NamedNode(childName, childNode));\r\n            return predecessor ? predecessor.name : null;\r\n        }\r\n        else {\r\n            return this.children_.getPredecessorKey(childName);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?string}\r\n     */\r\n    ChildrenNode.prototype.getFirstChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var minKey = idx.minKey();\r\n            return minKey && minKey.name;\r\n        }\r\n        else {\r\n            return this.children_.minKey();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?NamedNode}\r\n     */\r\n    ChildrenNode.prototype.getFirstChild = function (indexDefinition) {\r\n        var minKey = this.getFirstChildName(indexDefinition);\r\n        if (minKey) {\r\n            return new NamedNode(minKey, this.children_.get(minKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Given an index, return the key name of the largest value we have, according to that index\r\n     * @param {!Index} indexDefinition\r\n     * @return {?string}\r\n     */\r\n    ChildrenNode.prototype.getLastChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var maxKey = idx.maxKey();\r\n            return maxKey && maxKey.name;\r\n        }\r\n        else {\r\n            return this.children_.maxKey();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?NamedNode}\r\n     */\r\n    ChildrenNode.prototype.getLastChild = function (indexDefinition) {\r\n        var maxKey = this.getLastChildName(indexDefinition);\r\n        if (maxKey) {\r\n            return new NamedNode(maxKey, this.children_.get(maxKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.forEachChild = function (index, action) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            return idx.inorderTraversal(function (wrappedNode) {\r\n                return action(wrappedNode.name, wrappedNode.node);\r\n            });\r\n        }\r\n        else {\r\n            return this.children_.inorderTraversal(action);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getIterator = function (indexDefinition) {\r\n        return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\r\n    };\r\n    /**\r\n     *\r\n     * @param {!NamedNode} startPost\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getIteratorFrom = function (startPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getIteratorFrom(startPost, function (key) { return key; });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getIteratorFrom(startPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, startPost) < 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getReverseIterator = function (indexDefinition) {\r\n        return this.getReverseIteratorFrom(indexDefinition.maxPost(), indexDefinition);\r\n    };\r\n    /**\r\n     * @param {!NamedNode} endPost\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getReverseIteratorFrom = function (endPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getReverseIteratorFrom(endPost, function (key) {\r\n                return key;\r\n            });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getReverseIteratorFrom(endPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, endPost) > 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.compareTo = function (other) {\r\n        if (this.isEmpty()) {\r\n            if (other.isEmpty()) {\r\n                return 0;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (other.isLeafNode() || other.isEmpty()) {\r\n            return 1;\r\n        }\r\n        else if (other === MAX_NODE$2) {\r\n            return -1;\r\n        }\r\n        else {\r\n            // Must be another node with children.\r\n            return 0;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.withIndex = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX ||\r\n            this.indexMap_.hasIndex(indexDefinition)) {\r\n            return this;\r\n        }\r\n        else {\r\n            var newIndexMap = this.indexMap_.addIndex(indexDefinition, this.children_);\r\n            return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.isIndexed = function (index) {\r\n        return index === KEY_INDEX || this.indexMap_.hasIndex(index);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.equals = function (other) {\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            return false;\r\n        }\r\n        else {\r\n            var otherChildrenNode = other;\r\n            if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\r\n                return false;\r\n            }\r\n            else if (this.children_.count() === otherChildrenNode.children_.count()) {\r\n                var thisIter = this.getIterator(PRIORITY_INDEX);\r\n                var otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\r\n                var thisCurrent = thisIter.getNext();\r\n                var otherCurrent = otherIter.getNext();\r\n                while (thisCurrent && otherCurrent) {\r\n                    if (thisCurrent.name !== otherCurrent.name ||\r\n                        !thisCurrent.node.equals(otherCurrent.node)) {\r\n                        return false;\r\n                    }\r\n                    thisCurrent = thisIter.getNext();\r\n                    otherCurrent = otherIter.getNext();\r\n                }\r\n                return thisCurrent === null && otherCurrent === null;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\r\n     * instead.\r\n     *\r\n     * @private\r\n     * @param {!Index} indexDefinition\r\n     * @return {?SortedMap.<NamedNode, Node>}\r\n     */\r\n    ChildrenNode.prototype.resolveIndex_ = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX) {\r\n            return null;\r\n        }\r\n        else {\r\n            return this.indexMap_.get(indexDefinition.toString());\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @type {RegExp}\r\n     */\r\n    ChildrenNode.INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\r\n    return ChildrenNode;\r\n}());\r\n/**\r\n * @constructor\r\n * @extends {ChildrenNode}\r\n * @private\r\n */\r\nvar MaxNode = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MaxNode, _super);\r\n    function MaxNode() {\r\n        return _super.call(this, new SortedMap(NAME_COMPARATOR), ChildrenNode.EMPTY_NODE, IndexMap.Default) || this;\r\n    }\r\n    MaxNode.prototype.compareTo = function (other) {\r\n        if (other === this) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return 1;\r\n        }\r\n    };\r\n    MaxNode.prototype.equals = function (other) {\r\n        // Not that we every compare it, but MAX_NODE is only ever equal to itself\r\n        return other === this;\r\n    };\r\n    MaxNode.prototype.getPriority = function () {\r\n        return this;\r\n    };\r\n    MaxNode.prototype.getImmediateChild = function (childName) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    };\r\n    MaxNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    return MaxNode;\r\n}(ChildrenNode));\r\n/**\r\n * Marker that will sort higher than any other snapshot.\r\n * @type {!MAX_NODE}\r\n * @const\r\n */\r\nvar MAX_NODE$2 = new MaxNode();\r\nObject.defineProperties(NamedNode, {\r\n    MIN: {\r\n        value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\r\n    },\r\n    MAX: {\r\n        value: new NamedNode(MAX_NAME, MAX_NODE$2)\r\n    }\r\n});\r\n/**\r\n * Reference Extensions\r\n */\r\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\r\nLeafNode.__childrenNodeConstructor = ChildrenNode;\r\nsetMaxNode(MAX_NODE$2);\r\nsetMaxNode$1(MAX_NODE$2);\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar USE_HINZE = true;\r\n/**\r\n * Constructs a snapshot node representing the passed JSON and returns it.\r\n * @param {*} json JSON to create a node for.\r\n * @param {?string|?number=} priority Optional priority to use.  This will be ignored if the\r\n * passed JSON contains a .priority property.\r\n * @return {!Node}\r\n */\r\nfunction nodeFromJSON$1(json, priority) {\r\n    if (priority === void 0) { priority = null; }\r\n    if (json === null) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    }\r\n    if (typeof json === 'object' && '.priority' in json) {\r\n        priority = json['.priority'];\r\n    }\r\n    util.assert(priority === null ||\r\n        typeof priority === 'string' ||\r\n        typeof priority === 'number' ||\r\n        (typeof priority === 'object' && '.sv' in priority), 'Invalid priority type found: ' + typeof priority);\r\n    if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\r\n        json = json['.value'];\r\n    }\r\n    // Valid leaf nodes include non-objects or server-value wrapper objects\r\n    if (typeof json !== 'object' || '.sv' in json) {\r\n        var jsonLeaf = json;\r\n        return new LeafNode(jsonLeaf, nodeFromJSON$1(priority));\r\n    }\r\n    if (!(json instanceof Array) && USE_HINZE) {\r\n        var children_1 = [];\r\n        var childrenHavePriority_1 = false;\r\n        var hinzeJsonObj_1 = json;\r\n        util.forEach(hinzeJsonObj_1, function (key, child) {\r\n            if (typeof key !== 'string' || key.substring(0, 1) !== '.') {\r\n                // Ignore metadata nodes\r\n                var childNode = nodeFromJSON$1(hinzeJsonObj_1[key]);\r\n                if (!childNode.isEmpty()) {\r\n                    childrenHavePriority_1 =\r\n                        childrenHavePriority_1 || !childNode.getPriority().isEmpty();\r\n                    children_1.push(new NamedNode(key, childNode));\r\n                }\r\n            }\r\n        });\r\n        if (children_1.length == 0) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var childSet = buildChildSet(children_1, NAME_ONLY_COMPARATOR, function (namedNode) { return namedNode.name; }, NAME_COMPARATOR);\r\n        if (childrenHavePriority_1) {\r\n            var sortedChildSet = buildChildSet(children_1, PRIORITY_INDEX.getCompare());\r\n            return new ChildrenNode(childSet, nodeFromJSON$1(priority), new IndexMap({ '.priority': sortedChildSet }, { '.priority': PRIORITY_INDEX }));\r\n        }\r\n        else {\r\n            return new ChildrenNode(childSet, nodeFromJSON$1(priority), IndexMap.Default);\r\n        }\r\n    }\r\n    else {\r\n        var node_1 = ChildrenNode.EMPTY_NODE;\r\n        var jsonObj_1 = json;\r\n        util.forEach(jsonObj_1, function (key, childData) {\r\n            if (util.contains(jsonObj_1, key)) {\r\n                if (key.substring(0, 1) !== '.') {\r\n                    // ignore metadata nodes.\r\n                    var childNode = nodeFromJSON$1(childData);\r\n                    if (childNode.isLeafNode() || !childNode.isEmpty())\r\n                        node_1 = node_1.updateImmediateChild(key, childNode);\r\n                }\r\n            }\r\n        });\r\n        return node_1.updatePriority(nodeFromJSON$1(priority));\r\n    }\r\n}\r\nsetNodeFromJSON(nodeFromJSON$1);\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */\r\nvar ValueIndex = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ValueIndex, _super);\r\n    function ValueIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.compare = function (a, b) {\r\n        var indexCmp = a.node.compareTo(b.node);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.isDefinedOn = function (node) {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.equals(newNode);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.minPost = function () {\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.maxPost = function () {\r\n        return NamedNode.MAX;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    ValueIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON$1(indexValue);\r\n        return new NamedNode(name, valueNode);\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    ValueIndex.prototype.toString = function () {\r\n        return '.value';\r\n    };\r\n    return ValueIndex;\r\n}(Index));\r\nvar VALUE_INDEX = new ValueIndex();\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!Path} indexPath\r\n * @constructor\r\n * @extends {Index}\r\n */\r\nvar PathIndex = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PathIndex, _super);\r\n    function PathIndex(indexPath_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.indexPath_ = indexPath_;\r\n        util.assert(!indexPath_.isEmpty() && indexPath_.getFront() !== '.priority', \"Can't create PathIndex with empty path or .priority key\");\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {!Node} snap\r\n     * @return {!Node}\r\n     * @protected\r\n     */\r\n    PathIndex.prototype.extractChild = function (snap) {\r\n        return snap.getChild(this.indexPath_);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getChild(this.indexPath_).isEmpty();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.compare = function (a, b) {\r\n        var aChild = this.extractChild(a.node);\r\n        var bChild = this.extractChild(b.node);\r\n        var indexCmp = aChild.compareTo(bChild);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON$1(indexValue);\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, valueNode);\r\n        return new NamedNode(name, node);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.maxPost = function () {\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE$2);\r\n        return new NamedNode(MAX_NAME, node);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.toString = function () {\r\n        return this.indexPath_.slice().join('/');\r\n    };\r\n    return PathIndex;\r\n}(Index));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\r\n * surfaces the public methods (val, forEach, etc.) we want to expose.\r\n */\r\nvar DataSnapshot = /** @class */ (function () {\r\n    /**\r\n     * @param {!Node} node_ A SnapshotNode to wrap.\r\n     * @param {!Reference} ref_ The ref of the location this snapshot came from.\r\n     * @param {!Index} index_ The iteration order for this snapshot\r\n     */\r\n    function DataSnapshot(node_, ref_, index_) {\r\n        this.node_ = node_;\r\n        this.ref_ = ref_;\r\n        this.index_ = index_;\r\n    }\r\n    /**\r\n     * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\r\n     * empty.\r\n     *\r\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.val = function () {\r\n        util.validateArgCount('DataSnapshot.val', 0, 0, arguments.length);\r\n        return this.node_.val();\r\n    };\r\n    /**\r\n     * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\r\n     * the entire node contents.\r\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.exportVal = function () {\r\n        util.validateArgCount('DataSnapshot.exportVal', 0, 0, arguments.length);\r\n        return this.node_.val(true);\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    DataSnapshot.prototype.toJSON = function () {\r\n        // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\r\n        util.validateArgCount('DataSnapshot.toJSON', 0, 1, arguments.length);\r\n        return this.exportVal();\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a non-null value.\r\n     *\r\n     * @return {boolean} Whether the snapshot contains a non-null value, or is empty.\r\n     */\r\n    DataSnapshot.prototype.exists = function () {\r\n        util.validateArgCount('DataSnapshot.exists', 0, 0, arguments.length);\r\n        return !this.node_.isEmpty();\r\n    };\r\n    /**\r\n     * Returns a DataSnapshot of the specified child node's contents.\r\n     *\r\n     * @param {!string} childPathString Path to a child.\r\n     * @return {!DataSnapshot} DataSnapshot for child node.\r\n     */\r\n    DataSnapshot.prototype.child = function (childPathString) {\r\n        util.validateArgCount('DataSnapshot.child', 0, 1, arguments.length);\r\n        // Ensure the childPath is a string (can be a number)\r\n        childPathString = String(childPathString);\r\n        validatePathString('DataSnapshot.child', 1, childPathString, false);\r\n        var childPath = new Path(childPathString);\r\n        var childRef = this.ref_.child(childPath);\r\n        return new DataSnapshot(this.node_.getChild(childPath), childRef, PRIORITY_INDEX);\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a child at the specified path.\r\n     *\r\n     * @param {!string} childPathString Path to a child.\r\n     * @return {boolean} Whether the child exists.\r\n     */\r\n    DataSnapshot.prototype.hasChild = function (childPathString) {\r\n        util.validateArgCount('DataSnapshot.hasChild', 1, 1, arguments.length);\r\n        validatePathString('DataSnapshot.hasChild', 1, childPathString, false);\r\n        var childPath = new Path(childPathString);\r\n        return !this.node_.getChild(childPath).isEmpty();\r\n    };\r\n    /**\r\n     * Returns the priority of the object, or null if no priority was set.\r\n     *\r\n     * @return {string|number|null} The priority.\r\n     */\r\n    DataSnapshot.prototype.getPriority = function () {\r\n        util.validateArgCount('DataSnapshot.getPriority', 0, 0, arguments.length);\r\n        // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\r\n        return this.node_.getPriority().val();\r\n    };\r\n    /**\r\n     * Iterates through child nodes and calls the specified action for each one.\r\n     *\r\n     * @param {function(!DataSnapshot)} action Callback function to be called\r\n     * for each child.\r\n     * @return {boolean} True if forEach was canceled by action returning true for\r\n     * one of the child nodes.\r\n     */\r\n    DataSnapshot.prototype.forEach = function (action) {\r\n        var _this = this;\r\n        util.validateArgCount('DataSnapshot.forEach', 1, 1, arguments.length);\r\n        util.validateCallback('DataSnapshot.forEach', 1, action, false);\r\n        if (this.node_.isLeafNode())\r\n            return false;\r\n        var childrenNode = this.node_;\r\n        // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\r\n        return !!childrenNode.forEachChild(this.index_, function (key, node) {\r\n            return action(new DataSnapshot(node, _this.ref_.child(key), PRIORITY_INDEX));\r\n        });\r\n    };\r\n    /**\r\n     * Returns whether this DataSnapshot has children.\r\n     * @return {boolean} True if the DataSnapshot contains 1 or more child nodes.\r\n     */\r\n    DataSnapshot.prototype.hasChildren = function () {\r\n        util.validateArgCount('DataSnapshot.hasChildren', 0, 0, arguments.length);\r\n        if (this.node_.isLeafNode())\r\n            return false;\r\n        else\r\n            return !this.node_.isEmpty();\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"key\", {\r\n        get: function () {\r\n            return this.ref_.getKey();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the number of children for this DataSnapshot.\r\n     * @return {number} The number of children that this DataSnapshot contains.\r\n     */\r\n    DataSnapshot.prototype.numChildren = function () {\r\n        util.validateArgCount('DataSnapshot.numChildren', 0, 0, arguments.length);\r\n        return this.node_.numChildren();\r\n    };\r\n    /**\r\n     * @return {Reference} The Firebase reference for the location this snapshot's data came from.\r\n     */\r\n    DataSnapshot.prototype.getRef = function () {\r\n        util.validateArgCount('DataSnapshot.ref', 0, 0, arguments.length);\r\n        return this.ref_;\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"ref\", {\r\n        get: function () {\r\n            return this.getRef();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return DataSnapshot;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Encapsulates the data needed to raise an event\r\n * @implements {Event}\r\n */\r\nvar DataEvent = /** @class */ (function () {\r\n    /**\r\n     * @param {!string} eventType One of: value, child_added, child_changed, child_moved, child_removed\r\n     * @param {!EventRegistration} eventRegistration The function to call to with the event data. User provided\r\n     * @param {!DataSnapshot} snapshot The data backing the event\r\n     * @param {?string=} prevName Optional, the name of the previous child for child_* events.\r\n     */\r\n    function DataEvent(eventType, eventRegistration, snapshot, prevName) {\r\n        this.eventType = eventType;\r\n        this.eventRegistration = eventRegistration;\r\n        this.snapshot = snapshot;\r\n        this.prevName = prevName;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getPath = function () {\r\n        var ref = this.snapshot.getRef();\r\n        if (this.eventType === 'value') {\r\n            return ref.path;\r\n        }\r\n        else {\r\n            return ref.getParent().path;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getEventType = function () {\r\n        return this.eventType;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.toString = function () {\r\n        return (this.getPath().toString() +\r\n            ':' +\r\n            this.eventType +\r\n            ':' +\r\n            util.stringify(this.snapshot.exportVal()));\r\n    };\r\n    return DataEvent;\r\n}());\r\nvar CancelEvent = /** @class */ (function () {\r\n    /**\r\n     * @param {EventRegistration} eventRegistration\r\n     * @param {Error} error\r\n     * @param {!Path} path\r\n     */\r\n    function CancelEvent(eventRegistration, error, path) {\r\n        this.eventRegistration = eventRegistration;\r\n        this.error = error;\r\n        this.path = path;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getPath = function () {\r\n        return this.path;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getEventType = function () {\r\n        return 'cancel';\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.toString = function () {\r\n        return this.path.toString() + ':cancel';\r\n    };\r\n    return CancelEvent;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Represents registration for 'value' events.\r\n */\r\nvar ValueEventRegistration = /** @class */ (function () {\r\n    /**\r\n     * @param {?function(!DataSnapshot)} callback_\r\n     * @param {?function(Error)} cancelCallback_\r\n     * @param {?Object} context_\r\n     */\r\n    function ValueEventRegistration(callback_, cancelCallback_, context_) {\r\n        this.callback_ = callback_;\r\n        this.cancelCallback_ = cancelCallback_;\r\n        this.context_ = context_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.respondsTo = function (eventType) {\r\n        return eventType === 'value';\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.createEvent = function (change, query) {\r\n        var index = query.getQueryParams().getIndex();\r\n        return new DataEvent('value', this, new DataSnapshot(change.snapshotNode, query.getRef(), index));\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        var ctx = this.context_;\r\n        if (eventData.getEventType() === 'cancel') {\r\n            util.assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\r\n            var cancelCB_1 = this.cancelCallback_;\r\n            return function () {\r\n                // We know that error exists, we checked above that this is a cancel event\r\n                cancelCB_1.call(ctx, eventData.error);\r\n            };\r\n        }\r\n        else {\r\n            var cb_1 = this.callback_;\r\n            return function () {\r\n                cb_1.call(ctx, eventData.snapshot);\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.cancelCallback_) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.matches = function (other) {\r\n        if (!(other instanceof ValueEventRegistration)) {\r\n            return false;\r\n        }\r\n        else if (!other.callback_ || !this.callback_) {\r\n            // If no callback specified, we consider it to match any callback.\r\n            return true;\r\n        }\r\n        else {\r\n            return (other.callback_ === this.callback_ && other.context_ === this.context_);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.hasAnyCallback = function () {\r\n        return this.callback_ !== null;\r\n    };\r\n    return ValueEventRegistration;\r\n}());\r\n/**\r\n * Represents the registration of 1 or more child_xxx events.\r\n *\r\n * Currently, it is always exactly 1 child_xxx event, but the idea is we might let you\r\n * register a group of callbacks together in the future.\r\n *\r\n * @constructor\r\n * @implements {EventRegistration}\r\n */\r\nvar ChildEventRegistration = /** @class */ (function () {\r\n    /**\r\n     * @param {?Object.<string, function(!DataSnapshot, ?string=)>} callbacks_\r\n     * @param {?function(Error)} cancelCallback_\r\n     * @param {Object=} context_\r\n     */\r\n    function ChildEventRegistration(callbacks_, cancelCallback_, context_) {\r\n        this.callbacks_ = callbacks_;\r\n        this.cancelCallback_ = cancelCallback_;\r\n        this.context_ = context_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.respondsTo = function (eventType) {\r\n        var eventToCheck = eventType === 'children_added' ? 'child_added' : eventType;\r\n        eventToCheck =\r\n            eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\r\n        return util.contains(this.callbacks_, eventToCheck);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.cancelCallback_) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.createEvent = function (change, query) {\r\n        util.assert(change.childName != null, 'Child events should have a childName.');\r\n        var ref = query.getRef().child(/** @type {!string} */ (change.childName));\r\n        var index = query.getQueryParams().getIndex();\r\n        return new DataEvent(change.type, this, new DataSnapshot(change.snapshotNode, ref, index), change.prevName);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        var ctx = this.context_;\r\n        if (eventData.getEventType() === 'cancel') {\r\n            util.assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\r\n            var cancelCB_2 = this.cancelCallback_;\r\n            return function () {\r\n                // We know that error exists, we checked above that this is a cancel event\r\n                cancelCB_2.call(ctx, eventData.error);\r\n            };\r\n        }\r\n        else {\r\n            var cb_2 = this.callbacks_[eventData.eventType];\r\n            return function () {\r\n                cb_2.call(ctx, eventData.snapshot, eventData.prevName);\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.matches = function (other) {\r\n        if (other instanceof ChildEventRegistration) {\r\n            if (!this.callbacks_ || !other.callbacks_) {\r\n                return true;\r\n            }\r\n            else if (this.context_ === other.context_) {\r\n                var otherCount = util.getCount(other.callbacks_);\r\n                var thisCount = util.getCount(this.callbacks_);\r\n                if (otherCount === thisCount) {\r\n                    // If count is 1, do an exact match on eventType, if either is defined but null, it's a match.\r\n                    //  If event types don't match, not a match\r\n                    // If count is not 1, exact match across all\r\n                    if (otherCount === 1) {\r\n                        var otherKey /** @type {!string} */ = util.getAnyKey(other.callbacks_);\r\n                        var thisKey /** @type {!string} */ = util.getAnyKey(this.callbacks_);\r\n                        return (thisKey === otherKey &&\r\n                            (!other.callbacks_[otherKey] ||\r\n                                !this.callbacks_[thisKey] ||\r\n                                other.callbacks_[otherKey] === this.callbacks_[thisKey]));\r\n                    }\r\n                    else {\r\n                        // Exact match on each key.\r\n                        return util.every(this.callbacks_, function (eventType, cb) { return other.callbacks_[eventType] === cb; });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.hasAnyCallback = function () {\r\n        return this.callbacks_ !== null;\r\n    };\r\n    return ChildEventRegistration;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __referenceConstructor;\r\n/**\r\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\r\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\r\n *\r\n * Since every Firebase reference is a query, Firebase inherits from this object.\r\n */\r\nvar Query = /** @class */ (function () {\r\n    function Query(repo, path, queryParams_, orderByCalled_) {\r\n        this.repo = repo;\r\n        this.path = path;\r\n        this.queryParams_ = queryParams_;\r\n        this.orderByCalled_ = orderByCalled_;\r\n    }\r\n    Object.defineProperty(Query, \"__referenceConstructor\", {\r\n        get: function () {\r\n            util.assert(__referenceConstructor, 'Reference.ts has not been loaded');\r\n            return __referenceConstructor;\r\n        },\r\n        set: function (val) {\r\n            __referenceConstructor = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Validates start/end values for queries.\r\n     * @param {!QueryParams} params\r\n     * @private\r\n     */\r\n    Query.validateQueryEndpoints_ = function (params) {\r\n        var startNode = null;\r\n        var endNode = null;\r\n        if (params.hasStart()) {\r\n            startNode = params.getIndexStartValue();\r\n        }\r\n        if (params.hasEnd()) {\r\n            endNode = params.getIndexEndValue();\r\n        }\r\n        if (params.getIndex() === KEY_INDEX) {\r\n            var tooManyArgsError = 'Query: When ordering by key, you may only pass one argument to ' +\r\n                'startAt(), endAt(), or equalTo().';\r\n            var wrongArgTypeError = 'Query: When ordering by key, the argument passed to startAt(), endAt(),' +\r\n                'or equalTo() must be a string.';\r\n            if (params.hasStart()) {\r\n                var startName = params.getIndexStartName();\r\n                if (startName != MIN_NAME) {\r\n                    throw new Error(tooManyArgsError);\r\n                }\r\n                else if (typeof startNode !== 'string') {\r\n                    throw new Error(wrongArgTypeError);\r\n                }\r\n            }\r\n            if (params.hasEnd()) {\r\n                var endName = params.getIndexEndName();\r\n                if (endName != MAX_NAME) {\r\n                    throw new Error(tooManyArgsError);\r\n                }\r\n                else if (typeof endNode !== 'string') {\r\n                    throw new Error(wrongArgTypeError);\r\n                }\r\n            }\r\n        }\r\n        else if (params.getIndex() === PRIORITY_INDEX) {\r\n            if ((startNode != null && !isValidPriority(startNode)) ||\r\n                (endNode != null && !isValidPriority(endNode))) {\r\n                throw new Error('Query: When ordering by priority, the first argument passed to startAt(), ' +\r\n                    'endAt(), or equalTo() must be a valid priority value (null, a number, or a string).');\r\n            }\r\n        }\r\n        else {\r\n            util.assert(params.getIndex() instanceof PathIndex ||\r\n                params.getIndex() === VALUE_INDEX, 'unknown index type.');\r\n            if ((startNode != null && typeof startNode === 'object') ||\r\n                (endNode != null && typeof endNode === 'object')) {\r\n                throw new Error('Query: First argument passed to startAt(), endAt(), or equalTo() cannot be ' +\r\n                    'an object.');\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Validates that limit* has been called with the correct combination of parameters\r\n     * @param {!QueryParams} params\r\n     * @private\r\n     */\r\n    Query.validateLimit_ = function (params) {\r\n        if (params.hasStart() &&\r\n            params.hasEnd() &&\r\n            params.hasLimit() &&\r\n            !params.hasAnchoredLimit()) {\r\n            throw new Error(\"Query: Can't combine startAt(), endAt(), and limit(). Use limitToFirst() or limitToLast() instead.\");\r\n        }\r\n    };\r\n    /**\r\n     * Validates that no other order by call has been made\r\n     * @param {!string} fnName\r\n     * @private\r\n     */\r\n    Query.prototype.validateNoPreviousOrderByCall_ = function (fnName) {\r\n        if (this.orderByCalled_ === true) {\r\n            throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\r\n        }\r\n    };\r\n    /**\r\n     * @return {!QueryParams}\r\n     */\r\n    Query.prototype.getQueryParams = function () {\r\n        return this.queryParams_;\r\n    };\r\n    /**\r\n     * @return {!Reference}\r\n     */\r\n    Query.prototype.getRef = function () {\r\n        util.validateArgCount('Query.ref', 0, 0, arguments.length);\r\n        // This is a slight hack. We cannot goog.require('fb.api.Firebase'), since Firebase requires fb.api.Query.\r\n        // However, we will always export 'Firebase' to the global namespace, so it's guaranteed to exist by the time this\r\n        // method gets called.\r\n        return new Query.__referenceConstructor(this.repo, this.path);\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @param {!function(DataSnapshot, string=)} callback\r\n     * @param {(function(Error)|Object)=} cancelCallbackOrContext\r\n     * @param {Object=} context\r\n     * @return {!function(DataSnapshot, string=)}\r\n     */\r\n    Query.prototype.on = function (eventType, callback, cancelCallbackOrContext, context) {\r\n        util.validateArgCount('Query.on', 2, 4, arguments.length);\r\n        validateEventType('Query.on', 1, eventType, false);\r\n        util.validateCallback('Query.on', 2, callback, false);\r\n        var ret = Query.getCancelAndContextArgs_('Query.on', cancelCallbackOrContext, context);\r\n        if (eventType === 'value') {\r\n            this.onValueEvent(callback, ret.cancel, ret.context);\r\n        }\r\n        else {\r\n            var callbacks = {};\r\n            callbacks[eventType] = callback;\r\n            this.onChildEvent(callbacks, ret.cancel, ret.context);\r\n        }\r\n        return callback;\r\n    };\r\n    /**\r\n     * @param {!function(!DataSnapshot)} callback\r\n     * @param {?function(Error)} cancelCallback\r\n     * @param {?Object} context\r\n     * @protected\r\n     */\r\n    Query.prototype.onValueEvent = function (callback, cancelCallback, context) {\r\n        var container = new ValueEventRegistration(callback, cancelCallback || null, context || null);\r\n        this.repo.addEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * @param {!Object.<string, !function(!DataSnapshot, ?string)>} callbacks\r\n     * @param {?function(Error)} cancelCallback\r\n     * @param {?Object} context\r\n     * @protected\r\n     */\r\n    Query.prototype.onChildEvent = function (callbacks, cancelCallback, context) {\r\n        var container = new ChildEventRegistration(callbacks, cancelCallback, context);\r\n        this.repo.addEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * @param {string=} eventType\r\n     * @param {(function(!DataSnapshot, ?string=))=} callback\r\n     * @param {Object=} context\r\n     */\r\n    Query.prototype.off = function (eventType, callback, context) {\r\n        util.validateArgCount('Query.off', 0, 3, arguments.length);\r\n        validateEventType('Query.off', 1, eventType, true);\r\n        util.validateCallback('Query.off', 2, callback, true);\r\n        util.validateContextObject('Query.off', 3, context, true);\r\n        var container = null;\r\n        var callbacks = null;\r\n        if (eventType === 'value') {\r\n            var valueCallback = callback || null;\r\n            container = new ValueEventRegistration(valueCallback, null, context || null);\r\n        }\r\n        else if (eventType) {\r\n            if (callback) {\r\n                callbacks = {};\r\n                callbacks[eventType] = callback;\r\n            }\r\n            container = new ChildEventRegistration(callbacks, null, context || null);\r\n        }\r\n        this.repo.removeEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * Attaches a listener, waits for the first event, and then removes the listener\r\n     * @param {!string} eventType\r\n     * @param {!function(!DataSnapshot, string=)} userCallback\r\n     * @param cancelOrContext\r\n     * @param context\r\n     * @return {!firebase.Promise}\r\n     */\r\n    Query.prototype.once = function (eventType, userCallback, cancelOrContext, context) {\r\n        var _this = this;\r\n        util.validateArgCount('Query.once', 1, 4, arguments.length);\r\n        validateEventType('Query.once', 1, eventType, false);\r\n        util.validateCallback('Query.once', 2, userCallback, true);\r\n        var ret = Query.getCancelAndContextArgs_('Query.once', cancelOrContext, context);\r\n        // TODO: Implement this more efficiently (in particular, use 'get' wire protocol for 'value' event)\r\n        // TODO: consider actually wiring the callbacks into the promise. We cannot do this without a breaking change\r\n        // because the API currently expects callbacks will be called synchronously if the data is cached, but this is\r\n        // against the Promise specification.\r\n        var firstCall = true;\r\n        var deferred = new util.Deferred();\r\n        // A dummy error handler in case a user wasn't expecting promises\r\n        deferred.promise.catch(function () { });\r\n        var onceCallback = function (snapshot) {\r\n            // NOTE: Even though we unsubscribe, we may get called multiple times if a single action (e.g. set() with JSON)\r\n            // triggers multiple events (e.g. child_added or child_changed).\r\n            if (firstCall) {\r\n                firstCall = false;\r\n                _this.off(eventType, onceCallback);\r\n                if (userCallback) {\r\n                    userCallback.bind(ret.context)(snapshot);\r\n                }\r\n                deferred.resolve(snapshot);\r\n            }\r\n        };\r\n        this.on(eventType, onceCallback, \r\n        /*cancel=*/ function (err) {\r\n            _this.off(eventType, onceCallback);\r\n            if (ret.cancel)\r\n                ret.cancel.bind(ret.context)(err);\r\n            deferred.reject(err);\r\n        });\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the start of the window.\r\n     * @param {!number} limit\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.limitToFirst = function (limit) {\r\n        util.validateArgCount('Query.limitToFirst', 1, 1, arguments.length);\r\n        if (typeof limit !== 'number' ||\r\n            Math.floor(limit) !== limit ||\r\n            limit <= 0) {\r\n            throw new Error('Query.limitToFirst: First argument must be a positive integer.');\r\n        }\r\n        if (this.queryParams_.hasLimit()) {\r\n            throw new Error('Query.limitToFirst: Limit was already set (by another call to limit, ' +\r\n                'limitToFirst, or limitToLast).');\r\n        }\r\n        return new Query(this.repo, this.path, this.queryParams_.limitToFirst(limit), this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the end of the window.\r\n     * @param {!number} limit\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.limitToLast = function (limit) {\r\n        util.validateArgCount('Query.limitToLast', 1, 1, arguments.length);\r\n        if (typeof limit !== 'number' ||\r\n            Math.floor(limit) !== limit ||\r\n            limit <= 0) {\r\n            throw new Error('Query.limitToLast: First argument must be a positive integer.');\r\n        }\r\n        if (this.queryParams_.hasLimit()) {\r\n            throw new Error('Query.limitToLast: Limit was already set (by another call to limit, ' +\r\n                'limitToFirst, or limitToLast).');\r\n        }\r\n        return new Query(this.repo, this.path, this.queryParams_.limitToLast(limit), this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Given a child path, return a new query ordered by the specified grandchild path.\r\n     * @param {!string} path\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByChild = function (path) {\r\n        util.validateArgCount('Query.orderByChild', 1, 1, arguments.length);\r\n        if (path === '$key') {\r\n            throw new Error('Query.orderByChild: \"$key\" is invalid.  Use Query.orderByKey() instead.');\r\n        }\r\n        else if (path === '$priority') {\r\n            throw new Error('Query.orderByChild: \"$priority\" is invalid.  Use Query.orderByPriority() instead.');\r\n        }\r\n        else if (path === '$value') {\r\n            throw new Error('Query.orderByChild: \"$value\" is invalid.  Use Query.orderByValue() instead.');\r\n        }\r\n        validatePathString('Query.orderByChild', 1, path, false);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByChild');\r\n        var parsedPath = new Path(path);\r\n        if (parsedPath.isEmpty()) {\r\n            throw new Error('Query.orderByChild: cannot pass in empty path.  Use Query.orderByValue() instead.');\r\n        }\r\n        var index = new PathIndex(parsedPath);\r\n        var newParams = this.queryParams_.orderBy(index);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the KeyIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByKey = function () {\r\n        util.validateArgCount('Query.orderByKey', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByKey');\r\n        var newParams = this.queryParams_.orderBy(KEY_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the PriorityIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByPriority = function () {\r\n        util.validateArgCount('Query.orderByPriority', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByPriority');\r\n        var newParams = this.queryParams_.orderBy(PRIORITY_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the ValueIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByValue = function () {\r\n        util.validateArgCount('Query.orderByValue', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByValue');\r\n        var newParams = this.queryParams_.orderBy(VALUE_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * @param {number|string|boolean|null} value\r\n     * @param {?string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.startAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        util.validateArgCount('Query.startAt', 0, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.startAt', 1, value, this.path, true);\r\n        validateKey('Query.startAt', 2, name, true);\r\n        var newParams = this.queryParams_.startAt(value, name);\r\n        Query.validateLimit_(newParams);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        if (this.queryParams_.hasStart()) {\r\n            throw new Error('Query.startAt: Starting point was already set (by another call to startAt ' +\r\n                'or equalTo).');\r\n        }\r\n        // Calling with no params tells us to start at the beginning.\r\n        if (value === undefined) {\r\n            value = null;\r\n            name = null;\r\n        }\r\n        return new Query(this.repo, this.path, newParams, this.orderByCalled_);\r\n    };\r\n    /**\r\n     * @param {number|string|boolean|null} value\r\n     * @param {?string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.endAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        util.validateArgCount('Query.endAt', 0, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.endAt', 1, value, this.path, true);\r\n        validateKey('Query.endAt', 2, name, true);\r\n        var newParams = this.queryParams_.endAt(value, name);\r\n        Query.validateLimit_(newParams);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        if (this.queryParams_.hasEnd()) {\r\n            throw new Error('Query.endAt: Ending point was already set (by another call to endAt or ' +\r\n                'equalTo).');\r\n        }\r\n        return new Query(this.repo, this.path, newParams, this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Load the selection of children with exactly the specified value, and, optionally,\r\n     * the specified name.\r\n     * @param {number|string|boolean|null} value\r\n     * @param {string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.equalTo = function (value, name) {\r\n        util.validateArgCount('Query.equalTo', 1, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.equalTo', 1, value, this.path, false);\r\n        validateKey('Query.equalTo', 2, name, true);\r\n        if (this.queryParams_.hasStart()) {\r\n            throw new Error('Query.equalTo: Starting point was already set (by another call to startAt or ' +\r\n                'equalTo).');\r\n        }\r\n        if (this.queryParams_.hasEnd()) {\r\n            throw new Error('Query.equalTo: Ending point was already set (by another call to endAt or ' +\r\n                'equalTo).');\r\n        }\r\n        return this.startAt(value, name).endAt(value, name);\r\n    };\r\n    /**\r\n     * @return {!string} URL for this location.\r\n     */\r\n    Query.prototype.toString = function () {\r\n        util.validateArgCount('Query.toString', 0, 0, arguments.length);\r\n        return this.repo.toString() + this.path.toUrlEncodedString();\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users.\r\n    Query.prototype.toJSON = function () {\r\n        // An optional spacer argument is unnecessary for a string.\r\n        util.validateArgCount('Query.toJSON', 0, 1, arguments.length);\r\n        return this.toString();\r\n    };\r\n    /**\r\n     * An object representation of the query parameters used by this Query.\r\n     * @return {!Object}\r\n     */\r\n    Query.prototype.queryObject = function () {\r\n        return this.queryParams_.getQueryObject();\r\n    };\r\n    /**\r\n     * @return {!string}\r\n     */\r\n    Query.prototype.queryIdentifier = function () {\r\n        var obj = this.queryObject();\r\n        var id = ObjectToUniqueKey(obj);\r\n        return id === '{}' ? 'default' : id;\r\n    };\r\n    /**\r\n     * Return true if this query and the provided query are equivalent; otherwise, return false.\r\n     * @param {Query} other\r\n     * @return {boolean}\r\n     */\r\n    Query.prototype.isEqual = function (other) {\r\n        util.validateArgCount('Query.isEqual', 1, 1, arguments.length);\r\n        if (!(other instanceof Query)) {\r\n            var error$$1 = 'Query.isEqual failed: First argument must be an instance of firebase.database.Query.';\r\n            throw new Error(error$$1);\r\n        }\r\n        var sameRepo = this.repo === other.repo;\r\n        var samePath = this.path.equals(other.path);\r\n        var sameQueryIdentifier = this.queryIdentifier() === other.queryIdentifier();\r\n        return sameRepo && samePath && sameQueryIdentifier;\r\n    };\r\n    /**\r\n     * Helper used by .on and .once to extract the context and or cancel arguments.\r\n     * @param {!string} fnName The function name (on or once)\r\n     * @param {(function(Error)|Object)=} cancelOrContext\r\n     * @param {Object=} context\r\n     * @return {{cancel: ?function(Error), context: ?Object}}\r\n     * @private\r\n     */\r\n    Query.getCancelAndContextArgs_ = function (fnName, cancelOrContext, context) {\r\n        var ret = { cancel: null, context: null };\r\n        if (cancelOrContext && context) {\r\n            ret.cancel = cancelOrContext;\r\n            util.validateCallback(fnName, 3, ret.cancel, true);\r\n            ret.context = context;\r\n            util.validateContextObject(fnName, 4, ret.context, true);\r\n        }\r\n        else if (cancelOrContext) {\r\n            // we have either a cancel callback or a context.\r\n            if (typeof cancelOrContext === 'object' && cancelOrContext !== null) {\r\n                // it's a context!\r\n                ret.context = cancelOrContext;\r\n            }\r\n            else if (typeof cancelOrContext === 'function') {\r\n                ret.cancel = cancelOrContext;\r\n            }\r\n            else {\r\n                throw new Error(util.errorPrefix(fnName, 3, true) +\r\n                    ' must either be a cancel callback or a context object.');\r\n            }\r\n        }\r\n        return ret;\r\n    };\r\n    Object.defineProperty(Query.prototype, \"ref\", {\r\n        get: function () {\r\n            return this.getRef();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Query;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Implements a set with a count of elements.\r\n *\r\n * @template K, V\r\n */\r\nvar CountedSet = /** @class */ (function () {\r\n    function CountedSet() {\r\n        this.set = {};\r\n    }\r\n    /**\r\n     * @param {!K} item\r\n     * @param {V} val\r\n     */\r\n    CountedSet.prototype.add = function (item, val) {\r\n        this.set[item] = val !== null ? val : true;\r\n    };\r\n    /**\r\n     * @param {!K} key\r\n     * @return {boolean}\r\n     */\r\n    CountedSet.prototype.contains = function (key) {\r\n        return util.contains(this.set, key);\r\n    };\r\n    /**\r\n     * @param {!K} item\r\n     * @return {V}\r\n     */\r\n    CountedSet.prototype.get = function (item) {\r\n        return this.contains(item) ? this.set[item] : undefined;\r\n    };\r\n    /**\r\n     * @param {!K} item\r\n     */\r\n    CountedSet.prototype.remove = function (item) {\r\n        delete this.set[item];\r\n    };\r\n    /**\r\n     * Deletes everything in the set\r\n     */\r\n    CountedSet.prototype.clear = function () {\r\n        this.set = {};\r\n    };\r\n    /**\r\n     * True if there's nothing in the set\r\n     * @return {boolean}\r\n     */\r\n    CountedSet.prototype.isEmpty = function () {\r\n        return util.isEmpty(this.set);\r\n    };\r\n    /**\r\n     * @return {number} The number of items in the set\r\n     */\r\n    CountedSet.prototype.count = function () {\r\n        return util.getCount(this.set);\r\n    };\r\n    /**\r\n     * Run a function on each k,v pair in the set\r\n     * @param {function(K, V)} fn\r\n     */\r\n    CountedSet.prototype.each = function (fn) {\r\n        util.forEach(this.set, function (k, v) { return fn(k, v); });\r\n    };\r\n    /**\r\n     * Mostly for debugging\r\n     * @return {Array.<K>} The keys present in this CountedSet\r\n     */\r\n    CountedSet.prototype.keys = function () {\r\n        var keys = [];\r\n        util.forEach(this.set, function (k) {\r\n            keys.push(k);\r\n        });\r\n        return keys;\r\n    };\r\n    return CountedSet;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper class to store a sparse set of snapshots.\r\n *\r\n * @constructor\r\n */\r\nvar SparseSnapshotTree = /** @class */ (function () {\r\n    function SparseSnapshotTree() {\r\n        /**\r\n         * @private\r\n         * @type {Node}\r\n         */\r\n        this.value_ = null;\r\n        /**\r\n         * @private\r\n         * @type {CountedSet}\r\n         */\r\n        this.children_ = null;\r\n    }\r\n    /**\r\n     * Gets the node stored at the given path if one exists.\r\n     *\r\n     * @param {!Path} path Path to look up snapshot for.\r\n     * @return {?Node} The retrieved node, or null.\r\n     */\r\n    SparseSnapshotTree.prototype.find = function (path) {\r\n        if (this.value_ != null) {\r\n            return this.value_.getChild(path);\r\n        }\r\n        else if (!path.isEmpty() && this.children_ != null) {\r\n            var childKey = path.getFront();\r\n            path = path.popFront();\r\n            if (this.children_.contains(childKey)) {\r\n                var childTree = this.children_.get(childKey);\r\n                return childTree.find(path);\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Stores the given node at the specified path. If there is already a node\r\n     * at a shallower path, it merges the new data into that snapshot node.\r\n     *\r\n     * @param {!Path} path Path to look up snapshot for.\r\n     * @param {!Node} data The new data, or null.\r\n     */\r\n    SparseSnapshotTree.prototype.remember = function (path, data) {\r\n        if (path.isEmpty()) {\r\n            this.value_ = data;\r\n            this.children_ = null;\r\n        }\r\n        else if (this.value_ !== null) {\r\n            this.value_ = this.value_.updateChild(path, data);\r\n        }\r\n        else {\r\n            if (this.children_ == null) {\r\n                this.children_ = new CountedSet();\r\n            }\r\n            var childKey = path.getFront();\r\n            if (!this.children_.contains(childKey)) {\r\n                this.children_.add(childKey, new SparseSnapshotTree());\r\n            }\r\n            var child = this.children_.get(childKey);\r\n            path = path.popFront();\r\n            child.remember(path, data);\r\n        }\r\n    };\r\n    /**\r\n     * Purge the data at path from the cache.\r\n     *\r\n     * @param {!Path} path Path to look up snapshot for.\r\n     * @return {boolean} True if this node should now be removed.\r\n     */\r\n    SparseSnapshotTree.prototype.forget = function (path) {\r\n        if (path.isEmpty()) {\r\n            this.value_ = null;\r\n            this.children_ = null;\r\n            return true;\r\n        }\r\n        else {\r\n            if (this.value_ !== null) {\r\n                if (this.value_.isLeafNode()) {\r\n                    // We're trying to forget a node that doesn't exist\r\n                    return false;\r\n                }\r\n                else {\r\n                    var value = this.value_;\r\n                    this.value_ = null;\r\n                    var self_1 = this;\r\n                    value.forEachChild(PRIORITY_INDEX, function (key, tree) {\r\n                        self_1.remember(new Path(key), tree);\r\n                    });\r\n                    return this.forget(path);\r\n                }\r\n            }\r\n            else if (this.children_ !== null) {\r\n                var childKey = path.getFront();\r\n                path = path.popFront();\r\n                if (this.children_.contains(childKey)) {\r\n                    var safeToRemove = this.children_.get(childKey).forget(path);\r\n                    if (safeToRemove) {\r\n                        this.children_.remove(childKey);\r\n                    }\r\n                }\r\n                if (this.children_.isEmpty()) {\r\n                    this.children_ = null;\r\n                    return true;\r\n                }\r\n                else {\r\n                    return false;\r\n                }\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Recursively iterates through all of the stored tree and calls the\r\n     * callback on each one.\r\n     *\r\n     * @param {!Path} prefixPath Path to look up node for.\r\n     * @param {!Function} func The function to invoke for each tree.\r\n     */\r\n    SparseSnapshotTree.prototype.forEachTree = function (prefixPath, func) {\r\n        if (this.value_ !== null) {\r\n            func(prefixPath, this.value_);\r\n        }\r\n        else {\r\n            this.forEachChild(function (key, tree) {\r\n                var path = new Path(prefixPath.toString() + '/' + key);\r\n                tree.forEachTree(path, func);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Iterates through each immediate child and triggers the callback.\r\n     *\r\n     * @param {!Function} func The function to invoke for each child.\r\n     */\r\n    SparseSnapshotTree.prototype.forEachChild = function (func) {\r\n        if (this.children_ !== null) {\r\n            this.children_.each(function (key, tree) {\r\n                func(key, tree);\r\n            });\r\n        }\r\n    };\r\n    return SparseSnapshotTree;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Generate placeholders for deferred values.\r\n * @param {?Object} values\r\n * @return {!Object}\r\n */\r\nvar generateWithValues = function (values) {\r\n    values = values || {};\r\n    values['timestamp'] = values['timestamp'] || new Date().getTime();\r\n    return values;\r\n};\r\n/**\r\n * Value to use when firing local events. When writing server values, fire\r\n * local events with an approximate value, otherwise return value as-is.\r\n * @param {(Object|string|number|boolean)} value\r\n * @param {!Object} serverValues\r\n * @return {!(string|number|boolean)}\r\n */\r\nvar resolveDeferredValue = function (value, serverValues) {\r\n    if (!value || typeof value !== 'object') {\r\n        return value;\r\n    }\r\n    else {\r\n        util.assert('.sv' in value, 'Unexpected leaf node or priority contents');\r\n        return serverValues[value['.sv']];\r\n    }\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the tree with the\r\n * specified generated replacement values.\r\n * @param {!SparseSnapshotTree} tree\r\n * @param {!Object} serverValues\r\n * @return {!SparseSnapshotTree}\r\n */\r\nvar resolveDeferredValueTree = function (tree, serverValues) {\r\n    var resolvedTree = new SparseSnapshotTree();\r\n    tree.forEachTree(new Path(''), function (path, node) {\r\n        resolvedTree.remember(path, resolveDeferredValueSnapshot(node, serverValues));\r\n    });\r\n    return resolvedTree;\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the node with the\r\n * specified generated replacement values.  If there are no server values in the node,\r\n * it'll be returned as-is.\r\n * @param {!Node} node\r\n * @param {!Object} serverValues\r\n * @return {!Node}\r\n */\r\nvar resolveDeferredValueSnapshot = function (node, serverValues) {\r\n    var rawPri = node.getPriority().val();\r\n    var priority = resolveDeferredValue(rawPri, serverValues);\r\n    var newNode;\r\n    if (node.isLeafNode()) {\r\n        var leafNode = node;\r\n        var value = resolveDeferredValue(leafNode.getValue(), serverValues);\r\n        if (value !== leafNode.getValue() ||\r\n            priority !== leafNode.getPriority().val()) {\r\n            return new LeafNode(value, nodeFromJSON$1(priority));\r\n        }\r\n        else {\r\n            return node;\r\n        }\r\n    }\r\n    else {\r\n        var childrenNode = node;\r\n        newNode = childrenNode;\r\n        if (priority !== childrenNode.getPriority().val()) {\r\n            newNode = newNode.updatePriority(new LeafNode(priority));\r\n        }\r\n        childrenNode.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n            var newChildNode = resolveDeferredValueSnapshot(childNode, serverValues);\r\n            if (newChildNode !== childNode) {\r\n                newNode = newNode.updateImmediateChild(childName, newChildNode);\r\n            }\r\n        });\r\n        return newNode;\r\n    }\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @enum\r\n */\r\nvar OperationType;\r\n(function (OperationType) {\r\n    OperationType[OperationType[\"OVERWRITE\"] = 0] = \"OVERWRITE\";\r\n    OperationType[OperationType[\"MERGE\"] = 1] = \"MERGE\";\r\n    OperationType[OperationType[\"ACK_USER_WRITE\"] = 2] = \"ACK_USER_WRITE\";\r\n    OperationType[OperationType[\"LISTEN_COMPLETE\"] = 3] = \"LISTEN_COMPLETE\";\r\n})(OperationType || (OperationType = {}));\r\n/**\r\n * @param {boolean} fromUser\r\n * @param {boolean} fromServer\r\n * @param {?string} queryId\r\n * @param {boolean} tagged\r\n * @constructor\r\n */\r\nvar OperationSource = /** @class */ (function () {\r\n    function OperationSource(fromUser, fromServer, queryId, tagged) {\r\n        this.fromUser = fromUser;\r\n        this.fromServer = fromServer;\r\n        this.queryId = queryId;\r\n        this.tagged = tagged;\r\n        util.assert(!tagged || fromServer, 'Tagged queries must be from server.');\r\n    }\r\n    /**\r\n     * @const\r\n     * @type {!OperationSource}\r\n     */\r\n    OperationSource.User = new OperationSource(\r\n    /*fromUser=*/ true, false, null, \r\n    /*tagged=*/ false);\r\n    /**\r\n     * @const\r\n     * @type {!OperationSource}\r\n     */\r\n    OperationSource.Server = new OperationSource(false, \r\n    /*fromServer=*/ true, null, \r\n    /*tagged=*/ false);\r\n    /**\r\n     * @param {string} queryId\r\n     * @return {!OperationSource}\r\n     */\r\n    OperationSource.forServerTaggedQuery = function (queryId) {\r\n        return new OperationSource(false, \r\n        /*fromServer=*/ true, queryId, \r\n        /*tagged=*/ true);\r\n    };\r\n    return OperationSource;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar AckUserWrite = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!ImmutableTree<!boolean>} affectedTree A tree containing true for each affected path. Affected paths can't overlap.\r\n     * @param {!boolean} revert\r\n     */\r\n    function AckUserWrite(\r\n    /**@inheritDoc */ path, \r\n    /**@inheritDoc */ affectedTree, \r\n    /**@inheritDoc */ revert) {\r\n        this.path = path;\r\n        this.affectedTree = affectedTree;\r\n        this.revert = revert;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.ACK_USER_WRITE;\r\n        /** @inheritDoc */\r\n        this.source = OperationSource.User;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    AckUserWrite.prototype.operationForChild = function (childName) {\r\n        if (!this.path.isEmpty()) {\r\n            util.assert(this.path.getFront() === childName, 'operationForChild called for unrelated child.');\r\n            return new AckUserWrite(this.path.popFront(), this.affectedTree, this.revert);\r\n        }\r\n        else if (this.affectedTree.value != null) {\r\n            util.assert(this.affectedTree.children.isEmpty(), 'affectedTree should not have overlapping affected paths.');\r\n            // All child locations are affected as well; just return same operation.\r\n            return this;\r\n        }\r\n        else {\r\n            var childTree = this.affectedTree.subtree(new Path(childName));\r\n            return new AckUserWrite(Path.Empty, childTree, this.revert);\r\n        }\r\n    };\r\n    return AckUserWrite;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar emptyChildrenSingleton;\r\n/**\r\n * Singleton empty children collection.\r\n *\r\n * @const\r\n * @type {!SortedMap.<string, !ImmutableTree.<?>>}\r\n */\r\nvar EmptyChildren = function () {\r\n    if (!emptyChildrenSingleton) {\r\n        emptyChildrenSingleton = new SortedMap(stringCompare);\r\n    }\r\n    return emptyChildrenSingleton;\r\n};\r\n/**\r\n * A tree with immutable elements.\r\n */\r\nvar ImmutableTree = /** @class */ (function () {\r\n    /**\r\n     * @template T\r\n     * @param {?T} value\r\n     * @param {SortedMap.<string, !ImmutableTree.<T>>=} children\r\n     */\r\n    function ImmutableTree(value, children) {\r\n        if (children === void 0) { children = EmptyChildren(); }\r\n        this.value = value;\r\n        this.children = children;\r\n    }\r\n    /**\r\n     * @template T\r\n     * @param {!Object.<string, !T>} obj\r\n     * @return {!ImmutableTree.<!T>}\r\n     */\r\n    ImmutableTree.fromObject = function (obj) {\r\n        var tree = ImmutableTree.Empty;\r\n        util.forEach(obj, function (childPath, childSnap) {\r\n            tree = tree.set(new Path(childPath), childSnap);\r\n        });\r\n        return tree;\r\n    };\r\n    /**\r\n     * True if the value is empty and there are no children\r\n     * @return {boolean}\r\n     */\r\n    ImmutableTree.prototype.isEmpty = function () {\r\n        return this.value === null && this.children.isEmpty();\r\n    };\r\n    /**\r\n     * Given a path and predicate, return the first node and the path to that node\r\n     * where the predicate returns true.\r\n     *\r\n     * TODO Do a perf test -- If we're creating a bunch of {path: value:} objects\r\n     * on the way back out, it may be better to pass down a pathSoFar obj.\r\n     *\r\n     * @param {!Path} relativePath The remainder of the path\r\n     * @param {function(T):boolean} predicate The predicate to satisfy to return a\r\n     *   node\r\n     * @return {?{path:!Path, value:!T}}\r\n     */\r\n    ImmutableTree.prototype.findRootMostMatchingPathAndValue = function (relativePath, predicate) {\r\n        if (this.value != null && predicate(this.value)) {\r\n            return { path: Path.Empty, value: this.value };\r\n        }\r\n        else {\r\n            if (relativePath.isEmpty()) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = relativePath.getFront();\r\n                var child = this.children.get(front);\r\n                if (child !== null) {\r\n                    var childExistingPathAndValue = child.findRootMostMatchingPathAndValue(relativePath.popFront(), predicate);\r\n                    if (childExistingPathAndValue != null) {\r\n                        var fullPath = new Path(front).child(childExistingPathAndValue.path);\r\n                        return { path: fullPath, value: childExistingPathAndValue.value };\r\n                    }\r\n                    else {\r\n                        return null;\r\n                    }\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Find, if it exists, the shortest subpath of the given path that points a defined\r\n     * value in the tree\r\n     * @param {!Path} relativePath\r\n     * @return {?{path: !Path, value: !T}}\r\n     */\r\n    ImmutableTree.prototype.findRootMostValueAndPath = function (relativePath) {\r\n        return this.findRootMostMatchingPathAndValue(relativePath, function () { return true; });\r\n    };\r\n    /**\r\n     * @param {!Path} relativePath\r\n     * @return {!ImmutableTree.<T>} The subtree at the given path\r\n     */\r\n    ImmutableTree.prototype.subtree = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var childTree = this.children.get(front);\r\n            if (childTree !== null) {\r\n                return childTree.subtree(relativePath.popFront());\r\n            }\r\n            else {\r\n                return ImmutableTree.Empty;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets a value at the specified path.\r\n     *\r\n     * @param {!Path} relativePath Path to set value at.\r\n     * @param {?T} toSet Value to set.\r\n     * @return {!ImmutableTree.<T>} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.set = function (relativePath, toSet) {\r\n        if (relativePath.isEmpty()) {\r\n            return new ImmutableTree(toSet, this.children);\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front) || ImmutableTree.Empty;\r\n            var newChild = child.set(relativePath.popFront(), toSet);\r\n            var newChildren = this.children.insert(front, newChild);\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Removes the value at the specified path.\r\n     *\r\n     * @param {!Path} relativePath Path to value to remove.\r\n     * @return {!ImmutableTree.<T>} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.remove = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            if (this.children.isEmpty()) {\r\n                return ImmutableTree.Empty;\r\n            }\r\n            else {\r\n                return new ImmutableTree(null, this.children);\r\n            }\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                var newChild = child.remove(relativePath.popFront());\r\n                var newChildren = void 0;\r\n                if (newChild.isEmpty()) {\r\n                    newChildren = this.children.remove(front);\r\n                }\r\n                else {\r\n                    newChildren = this.children.insert(front, newChild);\r\n                }\r\n                if (this.value === null && newChildren.isEmpty()) {\r\n                    return ImmutableTree.Empty;\r\n                }\r\n                else {\r\n                    return new ImmutableTree(this.value, newChildren);\r\n                }\r\n            }\r\n            else {\r\n                return this;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Gets a value from the tree.\r\n     *\r\n     * @param {!Path} relativePath Path to get value for.\r\n     * @return {?T} Value at path, or null.\r\n     */\r\n    ImmutableTree.prototype.get = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            return this.value;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                return child.get(relativePath.popFront());\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Replace the subtree at the specified path with the given new tree.\r\n     *\r\n     * @param {!Path} relativePath Path to replace subtree for.\r\n     * @param {!ImmutableTree} newTree New tree.\r\n     * @return {!ImmutableTree} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.setTree = function (relativePath, newTree) {\r\n        if (relativePath.isEmpty()) {\r\n            return newTree;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front) || ImmutableTree.Empty;\r\n            var newChild = child.setTree(relativePath.popFront(), newTree);\r\n            var newChildren = void 0;\r\n            if (newChild.isEmpty()) {\r\n                newChildren = this.children.remove(front);\r\n            }\r\n            else {\r\n                newChildren = this.children.insert(front, newChild);\r\n            }\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Performs a depth first fold on this tree. Transforms a tree into a single\r\n     * value, given a function that operates on the path to a node, an optional\r\n     * current value, and a map of child names to folded subtrees\r\n     * @template V\r\n     * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n     * @return {V}\r\n     */\r\n    ImmutableTree.prototype.fold = function (fn) {\r\n        return this.fold_(Path.Empty, fn);\r\n    };\r\n    /**\r\n     * Recursive helper for public-facing fold() method\r\n     * @template V\r\n     * @param {!Path} pathSoFar\r\n     * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n     * @return {V}\r\n     * @private\r\n     */\r\n    ImmutableTree.prototype.fold_ = function (pathSoFar, fn) {\r\n        var accum = {};\r\n        this.children.inorderTraversal(function (childKey, childTree) {\r\n            accum[childKey] = childTree.fold_(pathSoFar.child(childKey), fn);\r\n        });\r\n        return fn(pathSoFar, this.value, accum);\r\n    };\r\n    /**\r\n     * Find the first matching value on the given path. Return the result of applying f to it.\r\n     * @template V\r\n     * @param {!Path} path\r\n     * @param {!function(!Path, !T):?V} f\r\n     * @return {?V}\r\n     */\r\n    ImmutableTree.prototype.findOnPath = function (path, f) {\r\n        return this.findOnPath_(path, Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.findOnPath_ = function (pathToFollow, pathSoFar, f) {\r\n        var result = this.value ? f(pathSoFar, this.value) : false;\r\n        if (result) {\r\n            return result;\r\n        }\r\n        else {\r\n            if (pathToFollow.isEmpty()) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = pathToFollow.getFront();\r\n                var nextChild = this.children.get(front);\r\n                if (nextChild) {\r\n                    return nextChild.findOnPath_(pathToFollow.popFront(), pathSoFar.child(front), f);\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!function(!Path, !T)} f\r\n     * @returns {!ImmutableTree.<T>}\r\n     */\r\n    ImmutableTree.prototype.foreachOnPath = function (path, f) {\r\n        return this.foreachOnPath_(path, Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.foreachOnPath_ = function (pathToFollow, currentRelativePath, f) {\r\n        if (pathToFollow.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            if (this.value) {\r\n                f(currentRelativePath, this.value);\r\n            }\r\n            var front = pathToFollow.getFront();\r\n            var nextChild = this.children.get(front);\r\n            if (nextChild) {\r\n                return nextChild.foreachOnPath_(pathToFollow.popFront(), currentRelativePath.child(front), f);\r\n            }\r\n            else {\r\n                return ImmutableTree.Empty;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Calls the given function for each node in the tree that has a value.\r\n     *\r\n     * @param {function(!Path, !T)} f A function to be called with\r\n     *   the path from the root of the tree to a node, and the value at that node.\r\n     *   Called in depth-first order.\r\n     */\r\n    ImmutableTree.prototype.foreach = function (f) {\r\n        this.foreach_(Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.foreach_ = function (currentRelativePath, f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            childTree.foreach_(currentRelativePath.child(childName), f);\r\n        });\r\n        if (this.value) {\r\n            f(currentRelativePath, this.value);\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {function(string, !T)} f\r\n     */\r\n    ImmutableTree.prototype.foreachChild = function (f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            if (childTree.value) {\r\n                f(childName, childTree.value);\r\n            }\r\n        });\r\n    };\r\n    ImmutableTree.Empty = new ImmutableTree(null);\r\n    return ImmutableTree;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar ListenComplete = /** @class */ (function () {\r\n    function ListenComplete(source, path) {\r\n        this.source = source;\r\n        this.path = path;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.LISTEN_COMPLETE;\r\n    }\r\n    ListenComplete.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            return new ListenComplete(this.source, Path.Empty);\r\n        }\r\n        else {\r\n            return new ListenComplete(this.source, this.path.popFront());\r\n        }\r\n    };\r\n    return ListenComplete;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!Node} snap\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar Overwrite = /** @class */ (function () {\r\n    function Overwrite(source, path, snap) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.snap = snap;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.OVERWRITE;\r\n    }\r\n    Overwrite.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            return new Overwrite(this.source, Path.Empty, this.snap.getImmediateChild(childName));\r\n        }\r\n        else {\r\n            return new Overwrite(this.source, this.path.popFront(), this.snap);\r\n        }\r\n    };\r\n    return Overwrite;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!ImmutableTree.<!Node>} children\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar Merge = /** @class */ (function () {\r\n    function Merge(\r\n    /**@inheritDoc */ source, \r\n    /**@inheritDoc */ path, \r\n    /**@inheritDoc */ children) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.children = children;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.MERGE;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Merge.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            var childTree = this.children.subtree(new Path(childName));\r\n            if (childTree.isEmpty()) {\r\n                // This child is unaffected\r\n                return null;\r\n            }\r\n            else if (childTree.value) {\r\n                // We have a snapshot for the child in question.  This becomes an overwrite of the child.\r\n                return new Overwrite(this.source, Path.Empty, childTree.value);\r\n            }\r\n            else {\r\n                // This is a merge at a deeper level\r\n                return new Merge(this.source, Path.Empty, childTree);\r\n            }\r\n        }\r\n        else {\r\n            util.assert(this.path.getFront() === childName, \"Can't get a merge for a child not on the path of the operation\");\r\n            return new Merge(this.source, this.path.popFront(), this.children);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Merge.prototype.toString = function () {\r\n        return ('Operation(' +\r\n            this.path +\r\n            ': ' +\r\n            this.source.toString() +\r\n            ' merge: ' +\r\n            this.children.toString() +\r\n            ')');\r\n    };\r\n    return Merge;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\r\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\r\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\r\n * whether a node potentially had children removed due to a filter.\r\n */\r\nvar CacheNode = /** @class */ (function () {\r\n    /**\r\n     * @param {!Node} node_\r\n     * @param {boolean} fullyInitialized_\r\n     * @param {boolean} filtered_\r\n     */\r\n    function CacheNode(node_, fullyInitialized_, filtered_) {\r\n        this.node_ = node_;\r\n        this.fullyInitialized_ = fullyInitialized_;\r\n        this.filtered_ = filtered_;\r\n    }\r\n    /**\r\n     * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isFullyInitialized = function () {\r\n        return this.fullyInitialized_;\r\n    };\r\n    /**\r\n     * Returns whether this node is potentially missing children due to a filter applied to the node\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isFiltered = function () {\r\n        return this.filtered_;\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isCompleteForPath = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this.isFullyInitialized() && !this.filtered_;\r\n        }\r\n        var childKey = path.getFront();\r\n        return this.isCompleteForChild(childKey);\r\n    };\r\n    /**\r\n     * @param {!string} key\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isCompleteForChild = function (key) {\r\n        return ((this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key));\r\n    };\r\n    /**\r\n     * @return {!Node}\r\n     */\r\n    CacheNode.prototype.getNode = function () {\r\n        return this.node_;\r\n    };\r\n    return CacheNode;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Stores the data we have cached for a view.\r\n *\r\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\r\n *\r\n * @constructor\r\n */\r\nvar ViewCache = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!CacheNode} eventCache_\r\n     * @param {!CacheNode} serverCache_\r\n     */\r\n    function ViewCache(eventCache_, serverCache_) {\r\n        this.eventCache_ = eventCache_;\r\n        this.serverCache_ = serverCache_;\r\n    }\r\n    /**\r\n     * @param {!Node} eventSnap\r\n     * @param {boolean} complete\r\n     * @param {boolean} filtered\r\n     * @return {!ViewCache}\r\n     */\r\n    ViewCache.prototype.updateEventSnap = function (eventSnap, complete, filtered) {\r\n        return new ViewCache(new CacheNode(eventSnap, complete, filtered), this.serverCache_);\r\n    };\r\n    /**\r\n     * @param {!Node} serverSnap\r\n     * @param {boolean} complete\r\n     * @param {boolean} filtered\r\n     * @return {!ViewCache}\r\n     */\r\n    ViewCache.prototype.updateServerSnap = function (serverSnap, complete, filtered) {\r\n        return new ViewCache(this.eventCache_, new CacheNode(serverSnap, complete, filtered));\r\n    };\r\n    /**\r\n     * @return {!CacheNode}\r\n     */\r\n    ViewCache.prototype.getEventCache = function () {\r\n        return this.eventCache_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    ViewCache.prototype.getCompleteEventSnap = function () {\r\n        return this.eventCache_.isFullyInitialized()\r\n            ? this.eventCache_.getNode()\r\n            : null;\r\n    };\r\n    /**\r\n     * @return {!CacheNode}\r\n     */\r\n    ViewCache.prototype.getServerCache = function () {\r\n        return this.serverCache_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    ViewCache.prototype.getCompleteServerSnap = function () {\r\n        return this.serverCache_.isFullyInitialized()\r\n            ? this.serverCache_.getNode()\r\n            : null;\r\n    };\r\n    /**\r\n     * @const\r\n     * @type {ViewCache}\r\n     */\r\n    ViewCache.Empty = new ViewCache(new CacheNode(ChildrenNode.EMPTY_NODE, \r\n    /*fullyInitialized=*/ false, \r\n    /*filtered=*/ false), new CacheNode(ChildrenNode.EMPTY_NODE, \r\n    /*fullyInitialized=*/ false, \r\n    /*filtered=*/ false));\r\n    return ViewCache;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @struct\r\n * @param {!string} type The event type\r\n * @param {!Node} snapshotNode The data\r\n * @param {string=} childName The name for this child, if it's a child event\r\n * @param {Node=} oldSnap Used for intermediate processing of child changed events\r\n * @param {string=} prevName The name for the previous child, if applicable\r\n */\r\nvar Change = /** @class */ (function () {\r\n    function Change(type, snapshotNode, childName, oldSnap, prevName) {\r\n        this.type = type;\r\n        this.snapshotNode = snapshotNode;\r\n        this.childName = childName;\r\n        this.oldSnap = oldSnap;\r\n        this.prevName = prevName;\r\n    }\r\n    /**\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.valueChange = function (snapshot) {\r\n        return new Change(Change.VALUE, snapshot);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childAddedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_ADDED, snapshot, childKey);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childRemovedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_REMOVED, snapshot, childKey);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} newSnapshot\r\n     * @param {!Node} oldSnapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childChangedChange = function (childKey, newSnapshot, oldSnapshot) {\r\n        return new Change(Change.CHILD_CHANGED, newSnapshot, childKey, oldSnapshot);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childMovedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_MOVED, snapshot, childKey);\r\n    };\r\n    //event types\r\n    /** Event type for a child added */\r\n    Change.CHILD_ADDED = 'child_added';\r\n    /** Event type for a child removed */\r\n    Change.CHILD_REMOVED = 'child_removed';\r\n    /** Event type for a child changed */\r\n    Change.CHILD_CHANGED = 'child_changed';\r\n    /** Event type for a child moved */\r\n    Change.CHILD_MOVED = 'child_moved';\r\n    /** Event type for a value change */\r\n    Change.VALUE = 'value';\r\n    return Change;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n * @param {!Index} index\r\n */\r\nvar IndexedFilter = /** @class */ (function () {\r\n    function IndexedFilter(index_) {\r\n        this.index_ = index_;\r\n    }\r\n    IndexedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        util.assert(snap.isIndexed(this.index_), 'A node must be indexed if only a child is updated');\r\n        var oldChild = snap.getImmediateChild(key);\r\n        // Check if anything actually changed.\r\n        if (oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))) {\r\n            // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\r\n            // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\r\n            // to avoid treating these cases as \"nothing changed.\"\r\n            if (oldChild.isEmpty() == newChild.isEmpty()) {\r\n                // Nothing changed.\r\n                // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\r\n                //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\r\n                return snap;\r\n            }\r\n        }\r\n        if (optChangeAccumulator != null) {\r\n            if (newChild.isEmpty()) {\r\n                if (snap.hasChild(key)) {\r\n                    optChangeAccumulator.trackChildChange(Change.childRemovedChange(key, oldChild));\r\n                }\r\n                else {\r\n                    util.assert(snap.isLeafNode(), 'A child remove without an old child only makes sense on a leaf node');\r\n                }\r\n            }\r\n            else if (oldChild.isEmpty()) {\r\n                optChangeAccumulator.trackChildChange(Change.childAddedChange(key, newChild));\r\n            }\r\n            else {\r\n                optChangeAccumulator.trackChildChange(Change.childChangedChange(key, newChild, oldChild));\r\n            }\r\n        }\r\n        if (snap.isLeafNode() && newChild.isEmpty()) {\r\n            return snap;\r\n        }\r\n        else {\r\n            // Make sure the node is indexed\r\n            return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (optChangeAccumulator != null) {\r\n            if (!oldSnap.isLeafNode()) {\r\n                oldSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (!newSnap.hasChild(key)) {\r\n                        optChangeAccumulator.trackChildChange(Change.childRemovedChange(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n            if (!newSnap.isLeafNode()) {\r\n                newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (oldSnap.hasChild(key)) {\r\n                        var oldChild = oldSnap.getImmediateChild(key);\r\n                        if (!oldChild.equals(childNode)) {\r\n                            optChangeAccumulator.trackChildChange(Change.childChangedChange(key, childNode, oldChild));\r\n                        }\r\n                    }\r\n                    else {\r\n                        optChangeAccumulator.trackChildChange(Change.childAddedChange(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        return newSnap.withIndex(this.index_);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        if (oldSnap.isEmpty()) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        else {\r\n            return oldSnap.updatePriority(newPriority);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.filtersNodes = function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.getIndexedFilter = function () {\r\n        return this;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    return IndexedFilter;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n */\r\nvar ChildChangeAccumulator = /** @class */ (function () {\r\n    function ChildChangeAccumulator() {\r\n        this.changeMap_ = {};\r\n    }\r\n    /**\r\n     * @param {!Change} change\r\n     */\r\n    ChildChangeAccumulator.prototype.trackChildChange = function (change) {\r\n        var type = change.type;\r\n        var childKey /** @type {!string} */ = change.childName;\r\n        util.assert(type == Change.CHILD_ADDED ||\r\n            type == Change.CHILD_CHANGED ||\r\n            type == Change.CHILD_REMOVED, 'Only child changes supported for tracking');\r\n        util.assert(childKey !== '.priority', 'Only non-priority child changes can be tracked.');\r\n        var oldChange = util.safeGet(this.changeMap_, childKey);\r\n        if (oldChange) {\r\n            var oldType = oldChange.type;\r\n            if (type == Change.CHILD_ADDED && oldType == Change.CHILD_REMOVED) {\r\n                this.changeMap_[childKey] = Change.childChangedChange(childKey, change.snapshotNode, oldChange.snapshotNode);\r\n            }\r\n            else if (type == Change.CHILD_REMOVED &&\r\n                oldType == Change.CHILD_ADDED) {\r\n                delete this.changeMap_[childKey];\r\n            }\r\n            else if (type == Change.CHILD_REMOVED &&\r\n                oldType == Change.CHILD_CHANGED) {\r\n                this.changeMap_[childKey] = Change.childRemovedChange(childKey, oldChange.oldSnap);\r\n            }\r\n            else if (type == Change.CHILD_CHANGED &&\r\n                oldType == Change.CHILD_ADDED) {\r\n                this.changeMap_[childKey] = Change.childAddedChange(childKey, change.snapshotNode);\r\n            }\r\n            else if (type == Change.CHILD_CHANGED &&\r\n                oldType == Change.CHILD_CHANGED) {\r\n                this.changeMap_[childKey] = Change.childChangedChange(childKey, change.snapshotNode, oldChange.oldSnap);\r\n            }\r\n            else {\r\n                throw util.assertionError('Illegal combination of changes: ' +\r\n                    change +\r\n                    ' occurred after ' +\r\n                    oldChange);\r\n            }\r\n        }\r\n        else {\r\n            this.changeMap_[childKey] = change;\r\n        }\r\n    };\r\n    /**\r\n     * @return {!Array.<!Change>}\r\n     */\r\n    ChildChangeAccumulator.prototype.getChanges = function () {\r\n        return util.getValues(this.changeMap_);\r\n    };\r\n    return ChildChangeAccumulator;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of CompleteChildSource that never returns any additional children\r\n *\r\n * @private\r\n * @constructor\r\n * @implements CompleteChildSource\r\n */\r\nvar NoCompleteChildSource_ = /** @class */ (function () {\r\n    function NoCompleteChildSource_() {\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    NoCompleteChildSource_.prototype.getCompleteChild = function (childKey) {\r\n        return null;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    NoCompleteChildSource_.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        return null;\r\n    };\r\n    return NoCompleteChildSource_;\r\n}());\r\n/**\r\n * Singleton instance.\r\n * @const\r\n * @type {!CompleteChildSource}\r\n */\r\nvar NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\r\n/**\r\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\r\n * old event caches available to calculate complete children.\r\n *\r\n *\r\n * @implements CompleteChildSource\r\n */\r\nvar WriteTreeCompleteChildSource = /** @class */ (function () {\r\n    /**\r\n     * @param {!WriteTreeRef} writes_\r\n     * @param {!ViewCache} viewCache_\r\n     * @param {?Node} optCompleteServerCache_\r\n     */\r\n    function WriteTreeCompleteChildSource(writes_, viewCache_, optCompleteServerCache_) {\r\n        if (optCompleteServerCache_ === void 0) { optCompleteServerCache_ = null; }\r\n        this.writes_ = writes_;\r\n        this.viewCache_ = viewCache_;\r\n        this.optCompleteServerCache_ = optCompleteServerCache_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WriteTreeCompleteChildSource.prototype.getCompleteChild = function (childKey) {\r\n        var node = this.viewCache_.getEventCache();\r\n        if (node.isCompleteForChild(childKey)) {\r\n            return node.getNode().getImmediateChild(childKey);\r\n        }\r\n        else {\r\n            var serverNode = this.optCompleteServerCache_ != null\r\n                ? new CacheNode(this.optCompleteServerCache_, true, false)\r\n                : this.viewCache_.getServerCache();\r\n            return this.writes_.calcCompleteChild(childKey, serverNode);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WriteTreeCompleteChildSource.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        var completeServerData = this.optCompleteServerCache_ != null\r\n            ? this.optCompleteServerCache_\r\n            : this.viewCache_.getCompleteServerSnap();\r\n        var nodes = this.writes_.calcIndexedSlice(completeServerData, child, 1, reverse, index);\r\n        if (nodes.length === 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            return nodes[0];\r\n        }\r\n    };\r\n    return WriteTreeCompleteChildSource;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @struct\r\n */\r\nvar ProcessorResult = /** @class */ (function () {\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Array.<!Change>} changes\r\n     */\r\n    function ProcessorResult(viewCache, changes) {\r\n        this.viewCache = viewCache;\r\n        this.changes = changes;\r\n    }\r\n    return ProcessorResult;\r\n}());\r\n/**\r\n * @constructor\r\n */\r\nvar ViewProcessor = /** @class */ (function () {\r\n    /**\r\n     * @param {!NodeFilter} filter_\r\n     */\r\n    function ViewProcessor(filter_) {\r\n        this.filter_ = filter_;\r\n    }\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     */\r\n    ViewProcessor.prototype.assertIndexed = function (viewCache) {\r\n        util.assert(viewCache\r\n            .getEventCache()\r\n            .getNode()\r\n            .isIndexed(this.filter_.getIndex()), 'Event snap not indexed');\r\n        util.assert(viewCache\r\n            .getServerCache()\r\n            .getNode()\r\n            .isIndexed(this.filter_.getIndex()), 'Server snap not indexed');\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @return {!ProcessorResult}\r\n     */\r\n    ViewProcessor.prototype.applyOperation = function (oldViewCache, operation, writesCache, completeCache) {\r\n        var accumulator = new ChildChangeAccumulator();\r\n        var newViewCache, filterServerNode;\r\n        if (operation.type === OperationType.OVERWRITE) {\r\n            var overwrite = operation;\r\n            if (overwrite.source.fromUser) {\r\n                newViewCache = this.applyUserOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                util.assert(overwrite.source.fromServer, 'Unknown source.');\r\n                // We filter the node if it's a tagged update or the node has been previously filtered  and the\r\n                // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\r\n                // again\r\n                filterServerNode =\r\n                    overwrite.source.tagged ||\r\n                        (oldViewCache.getServerCache().isFiltered() &&\r\n                            !overwrite.path.isEmpty());\r\n                newViewCache = this.applyServerOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.MERGE) {\r\n            var merge = operation;\r\n            if (merge.source.fromUser) {\r\n                newViewCache = this.applyUserMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                util.assert(merge.source.fromServer, 'Unknown source.');\r\n                // We filter the node if it's a tagged update or the node has been previously filtered\r\n                filterServerNode =\r\n                    merge.source.tagged || oldViewCache.getServerCache().isFiltered();\r\n                newViewCache = this.applyServerMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.ACK_USER_WRITE) {\r\n            var ackUserWrite = operation;\r\n            if (!ackUserWrite.revert) {\r\n                newViewCache = this.ackUserWrite_(oldViewCache, ackUserWrite.path, ackUserWrite.affectedTree, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                newViewCache = this.revertUserWrite_(oldViewCache, ackUserWrite.path, writesCache, completeCache, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.LISTEN_COMPLETE) {\r\n            newViewCache = this.listenComplete_(oldViewCache, operation.path, writesCache, accumulator);\r\n        }\r\n        else {\r\n            throw util.assertionError('Unknown operation type: ' + operation.type);\r\n        }\r\n        var changes = accumulator.getChanges();\r\n        ViewProcessor.maybeAddValueEvent_(oldViewCache, newViewCache, changes);\r\n        return new ProcessorResult(newViewCache, changes);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!ViewCache} newViewCache\r\n     * @param {!Array.<!Change>} accumulator\r\n     * @private\r\n     */\r\n    ViewProcessor.maybeAddValueEvent_ = function (oldViewCache, newViewCache, accumulator) {\r\n        var eventSnap = newViewCache.getEventCache();\r\n        if (eventSnap.isFullyInitialized()) {\r\n            var isLeafOrEmpty = eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\r\n            var oldCompleteSnap = oldViewCache.getCompleteEventSnap();\r\n            if (accumulator.length > 0 ||\r\n                !oldViewCache.getEventCache().isFullyInitialized() ||\r\n                (isLeafOrEmpty &&\r\n                    !eventSnap\r\n                        .getNode()\r\n                        .equals(/** @type {!Node} */ (oldCompleteSnap))) ||\r\n                !eventSnap\r\n                    .getNode()\r\n                    .getPriority()\r\n                    .equals(oldCompleteSnap.getPriority())) {\r\n                accumulator.push(Change.valueChange(\r\n                /** @type {!Node} */ newViewCache.getCompleteEventSnap()));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} changePath\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {!CompleteChildSource} source\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.generateEventCacheAfterServerEvent_ = function (viewCache, changePath, writesCache, source, accumulator) {\r\n        var oldEventSnap = viewCache.getEventCache();\r\n        if (writesCache.shadowingWrite(changePath) != null) {\r\n            // we have a shadowing write, ignore changes\r\n            return viewCache;\r\n        }\r\n        else {\r\n            var newEventCache = void 0, serverNode = void 0;\r\n            if (changePath.isEmpty()) {\r\n                // TODO: figure out how this plays with \"sliding ack windows\"\r\n                util.assert(viewCache.getServerCache().isFullyInitialized(), 'If change path is empty, we must have complete server data');\r\n                if (viewCache.getServerCache().isFiltered()) {\r\n                    // We need to special case this, because we need to only apply writes to complete children, or\r\n                    // we might end up raising events for incomplete children. If the server data is filtered deep\r\n                    // writes cannot be guaranteed to be complete\r\n                    var serverCache = viewCache.getCompleteServerSnap();\r\n                    var completeChildren = serverCache instanceof ChildrenNode\r\n                        ? serverCache\r\n                        : ChildrenNode.EMPTY_NODE;\r\n                    var completeEventChildren = writesCache.calcCompleteEventChildren(completeChildren);\r\n                    newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeEventChildren, accumulator);\r\n                }\r\n                else {\r\n                    var completeNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                    newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeNode, accumulator);\r\n                }\r\n            }\r\n            else {\r\n                var childKey = changePath.getFront();\r\n                if (childKey == '.priority') {\r\n                    util.assert(changePath.getLength() == 1, \"Can't have a priority with additional path components\");\r\n                    var oldEventNode = oldEventSnap.getNode();\r\n                    serverNode = viewCache.getServerCache().getNode();\r\n                    // we might have overwrites for this priority\r\n                    var updatedPriority = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventNode, serverNode);\r\n                    if (updatedPriority != null) {\r\n                        newEventCache = this.filter_.updatePriority(oldEventNode, updatedPriority);\r\n                    }\r\n                    else {\r\n                        // priority didn't change, keep old node\r\n                        newEventCache = oldEventSnap.getNode();\r\n                    }\r\n                }\r\n                else {\r\n                    var childChangePath = changePath.popFront();\r\n                    // update child\r\n                    var newEventChild = void 0;\r\n                    if (oldEventSnap.isCompleteForChild(childKey)) {\r\n                        serverNode = viewCache.getServerCache().getNode();\r\n                        var eventChildUpdate = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventSnap.getNode(), serverNode);\r\n                        if (eventChildUpdate != null) {\r\n                            newEventChild = oldEventSnap\r\n                                .getNode()\r\n                                .getImmediateChild(childKey)\r\n                                .updateChild(childChangePath, eventChildUpdate);\r\n                        }\r\n                        else {\r\n                            // Nothing changed, just keep the old child\r\n                            newEventChild = oldEventSnap\r\n                                .getNode()\r\n                                .getImmediateChild(childKey);\r\n                        }\r\n                    }\r\n                    else {\r\n                        newEventChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\r\n                    }\r\n                    if (newEventChild != null) {\r\n                        newEventCache = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newEventChild, childChangePath, source, accumulator);\r\n                    }\r\n                    else {\r\n                        // no complete child available or no change\r\n                        newEventCache = oldEventSnap.getNode();\r\n                    }\r\n                }\r\n            }\r\n            return viewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized() || changePath.isEmpty(), this.filter_.filtersNodes());\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Path} changePath\r\n     * @param {!Node} changedSnap\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {boolean} filterServerNode\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyServerOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, filterServerNode, accumulator) {\r\n        var oldServerSnap = oldViewCache.getServerCache();\r\n        var newServerCache;\r\n        var serverFilter = filterServerNode\r\n            ? this.filter_\r\n            : this.filter_.getIndexedFilter();\r\n        if (changePath.isEmpty()) {\r\n            newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), changedSnap, null);\r\n        }\r\n        else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\r\n            // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\r\n            var newServerNode = oldServerSnap\r\n                .getNode()\r\n                .updateChild(changePath, changedSnap);\r\n            newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), newServerNode, null);\r\n        }\r\n        else {\r\n            var childKey = changePath.getFront();\r\n            if (!oldServerSnap.isCompleteForPath(changePath) &&\r\n                changePath.getLength() > 1) {\r\n                // We don't update incomplete nodes with updates intended for other listeners\r\n                return oldViewCache;\r\n            }\r\n            var childChangePath = changePath.popFront();\r\n            var childNode = oldServerSnap.getNode().getImmediateChild(childKey);\r\n            var newChildNode = childNode.updateChild(childChangePath, changedSnap);\r\n            if (childKey == '.priority') {\r\n                newServerCache = serverFilter.updatePriority(oldServerSnap.getNode(), newChildNode);\r\n            }\r\n            else {\r\n                newServerCache = serverFilter.updateChild(oldServerSnap.getNode(), childKey, newChildNode, childChangePath, NO_COMPLETE_CHILD_SOURCE, null);\r\n            }\r\n        }\r\n        var newViewCache = oldViewCache.updateServerSnap(newServerCache, oldServerSnap.isFullyInitialized() || changePath.isEmpty(), serverFilter.filtersNodes());\r\n        var source = new WriteTreeCompleteChildSource(writesCache, newViewCache, completeCache);\r\n        return this.generateEventCacheAfterServerEvent_(newViewCache, changePath, writesCache, source, accumulator);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Path} changePath\r\n     * @param {!Node} changedSnap\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyUserOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, accumulator) {\r\n        var oldEventSnap = oldViewCache.getEventCache();\r\n        var newViewCache, newEventCache;\r\n        var source = new WriteTreeCompleteChildSource(writesCache, oldViewCache, completeCache);\r\n        if (changePath.isEmpty()) {\r\n            newEventCache = this.filter_.updateFullNode(oldViewCache.getEventCache().getNode(), changedSnap, accumulator);\r\n            newViewCache = oldViewCache.updateEventSnap(newEventCache, true, this.filter_.filtersNodes());\r\n        }\r\n        else {\r\n            var childKey = changePath.getFront();\r\n            if (childKey === '.priority') {\r\n                newEventCache = this.filter_.updatePriority(oldViewCache.getEventCache().getNode(), changedSnap);\r\n                newViewCache = oldViewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized(), oldEventSnap.isFiltered());\r\n            }\r\n            else {\r\n                var childChangePath = changePath.popFront();\r\n                var oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\r\n                var newChild = void 0;\r\n                if (childChangePath.isEmpty()) {\r\n                    // Child overwrite, we can replace the child\r\n                    newChild = changedSnap;\r\n                }\r\n                else {\r\n                    var childNode = source.getCompleteChild(childKey);\r\n                    if (childNode != null) {\r\n                        if (childChangePath.getBack() === '.priority' &&\r\n                            childNode.getChild(childChangePath.parent()).isEmpty()) {\r\n                            // This is a priority update on an empty node. If this node exists on the server, the\r\n                            // server will send down the priority in the update, so ignore for now\r\n                            newChild = childNode;\r\n                        }\r\n                        else {\r\n                            newChild = childNode.updateChild(childChangePath, changedSnap);\r\n                        }\r\n                    }\r\n                    else {\r\n                        // There is no complete child node available\r\n                        newChild = ChildrenNode.EMPTY_NODE;\r\n                    }\r\n                }\r\n                if (!oldChild.equals(newChild)) {\r\n                    var newEventSnap = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newChild, childChangePath, source, accumulator);\r\n                    newViewCache = oldViewCache.updateEventSnap(newEventSnap, oldEventSnap.isFullyInitialized(), this.filter_.filtersNodes());\r\n                }\r\n                else {\r\n                    newViewCache = oldViewCache;\r\n                }\r\n            }\r\n        }\r\n        return newViewCache;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {string} childKey\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    ViewProcessor.cacheHasChild_ = function (viewCache, childKey) {\r\n        return viewCache.getEventCache().isCompleteForChild(childKey);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {ImmutableTree.<!Node>} changedChildren\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyUserMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, accumulator) {\r\n        var _this = this;\r\n        // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n        // window leaving room for new items.  It's important we process these changes first, so we\r\n        // iterate the changes twice, first processing any that affect items currently in view.\r\n        // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n        // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n        // not the other.\r\n        var curViewCache = viewCache;\r\n        changedChildren.foreach(function (relativePath, childNode) {\r\n            var writePath = path.child(relativePath);\r\n            if (ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\r\n                curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n            }\r\n        });\r\n        changedChildren.foreach(function (relativePath, childNode) {\r\n            var writePath = path.child(relativePath);\r\n            if (!ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\r\n                curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n            }\r\n        });\r\n        return curViewCache;\r\n    };\r\n    /**\r\n     * @param {!Node} node\r\n     * @param {ImmutableTree.<!Node>} merge\r\n     * @return {!Node}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyMerge_ = function (node, merge) {\r\n        merge.foreach(function (relativePath, childNode) {\r\n            node = node.updateChild(relativePath, childNode);\r\n        });\r\n        return node;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!ImmutableTree.<!Node>} changedChildren\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache\r\n     * @param {boolean} filterServerNode\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyServerMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, filterServerNode, accumulator) {\r\n        var _this = this;\r\n        // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\r\n        // wait for the complete data update coming soon.\r\n        if (viewCache\r\n            .getServerCache()\r\n            .getNode()\r\n            .isEmpty() &&\r\n            !viewCache.getServerCache().isFullyInitialized()) {\r\n            return viewCache;\r\n        }\r\n        // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n        // window leaving room for new items.  It's important we process these changes first, so we\r\n        // iterate the changes twice, first processing any that affect items currently in view.\r\n        // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n        // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n        // not the other.\r\n        var curViewCache = viewCache;\r\n        var viewMergeTree;\r\n        if (path.isEmpty()) {\r\n            viewMergeTree = changedChildren;\r\n        }\r\n        else {\r\n            viewMergeTree = ImmutableTree.Empty.setTree(path, changedChildren);\r\n        }\r\n        var serverNode = viewCache.getServerCache().getNode();\r\n        viewMergeTree.children.inorderTraversal(function (childKey, childTree) {\r\n            if (serverNode.hasChild(childKey)) {\r\n                var serverChild = viewCache\r\n                    .getServerCache()\r\n                    .getNode()\r\n                    .getImmediateChild(childKey);\r\n                var newChild = _this.applyMerge_(serverChild, childTree);\r\n                curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n            }\r\n        });\r\n        viewMergeTree.children.inorderTraversal(function (childKey, childMergeTree) {\r\n            var isUnknownDeepMerge = !viewCache.getServerCache().isCompleteForChild(childKey) &&\r\n                childMergeTree.value == null;\r\n            if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\r\n                var serverChild = viewCache\r\n                    .getServerCache()\r\n                    .getNode()\r\n                    .getImmediateChild(childKey);\r\n                var newChild = _this.applyMerge_(serverChild, childMergeTree);\r\n                curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n            }\r\n        });\r\n        return curViewCache;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} ackPath\r\n     * @param {!ImmutableTree<!boolean>} affectedTree\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.ackUserWrite_ = function (viewCache, ackPath, affectedTree, writesCache, completeCache, accumulator) {\r\n        if (writesCache.shadowingWrite(ackPath) != null) {\r\n            return viewCache;\r\n        }\r\n        // Only filter server node if it is currently filtered\r\n        var filterServerNode = viewCache.getServerCache().isFiltered();\r\n        // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\r\n        // now that it won't be shadowed.\r\n        var serverCache = viewCache.getServerCache();\r\n        if (affectedTree.value != null) {\r\n            // This is an overwrite.\r\n            if ((ackPath.isEmpty() && serverCache.isFullyInitialized()) ||\r\n                serverCache.isCompleteForPath(ackPath)) {\r\n                return this.applyServerOverwrite_(viewCache, ackPath, serverCache.getNode().getChild(ackPath), writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n            else if (ackPath.isEmpty()) {\r\n                // This is a goofy edge case where we are acking data at this location but don't have full data.  We\r\n                // should just re-apply whatever we have in our cache as a merge.\r\n                var changedChildren_1 = ImmutableTree.Empty;\r\n                serverCache.getNode().forEachChild(KEY_INDEX, function (name, node) {\r\n                    changedChildren_1 = changedChildren_1.set(new Path(name), node);\r\n                });\r\n                return this.applyServerMerge_(viewCache, ackPath, changedChildren_1, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n            else {\r\n                return viewCache;\r\n            }\r\n        }\r\n        else {\r\n            // This is a merge.\r\n            var changedChildren_2 = ImmutableTree.Empty;\r\n            affectedTree.foreach(function (mergePath, value) {\r\n                var serverCachePath = ackPath.child(mergePath);\r\n                if (serverCache.isCompleteForPath(serverCachePath)) {\r\n                    changedChildren_2 = changedChildren_2.set(mergePath, serverCache.getNode().getChild(serverCachePath));\r\n                }\r\n            });\r\n            return this.applyServerMerge_(viewCache, ackPath, changedChildren_2, writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.listenComplete_ = function (viewCache, path, writesCache, accumulator) {\r\n        var oldServerNode = viewCache.getServerCache();\r\n        var newViewCache = viewCache.updateServerSnap(oldServerNode.getNode(), oldServerNode.isFullyInitialized() || path.isEmpty(), oldServerNode.isFiltered());\r\n        return this.generateEventCacheAfterServerEvent_(newViewCache, path, writesCache, NO_COMPLETE_CHILD_SOURCE, accumulator);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeServerCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.revertUserWrite_ = function (viewCache, path, writesCache, completeServerCache, accumulator) {\r\n        var complete;\r\n        if (writesCache.shadowingWrite(path) != null) {\r\n            return viewCache;\r\n        }\r\n        else {\r\n            var source = new WriteTreeCompleteChildSource(writesCache, viewCache, completeServerCache);\r\n            var oldEventCache = viewCache.getEventCache().getNode();\r\n            var newEventCache = void 0;\r\n            if (path.isEmpty() || path.getFront() === '.priority') {\r\n                var newNode = void 0;\r\n                if (viewCache.getServerCache().isFullyInitialized()) {\r\n                    newNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                }\r\n                else {\r\n                    var serverChildren = viewCache.getServerCache().getNode();\r\n                    util.assert(serverChildren instanceof ChildrenNode, 'serverChildren would be complete if leaf node');\r\n                    newNode = writesCache.calcCompleteEventChildren(serverChildren);\r\n                }\r\n                newNode = newNode;\r\n                newEventCache = this.filter_.updateFullNode(oldEventCache, newNode, accumulator);\r\n            }\r\n            else {\r\n                var childKey = path.getFront();\r\n                var newChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\r\n                if (newChild == null &&\r\n                    viewCache.getServerCache().isCompleteForChild(childKey)) {\r\n                    newChild = oldEventCache.getImmediateChild(childKey);\r\n                }\r\n                if (newChild != null) {\r\n                    newEventCache = this.filter_.updateChild(oldEventCache, childKey, newChild, path.popFront(), source, accumulator);\r\n                }\r\n                else if (viewCache\r\n                    .getEventCache()\r\n                    .getNode()\r\n                    .hasChild(childKey)) {\r\n                    // No complete child available, delete the existing one, if any\r\n                    newEventCache = this.filter_.updateChild(oldEventCache, childKey, ChildrenNode.EMPTY_NODE, path.popFront(), source, accumulator);\r\n                }\r\n                else {\r\n                    newEventCache = oldEventCache;\r\n                }\r\n                if (newEventCache.isEmpty() &&\r\n                    viewCache.getServerCache().isFullyInitialized()) {\r\n                    // We might have reverted all child writes. Maybe the old event was a leaf node\r\n                    complete = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                    if (complete.isLeafNode()) {\r\n                        newEventCache = this.filter_.updateFullNode(newEventCache, complete, accumulator);\r\n                    }\r\n                }\r\n            }\r\n            complete =\r\n                viewCache.getServerCache().isFullyInitialized() ||\r\n                    writesCache.shadowingWrite(Path.Empty) != null;\r\n            return viewCache.updateEventSnap(newEventCache, complete, this.filter_.filtersNodes());\r\n        }\r\n    };\r\n    return ViewProcessor;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\r\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\r\n * for details.\r\n *\r\n * @constructor\r\n */\r\nvar EventGenerator = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Query} query_\r\n     */\r\n    function EventGenerator(query_) {\r\n        this.query_ = query_;\r\n        /**\r\n         * @private\r\n         * @type {!Index}\r\n         */\r\n        this.index_ = this.query_.getQueryParams().getIndex();\r\n    }\r\n    /**\r\n     * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\r\n     * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\r\n     *\r\n     * Notes:\r\n     *  - child_moved events will be synthesized at this time for any child_changed events that affect\r\n     *    our index.\r\n     *  - prevName will be calculated based on the index ordering.\r\n     *\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Node} eventCache\r\n     * @param {!Array.<!EventRegistration>} eventRegistrations\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    EventGenerator.prototype.generateEventsForChanges = function (changes, eventCache, eventRegistrations) {\r\n        var _this = this;\r\n        var events = [];\r\n        var moves = [];\r\n        changes.forEach(function (change) {\r\n            if (change.type === Change.CHILD_CHANGED &&\r\n                _this.index_.indexedValueChanged(change.oldSnap, change.snapshotNode)) {\r\n                moves.push(Change.childMovedChange(change.childName, change.snapshotNode));\r\n            }\r\n        });\r\n        this.generateEventsForType_(events, Change.CHILD_REMOVED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_ADDED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_MOVED, moves, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_CHANGED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.VALUE, changes, eventRegistrations, eventCache);\r\n        return events;\r\n    };\r\n    /**\r\n     * Given changes of a single change type, generate the corresponding events.\r\n     *\r\n     * @param {!Array.<!Event>} events\r\n     * @param {!string} eventType\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Array.<!EventRegistration>} registrations\r\n     * @param {!Node} eventCache\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.generateEventsForType_ = function (events, eventType, changes, registrations, eventCache) {\r\n        var _this = this;\r\n        var filteredChanges = changes.filter(function (change) { return change.type === eventType; });\r\n        filteredChanges.sort(this.compareChanges_.bind(this));\r\n        filteredChanges.forEach(function (change) {\r\n            var materializedChange = _this.materializeSingleChange_(change, eventCache);\r\n            registrations.forEach(function (registration) {\r\n                if (registration.respondsTo(change.type)) {\r\n                    events.push(registration.createEvent(materializedChange, _this.query_));\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Change} change\r\n     * @param {!Node} eventCache\r\n     * @return {!Change}\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.materializeSingleChange_ = function (change, eventCache) {\r\n        if (change.type === 'value' || change.type === 'child_removed') {\r\n            return change;\r\n        }\r\n        else {\r\n            change.prevName = eventCache.getPredecessorChildName(\r\n            /** @type {!string} */\r\n            change.childName, change.snapshotNode, this.index_);\r\n            return change;\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Change} a\r\n     * @param {!Change} b\r\n     * @return {number}\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.compareChanges_ = function (a, b) {\r\n        if (a.childName == null || b.childName == null) {\r\n            throw util.assertionError('Should only compare child_ events.');\r\n        }\r\n        var aWrapped = new NamedNode(a.childName, a.snapshotNode);\r\n        var bWrapped = new NamedNode(b.childName, b.snapshotNode);\r\n        return this.index_.compare(aWrapped, bWrapped);\r\n    };\r\n    return EventGenerator;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A view represents a specific location and query that has 1 or more event registrations.\r\n *\r\n * It does several things:\r\n *  - Maintains the list of event registrations for this location/query.\r\n *  - Maintains a cache of the data visible for this location/query.\r\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\r\n *    registrations returns the set of events to be raised.\r\n * @constructor\r\n */\r\nvar View = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Query} query_\r\n     * @param {!ViewCache} initialViewCache\r\n     */\r\n    function View(query_, initialViewCache) {\r\n        this.query_ = query_;\r\n        this.eventRegistrations_ = [];\r\n        var params = this.query_.getQueryParams();\r\n        var indexFilter = new IndexedFilter(params.getIndex());\r\n        var filter = params.getNodeFilter();\r\n        /**\r\n         * @type {ViewProcessor}\r\n         * @private\r\n         */\r\n        this.processor_ = new ViewProcessor(filter);\r\n        var initialServerCache = initialViewCache.getServerCache();\r\n        var initialEventCache = initialViewCache.getEventCache();\r\n        // Don't filter server node with other filter than index, wait for tagged listen\r\n        var serverSnap = indexFilter.updateFullNode(ChildrenNode.EMPTY_NODE, initialServerCache.getNode(), null);\r\n        var eventSnap = filter.updateFullNode(ChildrenNode.EMPTY_NODE, initialEventCache.getNode(), null);\r\n        var newServerCache = new CacheNode(serverSnap, initialServerCache.isFullyInitialized(), indexFilter.filtersNodes());\r\n        var newEventCache = new CacheNode(eventSnap, initialEventCache.isFullyInitialized(), filter.filtersNodes());\r\n        /**\r\n         * @type {!ViewCache}\r\n         * @private\r\n         */\r\n        this.viewCache_ = new ViewCache(newEventCache, newServerCache);\r\n        /**\r\n         * @type {!EventGenerator}\r\n         * @private\r\n         */\r\n        this.eventGenerator_ = new EventGenerator(this.query_);\r\n    }\r\n    /**\r\n     * @return {!Query}\r\n     */\r\n    View.prototype.getQuery = function () {\r\n        return this.query_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    View.prototype.getServerCache = function () {\r\n        return this.viewCache_.getServerCache().getNode();\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    View.prototype.getCompleteServerCache = function (path) {\r\n        var cache = this.viewCache_.getCompleteServerSnap();\r\n        if (cache) {\r\n            // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\r\n            // we need to see if it contains the child we're interested in.\r\n            if (this.query_.getQueryParams().loadsAllData() ||\r\n                (!path.isEmpty() && !cache.getImmediateChild(path.getFront()).isEmpty())) {\r\n                return cache.getChild(path);\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    View.prototype.isEmpty = function () {\r\n        return this.eventRegistrations_.length === 0;\r\n    };\r\n    /**\r\n     * @param {!EventRegistration} eventRegistration\r\n     */\r\n    View.prototype.addEventRegistration = function (eventRegistration) {\r\n        this.eventRegistrations_.push(eventRegistration);\r\n    };\r\n    /**\r\n     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {!Array.<!Event>} Cancel events, if cancelError was provided.\r\n     */\r\n    View.prototype.removeEventRegistration = function (eventRegistration, cancelError) {\r\n        var cancelEvents = [];\r\n        if (cancelError) {\r\n            util.assert(eventRegistration == null, 'A cancel should cancel all event registrations.');\r\n            var path_1 = this.query_.path;\r\n            this.eventRegistrations_.forEach(function (registration) {\r\n                cancelError /** @type {!Error} */ = cancelError;\r\n                var maybeEvent = registration.createCancelEvent(cancelError, path_1);\r\n                if (maybeEvent) {\r\n                    cancelEvents.push(maybeEvent);\r\n                }\r\n            });\r\n        }\r\n        if (eventRegistration) {\r\n            var remaining = [];\r\n            for (var i = 0; i < this.eventRegistrations_.length; ++i) {\r\n                var existing = this.eventRegistrations_[i];\r\n                if (!existing.matches(eventRegistration)) {\r\n                    remaining.push(existing);\r\n                }\r\n                else if (eventRegistration.hasAnyCallback()) {\r\n                    // We're removing just this one\r\n                    remaining = remaining.concat(this.eventRegistrations_.slice(i + 1));\r\n                    break;\r\n                }\r\n            }\r\n            this.eventRegistrations_ = remaining;\r\n        }\r\n        else {\r\n            this.eventRegistrations_ = [];\r\n        }\r\n        return cancelEvents;\r\n    };\r\n    /**\r\n     * Applies the given Operation, updates our cache, and returns the appropriate events.\r\n     *\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeServerCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.applyOperation = function (operation, writesCache, completeServerCache) {\r\n        if (operation.type === OperationType.MERGE &&\r\n            operation.source.queryId !== null) {\r\n            util.assert(this.viewCache_.getCompleteServerSnap(), 'We should always have a full cache before handling merges');\r\n            util.assert(this.viewCache_.getCompleteEventSnap(), 'Missing event cache, even though we have a server cache');\r\n        }\r\n        var oldViewCache = this.viewCache_;\r\n        var result = this.processor_.applyOperation(oldViewCache, operation, writesCache, completeServerCache);\r\n        this.processor_.assertIndexed(result.viewCache);\r\n        util.assert(result.viewCache.getServerCache().isFullyInitialized() ||\r\n            !oldViewCache.getServerCache().isFullyInitialized(), 'Once a server snap is complete, it should never go back');\r\n        this.viewCache_ = result.viewCache;\r\n        return this.generateEventsForChanges_(result.changes, result.viewCache.getEventCache().getNode(), null);\r\n    };\r\n    /**\r\n     * @param {!EventRegistration} registration\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.getInitialEvents = function (registration) {\r\n        var eventSnap = this.viewCache_.getEventCache();\r\n        var initialChanges = [];\r\n        if (!eventSnap.getNode().isLeafNode()) {\r\n            var eventNode = eventSnap.getNode();\r\n            eventNode.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                initialChanges.push(Change.childAddedChange(key, childNode));\r\n            });\r\n        }\r\n        if (eventSnap.isFullyInitialized()) {\r\n            initialChanges.push(Change.valueChange(eventSnap.getNode()));\r\n        }\r\n        return this.generateEventsForChanges_(initialChanges, eventSnap.getNode(), registration);\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Node} eventCache\r\n     * @param {EventRegistration=} eventRegistration\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.generateEventsForChanges_ = function (changes, eventCache, eventRegistration) {\r\n        var registrations = eventRegistration\r\n            ? [eventRegistration]\r\n            : this.eventRegistrations_;\r\n        return this.eventGenerator_.generateEventsForChanges(changes, eventCache, registrations);\r\n    };\r\n    return View;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __referenceConstructor$1;\r\n/**\r\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\r\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\r\n * and user writes (set, transaction, update).\r\n *\r\n * It's responsible for:\r\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\r\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\r\n *    applyUserOverwrite, etc.)\r\n */\r\nvar SyncPoint = /** @class */ (function () {\r\n    function SyncPoint() {\r\n        /**\r\n         * The Views being tracked at this location in the tree, stored as a map where the key is a\r\n         * queryId and the value is the View for that query.\r\n         *\r\n         * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\r\n         *\r\n         * @type {!Object.<!string, !View>}\r\n         * @private\r\n         */\r\n        this.views_ = {};\r\n    }\r\n    Object.defineProperty(SyncPoint, \"__referenceConstructor\", {\r\n        get: function () {\r\n            util.assert(__referenceConstructor$1, 'Reference.ts has not been loaded');\r\n            return __referenceConstructor$1;\r\n        },\r\n        set: function (val) {\r\n            util.assert(!__referenceConstructor$1, '__referenceConstructor has already been defined');\r\n            __referenceConstructor$1 = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    SyncPoint.prototype.isEmpty = function () {\r\n        return util.isEmpty(this.views_);\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} optCompleteServerCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    SyncPoint.prototype.applyOperation = function (operation, writesCache, optCompleteServerCache) {\r\n        var queryId = operation.source.queryId;\r\n        if (queryId !== null) {\r\n            var view = util.safeGet(this.views_, queryId);\r\n            util.assert(view != null, 'SyncTree gave us an op for an invalid query.');\r\n            return view.applyOperation(operation, writesCache, optCompleteServerCache);\r\n        }\r\n        else {\r\n            var events_1 = [];\r\n            util.forEach(this.views_, function (key, view) {\r\n                events_1 = events_1.concat(view.applyOperation(operation, writesCache, optCompleteServerCache));\r\n            });\r\n            return events_1;\r\n        }\r\n    };\r\n    /**\r\n     * Add an event callback for the specified query.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {!EventRegistration} eventRegistration\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache Complete server cache, if we have it.\r\n     * @param {boolean} serverCacheComplete\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncPoint.prototype.addEventRegistration = function (query, eventRegistration, writesCache, serverCache, serverCacheComplete) {\r\n        var queryId = query.queryIdentifier();\r\n        var view = util.safeGet(this.views_, queryId);\r\n        if (!view) {\r\n            // TODO: make writesCache take flag for complete server node\r\n            var eventCache = writesCache.calcCompleteEventCache(serverCacheComplete ? serverCache : null);\r\n            var eventCacheComplete = false;\r\n            if (eventCache) {\r\n                eventCacheComplete = true;\r\n            }\r\n            else if (serverCache instanceof ChildrenNode) {\r\n                eventCache = writesCache.calcCompleteEventChildren(serverCache);\r\n                eventCacheComplete = false;\r\n            }\r\n            else {\r\n                eventCache = ChildrenNode.EMPTY_NODE;\r\n                eventCacheComplete = false;\r\n            }\r\n            var viewCache = new ViewCache(new CacheNode(\r\n            /** @type {!Node} */ (eventCache), eventCacheComplete, false), new CacheNode(\r\n            /** @type {!Node} */ (serverCache), serverCacheComplete, false));\r\n            view = new View(query, viewCache);\r\n            this.views_[queryId] = view;\r\n        }\r\n        // This is guaranteed to exist now, we just created anything that was missing\r\n        view.addEventRegistration(eventRegistration);\r\n        return view.getInitialEvents(eventRegistration);\r\n    };\r\n    /**\r\n     * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\r\n     *\r\n     * If query is the default query, we'll check all views for the specified eventRegistration.\r\n     * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\r\n     *\r\n     * @param {!Query} query\r\n     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {{removed:!Array.<!Query>, events:!Array.<!Event>}} removed queries and any cancel events\r\n     */\r\n    SyncPoint.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\r\n        var queryId = query.queryIdentifier();\r\n        var removed = [];\r\n        var cancelEvents = [];\r\n        var hadCompleteView = this.hasCompleteView();\r\n        if (queryId === 'default') {\r\n            // When you do ref.off(...), we search all views for the registration to remove.\r\n            var self_1 = this;\r\n            util.forEach(this.views_, function (viewQueryId, view) {\r\n                cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\r\n                if (view.isEmpty()) {\r\n                    delete self_1.views_[viewQueryId];\r\n                    // We'll deal with complete views later.\r\n                    if (!view\r\n                        .getQuery()\r\n                        .getQueryParams()\r\n                        .loadsAllData()) {\r\n                        removed.push(view.getQuery());\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            // remove the callback from the specific view.\r\n            var view = util.safeGet(this.views_, queryId);\r\n            if (view) {\r\n                cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\r\n                if (view.isEmpty()) {\r\n                    delete this.views_[queryId];\r\n                    // We'll deal with complete views later.\r\n                    if (!view\r\n                        .getQuery()\r\n                        .getQueryParams()\r\n                        .loadsAllData()) {\r\n                        removed.push(view.getQuery());\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (hadCompleteView && !this.hasCompleteView()) {\r\n            // We removed our last complete view.\r\n            removed.push(new SyncPoint.__referenceConstructor(query.repo, query.path));\r\n        }\r\n        return { removed: removed, events: cancelEvents };\r\n    };\r\n    /**\r\n     * @return {!Array.<!View>}\r\n     */\r\n    SyncPoint.prototype.getQueryViews = function () {\r\n        var _this = this;\r\n        var values = Object.keys(this.views_).map(function (key) { return _this.views_[key]; });\r\n        return values.filter(function (view) {\r\n            return !view\r\n                .getQuery()\r\n                .getQueryParams()\r\n                .loadsAllData();\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Path} path The path to the desired complete snapshot\r\n     * @return {?Node} A complete cache, if it exists\r\n     */\r\n    SyncPoint.prototype.getCompleteServerCache = function (path) {\r\n        var serverCache = null;\r\n        util.forEach(this.views_, function (key, view) {\r\n            serverCache = serverCache || view.getCompleteServerCache(path);\r\n        });\r\n        return serverCache;\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @return {?View}\r\n     */\r\n    SyncPoint.prototype.viewForQuery = function (query) {\r\n        var params = query.getQueryParams();\r\n        if (params.loadsAllData()) {\r\n            return this.getCompleteView();\r\n        }\r\n        else {\r\n            var queryId = query.queryIdentifier();\r\n            return util.safeGet(this.views_, queryId);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @return {boolean}\r\n     */\r\n    SyncPoint.prototype.viewExistsForQuery = function (query) {\r\n        return this.viewForQuery(query) != null;\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    SyncPoint.prototype.hasCompleteView = function () {\r\n        return this.getCompleteView() != null;\r\n    };\r\n    /**\r\n     * @return {?View}\r\n     */\r\n    SyncPoint.prototype.getCompleteView = function () {\r\n        var completeView = util.findValue(this.views_, function (view) {\r\n            return view\r\n                .getQuery()\r\n                .getQueryParams()\r\n                .loadsAllData();\r\n        });\r\n        return completeView || null;\r\n    };\r\n    return SyncPoint;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\r\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\r\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\r\n * to reflect the write added.\r\n *\r\n * @constructor\r\n * @param {!ImmutableTree.<!Node>} writeTree\r\n */\r\nvar CompoundWrite = /** @class */ (function () {\r\n    function CompoundWrite(writeTree_) {\r\n        this.writeTree_ = writeTree_;\r\n    }\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!Node} node\r\n     * @return {!CompoundWrite}\r\n     */\r\n    CompoundWrite.prototype.addWrite = function (path, node) {\r\n        if (path.isEmpty()) {\r\n            return new CompoundWrite(new ImmutableTree(node));\r\n        }\r\n        else {\r\n            var rootmost = this.writeTree_.findRootMostValueAndPath(path);\r\n            if (rootmost != null) {\r\n                var rootMostPath = rootmost.path;\r\n                var value = rootmost.value;\r\n                var relativePath = Path.relativePath(rootMostPath, path);\r\n                value = value.updateChild(relativePath, node);\r\n                return new CompoundWrite(this.writeTree_.set(rootMostPath, value));\r\n            }\r\n            else {\r\n                var subtree = new ImmutableTree(node);\r\n                var newWriteTree = this.writeTree_.setTree(path, subtree);\r\n                return new CompoundWrite(newWriteTree);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} updates\r\n     * @return {!CompoundWrite}\r\n     */\r\n    CompoundWrite.prototype.addWrites = function (path, updates) {\r\n        var newWrite = this;\r\n        util.forEach(updates, function (childKey, node) {\r\n            newWrite = newWrite.addWrite(path.child(childKey), node);\r\n        });\r\n        return newWrite;\r\n    };\r\n    /**\r\n     * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\r\n     * location, which must be removed by calling this method with that path.\r\n     *\r\n     * @param {!Path} path The path at which a write and all deeper writes should be removed\r\n     * @return {!CompoundWrite} The new CompoundWrite with the removed path\r\n     */\r\n    CompoundWrite.prototype.removeWrite = function (path) {\r\n        if (path.isEmpty()) {\r\n            return CompoundWrite.Empty;\r\n        }\r\n        else {\r\n            var newWriteTree = this.writeTree_.setTree(path, ImmutableTree.Empty);\r\n            return new CompoundWrite(newWriteTree);\r\n        }\r\n    };\r\n    /**\r\n     * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\r\n     * considered \"complete\".\r\n     *\r\n     * @param {!Path} path The path to check for\r\n     * @return {boolean} Whether there is a complete write at that path\r\n     */\r\n    CompoundWrite.prototype.hasCompleteWrite = function (path) {\r\n        return this.getCompleteNode(path) != null;\r\n    };\r\n    /**\r\n     * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\r\n     * writes from deeper paths, but will return child nodes from a more shallow path.\r\n     *\r\n     * @param {!Path} path The path to get a complete write\r\n     * @return {?Node} The node if complete at that path, or null otherwise.\r\n     */\r\n    CompoundWrite.prototype.getCompleteNode = function (path) {\r\n        var rootmost = this.writeTree_.findRootMostValueAndPath(path);\r\n        if (rootmost != null) {\r\n            return this.writeTree_\r\n                .get(rootmost.path)\r\n                .getChild(Path.relativePath(rootmost.path, path));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Returns all children that are guaranteed to be a complete overwrite.\r\n     *\r\n     * @return {!Array.<NamedNode>} A list of all complete children.\r\n     */\r\n    CompoundWrite.prototype.getCompleteChildren = function () {\r\n        var children = [];\r\n        var node = this.writeTree_.value;\r\n        if (node != null) {\r\n            // If it's a leaf node, it has no children; so nothing to do.\r\n            if (!node.isLeafNode()) {\r\n                node.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n                    children.push(new NamedNode(childName, childNode));\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            this.writeTree_.children.inorderTraversal(function (childName, childTree) {\r\n                if (childTree.value != null) {\r\n                    children.push(new NamedNode(childName, childTree.value));\r\n                }\r\n            });\r\n        }\r\n        return children;\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @return {!CompoundWrite}\r\n     */\r\n    CompoundWrite.prototype.childCompoundWrite = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            var shadowingNode = this.getCompleteNode(path);\r\n            if (shadowingNode != null) {\r\n                return new CompoundWrite(new ImmutableTree(shadowingNode));\r\n            }\r\n            else {\r\n                return new CompoundWrite(this.writeTree_.subtree(path));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\r\n     * @return {boolean} Whether this CompoundWrite is empty\r\n     */\r\n    CompoundWrite.prototype.isEmpty = function () {\r\n        return this.writeTree_.isEmpty();\r\n    };\r\n    /**\r\n     * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\r\n     * node\r\n     * @param {!Node} node The node to apply this CompoundWrite to\r\n     * @return {!Node} The node with all writes applied\r\n     */\r\n    CompoundWrite.prototype.apply = function (node) {\r\n        return CompoundWrite.applySubtreeWrite_(Path.Empty, this.writeTree_, node);\r\n    };\r\n    /**\r\n     * @type {!CompoundWrite}\r\n     */\r\n    CompoundWrite.Empty = new CompoundWrite(new ImmutableTree(null));\r\n    /**\r\n     * @param {!Path} relativePath\r\n     * @param {!ImmutableTree.<!Node>} writeTree\r\n     * @param {!Node} node\r\n     * @return {!Node}\r\n     * @private\r\n     */\r\n    CompoundWrite.applySubtreeWrite_ = function (relativePath, writeTree, node) {\r\n        if (writeTree.value != null) {\r\n            // Since there a write is always a leaf, we're done here\r\n            return node.updateChild(relativePath, writeTree.value);\r\n        }\r\n        else {\r\n            var priorityWrite_1 = null;\r\n            writeTree.children.inorderTraversal(function (childKey, childTree) {\r\n                if (childKey === '.priority') {\r\n                    // Apply priorities at the end so we don't update priorities for either empty nodes or forget\r\n                    // to apply priorities to empty nodes that are later filled\r\n                    util.assert(childTree.value !== null, 'Priority writes must always be leaf nodes');\r\n                    priorityWrite_1 = childTree.value;\r\n                }\r\n                else {\r\n                    node = CompoundWrite.applySubtreeWrite_(relativePath.child(childKey), childTree, node);\r\n                }\r\n            });\r\n            // If there was a priority write, we only apply it if the node is not empty\r\n            if (!node.getChild(relativePath).isEmpty() && priorityWrite_1 !== null) {\r\n                node = node.updateChild(relativePath.child('.priority'), priorityWrite_1);\r\n            }\r\n            return node;\r\n        }\r\n    };\r\n    return CompoundWrite;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them\r\n * with underlying server data (to create \"event cache\" data).  Pending writes are added with addOverwrite()\r\n * and addMerge(), and removed with removeWrite().\r\n *\r\n * @constructor\r\n */\r\nvar WriteTree = /** @class */ (function () {\r\n    function WriteTree() {\r\n        /**\r\n         * A tree tracking the result of applying all visible writes.  This does not include transactions with\r\n         * applyLocally=false or writes that are completely shadowed by other writes.\r\n         *\r\n         * @type {!CompoundWrite}\r\n         * @private\r\n         */\r\n        this.visibleWrites_ = CompoundWrite.Empty;\r\n        /**\r\n         * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary\r\n         * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also\r\n         * used by transactions).\r\n         *\r\n         * @type {!Array.<!WriteRecord>}\r\n         * @private\r\n         */\r\n        this.allWrites_ = [];\r\n        this.lastWriteId_ = -1;\r\n    }\r\n    /**\r\n     * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {!WriteTreeRef}\r\n     */\r\n    WriteTree.prototype.childWrites = function (path) {\r\n        return new WriteTreeRef(path, this);\r\n    };\r\n    /**\r\n     * Record a new overwrite from user code.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} snap\r\n     * @param {!number} writeId\r\n     * @param {boolean=} visible This is set to false by some transactions. It should be excluded from event caches\r\n     */\r\n    WriteTree.prototype.addOverwrite = function (path, snap, writeId, visible) {\r\n        util.assert(writeId > this.lastWriteId_, 'Stacking an older write on top of newer ones');\r\n        if (visible === undefined) {\r\n            visible = true;\r\n        }\r\n        this.allWrites_.push({\r\n            path: path,\r\n            snap: snap,\r\n            writeId: writeId,\r\n            visible: visible\r\n        });\r\n        if (visible) {\r\n            this.visibleWrites_ = this.visibleWrites_.addWrite(path, snap);\r\n        }\r\n        this.lastWriteId_ = writeId;\r\n    };\r\n    /**\r\n     * Record a new merge from user code.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @param {!number} writeId\r\n     */\r\n    WriteTree.prototype.addMerge = function (path, changedChildren, writeId) {\r\n        util.assert(writeId > this.lastWriteId_, 'Stacking an older merge on top of newer ones');\r\n        this.allWrites_.push({\r\n            path: path,\r\n            children: changedChildren,\r\n            writeId: writeId,\r\n            visible: true\r\n        });\r\n        this.visibleWrites_ = this.visibleWrites_.addWrites(path, changedChildren);\r\n        this.lastWriteId_ = writeId;\r\n    };\r\n    /**\r\n     * @param {!number} writeId\r\n     * @return {?WriteRecord}\r\n     */\r\n    WriteTree.prototype.getWrite = function (writeId) {\r\n        for (var i = 0; i < this.allWrites_.length; i++) {\r\n            var record = this.allWrites_[i];\r\n            if (record.writeId === writeId) {\r\n                return record;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\r\n     * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\r\n     *\r\n     * @param {!number} writeId\r\n     * @return {boolean} true if the write may have been visible (meaning we'll need to reevaluate / raise\r\n     * events as a result).\r\n     */\r\n    WriteTree.prototype.removeWrite = function (writeId) {\r\n        // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\r\n        // out of order.\r\n        //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\r\n        //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\r\n        var _this = this;\r\n        var idx = this.allWrites_.findIndex(function (s) {\r\n            return s.writeId === writeId;\r\n        });\r\n        util.assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\r\n        var writeToRemove = this.allWrites_[idx];\r\n        this.allWrites_.splice(idx, 1);\r\n        var removedWriteWasVisible = writeToRemove.visible;\r\n        var removedWriteOverlapsWithOtherWrites = false;\r\n        var i = this.allWrites_.length - 1;\r\n        while (removedWriteWasVisible && i >= 0) {\r\n            var currentWrite = this.allWrites_[i];\r\n            if (currentWrite.visible) {\r\n                if (i >= idx &&\r\n                    this.recordContainsPath_(currentWrite, writeToRemove.path)) {\r\n                    // The removed write was completely shadowed by a subsequent write.\r\n                    removedWriteWasVisible = false;\r\n                }\r\n                else if (writeToRemove.path.contains(currentWrite.path)) {\r\n                    // Either we're covering some writes or they're covering part of us (depending on which came first).\r\n                    removedWriteOverlapsWithOtherWrites = true;\r\n                }\r\n            }\r\n            i--;\r\n        }\r\n        if (!removedWriteWasVisible) {\r\n            return false;\r\n        }\r\n        else if (removedWriteOverlapsWithOtherWrites) {\r\n            // There's some shadowing going on. Just rebuild the visible writes from scratch.\r\n            this.resetTree_();\r\n            return true;\r\n        }\r\n        else {\r\n            // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\r\n            if (writeToRemove.snap) {\r\n                this.visibleWrites_ = this.visibleWrites_.removeWrite(writeToRemove.path);\r\n            }\r\n            else {\r\n                var children = writeToRemove.children;\r\n                util.forEach(children, function (childName) {\r\n                    _this.visibleWrites_ = _this.visibleWrites_.removeWrite(writeToRemove.path.child(childName));\r\n                });\r\n            }\r\n            return true;\r\n        }\r\n    };\r\n    /**\r\n     * Return a complete snapshot for the given path if there's visible write data at that path, else null.\r\n     * No server data is considered.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.getCompleteWriteData = function (path) {\r\n        return this.visibleWrites_.getCompleteNode(path);\r\n    };\r\n    /**\r\n     * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\r\n     * writes), attempt to calculate a complete snapshot for the given path\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?Node} completeServerCache\r\n     * @param {Array.<number>=} writeIdsToExclude An optional set to be excluded\r\n     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcCompleteEventCache = function (treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n        if (!writeIdsToExclude && !includeHiddenWrites) {\r\n            var shadowingNode = this.visibleWrites_.getCompleteNode(treePath);\r\n            if (shadowingNode != null) {\r\n                return shadowingNode;\r\n            }\r\n            else {\r\n                var subMerge = this.visibleWrites_.childCompoundWrite(treePath);\r\n                if (subMerge.isEmpty()) {\r\n                    return completeServerCache;\r\n                }\r\n                else if (completeServerCache == null &&\r\n                    !subMerge.hasCompleteWrite(Path.Empty)) {\r\n                    // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\r\n                    return null;\r\n                }\r\n                else {\r\n                    var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                    return subMerge.apply(layeredCache);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n            if (!includeHiddenWrites && merge.isEmpty()) {\r\n                return completeServerCache;\r\n            }\r\n            else {\r\n                // If the server cache is null, and we don't have a complete cache, we need to return null\r\n                if (!includeHiddenWrites &&\r\n                    completeServerCache == null &&\r\n                    !merge.hasCompleteWrite(Path.Empty)) {\r\n                    return null;\r\n                }\r\n                else {\r\n                    var filter = function (write) {\r\n                        return ((write.visible || includeHiddenWrites) &&\r\n                            (!writeIdsToExclude ||\r\n                                !~writeIdsToExclude.indexOf(write.writeId)) &&\r\n                            (write.path.contains(treePath) || treePath.contains(write.path)));\r\n                    };\r\n                    var mergeAtPath = WriteTree.layerTree_(this.allWrites_, filter, treePath);\r\n                    var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                    return mergeAtPath.apply(layeredCache);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\r\n     * Used when creating new views, to pre-fill their complete event children snapshot.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?ChildrenNode} completeServerChildren\r\n     * @return {!ChildrenNode}\r\n     */\r\n    WriteTree.prototype.calcCompleteEventChildren = function (treePath, completeServerChildren) {\r\n        var completeChildren = ChildrenNode.EMPTY_NODE;\r\n        var topLevelSet = this.visibleWrites_.getCompleteNode(treePath);\r\n        if (topLevelSet) {\r\n            if (!topLevelSet.isLeafNode()) {\r\n                // we're shadowing everything. Return the children.\r\n                topLevelSet.forEachChild(PRIORITY_INDEX, function (childName, childSnap) {\r\n                    completeChildren = completeChildren.updateImmediateChild(childName, childSnap);\r\n                });\r\n            }\r\n            return completeChildren;\r\n        }\r\n        else if (completeServerChildren) {\r\n            // Layer any children we have on top of this\r\n            // We know we don't have a top-level set, so just enumerate existing children\r\n            var merge_1 = this.visibleWrites_.childCompoundWrite(treePath);\r\n            completeServerChildren.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n                var node = merge_1\r\n                    .childCompoundWrite(new Path(childName))\r\n                    .apply(childNode);\r\n                completeChildren = completeChildren.updateImmediateChild(childName, node);\r\n            });\r\n            // Add any complete children we have from the set\r\n            merge_1.getCompleteChildren().forEach(function (namedNode) {\r\n                completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n            });\r\n            return completeChildren;\r\n        }\r\n        else {\r\n            // We don't have anything to layer on top of. Layer on any children we have\r\n            // Note that we can return an empty snap if we have a defined delete\r\n            var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n            merge.getCompleteChildren().forEach(function (namedNode) {\r\n                completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n            });\r\n            return completeChildren;\r\n        }\r\n    };\r\n    /**\r\n     * Given that the underlying server data has updated, determine what, if anything, needs to be\r\n     * applied to the event cache.\r\n     *\r\n     * Possibilities:\r\n     *\r\n     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n     *\r\n     * 2. Some write is completely shadowing. No events to be raised\r\n     *\r\n     * 3. Is partially shadowed. Events\r\n     *\r\n     * Either existingEventSnap or existingServerSnap must exist\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {!Path} childPath\r\n     * @param {?Node} existingEventSnap\r\n     * @param {?Node} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcEventCacheAfterServerOverwrite = function (treePath, childPath, existingEventSnap, existingServerSnap) {\r\n        util.assert(existingEventSnap || existingServerSnap, 'Either existingEventSnap or existingServerSnap must exist');\r\n        var path = treePath.child(childPath);\r\n        if (this.visibleWrites_.hasCompleteWrite(path)) {\r\n            // At this point we can probably guarantee that we're in case 2, meaning no events\r\n            // May need to check visibility while doing the findRootMostValueAndPath call\r\n            return null;\r\n        }\r\n        else {\r\n            // No complete shadowing. We're either partially shadowing or not shadowing at all.\r\n            var childMerge = this.visibleWrites_.childCompoundWrite(path);\r\n            if (childMerge.isEmpty()) {\r\n                // We're not shadowing at all. Case 1\r\n                return existingServerSnap.getChild(childPath);\r\n            }\r\n            else {\r\n                // This could be more efficient if the serverNode + updates doesn't change the eventSnap\r\n                // However this is tricky to find out, since user updates don't necessary change the server\r\n                // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\r\n                // adds nodes, but doesn't change any existing writes. It is therefore not enough to\r\n                // only check if the updates change the serverNode.\r\n                // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\r\n                return childMerge.apply(existingServerSnap.getChild(childPath));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n     * complete child for this ChildKey.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {!string} childKey\r\n     * @param {!CacheNode} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcCompleteChild = function (treePath, childKey, existingServerSnap) {\r\n        var path = treePath.child(childKey);\r\n        var shadowingNode = this.visibleWrites_.getCompleteNode(path);\r\n        if (shadowingNode != null) {\r\n            return shadowingNode;\r\n        }\r\n        else {\r\n            if (existingServerSnap.isCompleteForChild(childKey)) {\r\n                var childMerge = this.visibleWrites_.childCompoundWrite(path);\r\n                return childMerge.apply(existingServerSnap.getNode().getImmediateChild(childKey));\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n     * a higher path, this will return the child of that write relative to the write and this path.\r\n     * Returns null if there is no write at this path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.shadowingWrite = function (path) {\r\n        return this.visibleWrites_.getCompleteNode(path);\r\n    };\r\n    /**\r\n     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n     * the window, but may now be in the window.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?Node} completeServerData\r\n     * @param {!NamedNode} startPost\r\n     * @param {!number} count\r\n     * @param {boolean} reverse\r\n     * @param {!Index} index\r\n     * @return {!Array.<!NamedNode>}\r\n     */\r\n    WriteTree.prototype.calcIndexedSlice = function (treePath, completeServerData, startPost, count, reverse, index) {\r\n        var toIterate;\r\n        var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n        var shadowingNode = merge.getCompleteNode(Path.Empty);\r\n        if (shadowingNode != null) {\r\n            toIterate = shadowingNode;\r\n        }\r\n        else if (completeServerData != null) {\r\n            toIterate = merge.apply(completeServerData);\r\n        }\r\n        else {\r\n            // no children to iterate on\r\n            return [];\r\n        }\r\n        toIterate = toIterate.withIndex(index);\r\n        if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\r\n            var nodes = [];\r\n            var cmp = index.getCompare();\r\n            var iter = reverse\r\n                ? toIterate.getReverseIteratorFrom(startPost, index)\r\n                : toIterate.getIteratorFrom(startPost, index);\r\n            var next = iter.getNext();\r\n            while (next && nodes.length < count) {\r\n                if (cmp(next, startPost) !== 0) {\r\n                    nodes.push(next);\r\n                }\r\n                next = iter.getNext();\r\n            }\r\n            return nodes;\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * @param {!WriteRecord} writeRecord\r\n     * @param {!Path} path\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    WriteTree.prototype.recordContainsPath_ = function (writeRecord, path) {\r\n        if (writeRecord.snap) {\r\n            return writeRecord.path.contains(path);\r\n        }\r\n        else {\r\n            // findKey can return undefined, so use !! to coerce to boolean\r\n            return !!util.findKey(writeRecord.children, function (childSnap, childName) {\r\n                return writeRecord.path.child(childName).contains(path);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\r\n     * @private\r\n     */\r\n    WriteTree.prototype.resetTree_ = function () {\r\n        this.visibleWrites_ = WriteTree.layerTree_(this.allWrites_, WriteTree.DefaultFilter_, Path.Empty);\r\n        if (this.allWrites_.length > 0) {\r\n            this.lastWriteId_ = this.allWrites_[this.allWrites_.length - 1].writeId;\r\n        }\r\n        else {\r\n            this.lastWriteId_ = -1;\r\n        }\r\n    };\r\n    /**\r\n     * The default filter used when constructing the tree. Keep everything that's visible.\r\n     *\r\n     * @param {!WriteRecord} write\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    WriteTree.DefaultFilter_ = function (write) {\r\n        return write.visible;\r\n    };\r\n    /**\r\n     * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\r\n     * event data at that path.\r\n     *\r\n     * @param {!Array.<!WriteRecord>} writes\r\n     * @param {!function(!WriteRecord):boolean} filter\r\n     * @param {!Path} treeRoot\r\n     * @return {!CompoundWrite}\r\n     * @private\r\n     */\r\n    WriteTree.layerTree_ = function (writes, filter, treeRoot) {\r\n        var compoundWrite = CompoundWrite.Empty;\r\n        for (var i = 0; i < writes.length; ++i) {\r\n            var write = writes[i];\r\n            // Theory, a later set will either:\r\n            // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\r\n            // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\r\n            if (filter(write)) {\r\n                var writePath = write.path;\r\n                var relativePath = void 0;\r\n                if (write.snap) {\r\n                    if (treeRoot.contains(writePath)) {\r\n                        relativePath = Path.relativePath(treeRoot, writePath);\r\n                        compoundWrite = compoundWrite.addWrite(relativePath, write.snap);\r\n                    }\r\n                    else if (writePath.contains(treeRoot)) {\r\n                        relativePath = Path.relativePath(writePath, treeRoot);\r\n                        compoundWrite = compoundWrite.addWrite(Path.Empty, write.snap.getChild(relativePath));\r\n                    }\r\n                    else {\r\n                        // There is no overlap between root path and write path, ignore write\r\n                    }\r\n                }\r\n                else if (write.children) {\r\n                    if (treeRoot.contains(writePath)) {\r\n                        relativePath = Path.relativePath(treeRoot, writePath);\r\n                        compoundWrite = compoundWrite.addWrites(relativePath, write.children);\r\n                    }\r\n                    else if (writePath.contains(treeRoot)) {\r\n                        relativePath = Path.relativePath(writePath, treeRoot);\r\n                        if (relativePath.isEmpty()) {\r\n                            compoundWrite = compoundWrite.addWrites(Path.Empty, write.children);\r\n                        }\r\n                        else {\r\n                            var child = util.safeGet(write.children, relativePath.getFront());\r\n                            if (child) {\r\n                                // There exists a child in this node that matches the root path\r\n                                var deepNode = child.getChild(relativePath.popFront());\r\n                                compoundWrite = compoundWrite.addWrite(Path.Empty, deepNode);\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        // There is no overlap between root path and write path, ignore write\r\n                    }\r\n                }\r\n                else {\r\n                    throw util.assertionError('WriteRecord should have .snap or .children');\r\n                }\r\n            }\r\n        }\r\n        return compoundWrite;\r\n    };\r\n    return WriteTree;\r\n}());\r\n/**\r\n * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods\r\n * just proxy to the underlying WriteTree.\r\n *\r\n * @constructor\r\n */\r\nvar WriteTreeRef = /** @class */ (function () {\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!WriteTree} writeTree\r\n     */\r\n    function WriteTreeRef(path, writeTree) {\r\n        this.treePath_ = path;\r\n        this.writeTree_ = writeTree;\r\n    }\r\n    /**\r\n     * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\r\n     * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\r\n     * can lead to a more expensive calculation.\r\n     *\r\n     * @param {?Node} completeServerCache\r\n     * @param {Array.<number>=} writeIdsToExclude Optional writes to exclude.\r\n     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteEventCache = function (completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n        return this.writeTree_.calcCompleteEventCache(this.treePath_, completeServerCache, writeIdsToExclude, includeHiddenWrites);\r\n    };\r\n    /**\r\n     * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\r\n     * mix of the given server data and write data.\r\n     *\r\n     * @param {?ChildrenNode} completeServerChildren\r\n     * @return {!ChildrenNode}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteEventChildren = function (completeServerChildren) {\r\n        return this.writeTree_.calcCompleteEventChildren(this.treePath_, completeServerChildren);\r\n    };\r\n    /**\r\n     * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\r\n     * if anything, needs to be applied to the event cache.\r\n     *\r\n     * Possibilities:\r\n     *\r\n     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n     *\r\n     * 2. Some write is completely shadowing. No events to be raised\r\n     *\r\n     * 3. Is partially shadowed. Events should be raised\r\n     *\r\n     * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\r\n     *\r\n     * @param {!Path} path\r\n     * @param {?Node} existingEventSnap\r\n     * @param {?Node} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcEventCacheAfterServerOverwrite = function (path, existingEventSnap, existingServerSnap) {\r\n        return this.writeTree_.calcEventCacheAfterServerOverwrite(this.treePath_, path, existingEventSnap, existingServerSnap);\r\n    };\r\n    /**\r\n     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n     * a higher path, this will return the child of that write relative to the write and this path.\r\n     * Returns null if there is no write at this path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.shadowingWrite = function (path) {\r\n        return this.writeTree_.shadowingWrite(this.treePath_.child(path));\r\n    };\r\n    /**\r\n     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n     * the window, but may now be in the window\r\n     *\r\n     * @param {?Node} completeServerData\r\n     * @param {!NamedNode} startPost\r\n     * @param {!number} count\r\n     * @param {boolean} reverse\r\n     * @param {!Index} index\r\n     * @return {!Array.<!NamedNode>}\r\n     */\r\n    WriteTreeRef.prototype.calcIndexedSlice = function (completeServerData, startPost, count, reverse, index) {\r\n        return this.writeTree_.calcIndexedSlice(this.treePath_, completeServerData, startPost, count, reverse, index);\r\n    };\r\n    /**\r\n     * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n     * complete child for this ChildKey.\r\n     *\r\n     * @param {!string} childKey\r\n     * @param {!CacheNode} existingServerCache\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteChild = function (childKey, existingServerCache) {\r\n        return this.writeTree_.calcCompleteChild(this.treePath_, childKey, existingServerCache);\r\n    };\r\n    /**\r\n     * Return a WriteTreeRef for a child.\r\n     *\r\n     * @param {string} childName\r\n     * @return {!WriteTreeRef}\r\n     */\r\n    WriteTreeRef.prototype.child = function (childName) {\r\n        return new WriteTreeRef(this.treePath_.child(childName), this.writeTree_);\r\n    };\r\n    return WriteTreeRef;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * SyncTree is the central class for managing event callback registration, data caching, views\r\n * (query processing), and event generation.  There are typically two SyncTree instances for\r\n * each Repo, one for the normal Firebase data, and one for the .info data.\r\n *\r\n * It has a number of responsibilities, including:\r\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\r\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\r\n *    (applyUserOverwrite(), applyUserMerge()).\r\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\r\n *    applyServerMerge()).\r\n *  - Generating user-facing events for server and user changes (all of the apply* methods\r\n *    return the set of events that need to be raised as a result).\r\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\r\n *    to the correct set of paths and queries to satisfy the current set of user event\r\n *    callbacks (listens are started/stopped using the provided listenProvider).\r\n *\r\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\r\n * events are returned to the caller rather than raised synchronously.\r\n *\r\n * @constructor\r\n */\r\nvar SyncTree = /** @class */ (function () {\r\n    /**\r\n     * @param {!ListenProvider} listenProvider_ Used by SyncTree to start / stop listening\r\n     *   to server data.\r\n     */\r\n    function SyncTree(listenProvider_) {\r\n        this.listenProvider_ = listenProvider_;\r\n        /**\r\n         * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\r\n         * @type {!ImmutableTree.<!SyncPoint>}\r\n         * @private\r\n         */\r\n        this.syncPointTree_ = ImmutableTree.Empty;\r\n        /**\r\n         * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\r\n         * @type {!WriteTree}\r\n         * @private\r\n         */\r\n        this.pendingWriteTree_ = new WriteTree();\r\n        this.tagToQueryMap_ = {};\r\n        this.queryToTagMap_ = {};\r\n    }\r\n    /**\r\n     * Apply the data changes for a user-generated set() or transaction() call.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} newData\r\n     * @param {number} writeId\r\n     * @param {boolean=} visible\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyUserOverwrite = function (path, newData, writeId, visible) {\r\n        // Record pending write.\r\n        this.pendingWriteTree_.addOverwrite(path, newData, writeId, visible);\r\n        if (!visible) {\r\n            return [];\r\n        }\r\n        else {\r\n            return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.User, path, newData));\r\n        }\r\n    };\r\n    /**\r\n     * Apply the data from a user-generated update() call\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @param {!number} writeId\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyUserMerge = function (path, changedChildren, writeId) {\r\n        // Record pending merge.\r\n        this.pendingWriteTree_.addMerge(path, changedChildren, writeId);\r\n        var changeTree = ImmutableTree.fromObject(changedChildren);\r\n        return this.applyOperationToSyncPoints_(new Merge(OperationSource.User, path, changeTree));\r\n    };\r\n    /**\r\n     * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\r\n     *\r\n     * @param {!number} writeId\r\n     * @param {boolean=} revert True if the given write failed and needs to be reverted\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.ackUserWrite = function (writeId, revert) {\r\n        if (revert === void 0) { revert = false; }\r\n        var write = this.pendingWriteTree_.getWrite(writeId);\r\n        var needToReevaluate = this.pendingWriteTree_.removeWrite(writeId);\r\n        if (!needToReevaluate) {\r\n            return [];\r\n        }\r\n        else {\r\n            var affectedTree_1 = ImmutableTree.Empty;\r\n            if (write.snap != null) {\r\n                // overwrite\r\n                affectedTree_1 = affectedTree_1.set(Path.Empty, true);\r\n            }\r\n            else {\r\n                util.forEach(write.children, function (pathString, node) {\r\n                    affectedTree_1 = affectedTree_1.set(new Path(pathString), node);\r\n                });\r\n            }\r\n            return this.applyOperationToSyncPoints_(new AckUserWrite(write.path, affectedTree_1, revert));\r\n        }\r\n    };\r\n    /**\r\n     * Apply new server data for the specified path..\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} newData\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyServerOverwrite = function (path, newData) {\r\n        return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.Server, path, newData));\r\n    };\r\n    /**\r\n     * Apply new server data to be merged in at the specified path.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyServerMerge = function (path, changedChildren) {\r\n        var changeTree = ImmutableTree.fromObject(changedChildren);\r\n        return this.applyOperationToSyncPoints_(new Merge(OperationSource.Server, path, changeTree));\r\n    };\r\n    /**\r\n     * Apply a listen complete for a query\r\n     *\r\n     * @param {!Path} path\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyListenComplete = function (path) {\r\n        return this.applyOperationToSyncPoints_(new ListenComplete(OperationSource.Server, path));\r\n    };\r\n    /**\r\n     * Apply new server data for the specified tagged query.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} snap\r\n     * @param {!number} tag\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedQueryOverwrite = function (path, snap, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey != null) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var op = new Overwrite(OperationSource.forServerTaggedQuery(queryId), relativePath, snap);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // Query must have been removed already\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Apply server data to be merged in for the specified tagged query.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @param {!number} tag\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedQueryMerge = function (path, changedChildren, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var changeTree = ImmutableTree.fromObject(changedChildren);\r\n            var op = new Merge(OperationSource.forServerTaggedQuery(queryId), relativePath, changeTree);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // We've already removed the query. No big deal, ignore the update\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Apply a listen complete for a tagged query\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!number} tag\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedListenComplete = function (path, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var op = new ListenComplete(OperationSource.forServerTaggedQuery(queryId), relativePath);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // We've already removed the query. No big deal, ignore the update\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Add an event callback for the specified query.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {!EventRegistration} eventRegistration\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.addEventRegistration = function (query, eventRegistration) {\r\n        var path = query.path;\r\n        var serverCache = null;\r\n        var foundAncestorDefaultView = false;\r\n        // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\r\n        // Consider optimizing this once there's a better understanding of what actual behavior will be.\r\n        this.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\r\n            var relativePath = Path.relativePath(pathToSyncPoint, path);\r\n            serverCache = serverCache || sp.getCompleteServerCache(relativePath);\r\n            foundAncestorDefaultView =\r\n                foundAncestorDefaultView || sp.hasCompleteView();\r\n        });\r\n        var syncPoint = this.syncPointTree_.get(path);\r\n        if (!syncPoint) {\r\n            syncPoint = new SyncPoint();\r\n            this.syncPointTree_ = this.syncPointTree_.set(path, syncPoint);\r\n        }\r\n        else {\r\n            foundAncestorDefaultView =\r\n                foundAncestorDefaultView || syncPoint.hasCompleteView();\r\n            serverCache = serverCache || syncPoint.getCompleteServerCache(Path.Empty);\r\n        }\r\n        var serverCacheComplete;\r\n        if (serverCache != null) {\r\n            serverCacheComplete = true;\r\n        }\r\n        else {\r\n            serverCacheComplete = false;\r\n            serverCache = ChildrenNode.EMPTY_NODE;\r\n            var subtree = this.syncPointTree_.subtree(path);\r\n            subtree.foreachChild(function (childName, childSyncPoint) {\r\n                var completeCache = childSyncPoint.getCompleteServerCache(Path.Empty);\r\n                if (completeCache) {\r\n                    serverCache = serverCache.updateImmediateChild(childName, completeCache);\r\n                }\r\n            });\r\n        }\r\n        var viewAlreadyExists = syncPoint.viewExistsForQuery(query);\r\n        if (!viewAlreadyExists && !query.getQueryParams().loadsAllData()) {\r\n            // We need to track a tag for this query\r\n            var queryKey = SyncTree.makeQueryKey_(query);\r\n            util.assert(!(queryKey in this.queryToTagMap_), 'View does not exist, but we have a tag');\r\n            var tag = SyncTree.getNextQueryTag_();\r\n            this.queryToTagMap_[queryKey] = tag;\r\n            // Coerce to string to avoid sparse arrays.\r\n            this.tagToQueryMap_['_' + tag] = queryKey;\r\n        }\r\n        var writesCache = this.pendingWriteTree_.childWrites(path);\r\n        var events = syncPoint.addEventRegistration(query, eventRegistration, writesCache, serverCache, serverCacheComplete);\r\n        if (!viewAlreadyExists && !foundAncestorDefaultView) {\r\n            var view /** @type !View */ = syncPoint.viewForQuery(query);\r\n            events = events.concat(this.setupListener_(query, view));\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     * Remove event callback(s).\r\n     *\r\n     * If query is the default query, we'll check all queries for the specified eventRegistration.\r\n     * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {?EventRegistration} eventRegistration If null, all callbacks are removed.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {!Array.<!Event>} Cancel events, if cancelError was provided.\r\n     */\r\n    SyncTree.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\r\n        var _this = this;\r\n        // Find the syncPoint first. Then deal with whether or not it has matching listeners\r\n        var path = query.path;\r\n        var maybeSyncPoint = this.syncPointTree_.get(path);\r\n        var cancelEvents = [];\r\n        // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\r\n        // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\r\n        // not loadsAllData().\r\n        if (maybeSyncPoint &&\r\n            (query.queryIdentifier() === 'default' ||\r\n                maybeSyncPoint.viewExistsForQuery(query))) {\r\n            /**\r\n             * @type {{removed: !Array.<!Query>, events: !Array.<!Event>}}\r\n             */\r\n            var removedAndEvents = maybeSyncPoint.removeEventRegistration(query, eventRegistration, cancelError);\r\n            if (maybeSyncPoint.isEmpty()) {\r\n                this.syncPointTree_ = this.syncPointTree_.remove(path);\r\n            }\r\n            var removed = removedAndEvents.removed;\r\n            cancelEvents = removedAndEvents.events;\r\n            // We may have just removed one of many listeners and can short-circuit this whole process\r\n            // We may also not have removed a default listener, in which case all of the descendant listeners should already be\r\n            // properly set up.\r\n            //\r\n            // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\r\n            // queryId === 'default'\r\n            var removingDefault = -1 !==\r\n                removed.findIndex(function (query) {\r\n                    return query.getQueryParams().loadsAllData();\r\n                });\r\n            var covered = this.syncPointTree_.findOnPath(path, function (relativePath, parentSyncPoint) {\r\n                return parentSyncPoint.hasCompleteView();\r\n            });\r\n            if (removingDefault && !covered) {\r\n                var subtree = this.syncPointTree_.subtree(path);\r\n                // There are potentially child listeners. Determine what if any listens we need to send before executing the\r\n                // removal\r\n                if (!subtree.isEmpty()) {\r\n                    // We need to fold over our subtree and collect the listeners to send\r\n                    var newViews = this.collectDistinctViewsForSubTree_(subtree);\r\n                    // Ok, we've collected all the listens we need. Set them up.\r\n                    for (var i = 0; i < newViews.length; ++i) {\r\n                        var view = newViews[i], newQuery = view.getQuery();\r\n                        var listener = this.createListenerForView_(view);\r\n                        this.listenProvider_.startListening(SyncTree.queryForListening_(newQuery), this.tagForQuery_(newQuery), listener.hashFn, listener.onComplete);\r\n                    }\r\n                }\r\n                else {\r\n                    // There's nothing below us, so nothing we need to start listening on\r\n                }\r\n            }\r\n            // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\r\n            // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\r\n            // Also, note that if we have a cancelError, it's already been removed at the provider level.\r\n            if (!covered && removed.length > 0 && !cancelError) {\r\n                // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\r\n                // default. Otherwise, we need to iterate through and cancel each individual query\r\n                if (removingDefault) {\r\n                    // We don't tag default listeners\r\n                    var defaultTag = null;\r\n                    this.listenProvider_.stopListening(SyncTree.queryForListening_(query), defaultTag);\r\n                }\r\n                else {\r\n                    removed.forEach(function (queryToRemove) {\r\n                        var tagToRemove = _this.queryToTagMap_[SyncTree.makeQueryKey_(queryToRemove)];\r\n                        _this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToRemove), tagToRemove);\r\n                    });\r\n                }\r\n            }\r\n            // Now, clear all of the tags we're tracking for the removed listens\r\n            this.removeTags_(removed);\r\n        }\r\n        else {\r\n            // No-op, this listener must've been already removed\r\n        }\r\n        return cancelEvents;\r\n    };\r\n    /**\r\n     * Returns a complete cache, if we have one, of the data at a particular path. The location must have a listener above\r\n     * it, but as this is only used by transaction code, that should always be the case anyways.\r\n     *\r\n     * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\r\n     * @param {!Path} path The path to the data we want\r\n     * @param {Array.<number>=} writeIdsToExclude A specific set to be excluded\r\n     * @return {?Node}\r\n     */\r\n    SyncTree.prototype.calcCompleteEventCache = function (path, writeIdsToExclude) {\r\n        var includeHiddenSets = true;\r\n        var writeTree = this.pendingWriteTree_;\r\n        var serverCache = this.syncPointTree_.findOnPath(path, function (pathSoFar, syncPoint) {\r\n            var relativePath = Path.relativePath(pathSoFar, path);\r\n            var serverCache = syncPoint.getCompleteServerCache(relativePath);\r\n            if (serverCache) {\r\n                return serverCache;\r\n            }\r\n        });\r\n        return writeTree.calcCompleteEventCache(path, serverCache, writeIdsToExclude, includeHiddenSets);\r\n    };\r\n    /**\r\n     * This collapses multiple unfiltered views into a single view, since we only need a single\r\n     * listener for them.\r\n     *\r\n     * @param {!ImmutableTree.<!SyncPoint>} subtree\r\n     * @return {!Array.<!View>}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.collectDistinctViewsForSubTree_ = function (subtree) {\r\n        return subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n            if (maybeChildSyncPoint && maybeChildSyncPoint.hasCompleteView()) {\r\n                var completeView = maybeChildSyncPoint.getCompleteView();\r\n                return [completeView];\r\n            }\r\n            else {\r\n                // No complete view here, flatten any deeper listens into an array\r\n                var views_1 = [];\r\n                if (maybeChildSyncPoint) {\r\n                    views_1 = maybeChildSyncPoint.getQueryViews();\r\n                }\r\n                util.forEach(childMap, function (key, childViews) {\r\n                    views_1 = views_1.concat(childViews);\r\n                });\r\n                return views_1;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Array.<!Query>} queries\r\n     * @private\r\n     */\r\n    SyncTree.prototype.removeTags_ = function (queries) {\r\n        for (var j = 0; j < queries.length; ++j) {\r\n            var removedQuery = queries[j];\r\n            if (!removedQuery.getQueryParams().loadsAllData()) {\r\n                // We should have a tag for this\r\n                var removedQueryKey = SyncTree.makeQueryKey_(removedQuery);\r\n                var removedQueryTag = this.queryToTagMap_[removedQueryKey];\r\n                delete this.queryToTagMap_[removedQueryKey];\r\n                delete this.tagToQueryMap_['_' + removedQueryTag];\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Normalizes a query to a query we send the server for listening\r\n     * @param {!Query} query\r\n     * @return {!Query} The normalized query\r\n     * @private\r\n     */\r\n    SyncTree.queryForListening_ = function (query) {\r\n        if (query.getQueryParams().loadsAllData() &&\r\n            !query.getQueryParams().isDefault()) {\r\n            // We treat queries that load all data as default queries\r\n            // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\r\n            // from Query\r\n            return /** @type {!Query} */ query.getRef();\r\n        }\r\n        else {\r\n            return query;\r\n        }\r\n    };\r\n    /**\r\n     * For a given new listen, manage the de-duplication of outstanding subscriptions.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {!View} view\r\n     * @return {!Array.<!Event>} This method can return events to support synchronous data sources\r\n     * @private\r\n     */\r\n    SyncTree.prototype.setupListener_ = function (query, view) {\r\n        var path = query.path;\r\n        var tag = this.tagForQuery_(query);\r\n        var listener = this.createListenerForView_(view);\r\n        var events = this.listenProvider_.startListening(SyncTree.queryForListening_(query), tag, listener.hashFn, listener.onComplete);\r\n        var subtree = this.syncPointTree_.subtree(path);\r\n        // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\r\n        // may need to shadow other listens as well.\r\n        if (tag) {\r\n            util.assert(!subtree.value.hasCompleteView(), \"If we're adding a query, it shouldn't be shadowed\");\r\n        }\r\n        else {\r\n            // Shadow everything at or below this location, this is a default listener.\r\n            var queriesToStop = subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n                if (!relativePath.isEmpty() &&\r\n                    maybeChildSyncPoint &&\r\n                    maybeChildSyncPoint.hasCompleteView()) {\r\n                    return [maybeChildSyncPoint.getCompleteView().getQuery()];\r\n                }\r\n                else {\r\n                    // No default listener here, flatten any deeper queries into an array\r\n                    var queries_1 = [];\r\n                    if (maybeChildSyncPoint) {\r\n                        queries_1 = queries_1.concat(maybeChildSyncPoint.getQueryViews().map(function (view) { return view.getQuery(); }));\r\n                    }\r\n                    util.forEach(childMap, function (key, childQueries) {\r\n                        queries_1 = queries_1.concat(childQueries);\r\n                    });\r\n                    return queries_1;\r\n                }\r\n            });\r\n            for (var i = 0; i < queriesToStop.length; ++i) {\r\n                var queryToStop = queriesToStop[i];\r\n                this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToStop), this.tagForQuery_(queryToStop));\r\n            }\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     *\r\n     * @param {!View} view\r\n     * @return {{hashFn: function(), onComplete: function(!string, *)}}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.createListenerForView_ = function (view) {\r\n        var _this = this;\r\n        var query = view.getQuery();\r\n        var tag = this.tagForQuery_(query);\r\n        return {\r\n            hashFn: function () {\r\n                var cache = view.getServerCache() || ChildrenNode.EMPTY_NODE;\r\n                return cache.hash();\r\n            },\r\n            onComplete: function (status) {\r\n                if (status === 'ok') {\r\n                    if (tag) {\r\n                        return _this.applyTaggedListenComplete(query.path, tag);\r\n                    }\r\n                    else {\r\n                        return _this.applyListenComplete(query.path);\r\n                    }\r\n                }\r\n                else {\r\n                    // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\r\n                    // Note that this may need to be scoped to just this listener if we change permissions on filtered children\r\n                    var error$$1 = errorForServerCode(status, query);\r\n                    return _this.removeEventRegistration(query, \r\n                    /*eventRegistration*/ null, error$$1);\r\n                }\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\r\n     * @private\r\n     * @param {!Query} query\r\n     * @return {string}\r\n     */\r\n    SyncTree.makeQueryKey_ = function (query) {\r\n        return query.path.toString() + '$' + query.queryIdentifier();\r\n    };\r\n    /**\r\n     * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\r\n     * @private\r\n     * @param {!string} queryKey\r\n     * @return {{queryId: !string, path: !Path}}\r\n     */\r\n    SyncTree.parseQueryKey_ = function (queryKey) {\r\n        var splitIndex = queryKey.indexOf('$');\r\n        util.assert(splitIndex !== -1 && splitIndex < queryKey.length - 1, 'Bad queryKey.');\r\n        return {\r\n            queryId: queryKey.substr(splitIndex + 1),\r\n            path: new Path(queryKey.substr(0, splitIndex))\r\n        };\r\n    };\r\n    /**\r\n     * Return the query associated with the given tag, if we have one\r\n     * @param {!number} tag\r\n     * @return {?string}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.queryKeyForTag_ = function (tag) {\r\n        return this.tagToQueryMap_['_' + tag];\r\n    };\r\n    /**\r\n     * Return the tag associated with the given query.\r\n     * @param {!Query} query\r\n     * @return {?number}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.tagForQuery_ = function (query) {\r\n        var queryKey = SyncTree.makeQueryKey_(query);\r\n        return util.safeGet(this.queryToTagMap_, queryKey);\r\n    };\r\n    /**\r\n     * Static accessor for query tags.\r\n     * @return {number}\r\n     * @private\r\n     */\r\n    SyncTree.getNextQueryTag_ = function () {\r\n        return SyncTree.nextQueryTag_++;\r\n    };\r\n    /**\r\n     * A helper method to apply tagged operations\r\n     *\r\n     * @param {!Path} queryPath\r\n     * @param {!Operation} operation\r\n     * @return {!Array.<!Event>}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.applyTaggedOperation_ = function (queryPath, operation) {\r\n        var syncPoint = this.syncPointTree_.get(queryPath);\r\n        util.assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\r\n        var writesCache = this.pendingWriteTree_.childWrites(queryPath);\r\n        return syncPoint.applyOperation(operation, writesCache, \r\n        /*serverCache=*/ null);\r\n    };\r\n    /**\r\n     * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\r\n     *\r\n     * NOTES:\r\n     * - Descendant SyncPoints will be visited first (since we raise events depth-first).\r\n  \n     * - We call applyOperation() on each SyncPoint passing three things:\r\n     *   1. A version of the Operation that has been made relative to the SyncPoint location.\r\n     *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\r\n     *   3. A snapshot Node with cached server data, if we have it.\r\n  \n     * - We concatenate all of the events returned by each SyncPoint and return the result.\r\n     *\r\n     * @param {!Operation} operation\r\n     * @return {!Array.<!Event>}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.applyOperationToSyncPoints_ = function (operation) {\r\n        return this.applyOperationHelper_(operation, this.syncPointTree_, \r\n        /*serverCache=*/ null, this.pendingWriteTree_.childWrites(Path.Empty));\r\n    };\r\n    /**\r\n     * Recursive helper for applyOperationToSyncPoints_\r\n     *\r\n     * @private\r\n     * @param {!Operation} operation\r\n     * @param {ImmutableTree.<!SyncPoint>} syncPointTree\r\n     * @param {?Node} serverCache\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    SyncTree.prototype.applyOperationHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\r\n        if (operation.path.isEmpty()) {\r\n            return this.applyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache);\r\n        }\r\n        else {\r\n            var syncPoint = syncPointTree.get(Path.Empty);\r\n            // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n            if (serverCache == null && syncPoint != null) {\r\n                serverCache = syncPoint.getCompleteServerCache(Path.Empty);\r\n            }\r\n            var events = [];\r\n            var childName = operation.path.getFront();\r\n            var childOperation = operation.operationForChild(childName);\r\n            var childTree = syncPointTree.children.get(childName);\r\n            if (childTree && childOperation) {\r\n                var childServerCache = serverCache\r\n                    ? serverCache.getImmediateChild(childName)\r\n                    : null;\r\n                var childWritesCache = writesCache.child(childName);\r\n                events = events.concat(this.applyOperationHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n            }\r\n            if (syncPoint) {\r\n                events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\r\n            }\r\n            return events;\r\n        }\r\n    };\r\n    /**\r\n     * Recursive helper for applyOperationToSyncPoints_\r\n     *\r\n     * @private\r\n     * @param {!Operation} operation\r\n     * @param {ImmutableTree.<!SyncPoint>} syncPointTree\r\n     * @param {?Node} serverCache\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    SyncTree.prototype.applyOperationDescendantsHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\r\n        var _this = this;\r\n        var syncPoint = syncPointTree.get(Path.Empty);\r\n        // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n        if (serverCache == null && syncPoint != null) {\r\n            serverCache = syncPoint.getCompleteServerCache(Path.Empty);\r\n        }\r\n        var events = [];\r\n        syncPointTree.children.inorderTraversal(function (childName, childTree) {\r\n            var childServerCache = serverCache\r\n                ? serverCache.getImmediateChild(childName)\r\n                : null;\r\n            var childWritesCache = writesCache.child(childName);\r\n            var childOperation = operation.operationForChild(childName);\r\n            if (childOperation) {\r\n                events = events.concat(_this.applyOperationDescendantsHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n            }\r\n        });\r\n        if (syncPoint) {\r\n            events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     * Static tracker for next query tag.\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    SyncTree.nextQueryTag_ = 1;\r\n    return SyncTree;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\r\n *\r\n * @constructor\r\n */\r\nvar SnapshotHolder = /** @class */ (function () {\r\n    function SnapshotHolder() {\r\n        this.rootNode_ = ChildrenNode.EMPTY_NODE;\r\n    }\r\n    SnapshotHolder.prototype.getNode = function (path) {\r\n        return this.rootNode_.getChild(path);\r\n    };\r\n    SnapshotHolder.prototype.updateSnapshot = function (path, newSnapshotNode) {\r\n        this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\r\n    };\r\n    return SnapshotHolder;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Abstraction around FirebaseApp's token fetching capabilities.\r\n */\r\nvar AuthTokenProvider = /** @class */ (function () {\r\n    /**\r\n     * @param {!FirebaseApp} app_\r\n     */\r\n    function AuthTokenProvider(app_) {\r\n        this.app_ = app_;\r\n    }\r\n    /**\r\n     * @param {boolean} forceRefresh\r\n     * @return {!Promise<FirebaseAuthTokenData>}\r\n     */\r\n    AuthTokenProvider.prototype.getToken = function (forceRefresh) {\r\n        return this.app_['INTERNAL']['getToken'](forceRefresh).then(null, \r\n        // .catch\r\n        function (error$$1) {\r\n            // TODO: Need to figure out all the cases this is raised and whether\r\n            // this makes sense.\r\n            if (error$$1 && error$$1.code === 'auth/token-not-initialized') {\r\n                log('Got auth/token-not-initialized error.  Treating as null token.');\r\n                return null;\r\n            }\r\n            else {\r\n                return Promise.reject(error$$1);\r\n            }\r\n        });\r\n    };\r\n    AuthTokenProvider.prototype.addTokenChangeListener = function (listener) {\r\n        // TODO: We might want to wrap the listener and call it with no args to\r\n        // avoid a leaky abstraction, but that makes removing the listener harder.\r\n        this.app_['INTERNAL']['addAuthTokenListener'](listener);\r\n    };\r\n    AuthTokenProvider.prototype.removeTokenChangeListener = function (listener) {\r\n        this.app_['INTERNAL']['removeAuthTokenListener'](listener);\r\n    };\r\n    AuthTokenProvider.prototype.notifyForInvalidToken = function () {\r\n        var errorMessage = 'Provided authentication credentials for the app named \"' +\r\n            this.app_.name +\r\n            '\" are invalid. This usually indicates your app was not ' +\r\n            'initialized correctly. ';\r\n        if ('credential' in this.app_.options) {\r\n            errorMessage +=\r\n                'Make sure the \"credential\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else if ('serviceAccount' in this.app_.options) {\r\n            errorMessage +=\r\n                'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else {\r\n            errorMessage +=\r\n                'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\r\n                    'initializeApp() match the values provided for your app at ' +\r\n                    'https://console.firebase.google.com/.';\r\n        }\r\n        warn(errorMessage);\r\n    };\r\n    return AuthTokenProvider;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Tracks a collection of stats.\r\n *\r\n * @constructor\r\n */\r\nvar StatsCollection = /** @class */ (function () {\r\n    function StatsCollection() {\r\n        this.counters_ = {};\r\n    }\r\n    StatsCollection.prototype.incrementCounter = function (name, amount) {\r\n        if (amount === void 0) { amount = 1; }\r\n        if (!util.contains(this.counters_, name))\r\n            this.counters_[name] = 0;\r\n        this.counters_[name] += amount;\r\n    };\r\n    StatsCollection.prototype.get = function () {\r\n        return util.deepCopy(this.counters_);\r\n    };\r\n    return StatsCollection;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar StatsManager = /** @class */ (function () {\r\n    function StatsManager() {\r\n    }\r\n    StatsManager.getCollection = function (repoInfo) {\r\n        var hashString = repoInfo.toString();\r\n        if (!this.collections_[hashString]) {\r\n            this.collections_[hashString] = new StatsCollection();\r\n        }\r\n        return this.collections_[hashString];\r\n    };\r\n    StatsManager.getOrCreateReporter = function (repoInfo, creatorFunction) {\r\n        var hashString = repoInfo.toString();\r\n        if (!this.reporters_[hashString]) {\r\n            this.reporters_[hashString] = creatorFunction();\r\n        }\r\n        return this.reporters_[hashString];\r\n    };\r\n    StatsManager.collections_ = {};\r\n    StatsManager.reporters_ = {};\r\n    return StatsManager;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns the delta from the previous call to get stats.\r\n *\r\n * @param collection_ The collection to \"listen\" to.\r\n * @constructor\r\n */\r\nvar StatsListener = /** @class */ (function () {\r\n    function StatsListener(collection_) {\r\n        this.collection_ = collection_;\r\n        this.last_ = null;\r\n    }\r\n    StatsListener.prototype.get = function () {\r\n        var newStats = this.collection_.get();\r\n        var delta = util.clone(newStats);\r\n        if (this.last_) {\r\n            util.forEach(this.last_, function (stat, value) {\r\n                delta[stat] = delta[stat] - value;\r\n            });\r\n        }\r\n        this.last_ = newStats;\r\n        return delta;\r\n    };\r\n    return StatsListener;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\r\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\r\n// seconds to try to ensure the Firebase connection is established / settled.\r\nvar FIRST_STATS_MIN_TIME = 10 * 1000;\r\nvar FIRST_STATS_MAX_TIME = 30 * 1000;\r\n// We'll continue to report stats on average every 5 minutes.\r\nvar REPORT_STATS_INTERVAL = 5 * 60 * 1000;\r\n/**\r\n * @constructor\r\n */\r\nvar StatsReporter = /** @class */ (function () {\r\n    /**\r\n     * @param collection\r\n     * @param server_\r\n     */\r\n    function StatsReporter(collection, server_) {\r\n        this.server_ = server_;\r\n        this.statsToReport_ = {};\r\n        this.statsListener_ = new StatsListener(collection);\r\n        var timeout = FIRST_STATS_MIN_TIME +\r\n            (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\r\n    }\r\n    StatsReporter.prototype.includeStat = function (stat) {\r\n        this.statsToReport_[stat] = true;\r\n    };\r\n    StatsReporter.prototype.reportStats_ = function () {\r\n        var _this = this;\r\n        var stats = this.statsListener_.get();\r\n        var reportedStats = {};\r\n        var haveStatsToReport = false;\r\n        util.forEach(stats, function (stat, value) {\r\n            if (value > 0 && util.contains(_this.statsToReport_, stat)) {\r\n                reportedStats[stat] = value;\r\n                haveStatsToReport = true;\r\n            }\r\n        });\r\n        if (haveStatsToReport) {\r\n            this.server_.reportStats(reportedStats);\r\n        }\r\n        // queue our next run.\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL));\r\n    };\r\n    return StatsReporter;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The event queue serves a few purposes:\r\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\r\n *    events being queued.\r\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\r\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\r\n *    left off, ensuring that the events are still raised synchronously and in order.\r\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\r\n *    events are raised synchronously.\r\n *\r\n * NOTE: This can all go away if/when we move to async events.\r\n *\r\n * @constructor\r\n */\r\nvar EventQueue = /** @class */ (function () {\r\n    function EventQueue() {\r\n        /**\r\n         * @private\r\n         * @type {!Array.<EventList>}\r\n         */\r\n        this.eventLists_ = [];\r\n        /**\r\n         * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\r\n         * @private\r\n         * @type {!number}\r\n         */\r\n        this.recursionDepth_ = 0;\r\n    }\r\n    /**\r\n     * @param {!Array.<Event>} eventDataList The new events to queue.\r\n     */\r\n    EventQueue.prototype.queueEvents = function (eventDataList) {\r\n        // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\r\n        var currList = null;\r\n        for (var i = 0; i < eventDataList.length; i++) {\r\n            var eventData = eventDataList[i];\r\n            var eventPath = eventData.getPath();\r\n            if (currList !== null && !eventPath.equals(currList.getPath())) {\r\n                this.eventLists_.push(currList);\r\n                currList = null;\r\n            }\r\n            if (currList === null) {\r\n                currList = new EventList(eventPath);\r\n            }\r\n            currList.add(eventData);\r\n        }\r\n        if (currList) {\r\n            this.eventLists_.push(currList);\r\n        }\r\n    };\r\n    /**\r\n     * Queues the specified events and synchronously raises all events (including previously queued ones)\r\n     * for the specified path.\r\n     *\r\n     * It is assumed that the new events are all for the specified path.\r\n     *\r\n     * @param {!Path} path The path to raise events for.\r\n     * @param {!Array.<Event>} eventDataList The new events to raise.\r\n     */\r\n    EventQueue.prototype.raiseEventsAtPath = function (path, eventDataList) {\r\n        this.queueEvents(eventDataList);\r\n        this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\r\n            return eventPath.equals(path);\r\n        });\r\n    };\r\n    /**\r\n     * Queues the specified events and synchronously raises all events (including previously queued ones) for\r\n     * locations related to the specified change path (i.e. all ancestors and descendants).\r\n     *\r\n     * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\r\n     *\r\n     * @param {!Path} changedPath The path to raise events for.\r\n     * @param {!Array.<!Event>} eventDataList The events to raise\r\n     */\r\n    EventQueue.prototype.raiseEventsForChangedPath = function (changedPath, eventDataList) {\r\n        this.queueEvents(eventDataList);\r\n        this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\r\n            return eventPath.contains(changedPath) || changedPath.contains(eventPath);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!function(!Path):boolean} predicate\r\n     * @private\r\n     */\r\n    EventQueue.prototype.raiseQueuedEventsMatchingPredicate_ = function (predicate) {\r\n        this.recursionDepth_++;\r\n        var sentAll = true;\r\n        for (var i = 0; i < this.eventLists_.length; i++) {\r\n            var eventList = this.eventLists_[i];\r\n            if (eventList) {\r\n                var eventPath = eventList.getPath();\r\n                if (predicate(eventPath)) {\r\n                    this.eventLists_[i].raise();\r\n                    this.eventLists_[i] = null;\r\n                }\r\n                else {\r\n                    sentAll = false;\r\n                }\r\n            }\r\n        }\r\n        if (sentAll) {\r\n            this.eventLists_ = [];\r\n        }\r\n        this.recursionDepth_--;\r\n    };\r\n    return EventQueue;\r\n}());\r\n/**\r\n * @param {!Path} path\r\n * @constructor\r\n */\r\nvar EventList = /** @class */ (function () {\r\n    function EventList(path_) {\r\n        this.path_ = path_;\r\n        /**\r\n         * @type {!Array.<Event>}\r\n         * @private\r\n         */\r\n        this.events_ = [];\r\n    }\r\n    /**\r\n     * @param {!Event} eventData\r\n     */\r\n    EventList.prototype.add = function (eventData) {\r\n        this.events_.push(eventData);\r\n    };\r\n    /**\r\n     * Iterates through the list and raises each event\r\n     */\r\n    EventList.prototype.raise = function () {\r\n        for (var i = 0; i < this.events_.length; i++) {\r\n            var eventData = this.events_[i];\r\n            if (eventData !== null) {\r\n                this.events_[i] = null;\r\n                var eventFn = eventData.getEventRunner();\r\n                if (logger$1) {\r\n                    log('event: ' + eventData.toString());\r\n                }\r\n                exceptionGuard(eventFn);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @return {!Path}\r\n     */\r\n    EventList.prototype.getPath = function () {\r\n        return this.path_;\r\n    };\r\n    return EventList;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Base class to be used if you want to emit events. Call the constructor with\r\n * the set of allowed event names.\r\n */\r\nvar EventEmitter = /** @class */ (function () {\r\n    /**\r\n     * @param {!Array.<string>} allowedEvents_\r\n     */\r\n    function EventEmitter(allowedEvents_) {\r\n        this.allowedEvents_ = allowedEvents_;\r\n        this.listeners_ = {};\r\n        util.assert(Array.isArray(allowedEvents_) && allowedEvents_.length > 0, 'Requires a non-empty array');\r\n    }\r\n    /**\r\n     * To be called by derived classes to trigger events.\r\n     * @param {!string} eventType\r\n     * @param {...*} var_args\r\n     */\r\n    EventEmitter.prototype.trigger = function (eventType) {\r\n        var var_args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            var_args[_i - 1] = arguments[_i];\r\n        }\r\n        if (Array.isArray(this.listeners_[eventType])) {\r\n            // Clone the list, since callbacks could add/remove listeners.\r\n            var listeners = this.listeners_[eventType].slice();\r\n            for (var i = 0; i < listeners.length; i++) {\r\n                listeners[i].callback.apply(listeners[i].context, var_args);\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.on = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        this.listeners_[eventType] = this.listeners_[eventType] || [];\r\n        this.listeners_[eventType].push({ callback: callback, context: context });\r\n        var eventData = this.getInitialEvent(eventType);\r\n        if (eventData) {\r\n            callback.apply(context, eventData);\r\n        }\r\n    };\r\n    EventEmitter.prototype.off = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        var listeners = this.listeners_[eventType] || [];\r\n        for (var i = 0; i < listeners.length; i++) {\r\n            if (listeners[i].callback === callback &&\r\n                (!context || context === listeners[i].context)) {\r\n                listeners.splice(i, 1);\r\n                return;\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.validateEventType_ = function (eventType) {\r\n        util.assert(this.allowedEvents_.find(function (et) {\r\n            return et === eventType;\r\n        }), 'Unknown event: ' + eventType);\r\n    };\r\n    return EventEmitter;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @extends {EventEmitter}\r\n */\r\nvar VisibilityMonitor = /** @class */ (function (_super) {\r\n    tslib_1.__extends(VisibilityMonitor, _super);\r\n    function VisibilityMonitor() {\r\n        var _this = _super.call(this, ['visible']) || this;\r\n        var hidden;\r\n        var visibilityChange;\r\n        if (typeof document !== 'undefined' &&\r\n            typeof document.addEventListener !== 'undefined') {\r\n            if (typeof document['hidden'] !== 'undefined') {\r\n                // Opera 12.10 and Firefox 18 and later support\r\n                visibilityChange = 'visibilitychange';\r\n                hidden = 'hidden';\r\n            }\r\n            else if (typeof document['mozHidden'] !== 'undefined') {\r\n                visibilityChange = 'mozvisibilitychange';\r\n                hidden = 'mozHidden';\r\n            }\r\n            else if (typeof document['msHidden'] !== 'undefined') {\r\n                visibilityChange = 'msvisibilitychange';\r\n                hidden = 'msHidden';\r\n            }\r\n            else if (typeof document['webkitHidden'] !== 'undefined') {\r\n                visibilityChange = 'webkitvisibilitychange';\r\n                hidden = 'webkitHidden';\r\n            }\r\n        }\r\n        // Initially, we always assume we are visible. This ensures that in browsers\r\n        // without page visibility support or in cases where we are never visible\r\n        // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\r\n        // reconnects\r\n        _this.visible_ = true;\r\n        if (visibilityChange) {\r\n            document.addEventListener(visibilityChange, function () {\r\n                var visible = !document[hidden];\r\n                if (visible !== _this.visible_) {\r\n                    _this.visible_ = visible;\r\n                    _this.trigger('visible', visible);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    VisibilityMonitor.getInstance = function () {\r\n        return new VisibilityMonitor();\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @return {Array.<boolean>}\r\n     */\r\n    VisibilityMonitor.prototype.getInitialEvent = function (eventType) {\r\n        util.assert(eventType === 'visible', 'Unknown event type: ' + eventType);\r\n        return [this.visible_];\r\n    };\r\n    return VisibilityMonitor;\r\n}(EventEmitter));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Monitors online state (as reported by window.online/offline events).\r\n *\r\n * The expectation is that this could have many false positives (thinks we are online\r\n * when we're not), but no false negatives.  So we can safely use it to determine when\r\n * we definitely cannot reach the internet.\r\n *\r\n * @extends {EventEmitter}\r\n */\r\nvar OnlineMonitor = /** @class */ (function (_super) {\r\n    tslib_1.__extends(OnlineMonitor, _super);\r\n    function OnlineMonitor() {\r\n        var _this = _super.call(this, ['online']) || this;\r\n        _this.online_ = true;\r\n        // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\r\n        // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\r\n        // It would seem that the 'online' event does not always fire consistently. So we disable it\r\n        // for Cordova.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window.addEventListener !== 'undefined' &&\r\n            !util.isMobileCordova()) {\r\n            window.addEventListener('online', function () {\r\n                if (!_this.online_) {\r\n                    _this.online_ = true;\r\n                    _this.trigger('online', true);\r\n                }\r\n            }, false);\r\n            window.addEventListener('offline', function () {\r\n                if (_this.online_) {\r\n                    _this.online_ = false;\r\n                    _this.trigger('online', false);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    OnlineMonitor.getInstance = function () {\r\n        return new OnlineMonitor();\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @return {Array.<boolean>}\r\n     */\r\n    OnlineMonitor.prototype.getInitialEvent = function (eventType) {\r\n        util.assert(eventType === 'online', 'Unknown event type: ' + eventType);\r\n        return [this.online_];\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    OnlineMonitor.prototype.currentlyOnline = function () {\r\n        return this.online_;\r\n    };\r\n    return OnlineMonitor;\r\n}(EventEmitter));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class ensures the packets from the server arrive in order\r\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\r\n * @constructor\r\n */\r\nvar PacketReceiver = /** @class */ (function () {\r\n    /**\r\n     * @param onMessage_\r\n     */\r\n    function PacketReceiver(onMessage_) {\r\n        this.onMessage_ = onMessage_;\r\n        this.pendingResponses = [];\r\n        this.currentResponseNum = 0;\r\n        this.closeAfterResponse = -1;\r\n        this.onClose = null;\r\n    }\r\n    PacketReceiver.prototype.closeAfter = function (responseNum, callback) {\r\n        this.closeAfterResponse = responseNum;\r\n        this.onClose = callback;\r\n        if (this.closeAfterResponse < this.currentResponseNum) {\r\n            this.onClose();\r\n            this.onClose = null;\r\n        }\r\n    };\r\n    /**\r\n     * Each message from the server comes with a response number, and an array of data. The responseNumber\r\n     * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\r\n     * browsers will respond in the same order as the requests we sent\r\n     * @param {number} requestNum\r\n     * @param {Array} data\r\n     */\r\n    PacketReceiver.prototype.handleResponse = function (requestNum, data) {\r\n        var _this = this;\r\n        this.pendingResponses[requestNum] = data;\r\n        var _loop_1 = function () {\r\n            var toProcess = this_1.pendingResponses[this_1.currentResponseNum];\r\n            delete this_1.pendingResponses[this_1.currentResponseNum];\r\n            var _loop_2 = function (i) {\r\n                if (toProcess[i]) {\r\n                    exceptionGuard(function () {\r\n                        _this.onMessage_(toProcess[i]);\r\n                    });\r\n                }\r\n            };\r\n            for (var i = 0; i < toProcess.length; ++i) {\r\n                _loop_2(i);\r\n            }\r\n            if (this_1.currentResponseNum === this_1.closeAfterResponse) {\r\n                if (this_1.onClose) {\r\n                    this_1.onClose();\r\n                    this_1.onClose = null;\r\n                }\r\n                return \"break\";\r\n            }\r\n            this_1.currentResponseNum++;\r\n        };\r\n        var this_1 = this;\r\n        while (this.pendingResponses[this.currentResponseNum]) {\r\n            var state_1 = _loop_1();\r\n            if (state_1 === \"break\")\r\n                break;\r\n        }\r\n    };\r\n    return PacketReceiver;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// URL query parameters associated with longpolling\r\nvar FIREBASE_LONGPOLL_START_PARAM = 'start';\r\nvar FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\r\nvar FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\r\nvar FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\r\nvar FIREBASE_LONGPOLL_ID_PARAM = 'id';\r\nvar FIREBASE_LONGPOLL_PW_PARAM = 'pw';\r\nvar FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\r\nvar FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\r\nvar FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\r\nvar FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\r\nvar FIREBASE_LONGPOLL_DATA_PARAM = 'd';\r\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM = 'disconn';\r\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\r\n//Data size constants.\r\n//TODO: Perf: the maximum length actually differs from browser to browser.\r\n// We should check what browser we're on and set accordingly.\r\nvar MAX_URL_DATA_SIZE = 1870;\r\nvar SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\r\nvar MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\r\n/**\r\n * Keepalive period\r\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\r\n * length of 30 seconds that we can't exceed.\r\n * @const\r\n * @type {number}\r\n */\r\nvar KEEPALIVE_REQUEST_INTERVAL = 25000;\r\n/**\r\n * How long to wait before aborting a long-polling connection attempt.\r\n * @const\r\n * @type {number}\r\n */\r\nvar LP_CONNECT_TIMEOUT = 30000;\r\n/**\r\n * This class manages a single long-polling connection.\r\n *\r\n * @constructor\r\n * @implements {Transport}\r\n */\r\nvar BrowserPollConnection = /** @class */ (function () {\r\n    /**\r\n     * @param {string} connId An identifier for this connection, used for logging\r\n     * @param {RepoInfo} repoInfo The info for the endpoint to send data to.\r\n     * @param {string=} transportSessionId Optional transportSessionid if we are reconnecting for an existing\r\n     *                                         transport session\r\n     * @param {string=}  lastSessionId Optional lastSessionId if the PersistentConnection has already created a\r\n     *                                     connection previously\r\n     */\r\n    function BrowserPollConnection(connId, repoInfo, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.repoInfo = repoInfo;\r\n        this.transportSessionId = transportSessionId;\r\n        this.lastSessionId = lastSessionId;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.everConnected_ = false;\r\n        this.log_ = logWrapper(connId);\r\n        this.stats_ = StatsManager.getCollection(repoInfo);\r\n        this.urlFn = function (params) {\r\n            return repoInfo.connectionURL(LONG_POLLING, params);\r\n        };\r\n    }\r\n    /**\r\n     *\r\n     * @param {function(Object)} onMessage Callback when messages arrive\r\n     * @param {function()} onDisconnect Callback with connection lost.\r\n     */\r\n    BrowserPollConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.curSegmentNum = 0;\r\n        this.onDisconnect_ = onDisconnect;\r\n        this.myPacketOrderer = new PacketReceiver(onMessage);\r\n        this.isClosed_ = false;\r\n        this.connectTimeoutTimer_ = setTimeout(function () {\r\n            _this.log_('Timed out trying to connect.');\r\n            // Make sure we clear the host cache\r\n            _this.onClosed_();\r\n            _this.connectTimeoutTimer_ = null;\r\n        }, Math.floor(LP_CONNECT_TIMEOUT));\r\n        // Ensure we delay the creation of the iframe until the DOM is loaded.\r\n        executeWhenDOMReady(function () {\r\n            if (_this.isClosed_)\r\n                return;\r\n            //Set up a callback that gets triggered once a connection is set up.\r\n            _this.scriptTagHolder = new FirebaseIFrameScriptHolder(function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var command = args[0], arg1 = args[1], arg2 = args[2];\r\n                _this.incrementIncomingBytes_(args);\r\n                if (!_this.scriptTagHolder)\r\n                    return; // we closed the connection.\r\n                if (_this.connectTimeoutTimer_) {\r\n                    clearTimeout(_this.connectTimeoutTimer_);\r\n                    _this.connectTimeoutTimer_ = null;\r\n                }\r\n                _this.everConnected_ = true;\r\n                if (command == FIREBASE_LONGPOLL_START_PARAM) {\r\n                    _this.id = arg1;\r\n                    _this.password = arg2;\r\n                }\r\n                else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\r\n                    // Don't clear the host cache. We got a response from the server, so we know it's reachable\r\n                    if (arg1) {\r\n                        // We aren't expecting any more data (other than what the server's already in the process of sending us\r\n                        // through our already open polls), so don't send any more.\r\n                        _this.scriptTagHolder.sendNewPolls = false;\r\n                        // arg1 in this case is the last response number sent by the server. We should try to receive\r\n                        // all of the responses up to this one before closing\r\n                        _this.myPacketOrderer.closeAfter(arg1, function () {\r\n                            _this.onClosed_();\r\n                        });\r\n                    }\r\n                    else {\r\n                        _this.onClosed_();\r\n                    }\r\n                }\r\n                else {\r\n                    throw new Error('Unrecognized command received: ' + command);\r\n                }\r\n            }, function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var pN = args[0], data = args[1];\r\n                _this.incrementIncomingBytes_(args);\r\n                _this.myPacketOrderer.handleResponse(pN, data);\r\n            }, function () {\r\n                _this.onClosed_();\r\n            }, _this.urlFn);\r\n            //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\r\n            //from cache.\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(Math.random() * 100000000);\r\n            if (_this.scriptTagHolder.uniqueCallbackIdentifier)\r\n                urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] = _this.scriptTagHolder.uniqueCallbackIdentifier;\r\n            urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n            if (_this.transportSessionId) {\r\n                urlParams[TRANSPORT_SESSION_PARAM] = _this.transportSessionId;\r\n            }\r\n            if (_this.lastSessionId) {\r\n                urlParams[LAST_SESSION_PARAM] = _this.lastSessionId;\r\n            }\r\n            if (!util.isNodeSdk() &&\r\n                typeof location !== 'undefined' &&\r\n                location.href &&\r\n                location.href.indexOf(FORGE_DOMAIN) !== -1) {\r\n                urlParams[REFERER_PARAM] = FORGE_REF;\r\n            }\r\n            var connectURL = _this.urlFn(urlParams);\r\n            _this.log_('Connecting via long-poll to ' + connectURL);\r\n            _this.scriptTagHolder.addTag(connectURL, function () {\r\n                /* do nothing */\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Call this when a handshake has completed successfully and we want to consider the connection established\r\n     */\r\n    BrowserPollConnection.prototype.start = function () {\r\n        this.scriptTagHolder.startLongPoll(this.id, this.password);\r\n        this.addDisconnectPingFrame(this.id, this.password);\r\n    };\r\n    /**\r\n     * Forces long polling to be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceAllow = function () {\r\n        BrowserPollConnection.forceAllow_ = true;\r\n    };\r\n    /**\r\n     * Forces longpolling to not be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceDisallow = function () {\r\n        BrowserPollConnection.forceDisallow_ = true;\r\n    };\r\n    // Static method, use string literal so it can be accessed in a generic way\r\n    BrowserPollConnection.isAvailable = function () {\r\n        // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\r\n        // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\r\n        return (BrowserPollConnection.forceAllow_ ||\r\n            (!BrowserPollConnection.forceDisallow_ &&\r\n                typeof document !== 'undefined' &&\r\n                document.createElement != null &&\r\n                !isChromeExtensionContentScript() &&\r\n                !isWindowsStoreApp() &&\r\n                !util.isNodeSdk()));\r\n    };\r\n    /**\r\n     * No-op for polling\r\n     */\r\n    BrowserPollConnection.prototype.markConnectionHealthy = function () { };\r\n    /**\r\n     * Stops polling and cleans up the iframe\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.scriptTagHolder) {\r\n            this.scriptTagHolder.close();\r\n            this.scriptTagHolder = null;\r\n        }\r\n        //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\r\n        if (this.myDisconnFrame) {\r\n            document.body.removeChild(this.myDisconnFrame);\r\n            this.myDisconnFrame = null;\r\n        }\r\n        if (this.connectTimeoutTimer_) {\r\n            clearTimeout(this.connectTimeoutTimer_);\r\n            this.connectTimeoutTimer_ = null;\r\n        }\r\n    };\r\n    /**\r\n     * Triggered when this transport is closed\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is closing itself');\r\n            this.shutdown_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_(this.everConnected_);\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\r\n     * that we've left.\r\n     */\r\n    BrowserPollConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is being closed.');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\r\n     * broken into chunks (since URLs have a small maximum length).\r\n     * @param {!Object} data The JSON data to transmit.\r\n     */\r\n    BrowserPollConnection.prototype.send = function (data) {\r\n        var dataStr = util.stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //first, lets get the base64-encoded data\r\n        var base64data = util.base64Encode(dataStr);\r\n        //We can only fit a certain amount in each URL, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\r\n        //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\r\n        //of segments so that we can reassemble the packet on the server.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.scriptTagHolder.enqueueSegment(this.curSegmentNum, dataSegs.length, dataSegs[i]);\r\n            this.curSegmentNum++;\r\n        }\r\n    };\r\n    /**\r\n     * This is how we notify the server that we're leaving.\r\n     * We aren't able to send requests with DHTML on a window close event, but we can\r\n     * trigger XHR requests in some browsers (everything but Opera basically).\r\n     * @param {!string} id\r\n     * @param {!string} pw\r\n     */\r\n    BrowserPollConnection.prototype.addDisconnectPingFrame = function (id, pw) {\r\n        if (util.isNodeSdk())\r\n            return;\r\n        this.myDisconnFrame = document.createElement('iframe');\r\n        var urlParams = {};\r\n        urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\r\n        urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\r\n        urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\r\n        this.myDisconnFrame.src = this.urlFn(urlParams);\r\n        this.myDisconnFrame.style.display = 'none';\r\n        document.body.appendChild(this.myDisconnFrame);\r\n    };\r\n    /**\r\n     * Used to track the bytes received by this client\r\n     * @param {*} args\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.incrementIncomingBytes_ = function (args) {\r\n        // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\r\n        var bytesReceived = util.stringify(args).length;\r\n        this.bytesReceived += bytesReceived;\r\n        this.stats_.incrementCounter('bytes_received', bytesReceived);\r\n    };\r\n    return BrowserPollConnection;\r\n}());\r\n/*********************************************************************************************\r\n * A wrapper around an iframe that is used as a long-polling script holder.\r\n * @constructor\r\n *********************************************************************************************/\r\nvar FirebaseIFrameScriptHolder = /** @class */ (function () {\r\n    /**\r\n     * @param commandCB - The callback to be called when control commands are recevied from the server.\r\n     * @param onMessageCB - The callback to be triggered when responses arrive from the server.\r\n     * @param onDisconnect - The callback to be triggered when this tag holder is closed\r\n     * @param urlFn - A function that provides the URL of the endpoint to send data to.\r\n     */\r\n    function FirebaseIFrameScriptHolder(commandCB, onMessageCB, onDisconnect, urlFn) {\r\n        this.onDisconnect = onDisconnect;\r\n        this.urlFn = urlFn;\r\n        //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\r\n        //problems in some browsers.\r\n        /**\r\n         * @type {CountedSet.<number, number>}\r\n         */\r\n        this.outstandingRequests = new CountedSet();\r\n        //A queue of the pending segments waiting for transmission to the server.\r\n        this.pendingSegs = [];\r\n        //A serial number. We use this for two things:\r\n        // 1) A way to ensure the browser doesn't cache responses to polls\r\n        // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\r\n        //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\r\n        //    JSONP code in the order it was added to the iframe.\r\n        this.currentSerial = Math.floor(Math.random() * 100000000);\r\n        // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\r\n        // incoming data from the server that we're waiting for).\r\n        this.sendNewPolls = true;\r\n        if (!util.isNodeSdk()) {\r\n            //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\r\n            //iframes where we put the long-polling script tags. We have two callbacks:\r\n            //   1) Command Callback - Triggered for control issues, like starting a connection.\r\n            //   2) Message Callback - Triggered when new data arrives.\r\n            this.uniqueCallbackIdentifier = LUIDGenerator();\r\n            window[FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier] = commandCB;\r\n            window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] = onMessageCB;\r\n            //Create an iframe for us to add script tags to.\r\n            this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\r\n            // Set the iframe's contents.\r\n            var script = '';\r\n            // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\r\n            // for ie9, but ie8 needs to do it again in the document itself.\r\n            if (this.myIFrame.src &&\r\n                this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:') {\r\n                var currentDomain = document.domain;\r\n                script = '<script>document.domain=\"' + currentDomain + '\";</script>';\r\n            }\r\n            var iframeContents = '<html><body>' + script + '</body></html>';\r\n            try {\r\n                this.myIFrame.doc.open();\r\n                this.myIFrame.doc.write(iframeContents);\r\n                this.myIFrame.doc.close();\r\n            }\r\n            catch (e) {\r\n                log('frame writing exception');\r\n                if (e.stack) {\r\n                    log(e.stack);\r\n                }\r\n                log(e);\r\n            }\r\n        }\r\n        else {\r\n            this.commandCB = commandCB;\r\n            this.onMessageCB = onMessageCB;\r\n        }\r\n    }\r\n    /**\r\n     * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\r\n     * actually use.\r\n     * @private\r\n     * @return {Element}\r\n     */\r\n    FirebaseIFrameScriptHolder.createIFrame_ = function () {\r\n        var iframe = document.createElement('iframe');\r\n        iframe.style.display = 'none';\r\n        // This is necessary in order to initialize the document inside the iframe\r\n        if (document.body) {\r\n            document.body.appendChild(iframe);\r\n            try {\r\n                // If document.domain has been modified in IE, this will throw an error, and we need to set the\r\n                // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\r\n                // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\r\n                var a = iframe.contentWindow.document;\r\n                if (!a) {\r\n                    // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\r\n                    log('No IE domain setting required');\r\n                }\r\n            }\r\n            catch (e) {\r\n                var domain = document.domain;\r\n                iframe.src =\r\n                    \"javascript:void((function(){document.open();document.domain='\" +\r\n                        domain +\r\n                        \"';document.close();})())\";\r\n            }\r\n        }\r\n        else {\r\n            // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\r\n            // never gets hit.\r\n            throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\r\n        }\r\n        // Get the document of the iframe in a browser-specific way.\r\n        if (iframe.contentDocument) {\r\n            iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\r\n        }\r\n        else if (iframe.contentWindow) {\r\n            iframe.doc = iframe.contentWindow.document; // Internet Explorer\r\n        }\r\n        else if (iframe.document) {\r\n            iframe.doc = iframe.document; //others?\r\n        }\r\n        return iframe;\r\n    };\r\n    /**\r\n     * Cancel all outstanding queries and remove the frame.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.close = function () {\r\n        var _this = this;\r\n        //Mark this iframe as dead, so no new requests are sent.\r\n        this.alive = false;\r\n        if (this.myIFrame) {\r\n            //We have to actually remove all of the html inside this iframe before removing it from the\r\n            //window, or IE will continue loading and executing the script tags we've already added, which\r\n            //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\r\n            this.myIFrame.doc.body.innerHTML = '';\r\n            setTimeout(function () {\r\n                if (_this.myIFrame !== null) {\r\n                    document.body.removeChild(_this.myIFrame);\r\n                    _this.myIFrame = null;\r\n                }\r\n            }, Math.floor(0));\r\n        }\r\n        if (util.isNodeSdk() && this.myID) {\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM] = 't';\r\n            urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\r\n            urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\r\n            var theURL = this.urlFn(urlParams);\r\n            FirebaseIFrameScriptHolder.nodeRestRequest(theURL);\r\n        }\r\n        // Protect from being called recursively.\r\n        var onDisconnect = this.onDisconnect;\r\n        if (onDisconnect) {\r\n            this.onDisconnect = null;\r\n            onDisconnect();\r\n        }\r\n    };\r\n    /**\r\n     * Actually start the long-polling session by adding the first script tag(s) to the iframe.\r\n     * @param {!string} id - The ID of this connection\r\n     * @param {!string} pw - The password for this connection\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.startLongPoll = function (id, pw) {\r\n        this.myID = id;\r\n        this.myPW = pw;\r\n        this.alive = true;\r\n        //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\r\n        while (this.newRequest_()) { }\r\n    };\r\n    /**\r\n     * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\r\n     * too many outstanding requests and we are still alive.\r\n     *\r\n     * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\r\n     * needed.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.newRequest_ = function () {\r\n        // We keep one outstanding request open all the time to receive data, but if we need to send data\r\n        // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\r\n        // close the old request.\r\n        if (this.alive &&\r\n            this.sendNewPolls &&\r\n            this.outstandingRequests.count() < (this.pendingSegs.length > 0 ? 2 : 1)) {\r\n            //construct our url\r\n            this.currentSerial++;\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\r\n            urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\r\n            var theURL = this.urlFn(urlParams);\r\n            //Now add as much data as we can.\r\n            var curDataString = '';\r\n            var i = 0;\r\n            while (this.pendingSegs.length > 0) {\r\n                //first, lets see if the next segment will fit.\r\n                var nextSeg = this.pendingSegs[0];\r\n                if (nextSeg.d.length + SEG_HEADER_SIZE + curDataString.length <=\r\n                    MAX_URL_DATA_SIZE) {\r\n                    //great, the segment will fit. Lets append it.\r\n                    var theSeg = this.pendingSegs.shift();\r\n                    curDataString =\r\n                        curDataString +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.seg +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.ts +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_DATA_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.d;\r\n                    i++;\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n            theURL = theURL + curDataString;\r\n            this.addLongPollTag_(theURL, this.currentSerial);\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Queue a packet for transmission to the server.\r\n     * @param segnum - A sequential id for this packet segment used for reassembly\r\n     * @param totalsegs - The total number of segments in this packet\r\n     * @param data - The data for this segment.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.enqueueSegment = function (segnum, totalsegs, data) {\r\n        //add this to the queue of segments to send.\r\n        this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\r\n        //send the data immediately if there isn't already data being transmitted, unless\r\n        //startLongPoll hasn't been called yet.\r\n        if (this.alive) {\r\n            this.newRequest_();\r\n        }\r\n    };\r\n    /**\r\n     * Add a script tag for a regular long-poll request.\r\n     * @param {!string} url - The URL of the script tag.\r\n     * @param {!number} serial - The serial number of the request.\r\n     * @private\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addLongPollTag_ = function (url, serial) {\r\n        var _this = this;\r\n        //remember that we sent this request.\r\n        this.outstandingRequests.add(serial, 1);\r\n        var doNewRequest = function () {\r\n            _this.outstandingRequests.remove(serial);\r\n            _this.newRequest_();\r\n        };\r\n        // If this request doesn't return on its own accord (by the server sending us some data), we'll\r\n        // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\r\n        var keepaliveTimeout = setTimeout(doNewRequest, Math.floor(KEEPALIVE_REQUEST_INTERVAL));\r\n        var readyStateCB = function () {\r\n            // Request completed.  Cancel the keepalive.\r\n            clearTimeout(keepaliveTimeout);\r\n            // Trigger a new request so we can continue receiving data.\r\n            doNewRequest();\r\n        };\r\n        this.addTag(url, readyStateCB);\r\n    };\r\n    /**\r\n     * Add an arbitrary script tag to the iframe.\r\n     * @param {!string} url - The URL for the script tag source.\r\n     * @param {!function()} loadCB - A callback to be triggered once the script has loaded.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addTag = function (url, loadCB) {\r\n        var _this = this;\r\n        if (util.isNodeSdk()) {\r\n            this.doNodeLongPoll(url, loadCB);\r\n        }\r\n        else {\r\n            setTimeout(function () {\r\n                try {\r\n                    // if we're already closed, don't add this poll\r\n                    if (!_this.sendNewPolls)\r\n                        return;\r\n                    var newScript_1 = _this.myIFrame.doc.createElement('script');\r\n                    newScript_1.type = 'text/javascript';\r\n                    newScript_1.async = true;\r\n                    newScript_1.src = url;\r\n                    newScript_1.onload = newScript_1.onreadystatechange = function () {\r\n                        var rstate = newScript_1.readyState;\r\n                        if (!rstate || rstate === 'loaded' || rstate === 'complete') {\r\n                            newScript_1.onload = newScript_1.onreadystatechange = null;\r\n                            if (newScript_1.parentNode) {\r\n                                newScript_1.parentNode.removeChild(newScript_1);\r\n                            }\r\n                            loadCB();\r\n                        }\r\n                    };\r\n                    newScript_1.onerror = function () {\r\n                        log('Long-poll script failed to load: ' + url);\r\n                        _this.sendNewPolls = false;\r\n                        _this.close();\r\n                    };\r\n                    _this.myIFrame.doc.body.appendChild(newScript_1);\r\n                }\r\n                catch (e) {\r\n                    // TODO: we should make this error visible somehow\r\n                }\r\n            }, Math.floor(1));\r\n        }\r\n    };\r\n    return FirebaseIFrameScriptHolder;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar WEBSOCKET_MAX_FRAME_SIZE = 16384;\r\nvar WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\r\nvar WebSocketImpl = null;\r\nif (typeof MozWebSocket !== 'undefined') {\r\n    WebSocketImpl = MozWebSocket;\r\n}\r\nelse if (typeof WebSocket !== 'undefined') {\r\n    WebSocketImpl = WebSocket;\r\n}\r\n/**\r\n * Create a new websocket connection with the given callbacks.\r\n * @constructor\r\n * @implements {Transport}\r\n */\r\nvar WebSocketConnection = /** @class */ (function () {\r\n    /**\r\n     * @param {string} connId identifier for this transport\r\n     * @param {RepoInfo} repoInfo The info for the websocket endpoint.\r\n     * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\r\n     */\r\n    function WebSocketConnection(connId, repoInfo, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.keepaliveTimer = null;\r\n        this.frames = null;\r\n        this.totalFrames = 0;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.log_ = logWrapper(this.connId);\r\n        this.stats_ = StatsManager.getCollection(repoInfo);\r\n        this.connURL = WebSocketConnection.connectionURL_(repoInfo, transportSessionId, lastSessionId);\r\n    }\r\n    /**\r\n     * @param {RepoInfo} repoInfo The info for the websocket endpoint.\r\n     * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\r\n     * @return {string} connection url\r\n     * @private\r\n     */\r\n    WebSocketConnection.connectionURL_ = function (repoInfo, transportSessionId, lastSessionId) {\r\n        var urlParams = {};\r\n        urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n        if (!util.isNodeSdk() &&\r\n            typeof location !== 'undefined' &&\r\n            location.href &&\r\n            location.href.indexOf(FORGE_DOMAIN) !== -1) {\r\n            urlParams[REFERER_PARAM] = FORGE_REF;\r\n        }\r\n        if (transportSessionId) {\r\n            urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\r\n        }\r\n        if (lastSessionId) {\r\n            urlParams[LAST_SESSION_PARAM] = lastSessionId;\r\n        }\r\n        return repoInfo.connectionURL(WEBSOCKET, urlParams);\r\n    };\r\n    /**\r\n     *\r\n     * @param onMessage Callback when messages arrive\r\n     * @param onDisconnect Callback with connection lost.\r\n     */\r\n    WebSocketConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.onDisconnect = onDisconnect;\r\n        this.onMessage = onMessage;\r\n        this.log_('Websocket connecting to ' + this.connURL);\r\n        this.everConnected_ = false;\r\n        // Assume failure until proven otherwise.\r\n        PersistentStorage.set('previous_websocket_failure', true);\r\n        try {\r\n            if (util.isNodeSdk()) {\r\n                var device = util.CONSTANTS.NODE_ADMIN ? 'AdminNode' : 'Node';\r\n                // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\r\n                var options = {\r\n                    headers: {\r\n                        'User-Agent': \"Firebase/\" + PROTOCOL_VERSION + \"/\" + firebase.SDK_VERSION + \"/\" + process.platform + \"/\" + device\r\n                    }\r\n                };\r\n                // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\r\n                var env = process['env'];\r\n                var proxy = this.connURL.indexOf('wss://') == 0\r\n                    ? env['HTTPS_PROXY'] || env['https_proxy']\r\n                    : env['HTTP_PROXY'] || env['http_proxy'];\r\n                if (proxy) {\r\n                    options['proxy'] = { origin: proxy };\r\n                }\r\n                this.mySock = new WebSocketImpl(this.connURL, [], options);\r\n            }\r\n            else {\r\n                this.mySock = new WebSocketImpl(this.connURL);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this.log_('Error instantiating WebSocket.');\r\n            var error$$1 = e.message || e.data;\r\n            if (error$$1) {\r\n                this.log_(error$$1);\r\n            }\r\n            this.onClosed_();\r\n            return;\r\n        }\r\n        this.mySock.onopen = function () {\r\n            _this.log_('Websocket connected.');\r\n            _this.everConnected_ = true;\r\n        };\r\n        this.mySock.onclose = function () {\r\n            _this.log_('Websocket connection was disconnected.');\r\n            _this.mySock = null;\r\n            _this.onClosed_();\r\n        };\r\n        this.mySock.onmessage = function (m) {\r\n            _this.handleIncomingFrame(m);\r\n        };\r\n        this.mySock.onerror = function (e) {\r\n            _this.log_('WebSocket error.  Closing connection.');\r\n            var error$$1 = e.message || e.data;\r\n            if (error$$1) {\r\n                _this.log_(error$$1);\r\n            }\r\n            _this.onClosed_();\r\n        };\r\n    };\r\n    /**\r\n     * No-op for websockets, we don't need to do anything once the connection is confirmed as open\r\n     */\r\n    WebSocketConnection.prototype.start = function () { };\r\n    WebSocketConnection.forceDisallow = function () {\r\n        WebSocketConnection.forceDisallow_ = true;\r\n    };\r\n    WebSocketConnection.isAvailable = function () {\r\n        var isOldAndroid = false;\r\n        if (typeof navigator !== 'undefined' && navigator.userAgent) {\r\n            var oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\r\n            var oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\r\n            if (oldAndroidMatch && oldAndroidMatch.length > 1) {\r\n                if (parseFloat(oldAndroidMatch[1]) < 4.4) {\r\n                    isOldAndroid = true;\r\n                }\r\n            }\r\n        }\r\n        return (!isOldAndroid &&\r\n            WebSocketImpl !== null &&\r\n            !WebSocketConnection.forceDisallow_);\r\n    };\r\n    /**\r\n     * Returns true if we previously failed to connect with this transport.\r\n     * @return {boolean}\r\n     */\r\n    WebSocketConnection.previouslyFailed = function () {\r\n        // If our persistent storage is actually only in-memory storage,\r\n        // we default to assuming that it previously failed to be safe.\r\n        return (PersistentStorage.isInMemoryStorage ||\r\n            PersistentStorage.get('previous_websocket_failure') === true);\r\n    };\r\n    WebSocketConnection.prototype.markConnectionHealthy = function () {\r\n        PersistentStorage.remove('previous_websocket_failure');\r\n    };\r\n    WebSocketConnection.prototype.appendFrame_ = function (data) {\r\n        this.frames.push(data);\r\n        if (this.frames.length == this.totalFrames) {\r\n            var fullMess = this.frames.join('');\r\n            this.frames = null;\r\n            var jsonMess = util.jsonEval(fullMess);\r\n            //handle the message\r\n            this.onMessage(jsonMess);\r\n        }\r\n    };\r\n    /**\r\n     * @param {number} frameCount The number of frames we are expecting from the server\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.handleNewFrameCount_ = function (frameCount) {\r\n        this.totalFrames = frameCount;\r\n        this.frames = [];\r\n    };\r\n    /**\r\n     * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\r\n     * @param {!String} data\r\n     * @return {?String} Any remaining data to be process, or null if there is none\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.extractFrameCount_ = function (data) {\r\n        util.assert(this.frames === null, 'We already have a frame buffer');\r\n        // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\r\n        // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\r\n        if (data.length <= 6) {\r\n            var frameCount = Number(data);\r\n            if (!isNaN(frameCount)) {\r\n                this.handleNewFrameCount_(frameCount);\r\n                return null;\r\n            }\r\n        }\r\n        this.handleNewFrameCount_(1);\r\n        return data;\r\n    };\r\n    /**\r\n     * Process a websocket frame that has arrived from the server.\r\n     * @param mess The frame data\r\n     */\r\n    WebSocketConnection.prototype.handleIncomingFrame = function (mess) {\r\n        if (this.mySock === null)\r\n            return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\r\n        var data = mess['data'];\r\n        this.bytesReceived += data.length;\r\n        this.stats_.incrementCounter('bytes_received', data.length);\r\n        this.resetKeepAlive();\r\n        if (this.frames !== null) {\r\n            // we're buffering\r\n            this.appendFrame_(data);\r\n        }\r\n        else {\r\n            // try to parse out a frame count, otherwise, assume 1 and process it\r\n            var remainingData = this.extractFrameCount_(data);\r\n            if (remainingData !== null) {\r\n                this.appendFrame_(remainingData);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Send a message to the server\r\n     * @param {Object} data The JSON object to transmit\r\n     */\r\n    WebSocketConnection.prototype.send = function (data) {\r\n        this.resetKeepAlive();\r\n        var dataStr = util.stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //We can only fit a certain amount in each websocket frame, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\r\n        //Send the length header\r\n        if (dataSegs.length > 1) {\r\n            this.sendString_(String(dataSegs.length));\r\n        }\r\n        //Send the actual data in segments.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.sendString_(dataSegs[i]);\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.keepaliveTimer) {\r\n            clearInterval(this.keepaliveTimer);\r\n            this.keepaliveTimer = null;\r\n        }\r\n        if (this.mySock) {\r\n            this.mySock.close();\r\n            this.mySock = null;\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is closing itself');\r\n            this.shutdown_();\r\n            // since this is an internal close, trigger the close listener\r\n            if (this.onDisconnect) {\r\n                this.onDisconnect(this.everConnected_);\r\n                this.onDisconnect = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler.\r\n     * Close the websocket and kill the connection.\r\n     */\r\n    WebSocketConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is being closed');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\r\n     * the last activity.\r\n     */\r\n    WebSocketConnection.prototype.resetKeepAlive = function () {\r\n        var _this = this;\r\n        clearInterval(this.keepaliveTimer);\r\n        this.keepaliveTimer = setInterval(function () {\r\n            //If there has been no websocket activity for a while, send a no-op\r\n            if (_this.mySock) {\r\n                _this.sendString_('0');\r\n            }\r\n            _this.resetKeepAlive();\r\n        }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));\r\n    };\r\n    /**\r\n     * Send a string over the websocket.\r\n     *\r\n     * @param {string} str String to send.\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.sendString_ = function (str) {\r\n        // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\r\n        // calls for some unknown reason.  We treat these as an error and disconnect.\r\n        // See https://app.asana.com/0/58926111402292/68021340250410\r\n        try {\r\n            this.mySock.send(str);\r\n        }\r\n        catch (e) {\r\n            this.log_('Exception thrown from WebSocket.send():', e.message || e.data, 'Closing connection.');\r\n            setTimeout(this.onClosed_.bind(this), 0);\r\n        }\r\n    };\r\n    /**\r\n     * Number of response before we consider the connection \"healthy.\"\r\n     * @type {number}\r\n     */\r\n    WebSocketConnection.responsesRequiredToBeHealthy = 2;\r\n    /**\r\n     * Time to wait for the connection te become healthy before giving up.\r\n     * @type {number}\r\n     */\r\n    WebSocketConnection.healthyTimeout = 30000;\r\n    return WebSocketConnection;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\r\n * lifecycle.\r\n *\r\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\r\n * they are available.\r\n * @constructor\r\n */\r\nvar TransportManager = /** @class */ (function () {\r\n    /**\r\n     * @param {!RepoInfo} repoInfo Metadata around the namespace we're connecting to\r\n     */\r\n    function TransportManager(repoInfo) {\r\n        this.initTransports_(repoInfo);\r\n    }\r\n    Object.defineProperty(TransportManager, \"ALL_TRANSPORTS\", {\r\n        /**\r\n         * @const\r\n         * @type {!Array.<function(new:Transport, string, RepoInfo, string=)>}\r\n         */\r\n        get: function () {\r\n            return [BrowserPollConnection, WebSocketConnection];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @param {!RepoInfo} repoInfo\r\n     * @private\r\n     */\r\n    TransportManager.prototype.initTransports_ = function (repoInfo) {\r\n        var isWebSocketsAvailable = WebSocketConnection && WebSocketConnection['isAvailable']();\r\n        var isSkipPollConnection = isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\r\n        if (repoInfo.webSocketOnly) {\r\n            if (!isWebSocketsAvailable)\r\n                warn(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\");\r\n            isSkipPollConnection = true;\r\n        }\r\n        if (isSkipPollConnection) {\r\n            this.transports_ = [WebSocketConnection];\r\n        }\r\n        else {\r\n            var transports_1 = (this.transports_ = []);\r\n            each(TransportManager.ALL_TRANSPORTS, function (i, transport) {\r\n                if (transport && transport['isAvailable']()) {\r\n                    transports_1.push(transport);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @return {function(new:Transport, !string, !RepoInfo, string=, string=)} The constructor for the\r\n     * initial transport to use\r\n     */\r\n    TransportManager.prototype.initialTransport = function () {\r\n        if (this.transports_.length > 0) {\r\n            return this.transports_[0];\r\n        }\r\n        else {\r\n            throw new Error('No transports available');\r\n        }\r\n    };\r\n    /**\r\n     * @return {?function(new:Transport, function(),function(), string=)} The constructor for the next\r\n     * transport, or null\r\n     */\r\n    TransportManager.prototype.upgradeTransport = function () {\r\n        if (this.transports_.length > 1) {\r\n            return this.transports_[1];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    return TransportManager;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Abort upgrade attempt if it takes longer than 60s.\r\nvar UPGRADE_TIMEOUT = 60000;\r\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\r\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\r\nvar DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\r\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\r\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\r\n// but we've sent/received enough bytes, we don't cancel the connection.\r\nvar BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\r\nvar BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\r\nvar MESSAGE_TYPE = 't';\r\nvar MESSAGE_DATA = 'd';\r\nvar CONTROL_SHUTDOWN = 's';\r\nvar CONTROL_RESET = 'r';\r\nvar CONTROL_ERROR = 'e';\r\nvar CONTROL_PONG = 'o';\r\nvar SWITCH_ACK = 'a';\r\nvar END_TRANSMISSION = 'n';\r\nvar PING = 'p';\r\nvar SERVER_HELLO = 'h';\r\n/**\r\n * Creates a new real-time connection to the server using whichever method works\r\n * best in the current browser.\r\n *\r\n * @constructor\r\n */\r\nvar Connection = /** @class */ (function () {\r\n    /**\r\n     * @param {!string} id - an id for this connection\r\n     * @param {!RepoInfo} repoInfo_ - the info for the endpoint to connect to\r\n     * @param {function(Object)} onMessage_ - the callback to be triggered when a server-push message arrives\r\n     * @param {function(number, string)} onReady_ - the callback to be triggered when this connection is ready to send messages.\r\n     * @param {function()} onDisconnect_ - the callback to be triggered when a connection was lost\r\n     * @param {function(string)} onKill_ - the callback to be triggered when this connection has permanently shut down.\r\n     * @param {string=} lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\r\n     */\r\n    function Connection(id, repoInfo_, onMessage_, onReady_, onDisconnect_, onKill_, lastSessionId) {\r\n        this.id = id;\r\n        this.repoInfo_ = repoInfo_;\r\n        this.onMessage_ = onMessage_;\r\n        this.onReady_ = onReady_;\r\n        this.onDisconnect_ = onDisconnect_;\r\n        this.onKill_ = onKill_;\r\n        this.lastSessionId = lastSessionId;\r\n        this.connectionCount = 0;\r\n        this.pendingDataMessages = [];\r\n        this.state_ = 0 /* CONNECTING */;\r\n        this.log_ = logWrapper('c:' + this.id + ':');\r\n        this.transportManager_ = new TransportManager(repoInfo_);\r\n        this.log_('Connection created');\r\n        this.start_();\r\n    }\r\n    /**\r\n     * Starts a connection attempt\r\n     * @private\r\n     */\r\n    Connection.prototype.start_ = function () {\r\n        var _this = this;\r\n        var conn = this.transportManager_.initialTransport();\r\n        this.conn_ = new conn(this.nextTransportId_(), this.repoInfo_, undefined, this.lastSessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessageReceived = this.connReceiver_(this.conn_);\r\n        var onConnectionLost = this.disconnReceiver_(this.conn_);\r\n        this.tx_ = this.conn_;\r\n        this.rx_ = this.conn_;\r\n        this.secondaryConn_ = null;\r\n        this.isHealthy_ = false;\r\n        /*\r\n         * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\r\n         * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\r\n         * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\r\n         * still have the context of your originating frame.\r\n         */\r\n        setTimeout(function () {\r\n            // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\r\n            _this.conn_ && _this.conn_.open(onMessageReceived, onConnectionLost);\r\n        }, Math.floor(0));\r\n        var healthyTimeout_ms = conn['healthyTimeout'] || 0;\r\n        if (healthyTimeout_ms > 0) {\r\n            this.healthyTimeout_ = setTimeoutNonBlocking(function () {\r\n                _this.healthyTimeout_ = null;\r\n                if (!_this.isHealthy_) {\r\n                    if (_this.conn_ &&\r\n                        _this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has received ' +\r\n                            _this.conn_.bytesReceived +\r\n                            ' bytes.  Marking connection healthy.');\r\n                        _this.isHealthy_ = true;\r\n                        _this.conn_.markConnectionHealthy();\r\n                    }\r\n                    else if (_this.conn_ &&\r\n                        _this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has sent ' +\r\n                            _this.conn_.bytesSent +\r\n                            ' bytes.  Leaving connection alive.');\r\n                        // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\r\n                        // the server.\r\n                    }\r\n                    else {\r\n                        _this.log_('Closing unhealthy connection after timeout.');\r\n                        _this.close();\r\n                    }\r\n                }\r\n            }, Math.floor(healthyTimeout_ms));\r\n        }\r\n    };\r\n    /**\r\n     * @return {!string}\r\n     * @private\r\n     */\r\n    Connection.prototype.nextTransportId_ = function () {\r\n        return 'c:' + this.id + ':' + this.connectionCount++;\r\n    };\r\n    Connection.prototype.disconnReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (everConnected) {\r\n            if (conn === _this.conn_) {\r\n                _this.onConnectionLost_(everConnected);\r\n            }\r\n            else if (conn === _this.secondaryConn_) {\r\n                _this.log_('Secondary connection lost.');\r\n                _this.onSecondaryConnectionLost_();\r\n            }\r\n            else {\r\n                _this.log_('closing an old connection');\r\n            }\r\n        };\r\n    };\r\n    Connection.prototype.connReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (message) {\r\n            if (_this.state_ != 2 /* DISCONNECTED */) {\r\n                if (conn === _this.rx_) {\r\n                    _this.onPrimaryMessageReceived_(message);\r\n                }\r\n                else if (conn === _this.secondaryConn_) {\r\n                    _this.onSecondaryMessageReceived_(message);\r\n                }\r\n                else {\r\n                    _this.log_('message on old connection');\r\n                }\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     *\r\n     * @param {Object} dataMsg An arbitrary data message to be sent to the server\r\n     */\r\n    Connection.prototype.sendRequest = function (dataMsg) {\r\n        // wrap in a data message envelope and send it on\r\n        var msg = { t: 'd', d: dataMsg };\r\n        this.sendData_(msg);\r\n    };\r\n    Connection.prototype.tryCleanupConnection = function () {\r\n        if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\r\n            this.log_('cleaning up and promoting a connection: ' + this.secondaryConn_.connId);\r\n            this.conn_ = this.secondaryConn_;\r\n            this.secondaryConn_ = null;\r\n            // the server will shutdown the old connection\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryControl_ = function (controlData) {\r\n        if (MESSAGE_TYPE in controlData) {\r\n            var cmd = controlData[MESSAGE_TYPE];\r\n            if (cmd === SWITCH_ACK) {\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // Most likely the session wasn't valid. Abandon the switch attempt\r\n                this.log_('Got a reset on secondary, closing it');\r\n                this.secondaryConn_.close();\r\n                // If we were already using this connection for something, than we need to fully close\r\n                if (this.tx_ === this.secondaryConn_ ||\r\n                    this.rx_ === this.secondaryConn_) {\r\n                    this.close();\r\n                }\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on secondary.');\r\n                this.secondaryResponsesRequired_--;\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryMessageReceived_ = function (parsedData) {\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer == 'c') {\r\n            this.onSecondaryControl_(data);\r\n        }\r\n        else if (layer == 'd') {\r\n            // got a data message, but we're still second connection. Need to buffer it up\r\n            this.pendingDataMessages.push(data);\r\n        }\r\n        else {\r\n            throw new Error('Unknown protocol layer: ' + layer);\r\n        }\r\n    };\r\n    Connection.prototype.upgradeIfSecondaryHealthy_ = function () {\r\n        if (this.secondaryResponsesRequired_ <= 0) {\r\n            this.log_('Secondary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n            this.secondaryConn_.markConnectionHealthy();\r\n            this.proceedWithUpgrade_();\r\n        }\r\n        else {\r\n            // Send a ping to make sure the connection is healthy.\r\n            this.log_('sending ping on secondary.');\r\n            this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.proceedWithUpgrade_ = function () {\r\n        // tell this connection to consider itself open\r\n        this.secondaryConn_.start();\r\n        // send ack\r\n        this.log_('sending client ack on secondary');\r\n        this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\r\n        // send end packet on primary transport, switch to sending on this one\r\n        // can receive on this one, buffer responses until end received on primary transport\r\n        this.log_('Ending transmission on primary');\r\n        this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\r\n        this.tx_ = this.secondaryConn_;\r\n        this.tryCleanupConnection();\r\n    };\r\n    Connection.prototype.onPrimaryMessageReceived_ = function (parsedData) {\r\n        // Must refer to parsedData properties in quotes, so closure doesn't touch them.\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer == 'c') {\r\n            this.onControl_(data);\r\n        }\r\n        else if (layer == 'd') {\r\n            this.onDataMessage_(data);\r\n        }\r\n    };\r\n    Connection.prototype.onDataMessage_ = function (message) {\r\n        this.onPrimaryResponse_();\r\n        // We don't do anything with data messages, just kick them up a level\r\n        this.onMessage_(message);\r\n    };\r\n    Connection.prototype.onPrimaryResponse_ = function () {\r\n        if (!this.isHealthy_) {\r\n            this.primaryResponsesRequired_--;\r\n            if (this.primaryResponsesRequired_ <= 0) {\r\n                this.log_('Primary connection is healthy.');\r\n                this.isHealthy_ = true;\r\n                this.conn_.markConnectionHealthy();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onControl_ = function (controlData) {\r\n        var cmd = requireKey(MESSAGE_TYPE, controlData);\r\n        if (MESSAGE_DATA in controlData) {\r\n            var payload = controlData[MESSAGE_DATA];\r\n            if (cmd === SERVER_HELLO) {\r\n                this.onHandshake_(payload);\r\n            }\r\n            else if (cmd === END_TRANSMISSION) {\r\n                this.log_('recvd end transmission on primary');\r\n                this.rx_ = this.secondaryConn_;\r\n                for (var i = 0; i < this.pendingDataMessages.length; ++i) {\r\n                    this.onDataMessage_(this.pendingDataMessages[i]);\r\n                }\r\n                this.pendingDataMessages = [];\r\n                this.tryCleanupConnection();\r\n            }\r\n            else if (cmd === CONTROL_SHUTDOWN) {\r\n                // This was previously the 'onKill' callback passed to the lower-level connection\r\n                // payload in this case is the reason for the shutdown. Generally a human-readable error\r\n                this.onConnectionShutdown_(payload);\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // payload in this case is the host we should contact\r\n                this.onReset_(payload);\r\n            }\r\n            else if (cmd === CONTROL_ERROR) {\r\n                error('Server Error: ' + payload);\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on primary.');\r\n                this.onPrimaryResponse_();\r\n                this.sendPingOnPrimaryIfNecessary_();\r\n            }\r\n            else {\r\n                error('Unknown control packet command: ' + cmd);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {Object} handshake The handshake data returned from the server\r\n     * @private\r\n     */\r\n    Connection.prototype.onHandshake_ = function (handshake) {\r\n        var timestamp = handshake.ts;\r\n        var version = handshake.v;\r\n        var host = handshake.h;\r\n        this.sessionId = handshake.s;\r\n        this.repoInfo_.updateHost(host);\r\n        // if we've already closed the connection, then don't bother trying to progress further\r\n        if (this.state_ == 0 /* CONNECTING */) {\r\n            this.conn_.start();\r\n            this.onConnectionEstablished_(this.conn_, timestamp);\r\n            if (PROTOCOL_VERSION !== version) {\r\n                warn('Protocol version mismatch detected');\r\n            }\r\n            // TODO: do we want to upgrade? when? maybe a delay?\r\n            this.tryStartUpgrade_();\r\n        }\r\n    };\r\n    Connection.prototype.tryStartUpgrade_ = function () {\r\n        var conn = this.transportManager_.upgradeTransport();\r\n        if (conn) {\r\n            this.startUpgrade_(conn);\r\n        }\r\n    };\r\n    Connection.prototype.startUpgrade_ = function (conn) {\r\n        var _this = this;\r\n        this.secondaryConn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.sessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.secondaryResponsesRequired_ =\r\n            conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessage = this.connReceiver_(this.secondaryConn_);\r\n        var onDisconnect = this.disconnReceiver_(this.secondaryConn_);\r\n        this.secondaryConn_.open(onMessage, onDisconnect);\r\n        // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\r\n        setTimeoutNonBlocking(function () {\r\n            if (_this.secondaryConn_) {\r\n                _this.log_('Timed out trying to upgrade.');\r\n                _this.secondaryConn_.close();\r\n            }\r\n        }, Math.floor(UPGRADE_TIMEOUT));\r\n    };\r\n    Connection.prototype.onReset_ = function (host) {\r\n        this.log_('Reset packet received.  New host: ' + host);\r\n        this.repoInfo_.updateHost(host);\r\n        // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\r\n        // We don't currently support resets after the connection has already been established\r\n        if (this.state_ === 1 /* CONNECTED */) {\r\n            this.close();\r\n        }\r\n        else {\r\n            // Close whatever connections we have open and start again.\r\n            this.closeConnections_();\r\n            this.start_();\r\n        }\r\n    };\r\n    Connection.prototype.onConnectionEstablished_ = function (conn, timestamp) {\r\n        var _this = this;\r\n        this.log_('Realtime connection established.');\r\n        this.conn_ = conn;\r\n        this.state_ = 1 /* CONNECTED */;\r\n        if (this.onReady_) {\r\n            this.onReady_(timestamp, this.sessionId);\r\n            this.onReady_ = null;\r\n        }\r\n        // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\r\n        // send some pings.\r\n        if (this.primaryResponsesRequired_ === 0) {\r\n            this.log_('Primary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n        }\r\n        else {\r\n            setTimeoutNonBlocking(function () {\r\n                _this.sendPingOnPrimaryIfNecessary_();\r\n            }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\r\n        }\r\n    };\r\n    Connection.prototype.sendPingOnPrimaryIfNecessary_ = function () {\r\n        // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\r\n        if (!this.isHealthy_ && this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('sending ping on primary.');\r\n            this.sendData_({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryConnectionLost_ = function () {\r\n        var conn = this.secondaryConn_;\r\n        this.secondaryConn_ = null;\r\n        if (this.tx_ === conn || this.rx_ === conn) {\r\n            // we are relying on this connection already in some capacity. Therefore, a failure is real\r\n            this.close();\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {boolean} everConnected Whether or not the connection ever reached a server. Used to determine if\r\n     * we should flush the host cache\r\n     * @private\r\n     */\r\n    Connection.prototype.onConnectionLost_ = function (everConnected) {\r\n        this.conn_ = null;\r\n        // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\r\n        // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\r\n        if (!everConnected && this.state_ === 0 /* CONNECTING */) {\r\n            this.log_('Realtime connection failed.');\r\n            // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\r\n            if (this.repoInfo_.isCacheableHost()) {\r\n                PersistentStorage.remove('host:' + this.repoInfo_.host);\r\n                // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\r\n                this.repoInfo_.internalHost = this.repoInfo_.host;\r\n            }\r\n        }\r\n        else if (this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('Realtime connection lost.');\r\n        }\r\n        this.close();\r\n    };\r\n    /**\r\n     *\r\n     * @param {string} reason\r\n     * @private\r\n     */\r\n    Connection.prototype.onConnectionShutdown_ = function (reason) {\r\n        this.log_('Connection shutdown command received. Shutting down...');\r\n        if (this.onKill_) {\r\n            this.onKill_(reason);\r\n            this.onKill_ = null;\r\n        }\r\n        // We intentionally don't want to fire onDisconnect (kill is a different case),\r\n        // so clear the callback.\r\n        this.onDisconnect_ = null;\r\n        this.close();\r\n    };\r\n    Connection.prototype.sendData_ = function (data) {\r\n        if (this.state_ !== 1 /* CONNECTED */) {\r\n            throw 'Connection is not connected';\r\n        }\r\n        else {\r\n            this.tx_.send(data);\r\n        }\r\n    };\r\n    /**\r\n     * Cleans up this connection, calling the appropriate callbacks\r\n     */\r\n    Connection.prototype.close = function () {\r\n        if (this.state_ !== 2 /* DISCONNECTED */) {\r\n            this.log_('Closing realtime connection.');\r\n            this.state_ = 2 /* DISCONNECTED */;\r\n            this.closeConnections_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_();\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    Connection.prototype.closeConnections_ = function () {\r\n        this.log_('Shutting down all connections');\r\n        if (this.conn_) {\r\n            this.conn_.close();\r\n            this.conn_ = null;\r\n        }\r\n        if (this.secondaryConn_) {\r\n            this.secondaryConn_.close();\r\n            this.secondaryConn_ = null;\r\n        }\r\n        if (this.healthyTimeout_) {\r\n            clearTimeout(this.healthyTimeout_);\r\n            this.healthyTimeout_ = null;\r\n        }\r\n    };\r\n    return Connection;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Interface defining the set of actions that can be performed against the Firebase server\r\n * (basically corresponds to our wire protocol).\r\n *\r\n * @interface\r\n */\r\nvar ServerActions = /** @class */ (function () {\r\n    function ServerActions() {\r\n    }\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     * @param {string=} hash\r\n     */\r\n    ServerActions.prototype.put = function (pathString, data, onComplete, hash) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, ?string)} onComplete\r\n     * @param {string=} hash\r\n     */\r\n    ServerActions.prototype.merge = function (pathString, data, onComplete, hash) { };\r\n    /**\r\n     * Refreshes the auth token for the current connection.\r\n     * @param {string} token The authentication token\r\n     */\r\n    ServerActions.prototype.refreshAuthToken = function (token) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectPut = function (pathString, data, onComplete) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectMerge = function (pathString, data, onComplete) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectCancel = function (pathString, onComplete) { };\r\n    /**\r\n     * @param {Object.<string, *>} stats\r\n     */\r\n    ServerActions.prototype.reportStats = function (stats) { };\r\n    return ServerActions;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar RECONNECT_MIN_DELAY = 1000;\r\nvar RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\r\nvar RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\r\nvar RECONNECT_DELAY_MULTIPLIER = 1.3;\r\nvar RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\r\nvar SERVER_KILL_INTERRUPT_REASON = 'server_kill';\r\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\r\nvar INVALID_AUTH_TOKEN_THRESHOLD = 3;\r\n/**\r\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\r\n *\r\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\r\n * in quotes to make sure the closure compiler does not minify them.\r\n */\r\nvar PersistentConnection = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PersistentConnection, _super);\r\n    /**\r\n     * @implements {ServerActions}\r\n     * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to\r\n     * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server\r\n     * @param onConnectStatus_\r\n     * @param onServerInfoUpdate_\r\n     * @param authTokenProvider_\r\n     * @param authOverride_\r\n     */\r\n    function PersistentConnection(repoInfo_, onDataUpdate_, onConnectStatus_, onServerInfoUpdate_, authTokenProvider_, authOverride_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.onConnectStatus_ = onConnectStatus_;\r\n        _this.onServerInfoUpdate_ = onServerInfoUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        _this.authOverride_ = authOverride_;\r\n        // Used for diagnostic logging.\r\n        _this.id = PersistentConnection.nextPersistentConnectionId_++;\r\n        _this.log_ = logWrapper('p:' + _this.id + ':');\r\n        /** @private {Object} */\r\n        _this.interruptReasons_ = {};\r\n        _this.listens_ = {};\r\n        _this.outstandingPuts_ = [];\r\n        _this.outstandingPutCount_ = 0;\r\n        _this.onDisconnectRequestQueue_ = [];\r\n        _this.connected_ = false;\r\n        _this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n        _this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\r\n        _this.securityDebugCallback_ = null;\r\n        _this.lastSessionId = null;\r\n        /** @private {number|null} */\r\n        _this.establishConnectionTimer_ = null;\r\n        /** @private {boolean} */\r\n        _this.visible_ = false;\r\n        // Before we get connected, we keep a queue of pending messages to send.\r\n        _this.requestCBHash_ = {};\r\n        _this.requestNumber_ = 0;\r\n        /** @private {?{\r\n         *   sendRequest(Object),\r\n         *   close()\r\n         * }} */\r\n        _this.realtime_ = null;\r\n        /** @private {string|null} */\r\n        _this.authToken_ = null;\r\n        _this.forceTokenRefresh_ = false;\r\n        _this.invalidAuthTokenCount_ = 0;\r\n        _this.firstConnection_ = true;\r\n        _this.lastConnectionAttemptTime_ = null;\r\n        _this.lastConnectionEstablishedTime_ = null;\r\n        if (authOverride_ && !util.isNodeSdk()) {\r\n            throw new Error('Auth override specified in options, but not supported on non Node.js platforms');\r\n        }\r\n        _this.scheduleConnect_(0);\r\n        VisibilityMonitor.getInstance().on('visible', _this.onVisible_, _this);\r\n        if (repoInfo_.host.indexOf('fblocal') === -1) {\r\n            OnlineMonitor.getInstance().on('online', _this.onOnline_, _this);\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {!string} action\r\n     * @param {*} body\r\n     * @param {function(*)=} onResponse\r\n     * @protected\r\n     */\r\n    PersistentConnection.prototype.sendRequest = function (action, body, onResponse) {\r\n        var curReqNum = ++this.requestNumber_;\r\n        var msg = { r: curReqNum, a: action, b: body };\r\n        this.log_(util.stringify(msg));\r\n        util.assert(this.connected_, \"sendRequest call when we're not connected not allowed.\");\r\n        this.realtime_.sendRequest(msg);\r\n        if (onResponse) {\r\n            this.requestCBHash_[curReqNum] = onResponse;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        var queryId = query.queryIdentifier();\r\n        var pathString = query.path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + queryId);\r\n        this.listens_[pathString] = this.listens_[pathString] || {};\r\n        util.assert(query.getQueryParams().isDefault() ||\r\n            !query.getQueryParams().loadsAllData(), 'listen() called for non-default but complete query');\r\n        util.assert(!this.listens_[pathString][queryId], 'listen() called twice for same path/queryId.');\r\n        var listenSpec = {\r\n            onComplete: onComplete,\r\n            hashFn: currentHashFn,\r\n            query: query,\r\n            tag: tag\r\n        };\r\n        this.listens_[pathString][queryId] = listenSpec;\r\n        if (this.connected_) {\r\n            this.sendListen_(listenSpec);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!{onComplete(),\r\n     *           hashFn():!string,\r\n     *           query: !Query,\r\n     *           tag: ?number}} listenSpec\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.sendListen_ = function (listenSpec) {\r\n        var _this = this;\r\n        var query = listenSpec.query;\r\n        var pathString = query.path.toString();\r\n        var queryId = query.queryIdentifier();\r\n        this.log_('Listen on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'q';\r\n        // Only bother to send query if it's non-default.\r\n        if (listenSpec.tag) {\r\n            req['q'] = query.queryObject();\r\n            req['t'] = listenSpec.tag;\r\n        }\r\n        req[ /*hash*/'h'] = listenSpec.hashFn();\r\n        this.sendRequest(action, req, function (message) {\r\n            var payload = message[ /*data*/'d'];\r\n            var status = message[ /*status*/'s'];\r\n            // print warnings in any case...\r\n            PersistentConnection.warnOnListenWarnings_(payload, query);\r\n            var currentListenSpec = _this.listens_[pathString] && _this.listens_[pathString][queryId];\r\n            // only trigger actions if the listen hasn't been removed and readded\r\n            if (currentListenSpec === listenSpec) {\r\n                _this.log_('listen response', message);\r\n                if (status !== 'ok') {\r\n                    _this.removeListen_(pathString, queryId);\r\n                }\r\n                if (listenSpec.onComplete) {\r\n                    listenSpec.onComplete(status, payload);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @param {*} payload\r\n     * @param {!Query} query\r\n     * @private\r\n     */\r\n    PersistentConnection.warnOnListenWarnings_ = function (payload, query) {\r\n        if (payload && typeof payload === 'object' && util.contains(payload, 'w')) {\r\n            var warnings = util.safeGet(payload, 'w');\r\n            if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\r\n                var indexSpec = '\".indexOn\": \"' +\r\n                    query\r\n                        .getQueryParams()\r\n                        .getIndex()\r\n                        .toString() +\r\n                    '\"';\r\n                var indexPath = query.path.toString();\r\n                warn(\"Using an unspecified index. Your data will be downloaded and \" +\r\n                    (\"filtered on the client. Consider adding \" + indexSpec + \" at \") +\r\n                    (indexPath + \" to your security rules for better performance.\"));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.refreshAuthToken = function (token) {\r\n        this.authToken_ = token;\r\n        this.log_('Auth token refreshed');\r\n        if (this.authToken_) {\r\n            this.tryAuth();\r\n        }\r\n        else {\r\n            //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\r\n            //the credential so we dont become authenticated next time we connect.\r\n            if (this.connected_) {\r\n                this.sendRequest('unauth', {}, function () { });\r\n            }\r\n        }\r\n        this.reduceReconnectDelayIfAdminCredential_(token);\r\n    };\r\n    /**\r\n     * @param {!string} credential\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.reduceReconnectDelayIfAdminCredential_ = function (credential) {\r\n        // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\r\n        // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\r\n        var isFirebaseSecret = credential && credential.length === 40;\r\n        if (isFirebaseSecret || util.isAdmin(credential)) {\r\n            this.log_('Admin auth credential detected.  Reducing max reconnect time.');\r\n            this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n        }\r\n    };\r\n    /**\r\n     * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\r\n     * a auth revoked (the connection is closed).\r\n     */\r\n    PersistentConnection.prototype.tryAuth = function () {\r\n        var _this = this;\r\n        if (this.connected_ && this.authToken_) {\r\n            var token_1 = this.authToken_;\r\n            var authMethod = util.isValidFormat(token_1) ? 'auth' : 'gauth';\r\n            var requestData = { cred: token_1 };\r\n            if (this.authOverride_ === null) {\r\n                requestData['noauth'] = true;\r\n            }\r\n            else if (typeof this.authOverride_ === 'object') {\r\n                requestData['authvar'] = this.authOverride_;\r\n            }\r\n            this.sendRequest(authMethod, requestData, function (res) {\r\n                var status = res[ /*status*/'s'];\r\n                var data = res[ /*data*/'d'] || 'error';\r\n                if (_this.authToken_ === token_1) {\r\n                    if (status === 'ok') {\r\n                        _this.invalidAuthTokenCount_ = 0;\r\n                    }\r\n                    else {\r\n                        // Triggers reconnect and force refresh for auth token\r\n                        _this.onAuthRevoked_(status, data);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.unlisten = function (query, tag) {\r\n        var pathString = query.path.toString();\r\n        var queryId = query.queryIdentifier();\r\n        this.log_('Unlisten called for ' + pathString + ' ' + queryId);\r\n        util.assert(query.getQueryParams().isDefault() ||\r\n            !query.getQueryParams().loadsAllData(), 'unlisten() called for non-default but complete query');\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && this.connected_) {\r\n            this.sendUnlisten_(pathString, queryId, query.queryObject(), tag);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendUnlisten_ = function (pathString, queryId, queryObj, tag) {\r\n        this.log_('Unlisten on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'n';\r\n        // Only bother sending queryId if it's non-default.\r\n        if (tag) {\r\n            req['q'] = queryObj;\r\n            req['t'] = tag;\r\n        }\r\n        this.sendRequest(action, req);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectPut = function (pathString, data, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('o', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'o',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectMerge = function (pathString, data, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('om', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'om',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectCancel = function (pathString, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('oc', pathString, null, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'oc',\r\n                data: null,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendOnDisconnect_ = function (action, pathString, data, onComplete) {\r\n        var request = { /*path*/ p: pathString, /*data*/ d: data };\r\n        this.log_('onDisconnect ' + action, request);\r\n        this.sendRequest(action, request, function (response) {\r\n            if (onComplete) {\r\n                setTimeout(function () {\r\n                    onComplete(response[ /*status*/'s'], response[ /* data */'d']);\r\n                }, Math.floor(0));\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('p', pathString, data, onComplete, hash);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.merge = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('m', pathString, data, onComplete, hash);\r\n    };\r\n    PersistentConnection.prototype.putInternal = function (action, pathString, data, onComplete, hash) {\r\n        var request = {\r\n            /*path*/ p: pathString,\r\n            /*data*/ d: data\r\n        };\r\n        if (hash !== undefined)\r\n            request[ /*hash*/'h'] = hash;\r\n        // TODO: Only keep track of the most recent put for a given path?\r\n        this.outstandingPuts_.push({\r\n            action: action,\r\n            request: request,\r\n            onComplete: onComplete\r\n        });\r\n        this.outstandingPutCount_++;\r\n        var index = this.outstandingPuts_.length - 1;\r\n        if (this.connected_) {\r\n            this.sendPut_(index);\r\n        }\r\n        else {\r\n            this.log_('Buffering put: ' + pathString);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendPut_ = function (index) {\r\n        var _this = this;\r\n        var action = this.outstandingPuts_[index].action;\r\n        var request = this.outstandingPuts_[index].request;\r\n        var onComplete = this.outstandingPuts_[index].onComplete;\r\n        this.outstandingPuts_[index].queued = this.connected_;\r\n        this.sendRequest(action, request, function (message) {\r\n            _this.log_(action + ' response', message);\r\n            delete _this.outstandingPuts_[index];\r\n            _this.outstandingPutCount_--;\r\n            // Clean up array occasionally.\r\n            if (_this.outstandingPutCount_ === 0) {\r\n                _this.outstandingPuts_ = [];\r\n            }\r\n            if (onComplete)\r\n                onComplete(message[ /*status*/'s'], message[ /* data */'d']);\r\n        });\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.reportStats = function (stats) {\r\n        var _this = this;\r\n        // If we're not connected, we just drop the stats.\r\n        if (this.connected_) {\r\n            var request = { /*counters*/ c: stats };\r\n            this.log_('reportStats', request);\r\n            this.sendRequest(/*stats*/ 's', request, function (result) {\r\n                var status = result[ /*status*/'s'];\r\n                if (status !== 'ok') {\r\n                    var errorReason = result[ /* data */'d'];\r\n                    _this.log_('reportStats', 'Error sending stats: ' + errorReason);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @param {*} message\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.onDataMessage_ = function (message) {\r\n        if ('r' in message) {\r\n            // this is a response\r\n            this.log_('from server: ' + util.stringify(message));\r\n            var reqNum = message['r'];\r\n            var onResponse = this.requestCBHash_[reqNum];\r\n            if (onResponse) {\r\n                delete this.requestCBHash_[reqNum];\r\n                onResponse(message[ /*body*/'b']);\r\n            }\r\n        }\r\n        else if ('error' in message) {\r\n            throw 'A server-side error has occurred: ' + message['error'];\r\n        }\r\n        else if ('a' in message) {\r\n            // a and b are action and body, respectively\r\n            this.onDataPush_(message['a'], message['b']);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDataPush_ = function (action, body) {\r\n        this.log_('handleServerMessage', action, body);\r\n        if (action === 'd')\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge*/ false, body['t']);\r\n        else if (action === 'm')\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge=*/ true, body['t']);\r\n        else if (action === 'c')\r\n            this.onListenRevoked_(body[ /*path*/'p'], body[ /*query*/'q']);\r\n        else if (action === 'ac')\r\n            this.onAuthRevoked_(body[ /*status code*/'s'], body[ /* explanation */'d']);\r\n        else if (action === 'sd')\r\n            this.onSecurityDebugPacket_(body);\r\n        else\r\n            error('Unrecognized action received from server: ' +\r\n                util.stringify(action) +\r\n                '\\nAre you using the latest client?');\r\n    };\r\n    PersistentConnection.prototype.onReady_ = function (timestamp, sessionId) {\r\n        this.log_('connection ready');\r\n        this.connected_ = true;\r\n        this.lastConnectionEstablishedTime_ = new Date().getTime();\r\n        this.handleTimestamp_(timestamp);\r\n        this.lastSessionId = sessionId;\r\n        if (this.firstConnection_) {\r\n            this.sendConnectStats_();\r\n        }\r\n        this.restoreState_();\r\n        this.firstConnection_ = false;\r\n        this.onConnectStatus_(true);\r\n    };\r\n    PersistentConnection.prototype.scheduleConnect_ = function (timeout) {\r\n        var _this = this;\r\n        util.assert(!this.realtime_, \"Scheduling a connect when we're already connected/ing?\");\r\n        if (this.establishConnectionTimer_) {\r\n            clearTimeout(this.establishConnectionTimer_);\r\n        }\r\n        // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\r\n        // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\r\n        this.establishConnectionTimer_ = setTimeout(function () {\r\n            _this.establishConnectionTimer_ = null;\r\n            _this.establishConnection_();\r\n        }, Math.floor(timeout));\r\n    };\r\n    /**\r\n     * @param {boolean} visible\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.onVisible_ = function (visible) {\r\n        // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\r\n        if (visible &&\r\n            !this.visible_ &&\r\n            this.reconnectDelay_ === this.maxReconnectDelay_) {\r\n            this.log_('Window became visible.  Reducing delay.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        this.visible_ = visible;\r\n    };\r\n    PersistentConnection.prototype.onOnline_ = function (online) {\r\n        if (online) {\r\n            this.log_('Browser went online.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        else {\r\n            this.log_('Browser went offline.  Killing connection.');\r\n            if (this.realtime_) {\r\n                this.realtime_.close();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onRealtimeDisconnect_ = function () {\r\n        this.log_('data client disconnected');\r\n        this.connected_ = false;\r\n        this.realtime_ = null;\r\n        // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\r\n        this.cancelSentTransactions_();\r\n        // Clear out the pending requests.\r\n        this.requestCBHash_ = {};\r\n        if (this.shouldReconnect_()) {\r\n            if (!this.visible_) {\r\n                this.log_(\"Window isn't visible.  Delaying reconnect.\");\r\n                this.reconnectDelay_ = this.maxReconnectDelay_;\r\n                this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            }\r\n            else if (this.lastConnectionEstablishedTime_) {\r\n                // If we've been connected long enough, reset reconnect delay to minimum.\r\n                var timeSinceLastConnectSucceeded = new Date().getTime() - this.lastConnectionEstablishedTime_;\r\n                if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT)\r\n                    this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n                this.lastConnectionEstablishedTime_ = null;\r\n            }\r\n            var timeSinceLastConnectAttempt = new Date().getTime() - this.lastConnectionAttemptTime_;\r\n            var reconnectDelay = Math.max(0, this.reconnectDelay_ - timeSinceLastConnectAttempt);\r\n            reconnectDelay = Math.random() * reconnectDelay;\r\n            this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\r\n            this.scheduleConnect_(reconnectDelay);\r\n            // Adjust reconnect delay for next time.\r\n            this.reconnectDelay_ = Math.min(this.maxReconnectDelay_, this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER);\r\n        }\r\n        this.onConnectStatus_(false);\r\n    };\r\n    PersistentConnection.prototype.establishConnection_ = function () {\r\n        if (this.shouldReconnect_()) {\r\n            this.log_('Making a connection attempt');\r\n            this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            this.lastConnectionEstablishedTime_ = null;\r\n            var onDataMessage_1 = this.onDataMessage_.bind(this);\r\n            var onReady_1 = this.onReady_.bind(this);\r\n            var onDisconnect_1 = this.onRealtimeDisconnect_.bind(this);\r\n            var connId_1 = this.id + ':' + PersistentConnection.nextConnectionId_++;\r\n            var self_1 = this;\r\n            var lastSessionId_1 = this.lastSessionId;\r\n            var canceled_1 = false;\r\n            var connection_1 = null;\r\n            var closeFn_1 = function () {\r\n                if (connection_1) {\r\n                    connection_1.close();\r\n                }\r\n                else {\r\n                    canceled_1 = true;\r\n                    onDisconnect_1();\r\n                }\r\n            };\r\n            var sendRequestFn = function (msg) {\r\n                util.assert(connection_1, \"sendRequest call when we're not connected not allowed.\");\r\n                connection_1.sendRequest(msg);\r\n            };\r\n            this.realtime_ = {\r\n                close: closeFn_1,\r\n                sendRequest: sendRequestFn\r\n            };\r\n            var forceRefresh = this.forceTokenRefresh_;\r\n            this.forceTokenRefresh_ = false;\r\n            // First fetch auth token, and establish connection after fetching the token was successful\r\n            this.authTokenProvider_\r\n                .getToken(forceRefresh)\r\n                .then(function (result) {\r\n                if (!canceled_1) {\r\n                    log('getToken() completed. Creating connection.');\r\n                    self_1.authToken_ = result && result.accessToken;\r\n                    connection_1 = new Connection(connId_1, self_1.repoInfo_, onDataMessage_1, onReady_1, onDisconnect_1, \r\n                    /* onKill= */ function (reason) {\r\n                        warn(reason + ' (' + self_1.repoInfo_.toString() + ')');\r\n                        self_1.interrupt(SERVER_KILL_INTERRUPT_REASON);\r\n                    }, lastSessionId_1);\r\n                }\r\n                else {\r\n                    log('getToken() completed but was canceled');\r\n                }\r\n            })\r\n                .then(null, function (error$$1) {\r\n                self_1.log_('Failed to get token: ' + error$$1);\r\n                if (!canceled_1) {\r\n                    if (util.CONSTANTS.NODE_ADMIN) {\r\n                        // This may be a critical error for the Admin Node.js SDK, so log a warning.\r\n                        // But getToken() may also just have temporarily failed, so we still want to\r\n                        // continue retrying.\r\n                        warn(error$$1);\r\n                    }\r\n                    closeFn_1();\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} reason\r\n     */\r\n    PersistentConnection.prototype.interrupt = function (reason) {\r\n        log('Interrupting connection for reason: ' + reason);\r\n        this.interruptReasons_[reason] = true;\r\n        if (this.realtime_) {\r\n            this.realtime_.close();\r\n        }\r\n        else {\r\n            if (this.establishConnectionTimer_) {\r\n                clearTimeout(this.establishConnectionTimer_);\r\n                this.establishConnectionTimer_ = null;\r\n            }\r\n            if (this.connected_) {\r\n                this.onRealtimeDisconnect_();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} reason\r\n     */\r\n    PersistentConnection.prototype.resume = function (reason) {\r\n        log('Resuming connection for reason: ' + reason);\r\n        delete this.interruptReasons_[reason];\r\n        if (util.isEmpty(this.interruptReasons_)) {\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.handleTimestamp_ = function (timestamp) {\r\n        var delta = timestamp - new Date().getTime();\r\n        this.onServerInfoUpdate_({ serverTimeOffset: delta });\r\n    };\r\n    PersistentConnection.prototype.cancelSentTransactions_ = function () {\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            var put = this.outstandingPuts_[i];\r\n            if (put && /*hash*/ 'h' in put.request && put.queued) {\r\n                if (put.onComplete)\r\n                    put.onComplete('disconnect');\r\n                delete this.outstandingPuts_[i];\r\n                this.outstandingPutCount_--;\r\n            }\r\n        }\r\n        // Clean up array occasionally.\r\n        if (this.outstandingPutCount_ === 0)\r\n            this.outstandingPuts_ = [];\r\n    };\r\n    /**\r\n     * @param {!string} pathString\r\n     * @param {Array.<*>=} query\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.onListenRevoked_ = function (pathString, query) {\r\n        // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\r\n        var queryId;\r\n        if (!query) {\r\n            queryId = 'default';\r\n        }\r\n        else {\r\n            queryId = query.map(function (q) { return ObjectToUniqueKey(q); }).join('$');\r\n        }\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && listen.onComplete)\r\n            listen.onComplete('permission_denied');\r\n    };\r\n    /**\r\n     * @param {!string} pathString\r\n     * @param {!string} queryId\r\n     * @return {{queries:Array.<Query>, onComplete:function(string)}}\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.removeListen_ = function (pathString, queryId) {\r\n        var normalizedPathString = new Path(pathString).toString(); // normalize path.\r\n        var listen;\r\n        if (this.listens_[normalizedPathString] !== undefined) {\r\n            listen = this.listens_[normalizedPathString][queryId];\r\n            delete this.listens_[normalizedPathString][queryId];\r\n            if (util.getCount(this.listens_[normalizedPathString]) === 0) {\r\n                delete this.listens_[normalizedPathString];\r\n            }\r\n        }\r\n        else {\r\n            // all listens for this path has already been removed\r\n            listen = undefined;\r\n        }\r\n        return listen;\r\n    };\r\n    PersistentConnection.prototype.onAuthRevoked_ = function (statusCode, explanation) {\r\n        log('Auth token revoked: ' + statusCode + '/' + explanation);\r\n        this.authToken_ = null;\r\n        this.forceTokenRefresh_ = true;\r\n        this.realtime_.close();\r\n        if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\r\n            // We'll wait a couple times before logging the warning / increasing the\r\n            // retry period since oauth tokens will report as \"invalid\" if they're\r\n            // just expired. Plus there may be transient issues that resolve themselves.\r\n            this.invalidAuthTokenCount_++;\r\n            if (this.invalidAuthTokenCount_ >= INVALID_AUTH_TOKEN_THRESHOLD) {\r\n                // Set a long reconnect delay because recovery is unlikely\r\n                this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n                // Notify the auth token provider that the token is invalid, which will log\r\n                // a warning\r\n                this.authTokenProvider_.notifyForInvalidToken();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onSecurityDebugPacket_ = function (body) {\r\n        if (this.securityDebugCallback_) {\r\n            this.securityDebugCallback_(body);\r\n        }\r\n        else {\r\n            if ('msg' in body) {\r\n                console.log('FIREBASE: ' + body['msg'].replace('\\n', '\\nFIREBASE: '));\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.restoreState_ = function () {\r\n        var _this = this;\r\n        //Re-authenticate ourselves if we have a credential stored.\r\n        this.tryAuth();\r\n        // Puts depend on having received the corresponding data update from the server before they complete, so we must\r\n        // make sure to send listens before puts.\r\n        util.forEach(this.listens_, function (pathString, queries) {\r\n            util.forEach(queries, function (key, listenSpec) {\r\n                _this.sendListen_(listenSpec);\r\n            });\r\n        });\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            if (this.outstandingPuts_[i])\r\n                this.sendPut_(i);\r\n        }\r\n        while (this.onDisconnectRequestQueue_.length) {\r\n            var request = this.onDisconnectRequestQueue_.shift();\r\n            this.sendOnDisconnect_(request.action, request.pathString, request.data, request.onComplete);\r\n        }\r\n    };\r\n    /**\r\n     * Sends client stats for first connection\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.sendConnectStats_ = function () {\r\n        var stats = {};\r\n        var clientName = 'js';\r\n        if (util.CONSTANTS.NODE_ADMIN) {\r\n            clientName = 'admin_node';\r\n        }\r\n        else if (util.CONSTANTS.NODE_CLIENT) {\r\n            clientName = 'node';\r\n        }\r\n        stats['sdk.' + clientName + '.' + firebase.SDK_VERSION.replace(/\\./g, '-')] = 1;\r\n        if (util.isMobileCordova()) {\r\n            stats['framework.cordova'] = 1;\r\n        }\r\n        else if (util.isReactNative()) {\r\n            stats['framework.reactnative'] = 1;\r\n        }\r\n        this.reportStats(stats);\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.shouldReconnect_ = function () {\r\n        var online = OnlineMonitor.getInstance().currentlyOnline();\r\n        return util.isEmpty(this.interruptReasons_) && online;\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    PersistentConnection.nextPersistentConnectionId_ = 0;\r\n    /**\r\n     * Counter for number of connections created. Mainly used for tagging in the logs\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    PersistentConnection.nextConnectionId_ = 0;\r\n    return PersistentConnection;\r\n}(ServerActions));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of ServerActions that communicates with the server via REST requests.\r\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\r\n * persistent connection (using WebSockets or long-polling)\r\n */\r\nvar ReadonlyRestClient = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ReadonlyRestClient, _super);\r\n    /**\r\n     * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to\r\n     * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server\r\n     * @param {AuthTokenProvider} authTokenProvider_\r\n     * @implements {ServerActions}\r\n     */\r\n    function ReadonlyRestClient(repoInfo_, onDataUpdate_, authTokenProvider_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        /** @private {function(...[*])} */\r\n        _this.log_ = logWrapper('p:rest:');\r\n        /**\r\n         * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\r\n         * that's been removed. :-/\r\n         *\r\n         * @private {!Object.<string, !Object>}\r\n         */\r\n        _this.listens_ = {};\r\n        return _this;\r\n    }\r\n    ReadonlyRestClient.prototype.reportStats = function (stats) {\r\n        throw new Error('Method not implemented.');\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @param {?number=} tag\r\n     * @return {string}\r\n     * @private\r\n     */\r\n    ReadonlyRestClient.getListenId_ = function (query, tag) {\r\n        if (tag !== undefined) {\r\n            return 'tag$' + tag;\r\n        }\r\n        else {\r\n            util.assert(query.getQueryParams().isDefault(), \"should have a tag if it's not a default query.\");\r\n            return query.path.toString();\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        var _this = this;\r\n        var pathString = query.path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + query.queryIdentifier());\r\n        // Mark this listener so we can tell if it's removed.\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        var thisListen = {};\r\n        this.listens_[listenId] = thisListen;\r\n        var queryStringParamaters = query\r\n            .getQueryParams()\r\n            .toRestQueryStringParameters();\r\n        this.restRequest_(pathString + '.json', queryStringParamaters, function (error$$1, result) {\r\n            var data = result;\r\n            if (error$$1 === 404) {\r\n                data = null;\r\n                error$$1 = null;\r\n            }\r\n            if (error$$1 === null) {\r\n                _this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\r\n            }\r\n            if (util.safeGet(_this.listens_, listenId) === thisListen) {\r\n                var status_1;\r\n                if (!error$$1) {\r\n                    status_1 = 'ok';\r\n                }\r\n                else if (error$$1 == 401) {\r\n                    status_1 = 'permission_denied';\r\n                }\r\n                else {\r\n                    status_1 = 'rest_error:' + error$$1;\r\n                }\r\n                onComplete(status_1, null);\r\n            }\r\n        });\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.unlisten = function (query, tag) {\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        delete this.listens_[listenId];\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.refreshAuthToken = function (token) {\r\n        // no-op since we just always call getToken.\r\n    };\r\n    /**\r\n     * Performs a REST request to the given path, with the provided query string parameters,\r\n     * and any auth credentials we have.\r\n     *\r\n     * @param {!string} pathString\r\n     * @param {!Object.<string, *>} queryStringParameters\r\n     * @param {?function(?number, *=)} callback\r\n     * @private\r\n     */\r\n    ReadonlyRestClient.prototype.restRequest_ = function (pathString, queryStringParameters, callback) {\r\n        var _this = this;\r\n        if (queryStringParameters === void 0) { queryStringParameters = {}; }\r\n        queryStringParameters['format'] = 'export';\r\n        this.authTokenProvider_\r\n            .getToken(/*forceRefresh=*/ false)\r\n            .then(function (authTokenData) {\r\n            var authToken = authTokenData && authTokenData.accessToken;\r\n            if (authToken) {\r\n                queryStringParameters['auth'] = authToken;\r\n            }\r\n            var url = (_this.repoInfo_.secure ? 'https://' : 'http://') +\r\n                _this.repoInfo_.host +\r\n                pathString +\r\n                '?' +\r\n                util.querystring(queryStringParameters);\r\n            _this.log_('Sending REST request for ' + url);\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.onreadystatechange = function () {\r\n                if (callback && xhr.readyState === 4) {\r\n                    _this.log_('REST Response for ' + url + ' received. status:', xhr.status, 'response:', xhr.responseText);\r\n                    var res = null;\r\n                    if (xhr.status >= 200 && xhr.status < 300) {\r\n                        try {\r\n                            res = util.jsonEval(xhr.responseText);\r\n                        }\r\n                        catch (e) {\r\n                            warn('Failed to parse JSON response for ' +\r\n                                url +\r\n                                ': ' +\r\n                                xhr.responseText);\r\n                        }\r\n                        callback(null, res);\r\n                    }\r\n                    else {\r\n                        // 401 and 404 are expected.\r\n                        if (xhr.status !== 401 && xhr.status !== 404) {\r\n                            warn('Got unsuccessful REST response for ' +\r\n                                url +\r\n                                ' Status: ' +\r\n                                xhr.status);\r\n                        }\r\n                        callback(xhr.status);\r\n                    }\r\n                    callback = null;\r\n                }\r\n            };\r\n            xhr.open('GET', url, /*asynchronous=*/ true);\r\n            xhr.send();\r\n        });\r\n    };\r\n    return ReadonlyRestClient;\r\n}(ServerActions));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar INTERRUPT_REASON = 'repo_interrupt';\r\n/**\r\n * A connection to a single data repository.\r\n */\r\nvar Repo = /** @class */ (function () {\r\n    /**\r\n     * @param {!RepoInfo} repoInfo_\r\n     * @param {boolean} forceRestClient\r\n     * @param {!FirebaseApp} app\r\n     */\r\n    function Repo(repoInfo_, forceRestClient, app) {\r\n        var _this = this;\r\n        this.repoInfo_ = repoInfo_;\r\n        this.app = app;\r\n        this.dataUpdateCount = 0;\r\n        this.statsListener_ = null;\r\n        this.eventQueue_ = new EventQueue();\r\n        this.nextWriteId_ = 1;\r\n        this.interceptServerDataCallback_ = null;\r\n        // A list of data pieces and paths to be set when this client disconnects.\r\n        this.onDisconnect_ = new SparseSnapshotTree();\r\n        /**\r\n         * TODO: This should be @private but it's used by test_access.js and internal.js\r\n         * @type {?PersistentConnection}\r\n         */\r\n        this.persistentConnection_ = null;\r\n        /** @type {!AuthTokenProvider} */\r\n        var authTokenProvider = new AuthTokenProvider(app);\r\n        this.stats_ = StatsManager.getCollection(repoInfo_);\r\n        if (forceRestClient || beingCrawled()) {\r\n            this.server_ = new ReadonlyRestClient(this.repoInfo_, this.onDataUpdate_.bind(this), authTokenProvider);\r\n            // Minor hack: Fire onConnect immediately, since there's no actual connection.\r\n            setTimeout(this.onConnectStatus_.bind(this, true), 0);\r\n        }\r\n        else {\r\n            var authOverride = app.options['databaseAuthVariableOverride'];\r\n            // Validate authOverride\r\n            if (typeof authOverride !== 'undefined' && authOverride !== null) {\r\n                if (typeof authOverride !== 'object') {\r\n                    throw new Error('Only objects are supported for option databaseAuthVariableOverride');\r\n                }\r\n                try {\r\n                    util.stringify(authOverride);\r\n                }\r\n                catch (e) {\r\n                    throw new Error('Invalid authOverride provided: ' + e);\r\n                }\r\n            }\r\n            this.persistentConnection_ = new PersistentConnection(this.repoInfo_, this.onDataUpdate_.bind(this), this.onConnectStatus_.bind(this), this.onServerInfoUpdate_.bind(this), authTokenProvider, authOverride);\r\n            this.server_ = this.persistentConnection_;\r\n        }\r\n        authTokenProvider.addTokenChangeListener(function (token) {\r\n            _this.server_.refreshAuthToken(token);\r\n        });\r\n        // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\r\n        // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\r\n        this.statsReporter_ = StatsManager.getOrCreateReporter(repoInfo_, function () { return new StatsReporter(_this.stats_, _this.server_); });\r\n        this.transactions_init_();\r\n        // Used for .info.\r\n        this.infoData_ = new SnapshotHolder();\r\n        this.infoSyncTree_ = new SyncTree({\r\n            startListening: function (query, tag, currentHashFn, onComplete) {\r\n                var infoEvents = [];\r\n                var node = _this.infoData_.getNode(query.path);\r\n                // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\r\n                // on initial data...\r\n                if (!node.isEmpty()) {\r\n                    infoEvents = _this.infoSyncTree_.applyServerOverwrite(query.path, node);\r\n                    setTimeout(function () {\r\n                        onComplete('ok');\r\n                    }, 0);\r\n                }\r\n                return infoEvents;\r\n            },\r\n            stopListening: function () { }\r\n        });\r\n        this.updateInfo_('connected', false);\r\n        this.serverSyncTree_ = new SyncTree({\r\n            startListening: function (query, tag, currentHashFn, onComplete) {\r\n                _this.server_.listen(query, currentHashFn, tag, function (status, data) {\r\n                    var events = onComplete(status, data);\r\n                    _this.eventQueue_.raiseEventsForChangedPath(query.path, events);\r\n                });\r\n                // No synchronous events for network-backed sync trees\r\n                return [];\r\n            },\r\n            stopListening: function (query, tag) {\r\n                _this.server_.unlisten(query, tag);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @return {string}  The URL corresponding to the root of this Firebase.\r\n     */\r\n    Repo.prototype.toString = function () {\r\n        return ((this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host);\r\n    };\r\n    /**\r\n     * @return {!string} The namespace represented by the repo.\r\n     */\r\n    Repo.prototype.name = function () {\r\n        return this.repoInfo_.namespace;\r\n    };\r\n    /**\r\n     * @return {!number} The time in milliseconds, taking the server offset into account if we have one.\r\n     */\r\n    Repo.prototype.serverTime = function () {\r\n        var offsetNode = this.infoData_.getNode(new Path('.info/serverTimeOffset'));\r\n        var offset = offsetNode.val() || 0;\r\n        return new Date().getTime() + offset;\r\n    };\r\n    /**\r\n     * Generate ServerValues using some variables from the repo object.\r\n     * @return {!Object}\r\n     */\r\n    Repo.prototype.generateServerValues = function () {\r\n        return generateWithValues({\r\n            timestamp: this.serverTime()\r\n        });\r\n    };\r\n    /**\r\n     * Called by realtime when we get new messages from the server.\r\n     *\r\n     * @private\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {boolean} isMerge\r\n     * @param {?number} tag\r\n     */\r\n    Repo.prototype.onDataUpdate_ = function (pathString, data, isMerge, tag) {\r\n        // For testing.\r\n        this.dataUpdateCount++;\r\n        var path = new Path(pathString);\r\n        data = this.interceptServerDataCallback_\r\n            ? this.interceptServerDataCallback_(pathString, data)\r\n            : data;\r\n        var events = [];\r\n        if (tag) {\r\n            if (isMerge) {\r\n                var taggedChildren = util.map(data, function (raw) {\r\n                    return nodeFromJSON$1(raw);\r\n                });\r\n                events = this.serverSyncTree_.applyTaggedQueryMerge(path, taggedChildren, tag);\r\n            }\r\n            else {\r\n                var taggedSnap = nodeFromJSON$1(data);\r\n                events = this.serverSyncTree_.applyTaggedQueryOverwrite(path, taggedSnap, tag);\r\n            }\r\n        }\r\n        else if (isMerge) {\r\n            var changedChildren = util.map(data, function (raw) {\r\n                return nodeFromJSON$1(raw);\r\n            });\r\n            events = this.serverSyncTree_.applyServerMerge(path, changedChildren);\r\n        }\r\n        else {\r\n            var snap = nodeFromJSON$1(data);\r\n            events = this.serverSyncTree_.applyServerOverwrite(path, snap);\r\n        }\r\n        var affectedPath = path;\r\n        if (events.length > 0) {\r\n            // Since we have a listener outstanding for each transaction, receiving any events\r\n            // is a proxy for some change having occurred.\r\n            affectedPath = this.rerunTransactions_(path);\r\n        }\r\n        this.eventQueue_.raiseEventsForChangedPath(affectedPath, events);\r\n    };\r\n    /**\r\n     * TODO: This should be @private but it's used by test_access.js and internal.js\r\n     * @param {?function(!string, *):*} callback\r\n     * @private\r\n     */\r\n    Repo.prototype.interceptServerData_ = function (callback) {\r\n        this.interceptServerDataCallback_ = callback;\r\n    };\r\n    /**\r\n     * @param {!boolean} connectStatus\r\n     * @private\r\n     */\r\n    Repo.prototype.onConnectStatus_ = function (connectStatus) {\r\n        this.updateInfo_('connected', connectStatus);\r\n        if (connectStatus === false) {\r\n            this.runOnDisconnectEvents_();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Object} updates\r\n     * @private\r\n     */\r\n    Repo.prototype.onServerInfoUpdate_ = function (updates) {\r\n        var _this = this;\r\n        each(updates, function (value, key) {\r\n            _this.updateInfo_(key, value);\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @param {!string} pathString\r\n     * @param {*} value\r\n     * @private\r\n     */\r\n    Repo.prototype.updateInfo_ = function (pathString, value) {\r\n        var path = new Path('/.info/' + pathString);\r\n        var newNode = nodeFromJSON$1(value);\r\n        this.infoData_.updateSnapshot(path, newNode);\r\n        var events = this.infoSyncTree_.applyServerOverwrite(path, newNode);\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n    };\r\n    /**\r\n     * @return {!number}\r\n     * @private\r\n     */\r\n    Repo.prototype.getNextWriteId_ = function () {\r\n        return this.nextWriteId_++;\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {*} newVal\r\n     * @param {number|string|null} newPriority\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.setWithPriority = function (path, newVal, newPriority, onComplete) {\r\n        var _this = this;\r\n        this.log_('set', {\r\n            path: path.toString(),\r\n            value: newVal,\r\n            priority: newPriority\r\n        });\r\n        // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\r\n        // (b) store unresolved paths on JSON parse\r\n        var serverValues = this.generateServerValues();\r\n        var newNodeUnresolved = nodeFromJSON$1(newVal, newPriority);\r\n        var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\r\n        var writeId = this.getNextWriteId_();\r\n        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, writeId, true);\r\n        this.eventQueue_.queueEvents(events);\r\n        this.server_.put(path.toString(), newNodeUnresolved.val(/*export=*/ true), function (status, errorReason) {\r\n            var success = status === 'ok';\r\n            if (!success) {\r\n                warn('set at ' + path + ' failed: ' + status);\r\n            }\r\n            var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId, !success);\r\n            _this.eventQueue_.raiseEventsForChangedPath(path, clearEvents);\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n        var affectedPath = this.abortTransactions_(path);\r\n        this.rerunTransactions_(affectedPath);\r\n        // We queued the events above, so just flush the queue here\r\n        this.eventQueue_.raiseEventsForChangedPath(affectedPath, []);\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!Object} childrenToMerge\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.update = function (path, childrenToMerge, onComplete) {\r\n        var _this = this;\r\n        this.log_('update', { path: path.toString(), value: childrenToMerge });\r\n        // Start with our existing data and merge each child into it.\r\n        var empty = true;\r\n        var serverValues = this.generateServerValues();\r\n        var changedChildren = {};\r\n        util.forEach(childrenToMerge, function (changedKey, changedValue) {\r\n            empty = false;\r\n            var newNodeUnresolved = nodeFromJSON$1(changedValue);\r\n            changedChildren[changedKey] = resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\r\n        });\r\n        if (!empty) {\r\n            var writeId_1 = this.getNextWriteId_();\r\n            var events = this.serverSyncTree_.applyUserMerge(path, changedChildren, writeId_1);\r\n            this.eventQueue_.queueEvents(events);\r\n            this.server_.merge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n                var success = status === 'ok';\r\n                if (!success) {\r\n                    warn('update at ' + path + ' failed: ' + status);\r\n                }\r\n                var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId_1, !success);\r\n                var affectedPath = clearEvents.length > 0 ? _this.rerunTransactions_(path) : path;\r\n                _this.eventQueue_.raiseEventsForChangedPath(affectedPath, clearEvents);\r\n                _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n            });\r\n            util.forEach(childrenToMerge, function (changedPath) {\r\n                var affectedPath = _this.abortTransactions_(path.child(changedPath));\r\n                _this.rerunTransactions_(affectedPath);\r\n            });\r\n            // We queued the events above, so just flush the queue here\r\n            this.eventQueue_.raiseEventsForChangedPath(path, []);\r\n        }\r\n        else {\r\n            log(\"update() called with empty data.  Don't do anything.\");\r\n            this.callOnCompleteCallback(onComplete, 'ok');\r\n        }\r\n    };\r\n    /**\r\n     * Applies all of the changes stored up in the onDisconnect_ tree.\r\n     * @private\r\n     */\r\n    Repo.prototype.runOnDisconnectEvents_ = function () {\r\n        var _this = this;\r\n        this.log_('onDisconnectEvents');\r\n        var serverValues = this.generateServerValues();\r\n        var resolvedOnDisconnectTree = resolveDeferredValueTree(this.onDisconnect_, serverValues);\r\n        var events = [];\r\n        resolvedOnDisconnectTree.forEachTree(Path.Empty, function (path, snap) {\r\n            events = events.concat(_this.serverSyncTree_.applyServerOverwrite(path, snap));\r\n            var affectedPath = _this.abortTransactions_(path);\r\n            _this.rerunTransactions_(affectedPath);\r\n        });\r\n        this.onDisconnect_ = new SparseSnapshotTree();\r\n        this.eventQueue_.raiseEventsForChangedPath(Path.Empty, events);\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.onDisconnectCancel = function (path, onComplete) {\r\n        var _this = this;\r\n        this.server_.onDisconnectCancel(path.toString(), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.forget(path);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {*} value\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.onDisconnectSet = function (path, value, onComplete) {\r\n        var _this = this;\r\n        var newNode = nodeFromJSON$1(value);\r\n        this.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.remember(path, newNode);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {*} value\r\n     * @param {*} priority\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.onDisconnectSetWithPriority = function (path, value, priority, onComplete) {\r\n        var _this = this;\r\n        var newNode = nodeFromJSON$1(value, priority);\r\n        this.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.remember(path, newNode);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {*} childrenToMerge\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.onDisconnectUpdate = function (path, childrenToMerge, onComplete) {\r\n        var _this = this;\r\n        if (util.isEmpty(childrenToMerge)) {\r\n            log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\r\n            this.callOnCompleteCallback(onComplete, 'ok');\r\n            return;\r\n        }\r\n        this.server_.onDisconnectMerge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                util.forEach(childrenToMerge, function (childName, childNode) {\r\n                    var newChildNode = nodeFromJSON$1(childNode);\r\n                    _this.onDisconnect_.remember(path.child(childName), newChildNode);\r\n                });\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @param {!EventRegistration} eventRegistration\r\n     */\r\n    Repo.prototype.addEventCallbackForQuery = function (query, eventRegistration) {\r\n        var events;\r\n        if (query.path.getFront() === '.info') {\r\n            events = this.infoSyncTree_.addEventRegistration(query, eventRegistration);\r\n        }\r\n        else {\r\n            events = this.serverSyncTree_.addEventRegistration(query, eventRegistration);\r\n        }\r\n        this.eventQueue_.raiseEventsAtPath(query.path, events);\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @param {?EventRegistration} eventRegistration\r\n     */\r\n    Repo.prototype.removeEventCallbackForQuery = function (query, eventRegistration) {\r\n        // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\r\n        // a little bit by handling the return values anyways.\r\n        var events;\r\n        if (query.path.getFront() === '.info') {\r\n            events = this.infoSyncTree_.removeEventRegistration(query, eventRegistration);\r\n        }\r\n        else {\r\n            events = this.serverSyncTree_.removeEventRegistration(query, eventRegistration);\r\n        }\r\n        this.eventQueue_.raiseEventsAtPath(query.path, events);\r\n    };\r\n    Repo.prototype.interrupt = function () {\r\n        if (this.persistentConnection_) {\r\n            this.persistentConnection_.interrupt(INTERRUPT_REASON);\r\n        }\r\n    };\r\n    Repo.prototype.resume = function () {\r\n        if (this.persistentConnection_) {\r\n            this.persistentConnection_.resume(INTERRUPT_REASON);\r\n        }\r\n    };\r\n    Repo.prototype.stats = function (showDelta) {\r\n        if (showDelta === void 0) { showDelta = false; }\r\n        if (typeof console === 'undefined')\r\n            return;\r\n        var stats;\r\n        if (showDelta) {\r\n            if (!this.statsListener_)\r\n                this.statsListener_ = new StatsListener(this.stats_);\r\n            stats = this.statsListener_.get();\r\n        }\r\n        else {\r\n            stats = this.stats_.get();\r\n        }\r\n        var longestName = Object.keys(stats).reduce(function (previousValue, currentValue) {\r\n            return Math.max(currentValue.length, previousValue);\r\n        }, 0);\r\n        util.forEach(stats, function (stat, value) {\r\n            // pad stat names to be the same length (plus 2 extra spaces).\r\n            for (var i = stat.length; i < longestName + 2; i++)\r\n                stat += ' ';\r\n            console.log(stat + value);\r\n        });\r\n    };\r\n    Repo.prototype.statsIncrementCounter = function (metric) {\r\n        this.stats_.incrementCounter(metric);\r\n        this.statsReporter_.includeStat(metric);\r\n    };\r\n    /**\r\n     * @param {...*} var_args\r\n     * @private\r\n     */\r\n    Repo.prototype.log_ = function () {\r\n        var var_args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            var_args[_i] = arguments[_i];\r\n        }\r\n        var prefix = '';\r\n        if (this.persistentConnection_) {\r\n            prefix = this.persistentConnection_.id + ':';\r\n        }\r\n        log.apply(void 0, [prefix].concat(var_args));\r\n    };\r\n    /**\r\n     * @param {?function(?Error, *=)} callback\r\n     * @param {!string} status\r\n     * @param {?string=} errorReason\r\n     */\r\n    Repo.prototype.callOnCompleteCallback = function (callback, status, errorReason) {\r\n        if (callback) {\r\n            exceptionGuard(function () {\r\n                if (status == 'ok') {\r\n                    callback(null);\r\n                }\r\n                else {\r\n                    var code = (status || 'error').toUpperCase();\r\n                    var message = code;\r\n                    if (errorReason)\r\n                        message += ': ' + errorReason;\r\n                    var error$$1 = new Error(message);\r\n                    error$$1.code = code;\r\n                    callback(error$$1);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    Object.defineProperty(Repo.prototype, \"database\", {\r\n        get: function () {\r\n            return this.__database || (this.__database = new Database(this));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Repo;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */\r\nvar RangedFilter = /** @class */ (function () {\r\n    /**\r\n     * @param {!QueryParams} params\r\n     */\r\n    function RangedFilter(params) {\r\n        this.indexedFilter_ = new IndexedFilter(params.getIndex());\r\n        this.index_ = params.getIndex();\r\n        this.startPost_ = RangedFilter.getStartPost_(params);\r\n        this.endPost_ = RangedFilter.getEndPost_(params);\r\n    }\r\n    /**\r\n     * @return {!NamedNode}\r\n     */\r\n    RangedFilter.prototype.getStartPost = function () {\r\n        return this.startPost_;\r\n    };\r\n    /**\r\n     * @return {!NamedNode}\r\n     */\r\n    RangedFilter.prototype.getEndPost = function () {\r\n        return this.endPost_;\r\n    };\r\n    /**\r\n     * @param {!NamedNode} node\r\n     * @return {boolean}\r\n     */\r\n    RangedFilter.prototype.matches = function (node) {\r\n        return (this.index_.compare(this.getStartPost(), node) <= 0 &&\r\n            this.index_.compare(node, this.getEndPost()) <= 0);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        return this.indexedFilter_.updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (newSnap.isLeafNode()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            newSnap = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var filtered = newSnap.withIndex(this.index_);\r\n        // Don't support priorities on queries\r\n        filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n        var self = this;\r\n        newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            if (!self.matches(new NamedNode(key, childNode))) {\r\n                filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\r\n            }\r\n        });\r\n        return this.indexedFilter_.updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.getIndexedFilter = function () {\r\n        return this.indexedFilter_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @param {!QueryParams} params\r\n     * @return {!NamedNode}\r\n     * @private\r\n     */\r\n    RangedFilter.getStartPost_ = function (params) {\r\n        if (params.hasStart()) {\r\n            var startName = params.getIndexStartName();\r\n            return params.getIndex().makePost(params.getIndexStartValue(), startName);\r\n        }\r\n        else {\r\n            return params.getIndex().minPost();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!QueryParams} params\r\n     * @return {!NamedNode}\r\n     * @private\r\n     */\r\n    RangedFilter.getEndPost_ = function (params) {\r\n        if (params.hasEnd()) {\r\n            var endName = params.getIndexEndName();\r\n            return params.getIndex().makePost(params.getIndexEndValue(), endName);\r\n        }\r\n        else {\r\n            return params.getIndex().maxPost();\r\n        }\r\n    };\r\n    return RangedFilter;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */\r\nvar LimitedFilter = /** @class */ (function () {\r\n    /**\r\n     * @param {!QueryParams} params\r\n     */\r\n    function LimitedFilter(params) {\r\n        this.rangedFilter_ = new RangedFilter(params);\r\n        this.index_ = params.getIndex();\r\n        this.limit_ = params.getLimit();\r\n        this.reverse_ = !params.isViewFromLeft();\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        if (snap.getImmediateChild(key).equals(newChild)) {\r\n            // No change\r\n            return snap;\r\n        }\r\n        else if (snap.numChildren() < this.limit_) {\r\n            return this.rangedFilter_\r\n                .getIndexedFilter()\r\n                .updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n        }\r\n        else {\r\n            return this.fullLimitUpdateChild_(snap, key, newChild, source, optChangeAccumulator);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        var filtered;\r\n        if (newSnap.isLeafNode() || newSnap.isEmpty()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n        }\r\n        else {\r\n            if (this.limit_ * 2 < newSnap.numChildren() &&\r\n                newSnap.isIndexed(this.index_)) {\r\n                // Easier to build up a snapshot, since what we're given has more than twice the elements we want\r\n                filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n                // anchor to the startPost, endPost, or last element as appropriate\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(), this.index_);\r\n                }\r\n                else {\r\n                    iterator = newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(), this.index_);\r\n                }\r\n                var count = 0;\r\n                while (iterator.hasNext() && count < this.limit_) {\r\n                    var next = iterator.getNext();\r\n                    var inRange = void 0;\r\n                    if (this.reverse_) {\r\n                        inRange =\r\n                            this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;\r\n                    }\r\n                    else {\r\n                        inRange =\r\n                            this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;\r\n                    }\r\n                    if (inRange) {\r\n                        filtered = filtered.updateImmediateChild(next.name, next.node);\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        // if we have reached the end post, we cannot keep adding elemments\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\r\n                filtered = newSnap.withIndex(this.index_);\r\n                // Don't support priorities on queries\r\n                filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n                var startPost = void 0;\r\n                var endPost = void 0;\r\n                var cmp = void 0;\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = filtered.getReverseIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getEndPost();\r\n                    endPost = this.rangedFilter_.getStartPost();\r\n                    var indexCompare_1 = this.index_.getCompare();\r\n                    cmp = function (a, b) { return indexCompare_1(b, a); };\r\n                }\r\n                else {\r\n                    iterator = filtered.getIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getStartPost();\r\n                    endPost = this.rangedFilter_.getEndPost();\r\n                    cmp = this.index_.getCompare();\r\n                }\r\n                var count = 0;\r\n                var foundStartPost = false;\r\n                while (iterator.hasNext()) {\r\n                    var next = iterator.getNext();\r\n                    if (!foundStartPost && cmp(startPost, next) <= 0) {\r\n                        // start adding\r\n                        foundStartPost = true;\r\n                    }\r\n                    var inRange = foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;\r\n                    if (inRange) {\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        filtered = filtered.updateImmediateChild(next.name, ChildrenNode.EMPTY_NODE);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return this.rangedFilter_\r\n            .getIndexedFilter()\r\n            .updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.getIndexedFilter = function () {\r\n        return this.rangedFilter_.getIndexedFilter();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @param {!Node} snap\r\n     * @param {string} childKey\r\n     * @param {!Node} childSnap\r\n     * @param {!CompleteChildSource} source\r\n     * @param {?ChildChangeAccumulator} changeAccumulator\r\n     * @return {!Node}\r\n     * @private\r\n     */\r\n    LimitedFilter.prototype.fullLimitUpdateChild_ = function (snap, childKey, childSnap, source, changeAccumulator) {\r\n        // TODO: rename all cache stuff etc to general snap terminology\r\n        var cmp;\r\n        if (this.reverse_) {\r\n            var indexCmp_1 = this.index_.getCompare();\r\n            cmp = function (a, b) { return indexCmp_1(b, a); };\r\n        }\r\n        else {\r\n            cmp = this.index_.getCompare();\r\n        }\r\n        var oldEventCache = snap;\r\n        util.assert(oldEventCache.numChildren() == this.limit_, '');\r\n        var newChildNamedNode = new NamedNode(childKey, childSnap);\r\n        var windowBoundary = this.reverse_\r\n            ? oldEventCache.getFirstChild(this.index_)\r\n            : oldEventCache.getLastChild(this.index_);\r\n        var inRange = this.rangedFilter_.matches(newChildNamedNode);\r\n        if (oldEventCache.hasChild(childKey)) {\r\n            var oldChildSnap = oldEventCache.getImmediateChild(childKey);\r\n            var nextChild = source.getChildAfterChild(this.index_, windowBoundary, this.reverse_);\r\n            while (nextChild != null &&\r\n                (nextChild.name == childKey || oldEventCache.hasChild(nextChild.name))) {\r\n                // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\r\n                // been applied to the limited filter yet. Ignore this next child which will be updated later in\r\n                // the limited filter...\r\n                nextChild = source.getChildAfterChild(this.index_, nextChild, this.reverse_);\r\n            }\r\n            var compareNext = nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\r\n            var remainsInWindow = inRange && !childSnap.isEmpty() && compareNext >= 0;\r\n            if (remainsInWindow) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childChangedChange(childKey, childSnap, oldChildSnap));\r\n                }\r\n                return oldEventCache.updateImmediateChild(childKey, childSnap);\r\n            }\r\n            else {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childRemovedChange(childKey, oldChildSnap));\r\n                }\r\n                var newEventCache = oldEventCache.updateImmediateChild(childKey, ChildrenNode.EMPTY_NODE);\r\n                var nextChildInRange = nextChild != null && this.rangedFilter_.matches(nextChild);\r\n                if (nextChildInRange) {\r\n                    if (changeAccumulator != null) {\r\n                        changeAccumulator.trackChildChange(Change.childAddedChange(nextChild.name, nextChild.node));\r\n                    }\r\n                    return newEventCache.updateImmediateChild(nextChild.name, nextChild.node);\r\n                }\r\n                else {\r\n                    return newEventCache;\r\n                }\r\n            }\r\n        }\r\n        else if (childSnap.isEmpty()) {\r\n            // we're deleting a node, but it was not in the window, so ignore it\r\n            return snap;\r\n        }\r\n        else if (inRange) {\r\n            if (cmp(windowBoundary, newChildNamedNode) >= 0) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childRemovedChange(windowBoundary.name, windowBoundary.node));\r\n                    changeAccumulator.trackChildChange(Change.childAddedChange(childKey, childSnap));\r\n                }\r\n                return oldEventCache\r\n                    .updateImmediateChild(childKey, childSnap)\r\n                    .updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\r\n            }\r\n            else {\r\n                return snap;\r\n            }\r\n        }\r\n        else {\r\n            return snap;\r\n        }\r\n    };\r\n    return LimitedFilter;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\r\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\r\n * user-facing API level, so it is not done here.\r\n * @constructor\r\n */\r\nvar QueryParams = /** @class */ (function () {\r\n    function QueryParams() {\r\n        this.limitSet_ = false;\r\n        this.startSet_ = false;\r\n        this.startNameSet_ = false;\r\n        this.endSet_ = false;\r\n        this.endNameSet_ = false;\r\n        this.limit_ = 0;\r\n        this.viewFrom_ = '';\r\n        this.indexStartValue_ = null;\r\n        this.indexStartName_ = '';\r\n        this.indexEndValue_ = null;\r\n        this.indexEndName_ = '';\r\n        this.index_ = PRIORITY_INDEX;\r\n    }\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasStart = function () {\r\n        return this.startSet_;\r\n    };\r\n    /**\r\n     * @return {boolean} True if it would return from left.\r\n     */\r\n    QueryParams.prototype.isViewFromLeft = function () {\r\n        if (this.viewFrom_ === '') {\r\n            // limit(), rather than limitToFirst or limitToLast was called.\r\n            // This means that only one of startSet_ and endSet_ is true. Use them\r\n            // to calculate which side of the view to anchor to. If neither is set,\r\n            // anchor to the end.\r\n            return this.startSet_;\r\n        }\r\n        else {\r\n            return (this.viewFrom_ === QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT);\r\n        }\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true\r\n     * @return {*}\r\n     */\r\n    QueryParams.prototype.getIndexStartValue = function () {\r\n        util.assert(this.startSet_, 'Only valid if start has been set');\r\n        return this.indexStartValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true.\r\n     * Returns the starting key name for the range defined by these query parameters\r\n     * @return {!string}\r\n     */\r\n    QueryParams.prototype.getIndexStartName = function () {\r\n        util.assert(this.startSet_, 'Only valid if start has been set');\r\n        if (this.startNameSet_) {\r\n            return this.indexStartName_;\r\n        }\r\n        else {\r\n            return MIN_NAME;\r\n        }\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasEnd = function () {\r\n        return this.endSet_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * @return {*}\r\n     */\r\n    QueryParams.prototype.getIndexEndValue = function () {\r\n        util.assert(this.endSet_, 'Only valid if end has been set');\r\n        return this.indexEndValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * Returns the end key name for the range defined by these query parameters\r\n     * @return {!string}\r\n     */\r\n    QueryParams.prototype.getIndexEndName = function () {\r\n        util.assert(this.endSet_, 'Only valid if end has been set');\r\n        if (this.endNameSet_) {\r\n            return this.indexEndName_;\r\n        }\r\n        else {\r\n            return MAX_NAME;\r\n        }\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasLimit = function () {\r\n        return this.limitSet_;\r\n    };\r\n    /**\r\n     * @return {boolean} True if a limit has been set and it has been explicitly anchored\r\n     */\r\n    QueryParams.prototype.hasAnchoredLimit = function () {\r\n        return this.limitSet_ && this.viewFrom_ !== '';\r\n    };\r\n    /**\r\n     * Only valid to call if hasLimit() returns true\r\n     * @return {!number}\r\n     */\r\n    QueryParams.prototype.getLimit = function () {\r\n        util.assert(this.limitSet_, 'Only valid if limit has been set');\r\n        return this.limit_;\r\n    };\r\n    /**\r\n     * @return {!Index}\r\n     */\r\n    QueryParams.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @return {!QueryParams}\r\n     * @private\r\n     */\r\n    QueryParams.prototype.copy_ = function () {\r\n        var copy = new QueryParams();\r\n        copy.limitSet_ = this.limitSet_;\r\n        copy.limit_ = this.limit_;\r\n        copy.startSet_ = this.startSet_;\r\n        copy.indexStartValue_ = this.indexStartValue_;\r\n        copy.startNameSet_ = this.startNameSet_;\r\n        copy.indexStartName_ = this.indexStartName_;\r\n        copy.endSet_ = this.endSet_;\r\n        copy.indexEndValue_ = this.indexEndValue_;\r\n        copy.endNameSet_ = this.endNameSet_;\r\n        copy.indexEndName_ = this.indexEndName_;\r\n        copy.index_ = this.index_;\r\n        copy.viewFrom_ = this.viewFrom_;\r\n        return copy;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limit = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = '';\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limitToFirst = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limitToLast = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_RIGHT;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {?string=} key\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.startAt = function (indexValue, key) {\r\n        var newParams = this.copy_();\r\n        newParams.startSet_ = true;\r\n        if (!(indexValue !== undefined)) {\r\n            indexValue = null;\r\n        }\r\n        newParams.indexStartValue_ = indexValue;\r\n        if (key != null) {\r\n            newParams.startNameSet_ = true;\r\n            newParams.indexStartName_ = key;\r\n        }\r\n        else {\r\n            newParams.startNameSet_ = false;\r\n            newParams.indexStartName_ = '';\r\n        }\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {?string=} key\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.endAt = function (indexValue, key) {\r\n        var newParams = this.copy_();\r\n        newParams.endSet_ = true;\r\n        if (!(indexValue !== undefined)) {\r\n            indexValue = null;\r\n        }\r\n        newParams.indexEndValue_ = indexValue;\r\n        if (key !== undefined) {\r\n            newParams.endNameSet_ = true;\r\n            newParams.indexEndName_ = key;\r\n        }\r\n        else {\r\n            newParams.endNameSet_ = false;\r\n            newParams.indexEndName_ = '';\r\n        }\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!Index} index\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.orderBy = function (index) {\r\n        var newParams = this.copy_();\r\n        newParams.index_ = index;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @return {!Object}\r\n     */\r\n    QueryParams.prototype.getQueryObject = function () {\r\n        var WIRE_PROTOCOL_CONSTANTS = QueryParams.WIRE_PROTOCOL_CONSTANTS_;\r\n        var obj = {};\r\n        if (this.startSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE] = this.indexStartValue_;\r\n            if (this.startNameSet_) {\r\n                obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME] = this.indexStartName_;\r\n            }\r\n        }\r\n        if (this.endSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE] = this.indexEndValue_;\r\n            if (this.endNameSet_) {\r\n                obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME] = this.indexEndName_;\r\n            }\r\n        }\r\n        if (this.limitSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.LIMIT] = this.limit_;\r\n            var viewFrom = this.viewFrom_;\r\n            if (viewFrom === '') {\r\n                if (this.isViewFromLeft()) {\r\n                    viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\r\n                }\r\n                else {\r\n                    viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\r\n                }\r\n            }\r\n            obj[WIRE_PROTOCOL_CONSTANTS.VIEW_FROM] = viewFrom;\r\n        }\r\n        // For now, priority index is the default, so we only specify if it's some other index\r\n        if (this.index_ !== PRIORITY_INDEX) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX] = this.index_.toString();\r\n        }\r\n        return obj;\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.loadsAllData = function () {\r\n        return !(this.startSet_ || this.endSet_ || this.limitSet_);\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.isDefault = function () {\r\n        return this.loadsAllData() && this.index_ == PRIORITY_INDEX;\r\n    };\r\n    /**\r\n     * @return {!NodeFilter}\r\n     */\r\n    QueryParams.prototype.getNodeFilter = function () {\r\n        if (this.loadsAllData()) {\r\n            return new IndexedFilter(this.getIndex());\r\n        }\r\n        else if (this.hasLimit()) {\r\n            return new LimitedFilter(this);\r\n        }\r\n        else {\r\n            return new RangedFilter(this);\r\n        }\r\n    };\r\n    /**\r\n     * Returns a set of REST query string parameters representing this query.\r\n     *\r\n     * @return {!Object.<string,*>} query string parameters\r\n     */\r\n    QueryParams.prototype.toRestQueryStringParameters = function () {\r\n        var REST_CONSTANTS = QueryParams.REST_QUERY_CONSTANTS_;\r\n        var qs = {};\r\n        if (this.isDefault()) {\r\n            return qs;\r\n        }\r\n        var orderBy;\r\n        if (this.index_ === PRIORITY_INDEX) {\r\n            orderBy = REST_CONSTANTS.PRIORITY_INDEX;\r\n        }\r\n        else if (this.index_ === VALUE_INDEX) {\r\n            orderBy = REST_CONSTANTS.VALUE_INDEX;\r\n        }\r\n        else if (this.index_ === KEY_INDEX) {\r\n            orderBy = REST_CONSTANTS.KEY_INDEX;\r\n        }\r\n        else {\r\n            util.assert(this.index_ instanceof PathIndex, 'Unrecognized index type!');\r\n            orderBy = this.index_.toString();\r\n        }\r\n        qs[REST_CONSTANTS.ORDER_BY] = util.stringify(orderBy);\r\n        if (this.startSet_) {\r\n            qs[REST_CONSTANTS.START_AT] = util.stringify(this.indexStartValue_);\r\n            if (this.startNameSet_) {\r\n                qs[REST_CONSTANTS.START_AT] += ',' + util.stringify(this.indexStartName_);\r\n            }\r\n        }\r\n        if (this.endSet_) {\r\n            qs[REST_CONSTANTS.END_AT] = util.stringify(this.indexEndValue_);\r\n            if (this.endNameSet_) {\r\n                qs[REST_CONSTANTS.END_AT] += ',' + util.stringify(this.indexEndName_);\r\n            }\r\n        }\r\n        if (this.limitSet_) {\r\n            if (this.isViewFromLeft()) {\r\n                qs[REST_CONSTANTS.LIMIT_TO_FIRST] = this.limit_;\r\n            }\r\n            else {\r\n                qs[REST_CONSTANTS.LIMIT_TO_LAST] = this.limit_;\r\n            }\r\n        }\r\n        return qs;\r\n    };\r\n    /**\r\n     * Wire Protocol Constants\r\n     * @const\r\n     * @enum {string}\r\n     * @private\r\n     */\r\n    QueryParams.WIRE_PROTOCOL_CONSTANTS_ = {\r\n        INDEX_START_VALUE: 'sp',\r\n        INDEX_START_NAME: 'sn',\r\n        INDEX_END_VALUE: 'ep',\r\n        INDEX_END_NAME: 'en',\r\n        LIMIT: 'l',\r\n        VIEW_FROM: 'vf',\r\n        VIEW_FROM_LEFT: 'l',\r\n        VIEW_FROM_RIGHT: 'r',\r\n        INDEX: 'i'\r\n    };\r\n    /**\r\n     * REST Query Constants\r\n     * @const\r\n     * @enum {string}\r\n     * @private\r\n     */\r\n    QueryParams.REST_QUERY_CONSTANTS_ = {\r\n        ORDER_BY: 'orderBy',\r\n        PRIORITY_INDEX: '$priority',\r\n        VALUE_INDEX: '$value',\r\n        KEY_INDEX: '$key',\r\n        START_AT: 'startAt',\r\n        END_AT: 'endAt',\r\n        LIMIT_TO_FIRST: 'limitToFirst',\r\n        LIMIT_TO_LAST: 'limitToLast'\r\n    };\r\n    /**\r\n     * Default, empty query parameters\r\n     * @type {!QueryParams}\r\n     * @const\r\n     */\r\n    QueryParams.DEFAULT = new QueryParams();\r\n    return QueryParams;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Reference = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Reference, _super);\r\n    /**\r\n     * Call options:\r\n     *   new Reference(Repo, Path) or\r\n     *   new Reference(url: string, string|RepoManager)\r\n     *\r\n     * Externally - this is the firebase.database.Reference type.\r\n     *\r\n     * @param {!Repo} repo\r\n     * @param {(!Path)} path\r\n     * @extends {Query}\r\n     */\r\n    function Reference(repo, path) {\r\n        var _this = this;\r\n        if (!(repo instanceof Repo)) {\r\n            throw new Error('new Reference() no longer supported - use app.database().');\r\n        }\r\n        // call Query's constructor, passing in the repo and path.\r\n        _this = _super.call(this, repo, path, QueryParams.DEFAULT, false) || this;\r\n        return _this;\r\n    }\r\n    /** @return {?string} */\r\n    Reference.prototype.getKey = function () {\r\n        util.validateArgCount('Reference.key', 0, 0, arguments.length);\r\n        if (this.path.isEmpty())\r\n            return null;\r\n        else\r\n            return this.path.getBack();\r\n    };\r\n    /**\r\n     * @param {!(string|Path)} pathString\r\n     * @return {!Reference}\r\n     */\r\n    Reference.prototype.child = function (pathString) {\r\n        util.validateArgCount('Reference.child', 1, 1, arguments.length);\r\n        if (typeof pathString === 'number') {\r\n            pathString = String(pathString);\r\n        }\r\n        else if (!(pathString instanceof Path)) {\r\n            if (this.path.getFront() === null)\r\n                validateRootPathString('Reference.child', 1, pathString, false);\r\n            else\r\n                validatePathString('Reference.child', 1, pathString, false);\r\n        }\r\n        return new Reference(this.repo, this.path.child(pathString));\r\n    };\r\n    /** @return {?Reference} */\r\n    Reference.prototype.getParent = function () {\r\n        util.validateArgCount('Reference.parent', 0, 0, arguments.length);\r\n        var parentPath = this.path.parent();\r\n        return parentPath === null ? null : new Reference(this.repo, parentPath);\r\n    };\r\n    /** @return {!Reference} */\r\n    Reference.prototype.getRoot = function () {\r\n        util.validateArgCount('Reference.root', 0, 0, arguments.length);\r\n        var ref = this;\r\n        while (ref.getParent() !== null) {\r\n            ref = ref.getParent();\r\n        }\r\n        return ref;\r\n    };\r\n    /** @return {!Database} */\r\n    Reference.prototype.databaseProp = function () {\r\n        return this.repo.database;\r\n    };\r\n    /**\r\n     * @param {*} newVal\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.set = function (newVal, onComplete) {\r\n        util.validateArgCount('Reference.set', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.set', this.path);\r\n        validateFirebaseDataArg('Reference.set', 1, newVal, this.path, false);\r\n        util.validateCallback('Reference.set', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path, newVal, \r\n        /*priority=*/ null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {!Object} objectToMerge\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.update = function (objectToMerge, onComplete) {\r\n        util.validateArgCount('Reference.update', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.update', this.path);\r\n        if (Array.isArray(objectToMerge)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < objectToMerge.length; ++i) {\r\n                newObjectToMerge['' + i] = objectToMerge[i];\r\n            }\r\n            objectToMerge = newObjectToMerge;\r\n            warn('Passing an Array to Firebase.update() is deprecated. ' +\r\n                'Use set() if you want to overwrite the existing data, or ' +\r\n                'an Object with integer keys if you really do want to ' +\r\n                'only update some of the children.');\r\n        }\r\n        validateFirebaseMergeDataArg('Reference.update', 1, objectToMerge, this.path, false);\r\n        util.validateCallback('Reference.update', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.update(this.path, objectToMerge, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} newVal\r\n     * @param {string|number|null} newPriority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.setWithPriority = function (newVal, newPriority, onComplete) {\r\n        util.validateArgCount('Reference.setWithPriority', 2, 3, arguments.length);\r\n        validateWritablePath('Reference.setWithPriority', this.path);\r\n        validateFirebaseDataArg('Reference.setWithPriority', 1, newVal, this.path, false);\r\n        validatePriority('Reference.setWithPriority', 2, newPriority, false);\r\n        util.validateCallback('Reference.setWithPriority', 3, onComplete, true);\r\n        if (this.getKey() === '.length' || this.getKey() === '.keys')\r\n            throw 'Reference.setWithPriority failed: ' +\r\n                this.getKey() +\r\n                ' is a read-only object.';\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path, newVal, newPriority, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.remove = function (onComplete) {\r\n        util.validateArgCount('Reference.remove', 0, 1, arguments.length);\r\n        validateWritablePath('Reference.remove', this.path);\r\n        util.validateCallback('Reference.remove', 1, onComplete, true);\r\n        return this.set(null, onComplete);\r\n    };\r\n    /**\r\n     * @param {function(*):*} transactionUpdate\r\n     * @param {(function(?Error, boolean, ?DataSnapshot))=} onComplete\r\n     * @param {boolean=} applyLocally\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.transaction = function (transactionUpdate, onComplete, applyLocally) {\r\n        util.validateArgCount('Reference.transaction', 1, 3, arguments.length);\r\n        validateWritablePath('Reference.transaction', this.path);\r\n        util.validateCallback('Reference.transaction', 1, transactionUpdate, false);\r\n        util.validateCallback('Reference.transaction', 2, onComplete, true);\r\n        // NOTE: applyLocally is an internal-only option for now.  We need to decide if we want to keep it and how\r\n        // to expose it.\r\n        validateBoolean('Reference.transaction', 3, applyLocally, true);\r\n        if (this.getKey() === '.length' || this.getKey() === '.keys')\r\n            throw 'Reference.transaction failed: ' +\r\n                this.getKey() +\r\n                ' is a read-only object.';\r\n        if (applyLocally === undefined)\r\n            applyLocally = true;\r\n        var deferred = new util.Deferred();\r\n        if (typeof onComplete === 'function') {\r\n            deferred.promise.catch(function () { });\r\n        }\r\n        var promiseComplete = function (error$$1, committed, snapshot) {\r\n            if (error$$1) {\r\n                deferred.reject(error$$1);\r\n            }\r\n            else {\r\n                deferred.resolve(new TransactionResult(committed, snapshot));\r\n            }\r\n            if (typeof onComplete === 'function') {\r\n                onComplete(error$$1, committed, snapshot);\r\n            }\r\n        };\r\n        this.repo.startTransaction(this.path, transactionUpdate, promiseComplete, applyLocally);\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {string|number|null} priority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.setPriority = function (priority, onComplete) {\r\n        util.validateArgCount('Reference.setPriority', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.setPriority', this.path);\r\n        validatePriority('Reference.setPriority', 1, priority, false);\r\n        util.validateCallback('Reference.setPriority', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path.child('.priority'), priority, null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*=} value\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Reference}\r\n     */\r\n    Reference.prototype.push = function (value, onComplete) {\r\n        util.validateArgCount('Reference.push', 0, 2, arguments.length);\r\n        validateWritablePath('Reference.push', this.path);\r\n        validateFirebaseDataArg('Reference.push', 1, value, this.path, true);\r\n        util.validateCallback('Reference.push', 2, onComplete, true);\r\n        var now = this.repo.serverTime();\r\n        var name = nextPushId(now);\r\n        // push() returns a ThennableReference whose promise is fulfilled with a regular Reference.\r\n        // We use child() to create handles to two different references. The first is turned into a\r\n        // ThennableReference below by adding then() and catch() methods and is used as the\r\n        // return value of push(). The second remains a regular Reference and is used as the fulfilled\r\n        // value of the first ThennableReference.\r\n        var thennablePushRef = this.child(name);\r\n        var pushRef = this.child(name);\r\n        var promise;\r\n        if (value != null) {\r\n            promise = thennablePushRef.set(value, onComplete).then(function () { return pushRef; });\r\n        }\r\n        else {\r\n            promise = Promise.resolve(pushRef);\r\n        }\r\n        thennablePushRef.then = promise.then.bind(promise);\r\n        thennablePushRef.catch = promise.then.bind(promise, undefined);\r\n        if (typeof onComplete === 'function') {\r\n            promise.catch(function () { });\r\n        }\r\n        return thennablePushRef;\r\n    };\r\n    /**\r\n     * @return {!OnDisconnect}\r\n     */\r\n    Reference.prototype.onDisconnect = function () {\r\n        validateWritablePath('Reference.onDisconnect', this.path);\r\n        return new OnDisconnect(this.repo, this.path);\r\n    };\r\n    Object.defineProperty(Reference.prototype, \"database\", {\r\n        get: function () {\r\n            return this.databaseProp();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"key\", {\r\n        get: function () {\r\n            return this.getKey();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"parent\", {\r\n        get: function () {\r\n            return this.getParent();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"root\", {\r\n        get: function () {\r\n            return this.getRoot();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Reference;\r\n}(Query));\r\n/**\r\n * Define reference constructor in various modules\r\n *\r\n * We are doing this here to avoid several circular\r\n * dependency issues\r\n */\r\nQuery.__referenceConstructor = Reference;\r\nSyncPoint.__referenceConstructor = Reference;\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Node in a Tree.\r\n */\r\nvar TreeNode = /** @class */ (function () {\r\n    function TreeNode() {\r\n        // TODO: Consider making accessors that create children and value lazily or\r\n        // separate Internal / Leaf 'types'.\r\n        this.children = {};\r\n        this.childCount = 0;\r\n        this.value = null;\r\n    }\r\n    return TreeNode;\r\n}());\r\n/**\r\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\r\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\r\n * children.\r\n */\r\nvar Tree = /** @class */ (function () {\r\n    /**\r\n     * @template T\r\n     * @param {string=} name_ Optional name of the node.\r\n     * @param {Tree=} parent_ Optional parent node.\r\n     * @param {TreeNode=} node_ Optional node to wrap.\r\n     */\r\n    function Tree(name_, parent_, node_) {\r\n        if (name_ === void 0) { name_ = ''; }\r\n        if (parent_ === void 0) { parent_ = null; }\r\n        if (node_ === void 0) { node_ = new TreeNode(); }\r\n        this.name_ = name_;\r\n        this.parent_ = parent_;\r\n        this.node_ = node_;\r\n    }\r\n    /**\r\n     * Returns a sub-Tree for the given path.\r\n     *\r\n     * @param {!(string|Path)} pathObj Path to look up.\r\n     * @return {!Tree.<T>} Tree for path.\r\n     */\r\n    Tree.prototype.subTree = function (pathObj) {\r\n        // TODO: Require pathObj to be Path?\r\n        var path = pathObj instanceof Path ? pathObj : new Path(pathObj);\r\n        var child = this, next;\r\n        while ((next = path.getFront()) !== null) {\r\n            var childNode = util.safeGet(child.node_.children, next) || new TreeNode();\r\n            child = new Tree(next, child, childNode);\r\n            path = path.popFront();\r\n        }\r\n        return child;\r\n    };\r\n    /**\r\n     * Returns the data associated with this tree node.\r\n     *\r\n     * @return {?T} The data or null if no data exists.\r\n     */\r\n    Tree.prototype.getValue = function () {\r\n        return this.node_.value;\r\n    };\r\n    /**\r\n     * Sets data to this tree node.\r\n     *\r\n     * @param {!T} value Value to set.\r\n     */\r\n    Tree.prototype.setValue = function (value) {\r\n        util.assert(typeof value !== 'undefined', 'Cannot set value to undefined');\r\n        this.node_.value = value;\r\n        this.updateParents_();\r\n    };\r\n    /**\r\n     * Clears the contents of the tree node (its value and all children).\r\n     */\r\n    Tree.prototype.clear = function () {\r\n        this.node_.value = null;\r\n        this.node_.children = {};\r\n        this.node_.childCount = 0;\r\n        this.updateParents_();\r\n    };\r\n    /**\r\n     * @return {boolean} Whether the tree has any children.\r\n     */\r\n    Tree.prototype.hasChildren = function () {\r\n        return this.node_.childCount > 0;\r\n    };\r\n    /**\r\n     * @return {boolean} Whether the tree is empty (no value or children).\r\n     */\r\n    Tree.prototype.isEmpty = function () {\r\n        return this.getValue() === null && !this.hasChildren();\r\n    };\r\n    /**\r\n     * Calls action for each child of this tree node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     */\r\n    Tree.prototype.forEachChild = function (action) {\r\n        var _this = this;\r\n        util.forEach(this.node_.children, function (child, childTree) {\r\n            action(new Tree(child, _this, childTree));\r\n        });\r\n    };\r\n    /**\r\n     * Does a depth-first traversal of this node's descendants, calling action for each one.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     * @param {boolean=} includeSelf Whether to call action on this node as well. Defaults to\r\n     *   false.\r\n     * @param {boolean=} childrenFirst Whether to call action on children before calling it on\r\n     *   parent.\r\n     */\r\n    Tree.prototype.forEachDescendant = function (action, includeSelf, childrenFirst) {\r\n        if (includeSelf && !childrenFirst)\r\n            action(this);\r\n        this.forEachChild(function (child) {\r\n            child.forEachDescendant(action, /*includeSelf=*/ true, childrenFirst);\r\n        });\r\n        if (includeSelf && childrenFirst)\r\n            action(this);\r\n    };\r\n    /**\r\n     * Calls action on each ancestor node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called on each parent; return\r\n     *   true to abort.\r\n     * @param {boolean=} includeSelf Whether to call action on this node as well.\r\n     * @return {boolean} true if the action callback returned true.\r\n     */\r\n    Tree.prototype.forEachAncestor = function (action, includeSelf) {\r\n        var node = includeSelf ? this : this.parent();\r\n        while (node !== null) {\r\n            if (action(node)) {\r\n                return true;\r\n            }\r\n            node = node.parent();\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Does a depth-first traversal of this node's descendants.  When a descendant with a value\r\n     * is found, action is called on it and traversal does not continue inside the node.\r\n     * Action is *not* called on this node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     */\r\n    Tree.prototype.forEachImmediateDescendantWithValue = function (action) {\r\n        this.forEachChild(function (child) {\r\n            if (child.getValue() !== null)\r\n                action(child);\r\n            else\r\n                child.forEachImmediateDescendantWithValue(action);\r\n        });\r\n    };\r\n    /**\r\n     * @return {!Path} The path of this tree node, as a Path.\r\n     */\r\n    Tree.prototype.path = function () {\r\n        return new Path(this.parent_ === null\r\n            ? this.name_\r\n            : this.parent_.path() + '/' + this.name_);\r\n    };\r\n    /**\r\n     * @return {string} The name of the tree node.\r\n     */\r\n    Tree.prototype.name = function () {\r\n        return this.name_;\r\n    };\r\n    /**\r\n     * @return {?Tree} The parent tree node, or null if this is the root of the tree.\r\n     */\r\n    Tree.prototype.parent = function () {\r\n        return this.parent_;\r\n    };\r\n    /**\r\n     * Adds or removes this child from its parent based on whether it's empty or not.\r\n     *\r\n     * @private\r\n     */\r\n    Tree.prototype.updateParents_ = function () {\r\n        if (this.parent_ !== null)\r\n            this.parent_.updateChild_(this.name_, this);\r\n    };\r\n    /**\r\n     * Adds or removes the passed child to this tree node, depending on whether it's empty.\r\n     *\r\n     * @param {string} childName The name of the child to update.\r\n     * @param {!Tree.<T>} child The child to update.\r\n     * @private\r\n     */\r\n    Tree.prototype.updateChild_ = function (childName, child) {\r\n        var childEmpty = child.isEmpty();\r\n        var childExists = util.contains(this.node_.children, childName);\r\n        if (childEmpty && childExists) {\r\n            delete this.node_.children[childName];\r\n            this.node_.childCount--;\r\n            this.updateParents_();\r\n        }\r\n        else if (!childEmpty && !childExists) {\r\n            this.node_.children[childName] = child.node_;\r\n            this.node_.childCount++;\r\n            this.updateParents_();\r\n        }\r\n    };\r\n    return Tree;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// TODO: This is pretty messy.  Ideally, a lot of this would move into FirebaseData, or a transaction-specific\r\n// component used by FirebaseData, but it has ties to user callbacks (transaction update and onComplete) as well\r\n// as the realtime connection (to send transactions to the server).  So that all needs to be decoupled first.\r\n// For now it's part of Repo, but in its own file.\r\n/**\r\n * @enum {number}\r\n */\r\nvar TransactionStatus;\r\n(function (TransactionStatus) {\r\n    // We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the\r\n    // server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to\r\n    // mismatched hash.\r\n    TransactionStatus[TransactionStatus[\"RUN\"] = 0] = \"RUN\";\r\n    // We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted\r\n    // or rejected yet).\r\n    TransactionStatus[TransactionStatus[\"SENT\"] = 1] = \"SENT\";\r\n    // Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be\r\n    // removed when we get a chance to prune completed ones.\r\n    TransactionStatus[TransactionStatus[\"COMPLETED\"] = 2] = \"COMPLETED\";\r\n    // Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).\r\n    // If it comes back as unsuccessful, we'll abort it.\r\n    TransactionStatus[TransactionStatus[\"SENT_NEEDS_ABORT\"] = 3] = \"SENT_NEEDS_ABORT\";\r\n    // Temporary state used to mark transactions that need to be aborted.\r\n    TransactionStatus[TransactionStatus[\"NEEDS_ABORT\"] = 4] = \"NEEDS_ABORT\";\r\n})(TransactionStatus || (TransactionStatus = {}));\r\n/**\r\n * If a transaction does not succeed after 25 retries, we abort it.  Among other things this ensure that if there's\r\n * ever a bug causing a mismatch between client / server hashes for some data, we won't retry indefinitely.\r\n * @type {number}\r\n * @const\r\n * @private\r\n */\r\nRepo.MAX_TRANSACTION_RETRIES_ = 25;\r\n/**\r\n * Setup the transaction data structures\r\n * @private\r\n */\r\nRepo.prototype.transactions_init_ = function () {\r\n    /**\r\n     * Stores queues of outstanding transactions for Firebase locations.\r\n     *\r\n     * @type {!Tree.<Array.<!Transaction>>}\r\n     * @private\r\n     */\r\n    this.transactionQueueTree_ = new Tree();\r\n};\r\n/**\r\n * Creates a new transaction, adds it to the transactions we're tracking, and sends it to the server if possible.\r\n *\r\n * @param {!Path} path Path at which to do transaction.\r\n * @param {function(*):*} transactionUpdate Update callback.\r\n * @param {?function(?Error, boolean, ?DataSnapshot)} onComplete Completion callback.\r\n * @param {boolean} applyLocally Whether or not to make intermediate results visible\r\n */\r\nRepo.prototype.startTransaction = function (path, transactionUpdate, onComplete, applyLocally) {\r\n    this.log_('transaction on ' + path);\r\n    // Add a watch to make sure we get server updates.\r\n    var valueCallback = function () { };\r\n    var watchRef = new Reference(this, path);\r\n    watchRef.on('value', valueCallback);\r\n    var unwatcher = function () {\r\n        watchRef.off('value', valueCallback);\r\n    };\r\n    // Initialize transaction.\r\n    var transaction = {\r\n        path: path,\r\n        update: transactionUpdate,\r\n        onComplete: onComplete,\r\n        // One of TransactionStatus enums.\r\n        status: null,\r\n        // Used when combining transactions at different locations to figure out which one goes first.\r\n        order: LUIDGenerator(),\r\n        // Whether to raise local events for this transaction.\r\n        applyLocally: applyLocally,\r\n        // Count of how many times we've retried the transaction.\r\n        retryCount: 0,\r\n        // Function to call to clean up our .on() listener.\r\n        unwatcher: unwatcher,\r\n        // Stores why a transaction was aborted.\r\n        abortReason: null,\r\n        currentWriteId: null,\r\n        currentInputSnapshot: null,\r\n        currentOutputSnapshotRaw: null,\r\n        currentOutputSnapshotResolved: null\r\n    };\r\n    // Run transaction initially.\r\n    var currentState = this.getLatestState_(path);\r\n    transaction.currentInputSnapshot = currentState;\r\n    var newVal = transaction.update(currentState.val());\r\n    if (newVal === undefined) {\r\n        // Abort transaction.\r\n        transaction.unwatcher();\r\n        transaction.currentOutputSnapshotRaw = null;\r\n        transaction.currentOutputSnapshotResolved = null;\r\n        if (transaction.onComplete) {\r\n            // We just set the input snapshot, so this cast should be safe\r\n            var snapshot = new DataSnapshot(transaction.currentInputSnapshot, new Reference(this, transaction.path), PRIORITY_INDEX);\r\n            transaction.onComplete(null, false, snapshot);\r\n        }\r\n    }\r\n    else {\r\n        validateFirebaseData('transaction failed: Data returned ', newVal, transaction.path);\r\n        // Mark as run and add to our queue.\r\n        transaction.status = TransactionStatus.RUN;\r\n        var queueNode = this.transactionQueueTree_.subTree(path);\r\n        var nodeQueue = queueNode.getValue() || [];\r\n        nodeQueue.push(transaction);\r\n        queueNode.setValue(nodeQueue);\r\n        // Update visibleData and raise events\r\n        // Note: We intentionally raise events after updating all of our transaction state, since the user could\r\n        // start new transactions from the event callbacks.\r\n        var priorityForNode = void 0;\r\n        if (typeof newVal === 'object' &&\r\n            newVal !== null &&\r\n            util.contains(newVal, '.priority')) {\r\n            priorityForNode = util.safeGet(newVal, '.priority');\r\n            util.assert(isValidPriority(priorityForNode), 'Invalid priority returned by transaction. ' +\r\n                'Priority must be a valid string, finite number, server value, or null.');\r\n        }\r\n        else {\r\n            var currentNode = this.serverSyncTree_.calcCompleteEventCache(path) ||\r\n                ChildrenNode.EMPTY_NODE;\r\n            priorityForNode = currentNode.getPriority().val();\r\n        }\r\n        priorityForNode /** @type {null|number|string} */ = priorityForNode;\r\n        var serverValues = this.generateServerValues();\r\n        var newNodeUnresolved = nodeFromJSON$1(newVal, priorityForNode);\r\n        var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\r\n        transaction.currentOutputSnapshotRaw = newNodeUnresolved;\r\n        transaction.currentOutputSnapshotResolved = newNode;\r\n        transaction.currentWriteId = this.getNextWriteId_();\r\n        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, transaction.currentWriteId, transaction.applyLocally);\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n        this.sendReadyTransactions_();\r\n    }\r\n};\r\n/**\r\n * @param {!Path} path\r\n * @param {Array.<number>=} excludeSets A specific set to exclude\r\n * @return {Node}\r\n * @private\r\n */\r\nRepo.prototype.getLatestState_ = function (path, excludeSets) {\r\n    return (this.serverSyncTree_.calcCompleteEventCache(path, excludeSets) ||\r\n        ChildrenNode.EMPTY_NODE);\r\n};\r\n/**\r\n * Sends any already-run transactions that aren't waiting for outstanding transactions to\r\n * complete.\r\n *\r\n * Externally it's called with no arguments, but it calls itself recursively with a particular\r\n * transactionQueueTree node to recurse through the tree.\r\n *\r\n * @param {Tree.<Array.<Transaction>>=} node  transactionQueueTree node to start at.\r\n * @private\r\n */\r\nRepo.prototype.sendReadyTransactions_ = function (node) {\r\n    var _this = this;\r\n    if (node === void 0) { node = this.transactionQueueTree_; }\r\n    // Before recursing, make sure any completed transactions are removed.\r\n    if (!node) {\r\n        this.pruneCompletedTransactionsBelowNode_(node);\r\n    }\r\n    if (node.getValue() !== null) {\r\n        var queue = this.buildTransactionQueue_(node);\r\n        util.assert(queue.length > 0, 'Sending zero length transaction queue');\r\n        var allRun = queue.every(function (transaction) { return transaction.status === TransactionStatus.RUN; });\r\n        // If they're all run (and not sent), we can send them.  Else, we must wait.\r\n        if (allRun) {\r\n            this.sendTransactionQueue_(node.path(), queue);\r\n        }\r\n    }\r\n    else if (node.hasChildren()) {\r\n        node.forEachChild(function (childNode) {\r\n            _this.sendReadyTransactions_(childNode);\r\n        });\r\n    }\r\n};\r\n/**\r\n * Given a list of run transactions, send them to the server and then handle the result (success or failure).\r\n *\r\n * @param {!Path} path The location of the queue.\r\n * @param {!Array.<Transaction>} queue Queue of transactions under the specified location.\r\n * @private\r\n */\r\nRepo.prototype.sendTransactionQueue_ = function (path, queue) {\r\n    var _this = this;\r\n    // Mark transactions as sent and increment retry count!\r\n    var setsToIgnore = queue.map(function (txn) {\r\n        return txn.currentWriteId;\r\n    });\r\n    var latestState = this.getLatestState_(path, setsToIgnore);\r\n    var snapToSend = latestState;\r\n    var latestHash = latestState.hash();\r\n    for (var i = 0; i < queue.length; i++) {\r\n        var txn = queue[i];\r\n        util.assert(txn.status === TransactionStatus.RUN, 'tryToSendTransactionQueue_: items in queue should all be run.');\r\n        txn.status = TransactionStatus.SENT;\r\n        txn.retryCount++;\r\n        var relativePath = Path.relativePath(path, txn.path);\r\n        // If we've gotten to this point, the output snapshot must be defined.\r\n        snapToSend = snapToSend.updateChild(relativePath /**@type {!Node} */, txn.currentOutputSnapshotRaw);\r\n    }\r\n    var dataToSend = snapToSend.val(true);\r\n    var pathToSend = path;\r\n    // Send the put.\r\n    this.server_.put(pathToSend.toString(), dataToSend, function (status) {\r\n        _this.log_('transaction put response', {\r\n            path: pathToSend.toString(),\r\n            status: status\r\n        });\r\n        var events = [];\r\n        if (status === 'ok') {\r\n            // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n            // the callback could trigger more transactions or sets.\r\n            var callbacks = [];\r\n            for (var i = 0; i < queue.length; i++) {\r\n                queue[i].status = TransactionStatus.COMPLETED;\r\n                events = events.concat(_this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId));\r\n                if (queue[i].onComplete) {\r\n                    // We never unset the output snapshot, and given that this transaction is complete, it should be set\r\n                    var node = queue[i].currentOutputSnapshotResolved;\r\n                    var ref = new Reference(_this, queue[i].path);\r\n                    var snapshot = new DataSnapshot(node, ref, PRIORITY_INDEX);\r\n                    callbacks.push(queue[i].onComplete.bind(null, null, true, snapshot));\r\n                }\r\n                queue[i].unwatcher();\r\n            }\r\n            // Now remove the completed transactions.\r\n            _this.pruneCompletedTransactionsBelowNode_(_this.transactionQueueTree_.subTree(path));\r\n            // There may be pending transactions that we can now send.\r\n            _this.sendReadyTransactions_();\r\n            _this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n            // Finally, trigger onComplete callbacks.\r\n            for (var i = 0; i < callbacks.length; i++) {\r\n                exceptionGuard(callbacks[i]);\r\n            }\r\n        }\r\n        else {\r\n            // transactions are no longer sent.  Update their status appropriately.\r\n            if (status === 'datastale') {\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT)\r\n                        queue[i].status = TransactionStatus.NEEDS_ABORT;\r\n                    else\r\n                        queue[i].status = TransactionStatus.RUN;\r\n                }\r\n            }\r\n            else {\r\n                warn('transaction at ' + pathToSend.toString() + ' failed: ' + status);\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    queue[i].status = TransactionStatus.NEEDS_ABORT;\r\n                    queue[i].abortReason = status;\r\n                }\r\n            }\r\n            _this.rerunTransactions_(path);\r\n        }\r\n    }, latestHash);\r\n};\r\n/**\r\n * Finds all transactions dependent on the data at changedPath and reruns them.\r\n *\r\n * Should be called any time cached data changes.\r\n *\r\n * Return the highest path that was affected by rerunning transactions.  This is the path at which events need to\r\n * be raised for.\r\n *\r\n * @param {!Path} changedPath The path in mergedData that changed.\r\n * @return {!Path} The rootmost path that was affected by rerunning transactions.\r\n * @private\r\n */\r\nRepo.prototype.rerunTransactions_ = function (changedPath) {\r\n    var rootMostTransactionNode = this.getAncestorTransactionNode_(changedPath);\r\n    var path = rootMostTransactionNode.path();\r\n    var queue = this.buildTransactionQueue_(rootMostTransactionNode);\r\n    this.rerunTransactionQueue_(queue, path);\r\n    return path;\r\n};\r\n/**\r\n * Does all the work of rerunning transactions (as well as cleans up aborted transactions and whatnot).\r\n *\r\n * @param {Array.<Transaction>} queue The queue of transactions to run.\r\n * @param {!Path} path The path the queue is for.\r\n * @private\r\n */\r\nRepo.prototype.rerunTransactionQueue_ = function (queue, path) {\r\n    if (queue.length === 0) {\r\n        return; // Nothing to do!\r\n    }\r\n    // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n    // the callback could trigger more transactions or sets.\r\n    var callbacks = [];\r\n    var events = [];\r\n    // Ignore all of the sets we're going to re-run.\r\n    var txnsToRerun = queue.filter(function (q) {\r\n        return q.status === TransactionStatus.RUN;\r\n    });\r\n    var setsToIgnore = txnsToRerun.map(function (q) {\r\n        return q.currentWriteId;\r\n    });\r\n    for (var i = 0; i < queue.length; i++) {\r\n        var transaction = queue[i];\r\n        var relativePath = Path.relativePath(path, transaction.path);\r\n        var abortTransaction = false, abortReason = void 0;\r\n        util.assert(relativePath !== null, 'rerunTransactionsUnderNode_: relativePath should not be null.');\r\n        if (transaction.status === TransactionStatus.NEEDS_ABORT) {\r\n            abortTransaction = true;\r\n            abortReason = transaction.abortReason;\r\n            events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n        }\r\n        else if (transaction.status === TransactionStatus.RUN) {\r\n            if (transaction.retryCount >= Repo.MAX_TRANSACTION_RETRIES_) {\r\n                abortTransaction = true;\r\n                abortReason = 'maxretry';\r\n                events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n            }\r\n            else {\r\n                // This code reruns a transaction\r\n                var currentNode = this.getLatestState_(transaction.path, setsToIgnore);\r\n                transaction.currentInputSnapshot = currentNode;\r\n                var newData = queue[i].update(currentNode.val());\r\n                if (newData !== undefined) {\r\n                    validateFirebaseData('transaction failed: Data returned ', newData, transaction.path);\r\n                    var newDataNode = nodeFromJSON$1(newData);\r\n                    var hasExplicitPriority = typeof newData === 'object' &&\r\n                        newData != null &&\r\n                        util.contains(newData, '.priority');\r\n                    if (!hasExplicitPriority) {\r\n                        // Keep the old priority if there wasn't a priority explicitly specified.\r\n                        newDataNode = newDataNode.updatePriority(currentNode.getPriority());\r\n                    }\r\n                    var oldWriteId = transaction.currentWriteId;\r\n                    var serverValues = this.generateServerValues();\r\n                    var newNodeResolved = resolveDeferredValueSnapshot(newDataNode, serverValues);\r\n                    transaction.currentOutputSnapshotRaw = newDataNode;\r\n                    transaction.currentOutputSnapshotResolved = newNodeResolved;\r\n                    transaction.currentWriteId = this.getNextWriteId_();\r\n                    // Mutates setsToIgnore in place\r\n                    setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\r\n                    events = events.concat(this.serverSyncTree_.applyUserOverwrite(transaction.path, newNodeResolved, transaction.currentWriteId, transaction.applyLocally));\r\n                    events = events.concat(this.serverSyncTree_.ackUserWrite(oldWriteId, true));\r\n                }\r\n                else {\r\n                    abortTransaction = true;\r\n                    abortReason = 'nodata';\r\n                    events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n                }\r\n            }\r\n        }\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n        events = [];\r\n        if (abortTransaction) {\r\n            // Abort.\r\n            queue[i].status = TransactionStatus.COMPLETED;\r\n            // Removing a listener can trigger pruning which can muck with mergedData/visibleData (as it prunes data).\r\n            // So defer the unwatcher until we're done.\r\n            (function (unwatcher) {\r\n                setTimeout(unwatcher, Math.floor(0));\r\n            })(queue[i].unwatcher);\r\n            if (queue[i].onComplete) {\r\n                if (abortReason === 'nodata') {\r\n                    var ref = new Reference(this, queue[i].path);\r\n                    // We set this field immediately, so it's safe to cast to an actual snapshot\r\n                    var lastInput /** @type {!Node} */ = queue[i].currentInputSnapshot;\r\n                    var snapshot = new DataSnapshot(lastInput, ref, PRIORITY_INDEX);\r\n                    callbacks.push(queue[i].onComplete.bind(null, null, false, snapshot));\r\n                }\r\n                else {\r\n                    callbacks.push(queue[i].onComplete.bind(null, new Error(abortReason), false, null));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // Clean up completed transactions.\r\n    this.pruneCompletedTransactionsBelowNode_(this.transactionQueueTree_);\r\n    // Now fire callbacks, now that we're in a good, known state.\r\n    for (var i = 0; i < callbacks.length; i++) {\r\n        exceptionGuard(callbacks[i]);\r\n    }\r\n    // Try to send the transaction result to the server.\r\n    this.sendReadyTransactions_();\r\n};\r\n/**\r\n * Returns the rootmost ancestor node of the specified path that has a pending transaction on it, or just returns\r\n * the node for the given path if there are no pending transactions on any ancestor.\r\n *\r\n * @param {!Path} path The location to start at.\r\n * @return {!Tree.<Array.<!Transaction>>} The rootmost node with a transaction.\r\n * @private\r\n */\r\nRepo.prototype.getAncestorTransactionNode_ = function (path) {\r\n    var front;\r\n    // Start at the root and walk deeper into the tree towards path until we find a node with pending transactions.\r\n    var transactionNode = this.transactionQueueTree_;\r\n    while ((front = path.getFront()) !== null &&\r\n        transactionNode.getValue() === null) {\r\n        transactionNode = transactionNode.subTree(front);\r\n        path = path.popFront();\r\n    }\r\n    return transactionNode;\r\n};\r\n/**\r\n * Builds the queue of all transactions at or below the specified transactionNode.\r\n *\r\n * @param {!Tree.<Array.<Transaction>>} transactionNode\r\n * @return {Array.<Transaction>} The generated queue.\r\n * @private\r\n */\r\nRepo.prototype.buildTransactionQueue_ = function (transactionNode) {\r\n    // Walk any child transaction queues and aggregate them into a single queue.\r\n    var transactionQueue = [];\r\n    this.aggregateTransactionQueuesForNode_(transactionNode, transactionQueue);\r\n    // Sort them by the order the transactions were created.\r\n    transactionQueue.sort(function (a, b) {\r\n        return a.order - b.order;\r\n    });\r\n    return transactionQueue;\r\n};\r\n/**\r\n * @param {!Tree.<Array.<Transaction>>} node\r\n * @param {Array.<Transaction>} queue\r\n * @private\r\n */\r\nRepo.prototype.aggregateTransactionQueuesForNode_ = function (node, queue) {\r\n    var _this = this;\r\n    var nodeQueue = node.getValue();\r\n    if (nodeQueue !== null) {\r\n        for (var i = 0; i < nodeQueue.length; i++) {\r\n            queue.push(nodeQueue[i]);\r\n        }\r\n    }\r\n    node.forEachChild(function (child) {\r\n        _this.aggregateTransactionQueuesForNode_(child, queue);\r\n    });\r\n};\r\n/**\r\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\r\n *\r\n * @param {!Tree.<Array.<!Transaction>>} node\r\n * @private\r\n */\r\nRepo.prototype.pruneCompletedTransactionsBelowNode_ = function (node) {\r\n    var _this = this;\r\n    var queue = node.getValue();\r\n    if (queue) {\r\n        var to = 0;\r\n        for (var from = 0; from < queue.length; from++) {\r\n            if (queue[from].status !== TransactionStatus.COMPLETED) {\r\n                queue[to] = queue[from];\r\n                to++;\r\n            }\r\n        }\r\n        queue.length = to;\r\n        node.setValue(queue.length > 0 ? queue : null);\r\n    }\r\n    node.forEachChild(function (childNode) {\r\n        _this.pruneCompletedTransactionsBelowNode_(childNode);\r\n    });\r\n};\r\n/**\r\n * Aborts all transactions on ancestors or descendants of the specified path.  Called when doing a set() or update()\r\n * since we consider them incompatible with transactions.\r\n *\r\n * @param {!Path} path Path for which we want to abort related transactions.\r\n * @return {!Path}\r\n * @private\r\n */\r\nRepo.prototype.abortTransactions_ = function (path) {\r\n    var _this = this;\r\n    var affectedPath = this.getAncestorTransactionNode_(path).path();\r\n    var transactionNode = this.transactionQueueTree_.subTree(path);\r\n    transactionNode.forEachAncestor(function (node) {\r\n        _this.abortTransactionsOnNode_(node);\r\n    });\r\n    this.abortTransactionsOnNode_(transactionNode);\r\n    transactionNode.forEachDescendant(function (node) {\r\n        _this.abortTransactionsOnNode_(node);\r\n    });\r\n    return affectedPath;\r\n};\r\n/**\r\n * Abort transactions stored in this transaction queue node.\r\n *\r\n * @param {!Tree.<Array.<Transaction>>} node Node to abort transactions for.\r\n * @private\r\n */\r\nRepo.prototype.abortTransactionsOnNode_ = function (node) {\r\n    var queue = node.getValue();\r\n    if (queue !== null) {\r\n        // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n        // the callback could trigger more transactions or sets.\r\n        var callbacks = [];\r\n        // Go through queue.  Any already-sent transactions must be marked for abort, while the unsent ones\r\n        // can be immediately aborted and removed.\r\n        var events = [];\r\n        var lastSent = -1;\r\n        for (var i = 0; i < queue.length; i++) {\r\n            if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\r\n                // Already marked.  No action needed.\r\n            }\r\n            else if (queue[i].status === TransactionStatus.SENT) {\r\n                util.assert(lastSent === i - 1, 'All SENT items should be at beginning of queue.');\r\n                lastSent = i;\r\n                // Mark transaction for abort when it comes back.\r\n                queue[i].status = TransactionStatus.SENT_NEEDS_ABORT;\r\n                queue[i].abortReason = 'set';\r\n            }\r\n            else {\r\n                util.assert(queue[i].status === TransactionStatus.RUN, 'Unexpected transaction status in abort');\r\n                // We can abort it immediately.\r\n                queue[i].unwatcher();\r\n                events = events.concat(this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId, true));\r\n                if (queue[i].onComplete) {\r\n                    var snapshot = null;\r\n                    callbacks.push(queue[i].onComplete.bind(null, new Error('set'), false, snapshot));\r\n                }\r\n            }\r\n        }\r\n        if (lastSent === -1) {\r\n            // We're not waiting for any sent transactions.  We can clear the queue.\r\n            node.setValue(null);\r\n        }\r\n        else {\r\n            // Remove the transactions we aborted.\r\n            queue.length = lastSent + 1;\r\n        }\r\n        // Now fire the callbacks.\r\n        this.eventQueue_.raiseEventsForChangedPath(node.path(), events);\r\n        for (var i = 0; i < callbacks.length; i++) {\r\n            exceptionGuard(callbacks[i]);\r\n        }\r\n    }\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** @const {string} */\r\nvar DATABASE_URL_OPTION = 'databaseURL';\r\nvar _staticInstance;\r\n/**\r\n * Creates and caches Repo instances.\r\n */\r\nvar RepoManager = /** @class */ (function () {\r\n    function RepoManager() {\r\n        /**\r\n         * @private {!Object.<string, Object<string, !fb.core.Repo>>}\r\n         */\r\n        this.repos_ = {};\r\n        /**\r\n         * If true, new Repos will be created to use ReadonlyRestClient (for testing purposes).\r\n         * @private {boolean}\r\n         */\r\n        this.useRestClient_ = false;\r\n    }\r\n    RepoManager.getInstance = function () {\r\n        if (!_staticInstance) {\r\n            _staticInstance = new RepoManager();\r\n        }\r\n        return _staticInstance;\r\n    };\r\n    // TODO(koss): Remove these functions unless used in tests?\r\n    RepoManager.prototype.interrupt = function () {\r\n        for (var appName in this.repos_) {\r\n            for (var dbUrl in this.repos_[appName]) {\r\n                this.repos_[appName][dbUrl].interrupt();\r\n            }\r\n        }\r\n    };\r\n    RepoManager.prototype.resume = function () {\r\n        for (var appName in this.repos_) {\r\n            for (var dbUrl in this.repos_[appName]) {\r\n                this.repos_[appName][dbUrl].resume();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * This function should only ever be called to CREATE a new database instance.\r\n     *\r\n     * @param {!FirebaseApp} app\r\n     * @return {!Database}\r\n     */\r\n    RepoManager.prototype.databaseFromApp = function (app, url) {\r\n        var dbUrl = url || app.options[DATABASE_URL_OPTION];\r\n        if (dbUrl === undefined) {\r\n            fatal(\"Can't determine Firebase Database URL.  Be sure to include \" +\r\n                DATABASE_URL_OPTION +\r\n                ' option when calling firebase.initializeApp().');\r\n        }\r\n        var parsedUrl = parseRepoInfo(dbUrl);\r\n        var repoInfo = parsedUrl.repoInfo;\r\n        validateUrl('Invalid Firebase Database URL', 1, parsedUrl);\r\n        if (!parsedUrl.path.isEmpty()) {\r\n            fatal('Database URL must point to the root of a Firebase Database ' +\r\n                '(not including a child path).');\r\n        }\r\n        var repo = this.createRepo(repoInfo, app);\r\n        return repo.database;\r\n    };\r\n    /**\r\n     * Remove the repo and make sure it is disconnected.\r\n     *\r\n     * @param {!Repo} repo\r\n     */\r\n    RepoManager.prototype.deleteRepo = function (repo) {\r\n        var appRepos = util.safeGet(this.repos_, repo.app.name);\r\n        // This should never happen...\r\n        if (!appRepos || util.safeGet(appRepos, repo.repoInfo_.toURLString()) !== repo) {\r\n            fatal(\"Database \" + repo.app.name + \"(\" + repo.repoInfo_ + \") has already been deleted.\");\r\n        }\r\n        repo.interrupt();\r\n        delete appRepos[repo.repoInfo_.toURLString()];\r\n    };\r\n    /**\r\n     * Ensures a repo doesn't already exist and then creates one using the\r\n     * provided app.\r\n     *\r\n     * @param {!RepoInfo} repoInfo The metadata about the Repo\r\n     * @param {!FirebaseApp} app\r\n     * @return {!Repo} The Repo object for the specified server / repoName.\r\n     */\r\n    RepoManager.prototype.createRepo = function (repoInfo, app) {\r\n        var appRepos = util.safeGet(this.repos_, app.name);\r\n        if (!appRepos) {\r\n            appRepos = {};\r\n            this.repos_[app.name] = appRepos;\r\n        }\r\n        var repo = util.safeGet(appRepos, repoInfo.toURLString());\r\n        if (repo) {\r\n            fatal('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');\r\n        }\r\n        repo = new Repo(repoInfo, this.useRestClient_, app);\r\n        appRepos[repoInfo.toURLString()] = repo;\r\n        return repo;\r\n    };\r\n    /**\r\n     * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\r\n     * @param {boolean} forceRestClient\r\n     */\r\n    RepoManager.prototype.forceRestClient = function (forceRestClient) {\r\n        this.useRestClient_ = forceRestClient;\r\n    };\r\n    return RepoManager;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase database.\r\n * @implements {FirebaseService}\r\n */\r\nvar Database = /** @class */ (function () {\r\n    /**\r\n     * The constructor should not be called by users of our public API.\r\n     * @param {!Repo} repo_\r\n     */\r\n    function Database(repo_) {\r\n        this.repo_ = repo_;\r\n        if (!(repo_ instanceof Repo)) {\r\n            fatal(\"Don't call new Database() directly - please use firebase.database().\");\r\n        }\r\n        /** @type {Reference} */\r\n        this.root_ = new Reference(repo_, Path.Empty);\r\n        this.INTERNAL = new DatabaseInternals(this);\r\n    }\r\n    Object.defineProperty(Database.prototype, \"app\", {\r\n        get: function () {\r\n            return this.repo_.app;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Database.prototype.ref = function (path) {\r\n        this.checkDeleted_('ref');\r\n        util.validateArgCount('database.ref', 0, 1, arguments.length);\r\n        if (path instanceof Reference) {\r\n            return this.refFromURL(path.toString());\r\n        }\r\n        return path !== undefined ? this.root_.child(path) : this.root_;\r\n    };\r\n    /**\r\n     * Returns a reference to the root or the path specified in url.\r\n     * We throw a exception if the url is not in the same domain as the\r\n     * current repo.\r\n     * @param {string} url\r\n     * @return {!Reference} Firebase reference.\r\n     */\r\n    Database.prototype.refFromURL = function (url) {\r\n        /** @const {string} */\r\n        var apiName = 'database.refFromURL';\r\n        this.checkDeleted_(apiName);\r\n        util.validateArgCount(apiName, 1, 1, arguments.length);\r\n        var parsedURL = parseRepoInfo(url);\r\n        validateUrl(apiName, 1, parsedURL);\r\n        var repoInfo = parsedURL.repoInfo;\r\n        if (repoInfo.host !== this.repo_.repoInfo_.host) {\r\n            fatal(apiName +\r\n                ': Host name does not match the current database: ' +\r\n                '(found ' +\r\n                repoInfo.host +\r\n                ' but expected ' +\r\n                this.repo_.repoInfo_.host +\r\n                ')');\r\n        }\r\n        return this.ref(parsedURL.path.toString());\r\n    };\r\n    /**\r\n     * @param {string} apiName\r\n     */\r\n    Database.prototype.checkDeleted_ = function (apiName) {\r\n        if (this.repo_ === null) {\r\n            fatal('Cannot call ' + apiName + ' on a deleted database.');\r\n        }\r\n    };\r\n    // Make individual repo go offline.\r\n    Database.prototype.goOffline = function () {\r\n        util.validateArgCount('database.goOffline', 0, 0, arguments.length);\r\n        this.checkDeleted_('goOffline');\r\n        this.repo_.interrupt();\r\n    };\r\n    Database.prototype.goOnline = function () {\r\n        util.validateArgCount('database.goOnline', 0, 0, arguments.length);\r\n        this.checkDeleted_('goOnline');\r\n        this.repo_.resume();\r\n    };\r\n    Database.ServerValue = {\r\n        TIMESTAMP: {\r\n            '.sv': 'timestamp'\r\n        }\r\n    };\r\n    return Database;\r\n}());\r\nvar DatabaseInternals = /** @class */ (function () {\r\n    /** @param {!Database} database */\r\n    function DatabaseInternals(database) {\r\n        this.database = database;\r\n    }\r\n    /** @return {Promise<void>} */\r\n    DatabaseInternals.prototype.delete = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                this.database.checkDeleted_('delete');\r\n                RepoManager.getInstance().deleteRepo(this.database.repo_);\r\n                this.database.repo_ = null;\r\n                this.database.root_ = null;\r\n                this.database.INTERNAL = null;\r\n                this.database = null;\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    return DatabaseInternals;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * INTERNAL methods for internal-use only (tests, etc.).\r\n *\r\n * Customers shouldn't use these or else should be aware that they could break at any time.\r\n *\r\n * @const\r\n */\r\nvar forceLongPolling = function () {\r\n    WebSocketConnection.forceDisallow();\r\n    BrowserPollConnection.forceAllow();\r\n};\r\nvar forceWebSockets = function () {\r\n    BrowserPollConnection.forceDisallow();\r\n};\r\n/* Used by App Manager */\r\nvar isWebSocketsAvailable = function () {\r\n    return WebSocketConnection['isAvailable']();\r\n};\r\nvar setSecurityDebugCallback = function (ref, callback) {\r\n    ref.repo.persistentConnection_.securityDebugCallback_ = callback;\r\n};\r\nvar stats = function (ref, showDelta) {\r\n    ref.repo.stats(showDelta);\r\n};\r\nvar statsIncrementCounter = function (ref, metric) {\r\n    ref.repo.statsIncrementCounter(metric);\r\n};\r\nvar dataUpdateCount = function (ref) {\r\n    return ref.repo.dataUpdateCount;\r\n};\r\nvar interceptServerData = function (ref, callback) {\r\n    return ref.repo.interceptServerData_(callback);\r\n};\n\nvar INTERNAL = /*#__PURE__*/Object.freeze({\n  forceLongPolling: forceLongPolling,\n  forceWebSockets: forceWebSockets,\n  isWebSocketsAvailable: isWebSocketsAvailable,\n  setSecurityDebugCallback: setSecurityDebugCallback,\n  stats: stats,\n  statsIncrementCounter: statsIncrementCounter,\n  dataUpdateCount: dataUpdateCount,\n  interceptServerData: interceptServerData\n});\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DataConnection = PersistentConnection;\r\n/**\r\n * @param {!string} pathString\r\n * @param {function(*)} onComplete\r\n */\r\nPersistentConnection.prototype.simpleListen = function (pathString, onComplete) {\r\n    this.sendRequest('q', { p: pathString }, onComplete);\r\n};\r\n/**\r\n * @param {*} data\r\n * @param {function(*)} onEcho\r\n */\r\nPersistentConnection.prototype.echo = function (data, onEcho) {\r\n    this.sendRequest('echo', { d: data }, onEcho);\r\n};\r\n// RealTimeConnection properties that we use in tests.\r\nvar RealTimeConnection = Connection;\r\n/**\r\n * @param {function(): string} newHash\r\n * @return {function()}\r\n */\r\nvar hijackHash = function (newHash) {\r\n    var oldPut = PersistentConnection.prototype.put;\r\n    PersistentConnection.prototype.put = function (pathString, data, opt_onComplete, opt_hash) {\r\n        if (opt_hash !== undefined) {\r\n            opt_hash = newHash();\r\n        }\r\n        oldPut.call(this, pathString, data, opt_onComplete, opt_hash);\r\n    };\r\n    return function () {\r\n        PersistentConnection.prototype.put = oldPut;\r\n    };\r\n};\r\n/**\r\n * @type {function(new:RepoInfo, !string, boolean, !string, boolean): undefined}\r\n */\r\nvar ConnectionTarget = RepoInfo;\r\n/**\r\n * @param {!Query} query\r\n * @return {!string}\r\n */\r\nvar queryIdentifier = function (query) {\r\n    return query.queryIdentifier();\r\n};\r\n/**\r\n * @param {!Query} firebaseRef\r\n * @return {!Object}\r\n */\r\nvar listens = function (firebaseRef) {\r\n    return firebaseRef.repo.persistentConnection_.listens_;\r\n};\r\n/**\r\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\r\n *\r\n * @param {boolean} forceRestClient\r\n */\r\nvar forceRestClient = function (forceRestClient) {\r\n    RepoManager.getInstance().forceRestClient(forceRestClient);\r\n};\n\nvar TEST_ACCESS = /*#__PURE__*/Object.freeze({\n  DataConnection: DataConnection,\n  RealTimeConnection: RealTimeConnection,\n  hijackHash: hijackHash,\n  ConnectionTarget: ConnectionTarget,\n  queryIdentifier: queryIdentifier,\n  listens: listens,\n  forceRestClient: forceRestClient\n});\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ServerValue = Database.ServerValue;\r\nfunction registerDatabase(instance) {\r\n    // Register the Database Service with the 'firebase' namespace.\r\n    var namespace = instance.INTERNAL.registerService('database', function (app, unused, url) { return RepoManager.getInstance().databaseFromApp(app, url); }, \r\n    // firebase.database namespace properties\r\n    {\r\n        Reference: Reference,\r\n        Query: Query,\r\n        Database: Database,\r\n        enableLogging: enableLogging,\r\n        INTERNAL: INTERNAL,\r\n        ServerValue: ServerValue,\r\n        TEST_ACCESS: TEST_ACCESS\r\n    }, null, true);\r\n    if (util.isNodeSdk()) {\r\n        module.exports = namespace;\r\n    }\r\n}\r\nregisterDatabase(firebase);\n\nexports.registerDatabase = registerDatabase;\nexports.Database = Database;\nexports.Query = Query;\nexports.Reference = Reference;\nexports.enableLogging = enableLogging;\nexports.ServerValue = ServerValue;\nexports.DataSnapshot = DataSnapshot;\nexports.OnDisconnect = OnDisconnect;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/index.cjs.js\n// module id = 42\n// module chunks = 0","/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A container for all of the Logger instances\r\n */\r\nvar instances = [];\r\n/**\r\n * The JS SDK supports 5 log levels and also allows a user the ability to\r\n * silence the logs altogether.\r\n *\r\n * The order is a follows:\r\n * DEBUG < VERBOSE < INFO < WARN < ERROR\r\n *\r\n * All of the log types above the current log level will be captured (i.e. if\r\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\r\n * `VERBOSE` logs will not)\r\n */\r\nvar LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"DEBUG\"] = 0] = \"DEBUG\";\r\n    LogLevel[LogLevel[\"VERBOSE\"] = 1] = \"VERBOSE\";\r\n    LogLevel[LogLevel[\"INFO\"] = 2] = \"INFO\";\r\n    LogLevel[LogLevel[\"WARN\"] = 3] = \"WARN\";\r\n    LogLevel[LogLevel[\"ERROR\"] = 4] = \"ERROR\";\r\n    LogLevel[LogLevel[\"SILENT\"] = 5] = \"SILENT\";\r\n})(LogLevel || (LogLevel = {}));\r\n/**\r\n * The default log level\r\n */\r\nvar defaultLogLevel = LogLevel.INFO;\r\n/**\r\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\r\n * messages on to their corresponding console counterparts (if the log method\r\n * is supported by the current log level)\r\n */\r\nvar defaultLogHandler = function (instance, logType) {\r\n    var args = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        args[_i - 2] = arguments[_i];\r\n    }\r\n    if (logType < instance.logLevel)\r\n        return;\r\n    var now = new Date().toISOString();\r\n    switch (logType) {\r\n        /**\r\n         * By default, `console.debug` is not displayed in the developer console (in\r\n         * chrome). To avoid forcing users to have to opt-in to these logs twice\r\n         * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\r\n         * logs to the `console.log` function.\r\n         */\r\n        case LogLevel.DEBUG:\r\n            console.log.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\r\n            break;\r\n        case LogLevel.VERBOSE:\r\n            console.log.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\r\n            break;\r\n        case LogLevel.INFO:\r\n            console.info.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\r\n            break;\r\n        case LogLevel.WARN:\r\n            console.warn.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\r\n            break;\r\n        case LogLevel.ERROR:\r\n            console.error.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\r\n            break;\r\n        default:\r\n            throw new Error(\"Attempted to log a message with an invalid logType (value: \" + logType + \")\");\r\n    }\r\n};\r\nvar Logger = /** @class */ (function () {\r\n    /**\r\n     * Gives you an instance of a Logger to capture messages according to\r\n     * Firebase's logging scheme.\r\n     *\r\n     * @param name The name that the logs will be associated with\r\n     */\r\n    function Logger(name) {\r\n        this.name = name;\r\n        /**\r\n         * The log level of the given Logger instance.\r\n         */\r\n        this._logLevel = defaultLogLevel;\r\n        /**\r\n         * The log handler for the Logger instance.\r\n         */\r\n        this._logHandler = defaultLogHandler;\r\n        /**\r\n         * Capture the current instance for later use\r\n         */\r\n        instances.push(this);\r\n    }\r\n    Object.defineProperty(Logger.prototype, \"logLevel\", {\r\n        get: function () {\r\n            return this._logLevel;\r\n        },\r\n        set: function (val) {\r\n            if (!(val in LogLevel)) {\r\n                throw new TypeError('Invalid value assigned to `logLevel`');\r\n            }\r\n            this._logLevel = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Logger.prototype, \"logHandler\", {\r\n        get: function () {\r\n            return this._logHandler;\r\n        },\r\n        set: function (val) {\r\n            if (typeof val !== 'function') {\r\n                throw new TypeError('Value assigned to `logHandler` must be a function');\r\n            }\r\n            this._logHandler = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * The functions below are all based on the `console` interface\r\n     */\r\n    Logger.prototype.debug = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._logHandler.apply(this, [this, LogLevel.DEBUG].concat(args));\r\n    };\r\n    Logger.prototype.log = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._logHandler.apply(this, [this, LogLevel.VERBOSE].concat(args));\r\n    };\r\n    Logger.prototype.info = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._logHandler.apply(this, [this, LogLevel.INFO].concat(args));\r\n    };\r\n    Logger.prototype.warn = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._logHandler.apply(this, [this, LogLevel.WARN].concat(args));\r\n    };\r\n    Logger.prototype.error = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._logHandler.apply(this, [this, LogLevel.ERROR].concat(args));\r\n    };\r\n    return Logger;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction setLogLevel(level) {\r\n    instances.forEach(function (inst) {\r\n        inst.logLevel = level;\r\n    });\r\n}\n\nexport { setLogLevel, Logger, LogLevel };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/logger/dist/index.esm.js\n// module id = 43\n// module chunks = 0","import React from 'react';\r\nimport { Parallax } from 'react-spring/dist/react-spring';\r\nimport '../index.css';\r\n\r\n\r\nexport class Portfolio extends React.Component {\r\n  render() {\r\n    return (\r\n<div>\r\n        <Parallax.Layer\r\n          offset={1.135}\r\n          speed={0.25}\r\n          style={{ display: 'flex', alignItems: 'flex-start', justifyContent: 'center', flexWrap: 'wrap', padding:' 0 5%' }}>\r\n          <div className=\"flip-container\">\r\n            <div className=\"flipper\">\r\n              <div className=\"front work1 work\" > </div>\r\n              <div className=\"back\">\r\n                <p>Mobile-First PWA using React : \r\n                <br/>Does your child look more like mom or dad? Find out w/facial recognition\r\n                <br/><span><a href=\"https://github.com/tomkim825/which-parent\" target=\"_blank\" rel=\"noopener noreferrer\">Github Repo</a></span> <span><a href=\"https://tomkim825.github.io/which-parent/\" target=\"_blank\" rel=\"noopener noreferrer\" style={{color:'red'}}>Demo</a></span></p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"flip-container\">\r\n            <div className=\"flipper\">\r\n              <div className=\"front work2 work\" > </div>\r\n              <div className=\"back\">\r\n                <p>Web App w/Azure \r\n                <br/>Face Recognition APIs: \r\n                <br/>Find your MCU doppleganger\r\n                <br/><span><a href=\"https://github.com/tomkim825/Project1-FaceAPI\" target=\"_blank\" rel=\"noopener noreferrer\">Github Repo</a></span> <span><a href=\"https://tomkim825.github.io/Project1-FaceAPI/\" target=\"_blank\" rel=\"noopener noreferrer\" style={{color:'red'}}>Demo</a></span></p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"flip-container\">\r\n            <div className=\"flipper\">\r\n              <div className=\"front work3 work\" > </div>\r\n              <div className=\"back\">\r\n                <p>React Native App using EXPO: \r\n                <br/>Digital Business cards\r\n                <br/><span><a href=\"https://github.com/tomkim825/meishi\" target=\"_blank\" rel=\"noopener noreferrer\">Github Repo</a></span></p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"flip-container\">\r\n            <div className=\"flipper\">\r\n              <div className=\"front work4 work bottom\" > </div>\r\n              <div className=\"back\">\r\n                <p>Full-Stack app showing full CRUD functionality:\r\n                <br/> MySQL, Node, Express, Heroku\r\n                <br/><span><a href=\"https://github.com/tomkim825/burger\" target=\"_blank\" rel=\"noopener noreferrer\">Github Repo</a></span> <span><a href=\"https://eat-da-burger--.herokuapp.com/\" target=\"_blank\" rel=\"noopener noreferrer\" style={{color:'red'}}>Demo</a></span></p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"flip-container\">\r\n            <div className=\"flipper\">\r\n              <div className=\"front work5 work bottom\" > </div>\r\n              <div className=\"back bottom\">\r\n                <p>Web App using Giphy API to search GIFs\r\n                <br/>built with AJAX and Bootstrap\r\n                <br/><span><a href=\"https://github.com/tomkim825/GifGetter/\" target=\"_blank\" rel=\"noopener noreferrer\">Github Repo</a></span> <span><a href=\"https://tomkim825.github.io/GifGetter/\" target=\"_blank\" rel=\"noopener noreferrer\" style={{color:'red'}}>Demo</a></span></p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"flip-container\">\r\n            <div className=\"flipper\">\r\n              <div className=\"front work6 work bottom\" > </div>\r\n              <div className=\"back bottom\">\r\n                <p>Web app using Realtime database - Firebase\r\n                <br/><span><a href=\"https://github.com/tomkim825/TrainTime/\" target=\"_blank\" rel=\"noopener noreferrer\">Github Repo</a></span> <span><a href=\"https://tomkim825.github.io/TrainTime/\" target=\"_blank\" rel=\"noopener noreferrer\" style={{color:'red'}}>Demo</a></span></p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Parallax.Layer>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Portfolio.js","import React from 'react';\r\nimport { Parallax } from 'react-spring';\r\nimport '../index.css';\r\n\r\nexport class Skills extends React.Component {\r\n  render() {\r\n    return (\r\n<div style={{display: 'flex', flexDirection:\"row\", alignItems: 'flex-start', justifyContent: 'start', width:'100vw', padding:' 0 5%'}}>\r\n\r\n        <Parallax.Layer\r\n          offset={2.15}\r\n          speed={0.2}\r\n          style={{ display: 'flex', flexDirection:\"column\", alignItems: 'flex-start', justifyContent: 'start',zIndex:2}}>\r\n          <p style={{color:'orangered',fontWeight:600,textDecoration: 'underline'}}> Front End </p>\r\n          <ul className=\"list-inline list-icons\">\r\n            <li className=\"list-inline-item\">\r\n              <i className=\"devicon-html5-plain-wordmark\"></i>\r\n            </li>\r\n            <li className=\"list-inline-item\">\r\n              <i className=\"devicon-css3-plain-wordmark\"></i>\r\n            </li>\r\n            <li className=\"list-inline-item\">\r\n              <i className=\"devicon-javascript-plain\"></i>\r\n            </li>\r\n            <li className=\"list-inline-item\">\r\n              <i className=\"devicon-jquery-plain-wordmark\"></i>\r\n              </li>\r\n              <li className=\"list-inline-item\">\r\n              <i className=\"devicon-bootstrap-plain-wordmark\"></i>\r\n            </li>\r\n            <li className=\"list-inline-item\">\r\n              <i className=\"devicon-react-original-wordmark\"></i>\r\n            </li>\r\n            </ul>\r\n        </Parallax.Layer>\r\n\r\n        <Parallax.Layer\r\n          offset={2.3}\r\n          speed={0.6}\r\n          style={{ display: 'flex', flexDirection:\"column\", alignItems: 'flex-start', justifyContent: 'start',zIndex:2}}>\r\n          <p style={{color: 'orangered',fontWeight:600, textDecoration: 'underline'}}> Server Side </p>\r\n          <ul className=\"list-inline list-icons\">\r\n            \r\n            <li className=\"list-inline-item\">\r\n              <i className=\"devicon-mysql-plain-wordmark\"></i>\r\n              </li>\r\n            <li className=\"list-inline-item\">\r\n              <i className=\"devicon-mongodb-plain-wordmark\"></i>\r\n            </li>\r\n            <li className=\"list-inline-item\">\r\n              <i className=\"devicon-express-original-wordmark\"></i>\r\n            </li>\r\n            <li className=\"list-inline-item\">\r\n              <i className=\"devicon-nodejs-plain-wordmark\"></i>\r\n            </li>\r\n            <li className=\"list-inline-item\">\r\n              <i className=\"devicon-heroku-original-wordmark\"></i>\r\n            </li>\r\n            <li className=\"list-inline-item\">\r\n              <i className=\"devicon-sequelize-plain-wordmark\"></i>\r\n            </li>\r\n            </ul>\r\n        </Parallax.Layer>\r\n\r\n        \r\n        <Parallax.Layer\r\n          offset={2.45}\r\n          speed={1}\r\n          style={{ display: 'flex', flexDirection:\"column\", alignItems: 'flex-start', justifyContent: 'start',zIndex:2}}>\r\n          <p style={{color:'orangered',fontWeight:600,textDecoration: 'underline'}}>Dev Tools </p>\r\n          <ul className=\"list-inline list-icons\">\r\n            \r\n            <li className=\"list-inline-item\">\r\n            <i className=\"devicon-visualstudio-plain-wordmark\"></i>\r\n              </li>\r\n            <li className=\"list-inline-item\">\r\n            <i className=\"devicon-firefox-plain-wordmark\"></i>\r\n            </li>\r\n            <li className=\"list-inline-item\">\r\n            <i className=\"devicon-chrome-plain-wordmark\"></i>\r\n            </li>\r\n            <li className=\"list-inline-item\">\r\n            <i className=\"devicon-github-plain-wordmark\"></i>\r\n            </li>\r\n            <li className=\"list-inline-item\">\r\n              <i className=\"devicon-git-plain-wordmark\"></i>\r\n            </li>\r\n            <li className=\"list-inline-item\">\r\n            <i className=\"devicon-slack-plain-wordmark\"></i>\r\n            </li>\r\n            </ul>\r\n        </Parallax.Layer>\r\n\r\n<Parallax.Layer\r\n          offset={2.6}\r\n          speed={1.5}\r\n          style={{ display: 'flex', flexDirection:\"column\", alignItems: 'flex-start', justifyContent: 'start',zIndex:4}}>\r\n        <p style={{color:'orangered',fontWeight:600,textDecoration: 'underline'}}>Resume </p>\r\n \r\n        <div><a href=\"https://github.com/tomkim825/tomkim825.github.io/raw/master/ThomasKimResume.pdf\" style={{border:'1px solid white', padding: '5px', margin: '0 5px', color:'white'}}>       Click here to download   </a></div>\r\n\r\n\r\n\r\n        </Parallax.Layer>\r\n</div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Skills.js","import normalizeColor from\"normalize-css-color\";import React from\"react\";import PropTypes from\"prop-types\";function _extends(){return(_extends=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(t[i]=n[i])}return t}).apply(this,arguments)}function _inheritsLoose(t,e){t.prototype=Object.create(e.prototype),t.prototype.constructor=t,t.__proto__=e}function _objectWithoutProperties(t,e){if(null==t)return{};var n,i,r={},a=Object.keys(t);for(i=0;i<a.length;i++)n=a[i],e.indexOf(n)>=0||(r[n]=t[n]);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(i=0;i<o.length;i++)n=o[i],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}function _assertThisInitialized(t){if(void 0===t)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return t}var Animated=function(){function t(){}var e=t.prototype;return e.__attach=function(){},e.__detach=function(){},e.__getValue=function(){},e.__getAnimatedValue=function(){return this.__getValue()},e.__addChild=function(t){},e.__removeChild=function(t){},e.__getChildren=function(){return[]},t}(),AnimatedTracking=function(t){function e(e,n,i,r,a){var o;return(o=t.call(this)||this)._value=e,o._parent=n,o._animationClass=i,o._animationConfig=r,o._callback=a,o.__attach(),o._hey=1,o}_inheritsLoose(e,t);var n=e.prototype;return n.__getValue=function(){return this._parent.__getValue()},n.__attach=function(){this._parent.__addChild(this)},n.__detach=function(){this._parent.__removeChild(this)},n.update=function(){this._value.animate(new this._animationClass(_extends({},this._animationConfig,{toValue:this._animationConfig.toValue.__getValue()})),this._callback)},e}(Animated),AnimatedWithChildren=function(t){function e(){var e;return(e=t.call(this)||this)._children=[],e}_inheritsLoose(e,t);var n=e.prototype;return n.__addChild=function(t){t instanceof AnimatedTracking&&(this._tracked=!0),0===this._children.length&&this.__attach(),this._children.push(t)},n.__removeChild=function(t){var e=this._children.indexOf(t);-1!==e?(this._children.splice(e,1),0===this._children.length&&this.__detach()):console.warn(\"Trying to remove a child that doesn't exist\")},n.__getChildren=function(){return this._children},e}(Animated),linear=function(t){return t},Interpolation=function(){function t(){}return t.create=function(t){if(\"function\"==typeof t)return function(e){return t(e)};if(t.outputRange&&\"string\"==typeof t.outputRange[0])return createInterpolationFromStringOutputRange(t);var e=t.outputRange,n=t.inputRange,i=t.easing||linear,r=\"extend\";void 0!==t.extrapolateLeft?r=t.extrapolateLeft:void 0!==t.extrapolate&&(r=t.extrapolate);var a=\"extend\";return void 0!==t.extrapolateRight?a=t.extrapolateRight:void 0!==t.extrapolate&&(a=t.extrapolate),function(t){var o=findRange(t,n);return interpolate(t,n[o],n[o+1],e[o],e[o+1],i,r,a)}},t}();function interpolate(t,e,n,i,r,a,o,s){var l=t;if(l<e){if(\"identity\"===o)return l;\"clamp\"===o&&(l=e)}if(l>n){if(\"identity\"===s)return l;\"clamp\"===s&&(l=n)}return i===r?i:e===n?t<=e?i:r:(e===-1/0?l=-l:n===1/0?l-=e:l=(l-e)/(n-e),l=a(l),i===-1/0?l=-l:r===1/0?l+=i:l=l*(r-i)+i,l)}function colorToRgba(t){var e=normalizeColor(t);return null===e?t:\"rgba(\"+((4278190080&(e=e||0))>>>24)+\", \"+((16711680&e)>>>16)+\", \"+((65280&e)>>>8)+\", \"+(255&e)/255+\")\"}var stringShapeRegex=/[0-9\\.-]+/g;function createInterpolationFromStringOutputRange(t){var e=t.outputRange,n=(e=e.map(colorToRgba))[0].match(stringShapeRegex).map(function(){return[]});e.forEach(function(t){t.match(stringShapeRegex).forEach(function(t,e){n[e].push(+t)})});var i=e[0].match(stringShapeRegex).map(function(e,i){return Interpolation.create(_extends({},t,{outputRange:n[i]}))}),r=/^rgb/.test(e[0]);return function(t){var n=0;return e[0].replace(stringShapeRegex,function(){var e=i[n++](t);return String(r&&n<4?Math.round(e):e)})}}function findRange(t,e){for(var n=1;n<e.length-1&&!(e[n]>=t);++n);return n-1}var AnimatedInterpolation=function(t){function e(e,n){var i;return(i=t.call(this)||this)._parents=Array.isArray(e)?e:[e],i._interpolation=Interpolation.create(n),i}_inheritsLoose(e,t);var n=e.prototype;return n.__getValue=function(){return this._interpolation.apply(this,this._parents.map(function(t){return t.__getValue()}))},n.__attach=function(){for(var t=0;t<this._parents.length;++t)this._parents[t]instanceof Animated&&this._parents[t].__addChild(this)},n.__detach=function(){for(var t=0;t<this._parents.length;++t)this._parents[t]instanceof Animated&&this._parents[t].__removeChild(this)},n.interpolate=function(t){return new e(this,t)},e}(AnimatedWithChildren),Animation=function(){function t(){}var e=t.prototype;return e.start=function(t,e,n,i){},e.stop=function(){},e.__debouncedOnEnd=function(t){var e=this.__onEnd;this.__onEnd=null,e&&e(t)},t}(),_uniqueId=0;function findAnimatedStyles(t,e){\"function\"==typeof t.update?e.add(t):t.__getChildren().forEach(function(t){return findAnimatedStyles(t,e)})}var AnimatedValue=function(t){function e(e){var n;return(n=t.call(this)||this)._value=e,n._animation=null,n._animatedStyles=new Set,n._listeners={},n}_inheritsLoose(e,t);var n=e.prototype;return n.__detach=function(){this.stopAnimation()},n.__getValue=function(){return this._value},n._flush=function(){(0===this._animatedStyles.size||this._tracked)&&findAnimatedStyles(this,this._animatedStyles),this._animatedStyles.forEach(function(t){return t.update()})},n._updateValue=function(t){for(var e in this._value=t,this._flush(),this._listeners)this._listeners[e]({value:this.__getValue()})},n.setValue=function(t){this._animation&&(this._animation.stop(),this._animation=null),this._animatedStyles.clear(),this._updateValue(t)},n.stopAnimation=function(t){this.stopTracking(),this._animation&&this._animation.stop(),this._animation=null,t&&t(this.__getValue())},n.interpolate=function(t){return new AnimatedInterpolation(this,t)},n.animate=function(t,e){var n=this,i=this._animation;this._animation&&this._animation.stop(),this._animation=t,this._animatedStyles.clear(),t.start(this._value,function(t){return n._updateValue(t)},function(t){n._animation=null,e&&e(t)},i)},n.addListener=function(t){var e=String(_uniqueId++);return this._listeners[e]=t,e},n.removeListener=function(t){delete this._listeners[t]},n.removeAllListeners=function(){this._listeners={}},n.stopTracking=function(){this._tracking&&this._tracking.__detach(),this._tracking=null},n.track=function(t){this.stopTracking(),this._tracking=t},e}(AnimatedWithChildren),AnimatedArray=function(t){function e(e){var n;return(n=t.call(this)||this)._values=e.map(function(t){return new AnimatedValue(t)}),n}_inheritsLoose(e,t);var n=e.prototype;return n.setValue=function(t){var e=this;t.forEach(function(t,n){return e._values[n].setValue(t)})},n.__getValue=function(){return this._values.map(function(t){return t.__getValue()})},n.stopAnimation=function(t){this._values.forEach(function(t){return t.stopAnimation()}),t&&t(this.__getValue())},n.__attach=function(){for(var t=0;t<this._values.length;++t)this._values[t]instanceof Animated&&this._values[t].__addChild(this)},n.__detach=function(){for(var t=0;t<this._values.length;++t)this._values[t]instanceof Animated&&this._values[t].__removeChild(this)},e}(AnimatedWithChildren),AnimatedTemplate=function(t){function e(e,n){var i;return(i=t.call(this)||this)._strings=e,i._values=n,i}_inheritsLoose(e,t);var n=e.prototype;return n.__transformValue=function(t){return t instanceof Animated?t.__getValue():t},n.__getValue=function(){for(var t=this._strings[0],e=0;e<this._values.length;++e)t+=this.__transformValue(this._values[e])+this._strings[1+e];return t},n.__attach=function(){for(var t=0;t<this._values.length;++t)this._values[t]instanceof Animated&&this._values[t].__addChild(this)},n.__detach=function(){for(var t=0;t<this._values.length;++t)this._values[t]instanceof Animated&&this._values[t].__removeChild(this)},e}(AnimatedWithChildren),RequestAnimationFrame={current:function(t){return global.requestAnimationFrame(t)},inject:function(t){RequestAnimationFrame.current=t}},CancelAnimationFrame={current:function(t){return global.cancelAnimationFrame(t)},inject:function(t){CancelAnimationFrame.current=t}};function tensionFromOrigamiValue(t){return 3.62*(t-30)+194}function frictionFromOrigamiValue(t){return 3*(t-8)+25}function fromOrigamiTensionAndFriction(t,e){return{tension:tensionFromOrigamiValue(t),friction:frictionFromOrigamiValue(e)}}var SpringConfig={fromOrigamiTensionAndFriction:fromOrigamiTensionAndFriction},withDefault=function(t,e){return void 0===t||null===t?e:t},SpringAnimation=function(t){function e(e){var n;(n=t.call(this)||this)._overshootClamping=withDefault(e.overshootClamping,!1),n._restDisplacementThreshold=withDefault(e.restDisplacementThreshold,.001),n._restSpeedThreshold=withDefault(e.restSpeedThreshold,.001),n._initialVelocity=e.velocity,n._lastVelocity=withDefault(e.velocity,0),n._toValue=e.toValue,n.__isInteraction=void 0===e.isInteraction||e.isInteraction;var i=SpringConfig.fromOrigamiTensionAndFriction(withDefault(e.tension,40),withDefault(e.friction,7));return n._tension=i.tension,n._friction=i.friction,n}_inheritsLoose(e,t);var n=e.prototype;return n.start=function(t,n,i,r){if(this.__active=!0,this._startPosition=t,this._lastPosition=this._startPosition,this._onUpdate=n,this.__onEnd=i,this._lastTime=Date.now(),r instanceof e){var a=r.getInternalState();this._lastPosition=a.lastPosition,this._lastVelocity=a.lastVelocity,this._lastTime=a.lastTime}void 0!==this._initialVelocity&&null!==this._initialVelocity&&(this._lastVelocity=this._initialVelocity),this.onUpdate()},n.getInternalState=function(){return{lastPosition:this._lastPosition,lastVelocity:this._lastVelocity,lastTime:this._lastTime}},n.onUpdate=function(){var t=this._lastPosition,e=this._lastVelocity,n=this._lastPosition,i=this._lastVelocity,r=Date.now();r>this._lastTime+64&&(r=this._lastTime+64);for(var a=Math.floor((r-this._lastTime)/1),o=0;o<a;++o){var s=e,l=this._tension*(this._toValue-n)-this._friction*i,u=(n=t+.001*s/2,i=e+.001*l/2),c=this._tension*(this._toValue-n)-this._friction*i;n=t+.001*u/2;var h=i=e+.001*c/2,p=this._tension*(this._toValue-n)-this._friction*i;n=t+.001*h/2;var f=i=e+.001*p/2,d=this._tension*(this._toValue-n)-this._friction*i;n=t+.001*h/2,i=e+.001*p/2,t+=.001*((s+2*(u+h)+f)/6),e+=.001*((l+2*(c+p)+d)/6)}if(this._lastTime=r,this._lastPosition=t,this._lastVelocity=e,this._onUpdate(t),this.__active){var m=!1;this._overshootClamping&&0!==this._tension&&(m=this._startPosition<this._toValue?t>this._toValue:t<this._toValue);var _=Math.abs(e)<=this._restSpeedThreshold,v=!0;if(0!==this._tension&&(v=Math.abs(this._toValue-t)<=this._restDisplacementThreshold),m||_&&v)return 0!==this._tension&&this._onUpdate(this._toValue),void this.__debouncedOnEnd({finished:!0});this._animationFrame=RequestAnimationFrame.current(this.onUpdate.bind(this))}},n.stop=function(){this.__active=!1,CancelAnimationFrame.current(this._animationFrame),this.__debouncedOnEnd({finished:!1})},e}(Animation),FlattenStyle={current:function(t){return t},inject:function(t){FlattenStyle.current=t}},AnimatedStyle=function(t){function e(e){var n;return n=t.call(this)||this,e=FlattenStyle.current(e)||{},n._style=e,n}_inheritsLoose(e,t);var n=e.prototype;return n.__getValue=function(){var t={};for(var e in this._style){var n=this._style[e];t[e]=n instanceof Animated?n.__getValue():n}return t},n.__getAnimatedValue=function(){var t={};for(var e in this._style){var n=this._style[e];n instanceof Animated&&(t[e]=n.__getAnimatedValue())}return t},n.__attach=function(){for(var t in this._style){var e=this._style[t];e instanceof Animated&&e.__addChild(this)}},n.__detach=function(){for(var t in this._style){var e=this._style[t];e instanceof Animated&&e.__removeChild(this)}},e}(AnimatedWithChildren),AnimatedProps=function(t){function e(e,n){var i;return i=t.call(this)||this,e.style&&(e=_extends({},e,{style:new AnimatedStyle(e.style)})),i._props=e,i._callback=n,i.__attach(),i}_inheritsLoose(e,t);var n=e.prototype;return n.__getValue=function(){var t={};for(var e in this._props){var n=this._props[e];t[e]=n instanceof Animated?n.__getValue():n}return t},n.__getAnimatedValue=function(){var t={};for(var e in this._props){var n=this._props[e];n instanceof Animated&&(t[e]=n.__getAnimatedValue())}return t},n.__attach=function(){for(var t in this._props){var e=this._props[t];e instanceof Animated&&e.__addChild(this)}},n.__detach=function(){for(var t in this._props){var e=this._props[t];e instanceof Animated&&e.__removeChild(this)}},n.update=function(){this._callback()},e}(Animated),ApplyAnimatedValues={current:function(t,e){if(!t.setNativeProps)return!1;t.setNativeProps(e)},transformStyles:function(t){return t},inject:function(t,e){ApplyAnimatedValues.current=t,ApplyAnimatedValues.transformStyles=e}};function createAnimatedComponent(t){return function(e){function n(){return e.apply(this,arguments)||this}_inheritsLoose(n,e);var i=n.prototype;return i.componentWillUnmount=function(){this._propsAnimated&&this._propsAnimated.__detach()},i.setNativeProps=function(t){!1===ApplyAnimatedValues.current(this.refs.node,t,this)&&this.forceUpdate()},i.componentWillMount=function(){this.attachProps(this.props)},i.attachProps=function(t){var e=this,n=this._propsAnimated;this._propsAnimated=new AnimatedProps(t,function(){!1===ApplyAnimatedValues.current(e.refs.node,e._propsAnimated.__getAnimatedValue(),e)&&e.forceUpdate()}),n&&n.__detach()},i.componentWillReceiveProps=function(t){this.attachProps(t)},i.render=function(){var e=this._propsAnimated.__getValue(),n=e.style,i=_objectWithoutProperties(e,[\"style\"]);return React.createElement(t,_extends({},i,{style:ApplyAnimatedValues.transformStyles(n),ref:\"node\"}))},n}(React.Component)}var maybeVectorAnim=function(t,e,n){var i=e.tension,r=e.friction,a=e.toValue;return t instanceof AnimatedArray?parallel(t._values.map(function(t,e){return n(t,{tension:i,friction:r,toValue:a[e]})}),{stopTogether:!1}):null},spring=function t(e,n){return maybeVectorAnim(e,n,t)||{start:function(t){var i=e,r=n;i.stopTracking(),n.toValue instanceof Animated?i.track(new AnimatedTracking(i,n.toValue,SpringAnimation,r,t)):i.animate(new SpringAnimation(r),t)},stop:function(){e.stopAnimation()}}},parallel=function(t,e){var n=0,i={},r=!(e&&!1===e.stopTogether),a={start:function(e){if(n===t.length)return e&&e({finished:!0});t.forEach(function(o,s){var l=function(o){if(i[s]=!0,++n===t.length)return n=0,e&&e(o);!o.finished&&r&&a.stop()};o?o.start(l):l({finished:!0})})},stop:function(){t.forEach(function(t,e){!i[e]&&t.stop(),i[e]=!0})}};return a},exports$1={Value:AnimatedValue,Array:AnimatedArray,spring:spring,template:function(t){for(var e=arguments.length,n=new Array(e>1?e-1:0),i=1;i<e;i++)n[i-1]=arguments[i];return new AnimatedTemplate(t,n)},interpolate:function(t,e){return new AnimatedInterpolation(values,e)},createAnimatedComponent:createAnimatedComponent,inject:{ApplyAnimatedValues:ApplyAnimatedValues.inject,FlattenStyle:FlattenStyle.inject,RequestAnimationFrame:RequestAnimationFrame.inject,CancelAnimationFrame:CancelAnimationFrame.inject},ApplyAnimatedValues:ApplyAnimatedValues,AnimatedProps:AnimatedProps},isUnitlessNumber={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0};function prefixKey(t,e){return t+e.charAt(0).toUpperCase()+e.substring(1)}var prefixes=[\"Webkit\",\"ms\",\"Moz\",\"O\"];function mapStyle(t){return t}function dangerousStyleValue(t,e,n){return null==e||\"boolean\"==typeof e||\"\"===e?\"\":n||\"number\"!=typeof e||0===e||isUnitlessNumber.hasOwnProperty(t)&&isUnitlessNumber[t]?(\"\"+e).trim():e+\"px\"}function setValueForStyles(t,e){var n=t.style;for(var i in e)if(e.hasOwnProperty(i)){var r=0===i.indexOf(\"--\"),a=dangerousStyleValue(i,e[i],r);\"float\"===i&&(i=\"cssFloat\"),r?n.setProperty(i,a):n[i]=a}}function setValueForAttributes(t,e){var n;for(var i in e)\"style\"!==i&&(n=e[i],t.getAttribute(i)&&t.setAttribute(i,n))}function ApplyAnimatedValues$1(t,e){if(t.setNativeProps)t.setNativeProps(e);else{if(!t.nodeType||void 0===t.setAttribute)return!1;setValueForStyles(t,e.style),setValueForAttributes(t,e)}}Object.keys(isUnitlessNumber).forEach(function(t){prefixes.forEach(function(e){isUnitlessNumber[prefixKey(e,t)]=isUnitlessNumber[t]})}),exports$1.inject.ApplyAnimatedValues(ApplyAnimatedValues$1,mapStyle);var elements=[\"a\",\"abbr\",\"address\",\"area\",\"article\",\"aside\",\"audio\",\"b\",\"base\",\"bdi\",\"bdo\",\"big\",\"blockquote\",\"body\",\"br\",\"button\",\"canvas\",\"caption\",\"cite\",\"code\",\"col\",\"colgroup\",\"data\",\"datalist\",\"dd\",\"del\",\"details\",\"dfn\",\"dialog\",\"div\",\"dl\",\"dt\",\"em\",\"embed\",\"fieldset\",\"figcaption\",\"figure\",\"footer\",\"form\",\"h1\",\"h2\",\"h3\",\"h4\",\"h5\",\"h6\",\"head\",\"header\",\"hgroup\",\"hr\",\"html\",\"i\",\"iframe\",\"img\",\"input\",\"ins\",\"kbd\",\"keygen\",\"label\",\"legend\",\"li\",\"link\",\"main\",\"map\",\"mark\",\"marquee\",\"menu\",\"menuitem\",\"meta\",\"meter\",\"nav\",\"noscript\",\"object\",\"ol\",\"optgroup\",\"option\",\"output\",\"p\",\"param\",\"picture\",\"pre\",\"progress\",\"q\",\"rp\",\"rt\",\"ruby\",\"s\",\"samp\",\"script\",\"section\",\"select\",\"small\",\"source\",\"span\",\"strong\",\"style\",\"sub\",\"summary\",\"sup\",\"table\",\"tbody\",\"td\",\"textarea\",\"tfoot\",\"th\",\"thead\",\"time\",\"title\",\"tr\",\"track\",\"u\",\"ul\",\"var\",\"video\",\"wbr\",\"circle\",\"clipPath\",\"defs\",\"ellipse\",\"foreignObject\",\"g\",\"image\",\"line\",\"linearGradient\",\"mask\",\"path\",\"pattern\",\"polygon\",\"polyline\",\"radialGradient\",\"rect\",\"stop\",\"svg\",\"text\",\"tspan\"].reduce(function(t,e){var n;return _extends({},t,((n={})[e]=exports$1.createAnimatedComponent(e),n))},{}),exports$2=_extends({},exports$1,{elements:elements}),animated=exports$2.elements,template=exports$2.template,interpolate$1=exports$2.interpolate,config={default:{tension:170,friction:26},gentle:{tension:120,friction:14},wobbly:{tension:180,friction:12},stiff:{tension:210,friction:20},slow:{tension:280,friction:60}},Spring=function(t){function e(e){var n;return n=t.call(this)||this,_initialiseProps.call(_assertThisInitialized(n)),n.defaultAnimation=new exports$2.Value(0),n.animations={},n.update(e,!1),n}_inheritsLoose(e,t);var n=e.prototype;return n.update=function(t,e){var n=this,i=t.from,r=t.to,a=t.config,o=t.attach,s=t.immediate,l=t.reset;t.onFrame;void 0===e&&(e=!1);var u=Object.entries(_extends({},i,r)),c=this.defaultAnimation._value;this.interpolators={},this.defaultAnimation.setValue(0),this.animations=u.reduce(function(t,r,u){var h,p=r[0],f=r[1],d=!1===l&&n.animations[p]||(n.animations[p]={}),m=\"number\"==typeof f,_=!m&&Array.isArray(f),v=void 0!==i[p]?i[p]:f,g=m||_?f:1;if(m&&o){var y=o(n),A=y&&y.animations[p];A&&(g=A.animation)}if(m)d.animation=d.interpolation=d.animation||new exports$2.Value(v);else if(_)d.animation=d.interpolation=d.animation||new exports$2.Array(v);else{var x=d.interpolation&&d.interpolation._interpolation(c);d.animation=n.defaultAnimation,d.interpolation=n.defaultAnimation.interpolate({inputRange:[0,1],outputRange:[void 0!==x?x:v,f]})}return!s||!0!==s&&-1===s.indexOf(p)||d.animation.setValue(g),d.start=function(){return exports$2.spring(d.animation,_extends({toValue:g},a)).start(0===u&&n.onRest)},d.stop=function(){return d.animation.stopAnimation()},e&&d.start(),n.interpolators[p]=d.interpolation,_extends({},t,((h={})[p]=d,h))},{});var h=this.propsAnimated;this.propsAnimated=new exports$2.AnimatedProps(this.interpolators,this.callback),h&&h.__detach()},n.componentWillReceiveProps=function(t){this.update(t,!0)},n.componentDidMount=function(){Object.values(this.animations).forEach(function(t){return(0,t.start)()})},n.componentWillUnmount=function(){Object.values(this.animations).forEach(function(t){return(0,t.stop)()})},n.render=function(){var t=this.props,e=t.children,n=t.render,i=(t.from,t.to,t.config,t.native),r=_objectWithoutProperties(t,[\"children\",\"render\",\"from\",\"to\",\"config\",\"native\"]),a=i?this.interpolators:this.propsAnimated.__getValue();return n?n(_extends({},a,r,{children:e})):e(_extends({},a,r))},e}(React.PureComponent);Spring.defaultProps={from:{},to:{},config:config.default,native:!1,immediate:!1,reset:!1};var _initialiseProps=function(){var t=this;this.callback=function(){t.props.onFrame&&t.props.onFrame(t.propsAnimated.__getValue()),!t.props.native&&t.forceUpdate()},this.onRest=function(e){return e.finished&&t.props.onRest&&t.props.onRest()}},ref=function(t,e){return\"function\"==typeof t?t(e):t},Transition=function(t){function e(e){var n;n=t.call(this)||this;var i=e.children,r=e.render,a=e.keys,o=e.items,s=e.from,l=e.enter,u=(e.leave,e.update);return i=r||i,\"function\"==typeof a&&(a=o.map(a)),Array.isArray(i)||(i=[i],a=a?[a]:i),n.state={transitionKeys:a,transitions:i.map(function(t,e){var n=o?o[e]:a[e];return{children:t,key:a[e],item:n,to:ref(l,n),from:ref(s,n),update:ref(u,n)}})},n}_inheritsLoose(e,t);var n=e.prototype;return n.componentWillReceiveProps=function(t){var e=this,n=this.state,i=n.transitions,r=n.transitionKeys,a=t.children,o=t.render,s=t.keys,l=t.items,u=t.from,c=t.enter,h=t.leave,p=t.update;a=o||a,\"function\"==typeof s&&(s=l.map(s)),Array.isArray(a)||(a=[a],s=s?[s]:a);var f=new Set(s),d=new Set(r),m=s.filter(function(t){return!d.has(t)}),_=r.filter(function(t){return!f.has(t)}),v=s.filter(function(t){return d.has(t)});i=i.map(function(t){if(void 0===t.destroy){var e=s.indexOf(t.key),n=a[e];n&&(t.children=n),p&&-1!==v.indexOf(t.key)&&(t.to=ref(p,l?l[e]:s[e])||t.to)}return t}),m.length&&m.forEach(function(t){var e=s.indexOf(t),n=a[e],r=l?l[e]:s[e],o={children:n,key:s[e],item:r,to:ref(c,r),from:ref(u,r)};i=i.slice(0,e).concat([o],i.slice(e))}),_.length&&_.forEach(function(t){var n=i.find(function(e){return e.key===t});if(n){var r={destroy:!0,children:n.children,key:n.key,to:ref(h,n.item),from:ref(u,n.item),onRest:function(){return e.setState(function(t){return{transitions:t.transitions.filter(function(t){return t!==r})}})}};i=i.map(function(t){return t===n?r:t})}}),r=i.filter(function(t){return void 0===t.destroy}).map(function(t){return t.key});var g=s.map(function(t){return i.find(function(e){return e.key===t})});_.forEach(function(t){var e=i.findIndex(function(e){return e.key===t}),n=i.find(function(e){return e.key===t});n&&(g=g.slice(0,e).concat([n],g.slice(e)))}),this.setState({transitions:g,transitionKeys:r})},n.render=function(){var t=this,e=this.props,n=e.render,i=(e.from,e.enter,e.leave,e.native),r=e.config,a=(e.keys,e.items,e.onFrame),o=_extends({native:i,config:r},_objectWithoutProperties(e,[\"render\",\"from\",\"enter\",\"leave\",\"native\",\"config\",\"keys\",\"items\",\"onFrame\"]));return this.state.transitions.map(function(e){var i=e.key,r=e.item,s=e.children,l=_objectWithoutProperties(e,[\"key\",\"item\",\"children\"]);return React.createElement(Spring,_extends({key:i},l,o,{onFrame:a&&function(t){return a(r,t)},render:n&&s,children:n?t.props.children:s}))})},e}(React.PureComponent);Transition.defaultProps={from:{},enter:{},leave:{},native:!1,config:config.default};var _class,_temp,Trail=function(t){function e(){return t.apply(this,arguments)||this}return _inheritsLoose(e,t),e.prototype.render=function(){var t=this.props,e=t.children,n=t.render,i=t.from,r=t.to,a=t.native,o=t.config,s=t.keys,l=_objectWithoutProperties(t,[\"children\",\"render\",\"from\",\"to\",\"native\",\"config\",\"keys\"]),u=new Set,c=_extends({},l,{native:a,config:o,from:i,to:r});return(n||e).map(function(t,i){return React.createElement(Spring,_extends({key:s[i]},c,{attach:function(t){return function(t,e){return u.add(e),0===t?void 0:Array.from(u)[t-1]}(i,t)},render:n&&t,children:n?e:t}))})},e}(React.PureComponent);Trail.defaultProps={from:{},to:{},native:!1,config:config.default};var Parallax=function(t){function e(e){var n;return n=t.call(this,e)||this,_initialiseProps$1.call(_assertThisInitialized(n)),n.state={ready:!1},n.layers=[],n.space=0,n.current=0,n.offset=0,n.busy=!1,n}_inheritsLoose(e,t);var n=e.prototype;return n.scrollTo=function(t){var e=this.props,n=e.horizontal,i=e.config;this.scrollStop(),this.offset=t;var r=this.refs.container;this.animatedScroll=new exports$2.Value(r[n?\"scrollLeft\":\"scrollTop\"]),this.animatedScroll.addListener(function(t){var e=t.value;return r[n?\"scrollLeft\":\"scrollTop\"]=e}),exports$2.spring(this.animatedScroll,_extends({toValue:t*this.space},i)).start()},n.getChildContext=function(){return{parallax:this}},n.componentDidMount=function(){window.addEventListener(\"resize\",this.updateRaf,!1),this.update(),this.setState({ready:!0})},n.componentWillUnmount=function(){window.removeEventListener(\"resize\",this.updateRaf,!1)},n.componentDidUpdate=function(){this.update()},n.render=function(){var t,e=this.props,n=e.style,i=e.innerStyle,r=e.pages,a=e.className,o=e.scrolling,s=e.children,l=e.horizontal,u=o?\"scroll\":\"hidden\";return React.createElement(\"div\",{ref:\"container\",onScroll:this.onScroll,onWheel:o?this.scrollStop:null,onTouchStart:o?this.scrollStop:null,style:_extends({position:\"absolute\",width:\"100%\",height:\"100%\",overflow:u,overflowY:l?\"hidden\":u,overflowX:l?u:\"hidden\",WebkitOverflowScrolling:\"touch\",WebkitTransform:\"translate(0,0)\",MsTransform:\"translate(0,0)\",transform:\"translate3d(0,0,0)\"},n),className:a},this.state.ready&&React.createElement(\"div\",{ref:\"content\",style:_extends((t={position:\"absolute\"},t[l?\"height\":\"width\"]=\"100%\",t.WebkitTransform=\"translate(0,0)\",t.MsTransform=\"translate(0,0)\",t.transform=\"translate3d(0,0,0)\",t.overflow=\"hidden\",t[l?\"width\":\"height\"]=this.space*r,t),i)},s))},e}(React.PureComponent);Parallax.defaultProps={config:config.slow,scrolling:!0,horizontal:!1},Parallax.childContextTypes={parallax:PropTypes.object},Parallax.Layer=(_temp=_class=function(t){function e(e,n){var i;i=t.call(this,e,n)||this;var r=n.parallax,a=Math.floor(e.offset)*r.space,o=r.space*e.offset+a*e.speed,s=parseFloat(-r.current*e.speed+o);return i.animatedTranslate=new exports$2.Value(s),i.animatedSpace=new exports$2.Value(r.space*e.factor),i}_inheritsLoose(e,t);var n=e.prototype;return n.componentDidMount=function(){var t=this.context.parallax;t&&(t.layers=t.layers.concat(this),t.update())},n.componentWillUnmount=function(){var t=this,e=this.context.parallax;e&&(e.layers=e.layers.filter(function(e){return e!==t}),e.update())},n.setPosition=function(t,e,n){void 0===n&&(n=!1);var i=this.context.parallax.props.config,r=Math.floor(this.props.offset)*t,a=t*this.props.offset+r*this.props.speed,o=parseFloat(-e*this.props.speed+a);n?this.animatedTranslate.setValue(o):exports$2.spring(this.animatedTranslate,_extends({toValue:o},i)).start()},n.setHeight=function(t,e){void 0===e&&(e=!1);var n=this.context.parallax.props.config,i=parseFloat(t*this.props.factor);e?this.animatedSpace.setValue(i):exports$2.spring(this.animatedSpace,_extends({toValue:i},n)).start()},n.render=function(){var t,e=this.props,n=e.style,i=e.children,r=(e.offset,e.speed,e.factor,e.className),a=_objectWithoutProperties(e,[\"style\",\"children\",\"offset\",\"speed\",\"factor\",\"className\"]),o=this.context.parallax.props.horizontal,s=this.animatedTranslate.interpolate({inputRange:[0,1],outputRange:o?[\"translate3d(0px,0,0)\",\"translate3d(1px,0,0)\"]:[\"translate3d(0,0px,0)\",\"translate3d(0,1px,0)\"]});return React.createElement(animated.div,_extends({},a,{ref:\"layer\",className:r,style:_extends((t={position:\"absolute\",backgroundSize:\"auto\",backgroundRepeat:\"no-repeat\",willChange:\"transform\"},t[o?\"height\":\"width\"]=\"100%\",t[o?\"width\":\"height\"]=this.animatedSpace,t.WebkitTransform=s,t.MsTransform=s,t.transform=s,t),n)}),i)},e}(React.PureComponent),_class.contextTypes={parallax:PropTypes.object},_class.defaultProps={factor:1,offset:0,speed:0},_temp);var _initialiseProps$1=function(){var t=this;this.moveItems=function(){t.layers.forEach(function(e){return e.setPosition(t.space,t.current)}),t.busy=!1},this.scrollerRaf=function(){return requestAnimationFrame(t.moveItems)},this.onScroll=function(e){var n=t.props.horizontal;t.busy||(t.busy=!0,t.scrollerRaf(),t.current=e.target[n?\"scrollLeft\":\"scrollTop\"])},this.update=function(){var e=t.props,n=e.scrolling,i=e.horizontal;t.refs.container&&(t.space=t.refs.container[i?\"clientWidth\":\"clientHeight\"],n?t.current=t.refs.container[i?\"scrollLeft\":\"scrollTop\"]:t.refs.container[i?\"scrollLeft\":\"scrollTop\"]=t.current=t.offset*t.space,t.refs.content&&(t.refs.content.style[i?\"width\":\"height\"]=t.space*t.props.pages+\"px\"),t.layers.forEach(function(e){e.setHeight(t.space,!0),e.setPosition(t.space,t.current,!0)}))},this.updateRaf=function(){requestAnimationFrame(t.update),setTimeout(t.update,150)},this.scrollStop=function(e){return t.animatedScroll&&t.animatedScroll.stopAnimation()}};export{Spring,Transition,Trail,Parallax,config,template,animated,interpolate$1 as interpolate};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-spring/dist/react-spring.es.js\n// module id = 46\n// module chunks = 0"],"sourceRoot":""}